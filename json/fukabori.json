{
  "title": "fukabori.fm",
  "link": "https://fukabori.fm/",
  "description": "技術・組織・マネジメントなどを深掘りして楽しむPodcastです。",
  "copyright": "fukabori.fm",
  "docs": "http://www.rssboard.org/rss-specification",
  "generator": "PitPaStudio",
  "language": "ja",
  "itunes:author": "iwashi",
  "itunes:category": {
    "@text": "Technology",
    "#text": null
  },
  "itunes:image": {
    "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
    "#text": null
  },
  "itunes:explicit": "no",
  "itunes:new-feed-url": "https://pitpa.jp/rss/fukabori",
  "itunes:owner": {
    "itunes:name": "iwashi",
    "itunes:email": "fukabori.fm@gmail.com"
  },
  "itunes:summary": "技術・組織・マネジメントなどを深掘りして楽しむPodcastです。",
  "itunes:type": "episodic",
  "item": [
    {
      "title": "85. サーバーレス w/ Keisuke69",
      "description": "<p>Keisuke69さんをゲストに、サーバーレス、サーバーレスやFaaSの使い所、コミュニティの盛り上げ方、AWS re:invent 2022 などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>サーバーレスとは何か？</li>\n<li>AWS サーバーレススペシャリスト 第1号</li>\n<li>西谷さんがサーバーレスに感銘を受けたポイント</li>\n<li>Function as a Service</li>\n<li>IaaS、CaaS、FaaS の違い</li>\n<li>AWS Lambda の裏側の実装</li>\n<li>Edgeで動作するサーバーレスコンピューティング</li>\n<li>Aurora Serverless と OpenSearch Serverless</li>\n<li>サーバーレスが有効なパターン、アーキテクチャ</li>\n<li>イベントドリブンなシステム</li>\n<li>サービス間をつなぐGlue Code</li>\n<li>関数的に使うのがわかりやすい</li>\n<li>ピタゴラスイッチでのメタファー</li>\n<li>ピタゴラ装置153番のマーチ</li>\n<li>サーバーレスで実装しないほうが良いものは？</li>\n<li>日本でサーバーレス(FaaS)を扱えるエンジニアの数は多い？</li>\n<li>情報量は技術選定の要素となる</li>\n<li>コミュニテイを盛り上げる方法は？</li>\n<li>AWS re:Invent 2022</li>\n<li>AWS Lambda SnapStart と AWS Application Composer</li>\n<li>サーバーレス(FaaS)での開発を取り巻く課題</li>\n<li>Serverless Framework や AWS Chalice</li>\n<li>FaaSのCI/CDやテスト周りはどうしている？</li>\n<li>サーバーレスに残るミッシングピースとは？</li>\n<li>今後のサーバーレスはどのように進化していく？</li>\n<li>サーバーレスとSaaSとの境界</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/086_ebZYb.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01gm6rp100st1snes74e3tfbzz.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 14 Dec 2022 07:11:30 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01gm6rp100st1snes74e3tfbzz.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/14341/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:50:37",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>Keisuke69さんをゲストに、サーバーレス、サーバーレスやFaaSの使い所、コミュニティの盛り上げ方、AWS re:invent 2022 などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>サーバーレスとは何か？</li>\n<li>AWS サーバーレススペシャリスト 第1号</li>\n<li>西谷さんがサーバーレスに感銘を受けたポイント</li>\n<li>Function as a Service</li>\n<li>IaaS、CaaS、FaaS の違い</li>\n<li>AWS Lambda の裏側の実装</li>\n<li>Edgeで動作するサーバーレスコンピューティング</li>\n<li>Aurora Serverless と OpenSearch Serverless</li>\n<li>サーバーレスが有効なパターン、アーキテクチャ</li>\n<li>イベントドリブンなシステム</li>\n<li>サービス間をつなぐGlue Code</li>\n<li>関数的に使うのがわかりやすい</li>\n<li>ピタゴラスイッチでのメタファー</li>\n<li>ピタゴラ装置153番のマーチ</li>\n<li>サーバーレスで実装しないほうが良いものは？</li>\n<li>日本でサーバーレス(FaaS)を扱えるエンジニアの数は多い？</li>\n<li>情報量は技術選定の要素となる</li>\n<li>コミュニテイを盛り上げる方法は？</li>\n<li>AWS re:Invent 2022</li>\n<li>AWS Lambda SnapStart と AWS Application Composer</li>\n<li>サーバーレス(FaaS)での開発を取り巻く課題</li>\n<li>Serverless Framework や AWS Chalice</li>\n<li>FaaSのCI/CDやテスト周りはどうしている？</li>\n<li>サーバーレスに残るミッシングピースとは？</li>\n<li>今後のサーバーレスはどのように進化していく？</li>\n<li>サーバーレスとSaaSとの境界</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>Keisuke69さんをゲストに、サーバーレス、サーバーレスやFaaSの使い所、コミュニティの盛り上げ方、AWS re:invent 2022 などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>サーバーレスとは何か？</li>\n<li>AWS サーバーレススペシャリスト 第1号</li>\n<li>西谷さんがサーバーレスに感銘を受けたポイント</li>\n<li>Function as a Service</li>\n<li>IaaS、CaaS、FaaS の違い</li>\n<li>AWS Lambda の裏側の実装</li>\n<li>Edgeで動作するサーバーレスコンピューティング</li>\n<li>Aurora Serverless と OpenSearch Serverless</li>\n<li>サーバーレスが有効なパターン、アーキテクチャ</li>\n<li>イベントドリブンなシステム</li>\n<li>サービス間をつなぐGlue Code</li>\n<li>関数的に使うのがわかりやすい</li>\n<li>ピタゴラスイッチでのメタファー</li>\n<li>ピタゴラ装置153番のマーチ</li>\n<li>サーバーレスで実装しないほうが良いものは？</li>\n<li>日本でサーバーレス(FaaS)を扱えるエンジニアの数は多い？</li>\n<li>情報量は技術選定の要素となる</li>\n<li>コミュニテイを盛り上げる方法は？</li>\n<li>AWS re:Invent 2022</li>\n<li>AWS Lambda SnapStart と AWS Application Composer</li>\n<li>サーバーレス(FaaS)での開発を取り巻く課題</li>\n<li>Serverless Framework や AWS Chalice</li>\n<li>FaaSのCI/CDやテスト周りはどうしている？</li>\n<li>サーバーレスに残るミッシングピースとは？</li>\n<li>今後のサーバーレスはどのように進化していく？</li>\n<li>サーバーレスとSaaSとの境界</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "85. サーバーレス w/ Keisuke69",
      "itunes:episodeType": "full",
      "podcast:episode": 86
    },
    {
      "title": "84. 技術の教え方・技術研修 w/ kakakakakku",
      "description": "<p>kakakakakkuさんをゲストに、技術研修、成人教育、研修中の場・雰囲気作り、研修コンテンツの設計などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>難解な技術を教えるときに何を考えているか？</li>\n<li>成人教育と幼児教育の違いは？</li>\n<li>依存型の学び、経験学習、課題中心</li>\n<li>インストラクショナルデザイン</li>\n<li>経験学習とは何か？</li>\n<li>オンラインで静まりかえることへの対応</li>\n<li>雰囲気を作る、クローズドクエスチョンを利用する</li>\n<li>研修の雰囲気をどうやって作るか？</li>\n<li>質問のチャネルを複数用意する</li>\n<li>研修の場があったまっていることをどう判断するか？</li>\n<li>研修講師側のデバイス、IT環境</li>\n<li>研修へ参加する生徒は主体的な人ばかりではないのでは？</li>\n<li>高速道路という役割</li>\n<li>周りに感化されて主体的になってくる</li>\n<li>研修が終わった後に学びが続くようにするためには？</li>\n<li>反転学習とする、上司と参加目的を調整・会話しておく</li>\n<li>講義のアジェンダ、ストーリー、内容の設計で気をつけていることは？</li>\n<li>講義、ハンズオン、経験から引き出す時間の配分は？</li>\n<li>オンライン研修参加者の集中を保つこつは？</li>\n<li>kakkuさんの研修の評価が高い要因は？</li>\n<li>実務経験、知識の幅、心地よい研修</li>\n<li>研修設計は、初日、2日目などでスタイルを変えていく？</li>\n<li>過去の研修で、研修途中で教え方を大幅に変えたことは？</li>\n<li>4年間、ブログを毎週かかさずに書き続けられた要因は？</li>\n<li>新しい技術の種をどうやって見つけている？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/085_vQPHx.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01ghvzzkk1f9k5v6dtx4tzw4rv.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 15 Nov 2022 06:16:02 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01ghvzzkk1f9k5v6dtx4tzw4rv.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/13535/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:48:44",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>kakakakakkuさんをゲストに、技術研修、成人教育、研修中の場・雰囲気作り、研修コンテンツの設計などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>難解な技術を教えるときに何を考えているか？</li>\n<li>成人教育と幼児教育の違いは？</li>\n<li>依存型の学び、経験学習、課題中心</li>\n<li>インストラクショナルデザイン</li>\n<li>経験学習とは何か？</li>\n<li>オンラインで静まりかえることへの対応</li>\n<li>雰囲気を作る、クローズドクエスチョンを利用する</li>\n<li>研修の雰囲気をどうやって作るか？</li>\n<li>質問のチャネルを複数用意する</li>\n<li>研修の場があったまっていることをどう判断するか？</li>\n<li>研修講師側のデバイス、IT環境</li>\n<li>研修へ参加する生徒は主体的な人ばかりではないのでは？</li>\n<li>高速道路という役割</li>\n<li>周りに感化されて主体的になってくる</li>\n<li>研修が終わった後に学びが続くようにするためには？</li>\n<li>反転学習とする、上司と参加目的を調整・会話しておく</li>\n<li>講義のアジェンダ、ストーリー、内容の設計で気をつけていることは？</li>\n<li>講義、ハンズオン、経験から引き出す時間の配分は？</li>\n<li>オンライン研修参加者の集中を保つこつは？</li>\n<li>kakkuさんの研修の評価が高い要因は？</li>\n<li>実務経験、知識の幅、心地よい研修</li>\n<li>研修設計は、初日、2日目などでスタイルを変えていく？</li>\n<li>過去の研修で、研修途中で教え方を大幅に変えたことは？</li>\n<li>4年間、ブログを毎週かかさずに書き続けられた要因は？</li>\n<li>新しい技術の種をどうやって見つけている？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>kakakakakkuさんをゲストに、技術研修、成人教育、研修中の場・雰囲気作り、研修コンテンツの設計などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>難解な技術を教えるときに何を考えているか？</li>\n<li>成人教育と幼児教育の違いは？</li>\n<li>依存型の学び、経験学習、課題中心</li>\n<li>インストラクショナルデザイン</li>\n<li>経験学習とは何か？</li>\n<li>オンラインで静まりかえることへの対応</li>\n<li>雰囲気を作る、クローズドクエスチョンを利用する</li>\n<li>研修の雰囲気をどうやって作るか？</li>\n<li>質問のチャネルを複数用意する</li>\n<li>研修の場があったまっていることをどう判断するか？</li>\n<li>研修講師側のデバイス、IT環境</li>\n<li>研修へ参加する生徒は主体的な人ばかりではないのでは？</li>\n<li>高速道路という役割</li>\n<li>周りに感化されて主体的になってくる</li>\n<li>研修が終わった後に学びが続くようにするためには？</li>\n<li>反転学習とする、上司と参加目的を調整・会話しておく</li>\n<li>講義のアジェンダ、ストーリー、内容の設計で気をつけていることは？</li>\n<li>講義、ハンズオン、経験から引き出す時間の配分は？</li>\n<li>オンライン研修参加者の集中を保つこつは？</li>\n<li>kakkuさんの研修の評価が高い要因は？</li>\n<li>実務経験、知識の幅、心地よい研修</li>\n<li>研修設計は、初日、2日目などでスタイルを変えていく？</li>\n<li>過去の研修で、研修途中で教え方を大幅に変えたことは？</li>\n<li>4年間、ブログを毎週かかさずに書き続けられた要因は？</li>\n<li>新しい技術の種をどうやって見つけている？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "84. 技術の教え方・技術研修 w/ kakakakakku",
      "itunes:episodeType": "full",
      "podcast:episode": 85
    },
    {
      "title": "83. Node.js、Deno、Bun（後編） w/ yosuke_furukawa",
      "description": "<p>yosuke_furukawaさんをゲストに、Bunの狙い、Bunのパフォーマンス比較、Node.jsとBunとのIO実装の違いなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>Bunはどういう課題感を持って登場してきた？</li>\n<li>Node.jsの3倍速いという主張</li>\n<li>パフォーマンス比較時におけるZigとJavaScript実装の差</li>\n<li>ライブラリのマーケティング戦略</li>\n<li>libuv とは？</li>\n<li>OS の違いにおける実装隠ぺい戦略</li>\n<li>Bun は libuv を利用していない</li>\n<li>Mac向けにkqueue、Linux向けにio_uring</li>\n<li>Bun のProduction利用は?</li>\n<li><a href=\"https://github.com/honojs/hono\">honojs/hono</a></li>\n<li>この後、業界はどのように変わっていく？</li>\n<li>三国志</li>\n<li><a href=\"https://jsconf.jp/2022/\">JSConf JP</a></li>\n<li>採用: <a href=\"https://recruit.nijibox.jp/\">NIJIBOX</a></li>\n<li>採用: <a href=\"https://www.recruit.co.jp/employment/\">リクルート</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/084_UpQdY.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01gfj1sfmsdp7yp53901fn0sss.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 17 Oct 2022 18:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01gfj1sfmsdp7yp53901fn0sss.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/12654/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:22:21",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>yosuke_furukawaさんをゲストに、Bunの狙い、Bunのパフォーマンス比較、Node.jsとBunとのIO実装の違いなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>Bunはどういう課題感を持って登場してきた？</li>\n<li>Node.jsの3倍速いという主張</li>\n<li>パフォーマンス比較時におけるZigとJavaScript実装の差</li>\n<li>ライブラリのマーケティング戦略</li>\n<li>libuv とは？</li>\n<li>OS の違いにおける実装隠ぺい戦略</li>\n<li>Bun は libuv を利用していない</li>\n<li>Mac向けにkqueue、Linux向けにio_uring</li>\n<li>Bun のProduction利用は?</li>\n<li><a href=\"https://github.com/honojs/hono\">honojs/hono</a></li>\n<li>この後、業界はどのように変わっていく？</li>\n<li>三国志</li>\n<li><a href=\"https://jsconf.jp/2022/\">JSConf JP</a></li>\n<li>採用: <a href=\"https://recruit.nijibox.jp/\">NIJIBOX</a></li>\n<li>採用: <a href=\"https://www.recruit.co.jp/employment/\">リクルート</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>yosuke_furukawaさんをゲストに、Bunの狙い、Bunのパフォーマンス比較、Node.jsとBunとのIO実装の違いなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>Bunはどういう課題感を持って登場してきた？</li>\n<li>Node.jsの3倍速いという主張</li>\n<li>パフォーマンス比較時におけるZigとJavaScript実装の差</li>\n<li>ライブラリのマーケティング戦略</li>\n<li>libuv とは？</li>\n<li>OS の違いにおける実装隠ぺい戦略</li>\n<li>Bun は libuv を利用していない</li>\n<li>Mac向けにkqueue、Linux向けにio_uring</li>\n<li>Bun のProduction利用は?</li>\n<li><a href=\"https://github.com/honojs/hono\">honojs/hono</a></li>\n<li>この後、業界はどのように変わっていく？</li>\n<li>三国志</li>\n<li><a href=\"https://jsconf.jp/2022/\">JSConf JP</a></li>\n<li>採用: <a href=\"https://recruit.nijibox.jp/\">NIJIBOX</a></li>\n<li>採用: <a href=\"https://www.recruit.co.jp/employment/\">リクルート</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "83. Node.js、Deno、Bun（後編） w/ yosuke_furukawa",
      "itunes:episodeType": "full",
      "podcast:episode": 84
    },
    {
      "title": "82. Node.js、Deno、Bun （前編） w/ yosuke_furukawa",
      "description": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://speakerdeck.com/yosuke_furukawa/denofalsehua\">denoの話</a></li>\n<li><a href=\"https://speakerdeck.com/yosuke_furukawa/bun-first-impressions\">Bun first impressions</a></li>\n<li>Node.js、Deno、Bunとは何か？</li>\n<li>JavaScriptランタイムとは何か？</li>\n<li>サーバーサイドJavaScript</li>\n<li>expressを利用してWebサーバーを立てるコードは、Node.js以外でも動くのか？</li>\n<li>ECMAScript と ランタイム との関係は？</li>\n<li>TC39</li>\n<li>Node.js はどんな経緯で生まれてきた？</li>\n<li>Rubyを書くタイミングと、JavaScriptを書くタイミングでのコンテキストスイッチ</li>\n<li>netv8</li>\n<li>イベントループモデルとは何か？</li>\n<li>ブロッキング処理、for文やJSON.parse()</li>\n<li>なぜ、Node.jsはここまで人気が出たのか？</li>\n<li>V8(JavaScriptエンジン)とは何か？</li>\n<li>JavaScriptCore</li>\n<li>Edge Workerとの相性の良さ</li>\n<li>JITコンパイラ</li>\n<li>Denoはどういう背景で生まれてきているのか？</li>\n<li>モジュールを取り巻く課題</li>\n<li><a href=\"https://jsconf.jp/2022/\">JSConf JP</a></li>\n</ul>\n<h2 id=\"-\">訂正</h2>\n<ul>\n<li>冒頭で第81回と話しておりますが、82回の誤りです。</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/083_LaKUD.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01gezvyem1hpxge9p2bvtyc17t.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 10 Oct 2022 11:35:22 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01gezvyem1hpxge9p2bvtyc17t.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/12225/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:39:57",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://speakerdeck.com/yosuke_furukawa/denofalsehua\">denoの話</a></li>\n<li><a href=\"https://speakerdeck.com/yosuke_furukawa/bun-first-impressions\">Bun first impressions</a></li>\n<li>Node.js、Deno、Bunとは何か？</li>\n<li>JavaScriptランタイムとは何か？</li>\n<li>サーバーサイドJavaScript</li>\n<li>expressを利用してWebサーバーを立てるコードは、Node.js以外でも動くのか？</li>\n<li>ECMAScript と ランタイム との関係は？</li>\n<li>TC39</li>\n<li>Node.js はどんな経緯で生まれてきた？</li>\n<li>Rubyを書くタイミングと、JavaScriptを書くタイミングでのコンテキストスイッチ</li>\n<li>netv8</li>\n<li>イベントループモデルとは何か？</li>\n<li>ブロッキング処理、for文やJSON.parse()</li>\n<li>なぜ、Node.jsはここまで人気が出たのか？</li>\n<li>V8(JavaScriptエンジン)とは何か？</li>\n<li>JavaScriptCore</li>\n<li>Edge Workerとの相性の良さ</li>\n<li>JITコンパイラ</li>\n<li>Denoはどういう背景で生まれてきているのか？</li>\n<li>モジュールを取り巻く課題</li>\n<li><a href=\"https://jsconf.jp/2022/\">JSConf JP</a></li>\n</ul>\n<h2 id=\"-\">訂正</h2>\n<ul>\n<li>冒頭で第81回と話しておりますが、82回の誤りです。</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://speakerdeck.com/yosuke_furukawa/denofalsehua\">denoの話</a></li>\n<li><a href=\"https://speakerdeck.com/yosuke_furukawa/bun-first-impressions\">Bun first impressions</a></li>\n<li>Node.js、Deno、Bunとは何か？</li>\n<li>JavaScriptランタイムとは何か？</li>\n<li>サーバーサイドJavaScript</li>\n<li>expressを利用してWebサーバーを立てるコードは、Node.js以外でも動くのか？</li>\n<li>ECMAScript と ランタイム との関係は？</li>\n<li>TC39</li>\n<li>Node.js はどんな経緯で生まれてきた？</li>\n<li>Rubyを書くタイミングと、JavaScriptを書くタイミングでのコンテキストスイッチ</li>\n<li>netv8</li>\n<li>イベントループモデルとは何か？</li>\n<li>ブロッキング処理、for文やJSON.parse()</li>\n<li>なぜ、Node.jsはここまで人気が出たのか？</li>\n<li>V8(JavaScriptエンジン)とは何か？</li>\n<li>JavaScriptCore</li>\n<li>Edge Workerとの相性の良さ</li>\n<li>JITコンパイラ</li>\n<li>Denoはどういう背景で生まれてきているのか？</li>\n<li>モジュールを取り巻く課題</li>\n<li><a href=\"https://jsconf.jp/2022/\">JSConf JP</a></li>\n</ul>\n<h2 id=\"-\">訂正</h2>\n<ul>\n<li>冒頭で第81回と話しておりますが、82回の誤りです。</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "82. Node.js、Deno、Bun （前編） w/ yosuke_furukawa",
      "itunes:episodeType": "full",
      "podcast:episode": 83
    },
    {
      "title": "81. 低遅延ライブ配信を支える技術 w/ mmasaki",
      "description": "<p>mmasakiさんをゲストに、HLSやRTMPなどの配信技術、WebRTCを利用した配信技術とアーキテクチャ、そのスケーラビリティとトレードオフなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://nttcom.connpass.com/event/257675/\">低遅延ライブ配信を支える技術 - NTT Com Open TechLunch #1</a></li>\n<li><a href=\"https://www.ntt.com/business/services/voice-visual-communication/business-support/smartvlive.html\">Smart vLive</a></li>\n<li>配信とは？</li>\n<li>YouTube や Twitch</li>\n<li>古くはどういう技術で、どのような仕組みで配信が行われていた？</li>\n<li>RTMP、MPEG-DASH、HLS</li>\n<li>HTTPストリーミングでパケットが落ちたらどうなる？</li>\n<li>キャッシュ、HTTPにのっかることのメリット</li>\n<li>HTTPベースストリーミングにおける進化</li>\n<li>HTTP Rangeリクエスト</li>\n<li>CMAF、Ultra Low Latency</li>\n<li>HTTPベースによる遅延限界は何秒ぐらい？</li>\n<li>Sub Secondを狙った WebRTCによる配信</li>\n<li>なぜ、HTTPベースの配信は遅延が大きいのか？</li>\n<li>超低遅延配信って、ビジネス的なユースケースってあるの？</li>\n<li>End-End はどのような技術で使われている</li>\n<li>Upstream としてRTMP、クラウド内転送のSRT、DownStreamにWebRTC</li>\n<li>RTMPってどういうプロトコル？</li>\n<li>WebRTCの負荷とスケーラビリティ</li>\n<li>スケーラビリティと遅延とのトレードオフ</li>\n<li>実績では10,000クライアントまで、puppeteerにより確認済み</li>\n<li>負荷試験の負荷が難しい</li>\n<li><a href=\"https://gstreamer.freedesktop.org/\">GStreamer</a> をRustから制御</li>\n<li>FECやRTXは利用している？</li>\n<li>WebRTCでプロキシを通す工夫、TURNサーバーの利用</li>\n<li>環境が異なるクライアントに対して、体験を高める工夫は？</li>\n<li>WebTransport、WebCodecsの現状</li>\n<li><a href=\"https://fukabori.fm/episode/43\">43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</a></li>\n<li>中途採用募集中: <a href=\"https://hrmos.co/pages/nttcom0033/jobs/1692897\">低遅延ライブ配信サービス「Smart vLive」や、これに続く新たなプラットフォームを開発するソフトウェアエンジニア</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/082_KJAZI.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01ge48m4tw7farv44tcz91b8jy.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Thu, 29 Sep 2022 18:18:11 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01ge48m4tw7farv44tcz91b8jy.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/11955/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:35:07",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>mmasakiさんをゲストに、HLSやRTMPなどの配信技術、WebRTCを利用した配信技術とアーキテクチャ、そのスケーラビリティとトレードオフなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://nttcom.connpass.com/event/257675/\">低遅延ライブ配信を支える技術 - NTT Com Open TechLunch #1</a></li>\n<li><a href=\"https://www.ntt.com/business/services/voice-visual-communication/business-support/smartvlive.html\">Smart vLive</a></li>\n<li>配信とは？</li>\n<li>YouTube や Twitch</li>\n<li>古くはどういう技術で、どのような仕組みで配信が行われていた？</li>\n<li>RTMP、MPEG-DASH、HLS</li>\n<li>HTTPストリーミングでパケットが落ちたらどうなる？</li>\n<li>キャッシュ、HTTPにのっかることのメリット</li>\n<li>HTTPベースストリーミングにおける進化</li>\n<li>HTTP Rangeリクエスト</li>\n<li>CMAF、Ultra Low Latency</li>\n<li>HTTPベースによる遅延限界は何秒ぐらい？</li>\n<li>Sub Secondを狙った WebRTCによる配信</li>\n<li>なぜ、HTTPベースの配信は遅延が大きいのか？</li>\n<li>超低遅延配信って、ビジネス的なユースケースってあるの？</li>\n<li>End-End はどのような技術で使われている</li>\n<li>Upstream としてRTMP、クラウド内転送のSRT、DownStreamにWebRTC</li>\n<li>RTMPってどういうプロトコル？</li>\n<li>WebRTCの負荷とスケーラビリティ</li>\n<li>スケーラビリティと遅延とのトレードオフ</li>\n<li>実績では10,000クライアントまで、puppeteerにより確認済み</li>\n<li>負荷試験の負荷が難しい</li>\n<li><a href=\"https://gstreamer.freedesktop.org/\">GStreamer</a> をRustから制御</li>\n<li>FECやRTXは利用している？</li>\n<li>WebRTCでプロキシを通す工夫、TURNサーバーの利用</li>\n<li>環境が異なるクライアントに対して、体験を高める工夫は？</li>\n<li>WebTransport、WebCodecsの現状</li>\n<li><a href=\"https://fukabori.fm/episode/43\">43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</a></li>\n<li>中途採用募集中: <a href=\"https://hrmos.co/pages/nttcom0033/jobs/1692897\">低遅延ライブ配信サービス「Smart vLive」や、これに続く新たなプラットフォームを開発するソフトウェアエンジニア</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>mmasakiさんをゲストに、HLSやRTMPなどの配信技術、WebRTCを利用した配信技術とアーキテクチャ、そのスケーラビリティとトレードオフなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://nttcom.connpass.com/event/257675/\">低遅延ライブ配信を支える技術 - NTT Com Open TechLunch #1</a></li>\n<li><a href=\"https://www.ntt.com/business/services/voice-visual-communication/business-support/smartvlive.html\">Smart vLive</a></li>\n<li>配信とは？</li>\n<li>YouTube や Twitch</li>\n<li>古くはどういう技術で、どのような仕組みで配信が行われていた？</li>\n<li>RTMP、MPEG-DASH、HLS</li>\n<li>HTTPストリーミングでパケットが落ちたらどうなる？</li>\n<li>キャッシュ、HTTPにのっかることのメリット</li>\n<li>HTTPベースストリーミングにおける進化</li>\n<li>HTTP Rangeリクエスト</li>\n<li>CMAF、Ultra Low Latency</li>\n<li>HTTPベースによる遅延限界は何秒ぐらい？</li>\n<li>Sub Secondを狙った WebRTCによる配信</li>\n<li>なぜ、HTTPベースの配信は遅延が大きいのか？</li>\n<li>超低遅延配信って、ビジネス的なユースケースってあるの？</li>\n<li>End-End はどのような技術で使われている</li>\n<li>Upstream としてRTMP、クラウド内転送のSRT、DownStreamにWebRTC</li>\n<li>RTMPってどういうプロトコル？</li>\n<li>WebRTCの負荷とスケーラビリティ</li>\n<li>スケーラビリティと遅延とのトレードオフ</li>\n<li>実績では10,000クライアントまで、puppeteerにより確認済み</li>\n<li>負荷試験の負荷が難しい</li>\n<li><a href=\"https://gstreamer.freedesktop.org/\">GStreamer</a> をRustから制御</li>\n<li>FECやRTXは利用している？</li>\n<li>WebRTCでプロキシを通す工夫、TURNサーバーの利用</li>\n<li>環境が異なるクライアントに対して、体験を高める工夫は？</li>\n<li>WebTransport、WebCodecsの現状</li>\n<li><a href=\"https://fukabori.fm/episode/43\">43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</a></li>\n<li>中途採用募集中: <a href=\"https://hrmos.co/pages/nttcom0033/jobs/1692897\">低遅延ライブ配信サービス「Smart vLive」や、これに続く新たなプラットフォームを開発するソフトウェアエンジニア</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "81. 低遅延ライブ配信を支える技術 w/ mmasaki",
      "itunes:episodeType": "full",
      "podcast:episode": 82
    },
    {
      "title": "80. PRと広報、エンジニア向け採用広報 w/ r1ccha",
      "description": "<p>r1cchaさんをゲストに、PR・広報の定義、公聴の役割、ストーリーの重要性、PRとプロダクト開発との関連、エンジニア採用過熱問題、採用広報などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>PRと広報ってそもそも何のためにあるのか？</li>\n<li>PRの定義、広報の定義</li>\n<li>公聴とは</li>\n<li>公聴の具体的業務は？</li>\n<li>外からの自社の見え方が、なぜ重要なのか？</li>\n<li>ステークホルダーとの関係性構築がなぜ重要なのか？</li>\n<li>どのように広報メッセージの優先度をつけていくのか？</li>\n<li><a href=\"https://yamotty.tokyo/zerotopic\">Zero Topic | yamottyさんのPodcast</a></li>\n<li>同じことでも何度いってもいい</li>\n<li>なぜ、何度もいう必要があるのか？</li>\n<li>わかりやすいストーリーの重要性</li>\n<li>プロダクト開発への応用</li>\n<li>書籍: <a href=\"https://amzn.to/3DikzSt\">ユーザーストーリーマッピング</a></li>\n<li>守りの情報発信とは何か？</li>\n<li>エンジニア採用過熱問題</li>\n<li>なぜ採用広報のニーズが高まっているのか？</li>\n<li>どのように採用広報として振る舞っているか？</li>\n<li>採用広報向けの発信とメディア向けの情報発信は異なる</li>\n<li>サーフィンとマラソンによるメタファー</li>\n<li>どうすれば、情報発信を継続できるのか？（ランナーズハイに到れるのか？）</li>\n<li>その会社が楽しそうだからこそ「いいな」と思う</li>\n<li><a href=\"https://twitter.com/yaiyai_radio\">やいやいラジオ</a></li>\n<li><a href=\"https://10x.co.jp/recruit/\">RECRUIT | 株式会社10X</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/081_XazAQ.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01gcs13h574ydj40fx4xcdnebc.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 12 Sep 2022 23:19:27 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01gcs13h574ydj40fx4xcdnebc.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/11432/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:40:18",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>r1cchaさんをゲストに、PR・広報の定義、公聴の役割、ストーリーの重要性、PRとプロダクト開発との関連、エンジニア採用過熱問題、採用広報などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>PRと広報ってそもそも何のためにあるのか？</li>\n<li>PRの定義、広報の定義</li>\n<li>公聴とは</li>\n<li>公聴の具体的業務は？</li>\n<li>外からの自社の見え方が、なぜ重要なのか？</li>\n<li>ステークホルダーとの関係性構築がなぜ重要なのか？</li>\n<li>どのように広報メッセージの優先度をつけていくのか？</li>\n<li><a href=\"https://yamotty.tokyo/zerotopic\">Zero Topic | yamottyさんのPodcast</a></li>\n<li>同じことでも何度いってもいい</li>\n<li>なぜ、何度もいう必要があるのか？</li>\n<li>わかりやすいストーリーの重要性</li>\n<li>プロダクト開発への応用</li>\n<li>書籍: <a href=\"https://amzn.to/3DikzSt\">ユーザーストーリーマッピング</a></li>\n<li>守りの情報発信とは何か？</li>\n<li>エンジニア採用過熱問題</li>\n<li>なぜ採用広報のニーズが高まっているのか？</li>\n<li>どのように採用広報として振る舞っているか？</li>\n<li>採用広報向けの発信とメディア向けの情報発信は異なる</li>\n<li>サーフィンとマラソンによるメタファー</li>\n<li>どうすれば、情報発信を継続できるのか？（ランナーズハイに到れるのか？）</li>\n<li>その会社が楽しそうだからこそ「いいな」と思う</li>\n<li><a href=\"https://twitter.com/yaiyai_radio\">やいやいラジオ</a></li>\n<li><a href=\"https://10x.co.jp/recruit/\">RECRUIT | 株式会社10X</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>r1cchaさんをゲストに、PR・広報の定義、公聴の役割、ストーリーの重要性、PRとプロダクト開発との関連、エンジニア採用過熱問題、採用広報などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>PRと広報ってそもそも何のためにあるのか？</li>\n<li>PRの定義、広報の定義</li>\n<li>公聴とは</li>\n<li>公聴の具体的業務は？</li>\n<li>外からの自社の見え方が、なぜ重要なのか？</li>\n<li>ステークホルダーとの関係性構築がなぜ重要なのか？</li>\n<li>どのように広報メッセージの優先度をつけていくのか？</li>\n<li><a href=\"https://yamotty.tokyo/zerotopic\">Zero Topic | yamottyさんのPodcast</a></li>\n<li>同じことでも何度いってもいい</li>\n<li>なぜ、何度もいう必要があるのか？</li>\n<li>わかりやすいストーリーの重要性</li>\n<li>プロダクト開発への応用</li>\n<li>書籍: <a href=\"https://amzn.to/3DikzSt\">ユーザーストーリーマッピング</a></li>\n<li>守りの情報発信とは何か？</li>\n<li>エンジニア採用過熱問題</li>\n<li>なぜ採用広報のニーズが高まっているのか？</li>\n<li>どのように採用広報として振る舞っているか？</li>\n<li>採用広報向けの発信とメディア向けの情報発信は異なる</li>\n<li>サーフィンとマラソンによるメタファー</li>\n<li>どうすれば、情報発信を継続できるのか？（ランナーズハイに到れるのか？）</li>\n<li>その会社が楽しそうだからこそ「いいな」と思う</li>\n<li><a href=\"https://twitter.com/yaiyai_radio\">やいやいラジオ</a></li>\n<li><a href=\"https://10x.co.jp/recruit/\">RECRUIT | 株式会社10X</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "80. PRと広報、エンジニア向け採用広報 w/ r1ccha",
      "itunes:episodeType": "full",
      "podcast:episode": 81
    },
    {
      "title": "79. BigQuery と D.Node w/ g_suzutatsu",
      "description": "<p>D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>BigQueryとは？</li>\n<li>データウェアハウス(DWH)とは？</li>\n<li>データウェアハウスとRDBとの違いは？</li>\n<li>BigQueryの利用フロー・方法</li>\n<li>RDBの変更をBigQueryに反映するユースケース</li>\n<li>BigQueryと併用されるBIツール</li>\n<li>Tableau</li>\n<li>Google データポータル</li>\n<li>BigQuery の内部アーキテクチャは？</li>\n<li>Compute と Storage</li>\n<li><a href=\"https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system\">Colossus</a> とは？</li>\n<li><a href=\"https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64\">Dremel</a> とは？</li>\n<li>Slot というCPUとメモリを抽象化した単位</li>\n<li>分散メモリとは？</li>\n<li>分割統治法</li>\n<li>最近の BiqQuery の進化で面白いところは？</li>\n<li><a href=\"https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja\">BigQuery の マテリアライズドビュー</a></li>\n<li>そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？</li>\n<li>マテリアライズドビュー利用時の注意点とは？</li>\n<li><a href=\"https://www.dnode.cloud/join\">D.Node</a> とは？</li>\n<li>suzutatsuさんのお仕事内容</li>\n<li>社内にはどんな人が多い？</li>\n<li><a href=\"https://www.dnode.cloud/join\">D.Node 採用ページ</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<ul>\n<li><a href=\"https://www.dnode.cloud/join\">デロイト トーマツ ノード合同会社(D.Node)</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/080_qEHby.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01gc5ek16gxtk98sq4w00dx7zs.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 05 Sep 2022 08:50:18 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01gc5ek16gxtk98sq4w00dx7zs.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/11213/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:39:21",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>BigQueryとは？</li>\n<li>データウェアハウス(DWH)とは？</li>\n<li>データウェアハウスとRDBとの違いは？</li>\n<li>BigQueryの利用フロー・方法</li>\n<li>RDBの変更をBigQueryに反映するユースケース</li>\n<li>BigQueryと併用されるBIツール</li>\n<li>Tableau</li>\n<li>Google データポータル</li>\n<li>BigQuery の内部アーキテクチャは？</li>\n<li>Compute と Storage</li>\n<li><a href=\"https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system\">Colossus</a> とは？</li>\n<li><a href=\"https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64\">Dremel</a> とは？</li>\n<li>Slot というCPUとメモリを抽象化した単位</li>\n<li>分散メモリとは？</li>\n<li>分割統治法</li>\n<li>最近の BiqQuery の進化で面白いところは？</li>\n<li><a href=\"https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja\">BigQuery の マテリアライズドビュー</a></li>\n<li>そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？</li>\n<li>マテリアライズドビュー利用時の注意点とは？</li>\n<li><a href=\"https://www.dnode.cloud/join\">D.Node</a> とは？</li>\n<li>suzutatsuさんのお仕事内容</li>\n<li>社内にはどんな人が多い？</li>\n<li><a href=\"https://www.dnode.cloud/join\">D.Node 採用ページ</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<ul>\n<li><a href=\"https://www.dnode.cloud/join\">デロイト トーマツ ノード合同会社(D.Node)</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>BigQueryとは？</li>\n<li>データウェアハウス(DWH)とは？</li>\n<li>データウェアハウスとRDBとの違いは？</li>\n<li>BigQueryの利用フロー・方法</li>\n<li>RDBの変更をBigQueryに反映するユースケース</li>\n<li>BigQueryと併用されるBIツール</li>\n<li>Tableau</li>\n<li>Google データポータル</li>\n<li>BigQuery の内部アーキテクチャは？</li>\n<li>Compute と Storage</li>\n<li><a href=\"https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system\">Colossus</a> とは？</li>\n<li><a href=\"https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64\">Dremel</a> とは？</li>\n<li>Slot というCPUとメモリを抽象化した単位</li>\n<li>分散メモリとは？</li>\n<li>分割統治法</li>\n<li>最近の BiqQuery の進化で面白いところは？</li>\n<li><a href=\"https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja\">BigQuery の マテリアライズドビュー</a></li>\n<li>そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？</li>\n<li>マテリアライズドビュー利用時の注意点とは？</li>\n<li><a href=\"https://www.dnode.cloud/join\">D.Node</a> とは？</li>\n<li>suzutatsuさんのお仕事内容</li>\n<li>社内にはどんな人が多い？</li>\n<li><a href=\"https://www.dnode.cloud/join\">D.Node 採用ページ</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<ul>\n<li><a href=\"https://www.dnode.cloud/join\">デロイト トーマツ ノード合同会社(D.Node)</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "79. BigQuery と D.Node w/ g_suzutatsu",
      "itunes:episodeType": "full",
      "podcast:episode": 80
    },
    {
      "title": "78. プロジェクトスプリント（後編）w/ motoi, kedamatti",
      "description": "<p>プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。</p>\n<ul>\n<li><a href=\"https://www.projectsprint.org/\">プロジェクトスプリント</a>とは？</li>\n<li>プロジェクトスプリントの作成経緯</li>\n<li>プロジェクトが上手く進んでいる兆候が定例会議にあった</li>\n<li>ホラクラシーとスクラム</li>\n<li>ホラクラシーとは？</li>\n<li>役割（ロール）と違和感（テンション）</li>\n<li>タクティカルミーティングとは</li>\n<li>役職（権限）と役割は関係がある？</li>\n<li>ホラクラシーとスクラムとの共通点は？</li>\n<li>自律的な行動を生まれやすくする仕組みを作る</li>\n<li>変化し続けるものを切り取ることで改善しやすくする</li>\n<li>上手くいっている定例会議とは何か？</li>\n<li>チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。</li>\n<li>会議の分類（4目的 x 人数)</li>\n<li>書籍: <a href=\"https://amzn.to/3e2eUWi\">会議の進め方 / 高橋 誠</a></li>\n<li>プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある</li>\n<li>プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？</li>\n<li>関係性によって「共有」のやり方を変える</li>\n<li>書籍: <a href=\"https://amzn.to/3CGf7bR\">センスメーキング イン オーガニゼーションズ / カール.E.ワイク</a></li>\n<li>プロジェクトスプリントを具体的にどう進めていくのか？</li>\n<li>書籍: <a href=\"https://amzn.to/3QUvaHu\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>会議体をAPIとして捉える</li>\n<li><a href=\"https://blog.copilot.jp/\">COPILOT BLOG</a></li>\n<li>RPC: Remote Procedure Call</li>\n<li>会議の伴走方法は？</li>\n<li>会議体の変更めんどくさい問題</li>\n<li>会議体を見直す変更タイミングはいつ？</li>\n<li>テンショントリアージ</li>\n<li>「お尻が痛い」</li>\n<li>「何が必要ですか？」 / What do you need?”</li>\n<li>プロジェクトスプリントは <a href=\"https://github.com/copilot-jp/project-sprint\">OSS公開中</a></li>\n<li><a href=\"https://copilot.jp/recruit/\">採用 株式会社コパイロツト</a></li>\n<li><a href=\"https://supergoodmeetings.com/\">SuperGoodMeetings</a></li>\n<li><a href=\"https://uniba.jp/join.html\">採用 ユニバ株式会社</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/079_YNwya.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01gbh8ybes4zkn8jt27z838d7g.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 28 Aug 2022 13:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01gbh8ybes4zkn8jt27z838d7g.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/11052/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:39:30",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。</p>\n<ul>\n<li><a href=\"https://www.projectsprint.org/\">プロジェクトスプリント</a>とは？</li>\n<li>プロジェクトスプリントの作成経緯</li>\n<li>プロジェクトが上手く進んでいる兆候が定例会議にあった</li>\n<li>ホラクラシーとスクラム</li>\n<li>ホラクラシーとは？</li>\n<li>役割（ロール）と違和感（テンション）</li>\n<li>タクティカルミーティングとは</li>\n<li>役職（権限）と役割は関係がある？</li>\n<li>ホラクラシーとスクラムとの共通点は？</li>\n<li>自律的な行動を生まれやすくする仕組みを作る</li>\n<li>変化し続けるものを切り取ることで改善しやすくする</li>\n<li>上手くいっている定例会議とは何か？</li>\n<li>チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。</li>\n<li>会議の分類（4目的 x 人数)</li>\n<li>書籍: <a href=\"https://amzn.to/3e2eUWi\">会議の進め方 / 高橋 誠</a></li>\n<li>プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある</li>\n<li>プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？</li>\n<li>関係性によって「共有」のやり方を変える</li>\n<li>書籍: <a href=\"https://amzn.to/3CGf7bR\">センスメーキング イン オーガニゼーションズ / カール.E.ワイク</a></li>\n<li>プロジェクトスプリントを具体的にどう進めていくのか？</li>\n<li>書籍: <a href=\"https://amzn.to/3QUvaHu\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>会議体をAPIとして捉える</li>\n<li><a href=\"https://blog.copilot.jp/\">COPILOT BLOG</a></li>\n<li>RPC: Remote Procedure Call</li>\n<li>会議の伴走方法は？</li>\n<li>会議体の変更めんどくさい問題</li>\n<li>会議体を見直す変更タイミングはいつ？</li>\n<li>テンショントリアージ</li>\n<li>「お尻が痛い」</li>\n<li>「何が必要ですか？」 / What do you need?”</li>\n<li>プロジェクトスプリントは <a href=\"https://github.com/copilot-jp/project-sprint\">OSS公開中</a></li>\n<li><a href=\"https://copilot.jp/recruit/\">採用 株式会社コパイロツト</a></li>\n<li><a href=\"https://supergoodmeetings.com/\">SuperGoodMeetings</a></li>\n<li><a href=\"https://uniba.jp/join.html\">採用 ユニバ株式会社</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。</p>\n<ul>\n<li><a href=\"https://www.projectsprint.org/\">プロジェクトスプリント</a>とは？</li>\n<li>プロジェクトスプリントの作成経緯</li>\n<li>プロジェクトが上手く進んでいる兆候が定例会議にあった</li>\n<li>ホラクラシーとスクラム</li>\n<li>ホラクラシーとは？</li>\n<li>役割（ロール）と違和感（テンション）</li>\n<li>タクティカルミーティングとは</li>\n<li>役職（権限）と役割は関係がある？</li>\n<li>ホラクラシーとスクラムとの共通点は？</li>\n<li>自律的な行動を生まれやすくする仕組みを作る</li>\n<li>変化し続けるものを切り取ることで改善しやすくする</li>\n<li>上手くいっている定例会議とは何か？</li>\n<li>チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。</li>\n<li>会議の分類（4目的 x 人数)</li>\n<li>書籍: <a href=\"https://amzn.to/3e2eUWi\">会議の進め方 / 高橋 誠</a></li>\n<li>プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある</li>\n<li>プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？</li>\n<li>関係性によって「共有」のやり方を変える</li>\n<li>書籍: <a href=\"https://amzn.to/3CGf7bR\">センスメーキング イン オーガニゼーションズ / カール.E.ワイク</a></li>\n<li>プロジェクトスプリントを具体的にどう進めていくのか？</li>\n<li>書籍: <a href=\"https://amzn.to/3QUvaHu\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>会議体をAPIとして捉える</li>\n<li><a href=\"https://blog.copilot.jp/\">COPILOT BLOG</a></li>\n<li>RPC: Remote Procedure Call</li>\n<li>会議の伴走方法は？</li>\n<li>会議体の変更めんどくさい問題</li>\n<li>会議体を見直す変更タイミングはいつ？</li>\n<li>テンショントリアージ</li>\n<li>「お尻が痛い」</li>\n<li>「何が必要ですか？」 / What do you need?”</li>\n<li>プロジェクトスプリントは <a href=\"https://github.com/copilot-jp/project-sprint\">OSS公開中</a></li>\n<li><a href=\"https://copilot.jp/recruit/\">採用 株式会社コパイロツト</a></li>\n<li><a href=\"https://supergoodmeetings.com/\">SuperGoodMeetings</a></li>\n<li><a href=\"https://uniba.jp/join.html\">採用 ユニバ株式会社</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "78. プロジェクトスプリント（後編）w/ motoi, kedamatti",
      "itunes:episodeType": "full",
      "podcast:episode": 79
    },
    {
      "title": "77. リモートワークにおけるファシリテーション（前編）",
      "description": "<p>リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12\">リモートワークにおけるファシリテーションの方法論</a></li>\n<li><a href=\"https://blog.copilot.jp/entry/remote-facilitation\">リモートワークにおけるファシリテーションの方法論を公開します！</a></li>\n<li>リモートファシリテーションのスライドを作ったきっかけは？</li>\n<li>ファシリテーションとは何か？</li>\n<li>書籍: <a href=\"https://amzn.to/3Ay6EWR\">ファシリテーション入門〈第2版〉</a></li>\n<li>コンテントとプロセス</li>\n<li><a href=\"https://note.com/yuki_anzai/n/n1cd936d56c51\">組織開発の氷山モデルが言及される記事</a> </li>\n<li>なぜ全員でファシリテーターをする必要があるのか？</li>\n<li>リモートワークのファシリテーションで、特に何を意識するといいのか？</li>\n<li>地域における合意形成の難しさ</li>\n<li>なぜ合意形成はこんなに難しいのか？</li>\n<li>自分の理解、自分自身の考えをどうやって把握すればいいのか？</li>\n<li>点ではなく、範囲で考えるのが大事</li>\n<li>発話することによって初めて認識する</li>\n<li>オートクライン効果</li>\n<li>口頭で読み上げるとロジックの破綻に気づく</li>\n<li>（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）</li>\n<li>TOC(制約理論)が説明される書籍: <a href=\"https://amzn.to/3R4a8pd\">ザ・ゴール２</a></li>\n<li>言語化することによって、客観的に見れる状態になる</li>\n<li>なぜ、参加人数を絞るべきなのか？</li>\n<li>短時間で複数のミーティングを開催したほうが良い理由は何か？</li>\n<li>メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける</li>\n<li>環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる</li>\n<li>環境が固定していない、変化しているとは具体的には？</li>\n<li>チャットでの書きづらさは、どこからやってくるのか？</li>\n<li>個人ワーク重要説</li>\n<li>ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？</li>\n<li>最低限、何を事前に準備すればよいのか？</li>\n<li>Doneの定義</li>\n<li>ミーティングで共有する時間をとるべきなのか？</li>\n<li>getting on the same page </li>\n<li>発散・収束・共有の順序性は？</li>\n<li>収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？</li>\n<li>合意形成のレベル・ラインを確認する・下げる</li>\n<li><a href=\"https://fukabori.fm/episode/66\">ep.66から&quot;アイデアの決め方を事前に合意しておく&quot;</a></li>\n<li>「あれば言ってください」というのは難しい。どうやって対応するか？</li>\n<li>画面に注目してもらいやすくなった</li>\n<li>議事録は、どうやって作っていけばいいのか？</li>\n<li>議事録をみんなで書くためのコツは？</li>\n<li><a href=\"https://copilot.jp/recruit/\">採用 | 株式会社コパイロツト</a></li>\n<li><a href=\"https://blog.copilot.jp/\">COPILOT BLOG</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/078_SgumA.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01gaw9vqkhqs87g7vafkkj77zx.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sat, 20 Aug 2022 09:18:47 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01gaw9vqkhqs87g7vafkkj77zx.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/10855/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:49:02",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12\">リモートワークにおけるファシリテーションの方法論</a></li>\n<li><a href=\"https://blog.copilot.jp/entry/remote-facilitation\">リモートワークにおけるファシリテーションの方法論を公開します！</a></li>\n<li>リモートファシリテーションのスライドを作ったきっかけは？</li>\n<li>ファシリテーションとは何か？</li>\n<li>書籍: <a href=\"https://amzn.to/3Ay6EWR\">ファシリテーション入門〈第2版〉</a></li>\n<li>コンテントとプロセス</li>\n<li><a href=\"https://note.com/yuki_anzai/n/n1cd936d56c51\">組織開発の氷山モデルが言及される記事</a> </li>\n<li>なぜ全員でファシリテーターをする必要があるのか？</li>\n<li>リモートワークのファシリテーションで、特に何を意識するといいのか？</li>\n<li>地域における合意形成の難しさ</li>\n<li>なぜ合意形成はこんなに難しいのか？</li>\n<li>自分の理解、自分自身の考えをどうやって把握すればいいのか？</li>\n<li>点ではなく、範囲で考えるのが大事</li>\n<li>発話することによって初めて認識する</li>\n<li>オートクライン効果</li>\n<li>口頭で読み上げるとロジックの破綻に気づく</li>\n<li>（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）</li>\n<li>TOC(制約理論)が説明される書籍: <a href=\"https://amzn.to/3R4a8pd\">ザ・ゴール２</a></li>\n<li>言語化することによって、客観的に見れる状態になる</li>\n<li>なぜ、参加人数を絞るべきなのか？</li>\n<li>短時間で複数のミーティングを開催したほうが良い理由は何か？</li>\n<li>メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける</li>\n<li>環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる</li>\n<li>環境が固定していない、変化しているとは具体的には？</li>\n<li>チャットでの書きづらさは、どこからやってくるのか？</li>\n<li>個人ワーク重要説</li>\n<li>ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？</li>\n<li>最低限、何を事前に準備すればよいのか？</li>\n<li>Doneの定義</li>\n<li>ミーティングで共有する時間をとるべきなのか？</li>\n<li>getting on the same page </li>\n<li>発散・収束・共有の順序性は？</li>\n<li>収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？</li>\n<li>合意形成のレベル・ラインを確認する・下げる</li>\n<li><a href=\"https://fukabori.fm/episode/66\">ep.66から&quot;アイデアの決め方を事前に合意しておく&quot;</a></li>\n<li>「あれば言ってください」というのは難しい。どうやって対応するか？</li>\n<li>画面に注目してもらいやすくなった</li>\n<li>議事録は、どうやって作っていけばいいのか？</li>\n<li>議事録をみんなで書くためのコツは？</li>\n<li><a href=\"https://copilot.jp/recruit/\">採用 | 株式会社コパイロツト</a></li>\n<li><a href=\"https://blog.copilot.jp/\">COPILOT BLOG</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12\">リモートワークにおけるファシリテーションの方法論</a></li>\n<li><a href=\"https://blog.copilot.jp/entry/remote-facilitation\">リモートワークにおけるファシリテーションの方法論を公開します！</a></li>\n<li>リモートファシリテーションのスライドを作ったきっかけは？</li>\n<li>ファシリテーションとは何か？</li>\n<li>書籍: <a href=\"https://amzn.to/3Ay6EWR\">ファシリテーション入門〈第2版〉</a></li>\n<li>コンテントとプロセス</li>\n<li><a href=\"https://note.com/yuki_anzai/n/n1cd936d56c51\">組織開発の氷山モデルが言及される記事</a> </li>\n<li>なぜ全員でファシリテーターをする必要があるのか？</li>\n<li>リモートワークのファシリテーションで、特に何を意識するといいのか？</li>\n<li>地域における合意形成の難しさ</li>\n<li>なぜ合意形成はこんなに難しいのか？</li>\n<li>自分の理解、自分自身の考えをどうやって把握すればいいのか？</li>\n<li>点ではなく、範囲で考えるのが大事</li>\n<li>発話することによって初めて認識する</li>\n<li>オートクライン効果</li>\n<li>口頭で読み上げるとロジックの破綻に気づく</li>\n<li>（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）</li>\n<li>TOC(制約理論)が説明される書籍: <a href=\"https://amzn.to/3R4a8pd\">ザ・ゴール２</a></li>\n<li>言語化することによって、客観的に見れる状態になる</li>\n<li>なぜ、参加人数を絞るべきなのか？</li>\n<li>短時間で複数のミーティングを開催したほうが良い理由は何か？</li>\n<li>メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける</li>\n<li>環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる</li>\n<li>環境が固定していない、変化しているとは具体的には？</li>\n<li>チャットでの書きづらさは、どこからやってくるのか？</li>\n<li>個人ワーク重要説</li>\n<li>ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？</li>\n<li>最低限、何を事前に準備すればよいのか？</li>\n<li>Doneの定義</li>\n<li>ミーティングで共有する時間をとるべきなのか？</li>\n<li>getting on the same page </li>\n<li>発散・収束・共有の順序性は？</li>\n<li>収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？</li>\n<li>合意形成のレベル・ラインを確認する・下げる</li>\n<li><a href=\"https://fukabori.fm/episode/66\">ep.66から&quot;アイデアの決め方を事前に合意しておく&quot;</a></li>\n<li>「あれば言ってください」というのは難しい。どうやって対応するか？</li>\n<li>画面に注目してもらいやすくなった</li>\n<li>議事録は、どうやって作っていけばいいのか？</li>\n<li>議事録をみんなで書くためのコツは？</li>\n<li><a href=\"https://copilot.jp/recruit/\">採用 | 株式会社コパイロツト</a></li>\n<li><a href=\"https://blog.copilot.jp/\">COPILOT BLOG</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "77. リモートワークにおけるファシリテーション（前編）",
      "itunes:episodeType": "full",
      "podcast:episode": 78
    },
    {
      "title": "76. モダンウェブフロントエンド(2022)に至る歴史 - React Server Component、SSR Streaming w/ morishin127",
      "description": "<p>2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://techlife.cookpad.com/entry/2022/06/21/130736\">モダンウェブフロントエンド勉強会を開催しました</a></li>\n<li>そもそもWebページのダウンロードって、どう始まった？</li>\n<li>JavaScriptがマウスカーソルをキラキラさせていた時代</li>\n<li>Ajaxの登場や、jQuery</li>\n<li>フロントエンドMVC、Backbone.js、Knockout.js</li>\n<li>Reactは何が革命的だったのか？</li>\n<li>手続き型の実装は何が辛かったのか？</li>\n<li>SPA(Single Page Application)</li>\n<li>MPA(Multi Page Application)</li>\n<li>CSR(Client Side Rendering)</li>\n<li>サーバーサイドがJSONを返す時代へ</li>\n<li>History API</li>\n<li>SPAが抱える課題は？</li>\n<li><a href=\"https://techlife.cookpad.com/entry/dynamic-og-image\">レシピページのOGP画像を動的に生成する</a></li>\n<li>SSR(Server Side Rendering) と Next.js</li>\n<li>Hydrate は何を意味する？</li>\n<li>SSG(Static Site Generation) とは？</li>\n<li>Jekyll と Hugo</li>\n<li>ISR(Incremental Static Regeneration) とは？</li>\n<li>Vercel へのデプロイ</li>\n<li>SSR が抱える課題は？</li>\n<li>SSR Streaming とは？</li>\n<li>Streaming HTML と Selective Hydration</li>\n<li>Suspense Component</li>\n<li><a href=\"https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/\">algebraic effects</a> とは</li>\n<li>React Hooks とは？</li>\n<li>Class Component の課題は何だったのか？</li>\n<li><a href=\"https://morishin.hatenablog.com/entry/impressions-of-react-hooks\">React Hooks のモチベーション</a></li>\n<li>React Server Component とは何か？</li>\n<li>今Webアプリを作るならどんな構成にするか？</li>\n<li><a href=\"https://meety.net/matches/IqkoOYweMjDq\">Meety</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/077_sPtgl.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01g77jtb3fey1x2j7g0p9yxm62.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 06 Jul 2022 01:24:11 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01g77jtb3fey1x2j7g0p9yxm62.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/9657/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:38:44",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://techlife.cookpad.com/entry/2022/06/21/130736\">モダンウェブフロントエンド勉強会を開催しました</a></li>\n<li>そもそもWebページのダウンロードって、どう始まった？</li>\n<li>JavaScriptがマウスカーソルをキラキラさせていた時代</li>\n<li>Ajaxの登場や、jQuery</li>\n<li>フロントエンドMVC、Backbone.js、Knockout.js</li>\n<li>Reactは何が革命的だったのか？</li>\n<li>手続き型の実装は何が辛かったのか？</li>\n<li>SPA(Single Page Application)</li>\n<li>MPA(Multi Page Application)</li>\n<li>CSR(Client Side Rendering)</li>\n<li>サーバーサイドがJSONを返す時代へ</li>\n<li>History API</li>\n<li>SPAが抱える課題は？</li>\n<li><a href=\"https://techlife.cookpad.com/entry/dynamic-og-image\">レシピページのOGP画像を動的に生成する</a></li>\n<li>SSR(Server Side Rendering) と Next.js</li>\n<li>Hydrate は何を意味する？</li>\n<li>SSG(Static Site Generation) とは？</li>\n<li>Jekyll と Hugo</li>\n<li>ISR(Incremental Static Regeneration) とは？</li>\n<li>Vercel へのデプロイ</li>\n<li>SSR が抱える課題は？</li>\n<li>SSR Streaming とは？</li>\n<li>Streaming HTML と Selective Hydration</li>\n<li>Suspense Component</li>\n<li><a href=\"https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/\">algebraic effects</a> とは</li>\n<li>React Hooks とは？</li>\n<li>Class Component の課題は何だったのか？</li>\n<li><a href=\"https://morishin.hatenablog.com/entry/impressions-of-react-hooks\">React Hooks のモチベーション</a></li>\n<li>React Server Component とは何か？</li>\n<li>今Webアプリを作るならどんな構成にするか？</li>\n<li><a href=\"https://meety.net/matches/IqkoOYweMjDq\">Meety</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://techlife.cookpad.com/entry/2022/06/21/130736\">モダンウェブフロントエンド勉強会を開催しました</a></li>\n<li>そもそもWebページのダウンロードって、どう始まった？</li>\n<li>JavaScriptがマウスカーソルをキラキラさせていた時代</li>\n<li>Ajaxの登場や、jQuery</li>\n<li>フロントエンドMVC、Backbone.js、Knockout.js</li>\n<li>Reactは何が革命的だったのか？</li>\n<li>手続き型の実装は何が辛かったのか？</li>\n<li>SPA(Single Page Application)</li>\n<li>MPA(Multi Page Application)</li>\n<li>CSR(Client Side Rendering)</li>\n<li>サーバーサイドがJSONを返す時代へ</li>\n<li>History API</li>\n<li>SPAが抱える課題は？</li>\n<li><a href=\"https://techlife.cookpad.com/entry/dynamic-og-image\">レシピページのOGP画像を動的に生成する</a></li>\n<li>SSR(Server Side Rendering) と Next.js</li>\n<li>Hydrate は何を意味する？</li>\n<li>SSG(Static Site Generation) とは？</li>\n<li>Jekyll と Hugo</li>\n<li>ISR(Incremental Static Regeneration) とは？</li>\n<li>Vercel へのデプロイ</li>\n<li>SSR が抱える課題は？</li>\n<li>SSR Streaming とは？</li>\n<li>Streaming HTML と Selective Hydration</li>\n<li>Suspense Component</li>\n<li><a href=\"https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/\">algebraic effects</a> とは</li>\n<li>React Hooks とは？</li>\n<li>Class Component の課題は何だったのか？</li>\n<li><a href=\"https://morishin.hatenablog.com/entry/impressions-of-react-hooks\">React Hooks のモチベーション</a></li>\n<li>React Server Component とは何か？</li>\n<li>今Webアプリを作るならどんな構成にするか？</li>\n<li><a href=\"https://meety.net/matches/IqkoOYweMjDq\">Meety</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "76. モダンウェブフロントエンド(2022)に至る歴史 - React Server Component、SSR Streaming w/ morishin127",
      "itunes:episodeType": "full",
      "podcast:episode": 77
    },
    {
      "title": "75. GitHub Copilotの裏側 と 難解なテーマをわかりやすく説明する方法 w/ AIcia_Solid",
      "description": "<p>GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured\">AIcia Solid Project</a></li>\n<li><a href=\"https://github.com/features/copilot/\">GitHub Copilot</a> とは？(補足: 本ep公開時点でGA)</li>\n<li>GitHub Copilot の裏側で何が動いているのか？</li>\n<li>GPT(Generative Pre-trained Transformer) とは何か？</li>\n<li>言語モデルのパラメータとは？</li>\n<li>パラメータって GPT では、どのぐらいの数があるのか？</li>\n<li>パラメータとは数が多ければいいもの？</li>\n<li>Youtube: <a href=\"https://www.youtube.com/watch?v=n1QYofU3_hY\">【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】</a></li>\n<li>論文: <a href=\"https://arxiv.org/abs/2001.08361\">Scaling Laws for Neural Language Models</a></li>\n<li>学習の計算量と時間量</li>\n<li><a href=\"https://openai.com/dall-e-2/\">DALL·E 2</a></li>\n<li>Transformer は並列が得意、とあるがもともとはできなかった？</li>\n<li>LSTM(Long Short Term Memory)</li>\n<li>Multi-head Attention とは？</li>\n<li>GPT -&gt; GPT-2 -&gt; GPT-3 と進化するときに何が変わった？</li>\n<li>GPT-3 の弱点は？</li>\n<li><a href=\"https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/\">The Google engineer who thinks the company’s AI has come to life</a></li>\n<li>GPT-3 を使う側は何をすればいい？</li>\n<li>Fine Tuning と <a href=\"https://huggingface.co/\">Hugging Face</a></li>\n<li>YouTube: <a href=\"https://www.youtube.com/watch?v=hMQG-oF9pgw\">【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】</a></li>\n<li>Few-Shot、 One-Shot、 Zero-Shot</li>\n<li>動画でわかりやすく説明するために何を意識している？</li>\n<li>数式にこもっている魂を抜き出して説明する</li>\n<li>非専門領域の人にわかりやすく伝える方法</li>\n<li>なぜこの活動(AIcia Solid Project)を続けられている？</li>\n<li>(収録で間に合わなかった重大告知) 2022/7/26に書籍 <a href=\"https://amzn.to/3yhE4YI\">分析モデル入門</a> が発売開始！</li>\n</ul>\n<h2 id=\"-\">訂正</h2>\n<p>冒頭で &quot;fukabori.fm の76回です&quot; と言っていますが &quot;75回&quot; の間違いです。</p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/076_uKSat.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01g6btfqvyvh4cv43xzzmrat9q.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sat, 25 Jun 2022 06:39:28 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01g6btfqvyvh4cv43xzzmrat9q.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/9431/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/077ilwai.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/077ilwai.png",
        "#text": null
      },
      "itunes:duration": "00:40:29",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured\">AIcia Solid Project</a></li>\n<li><a href=\"https://github.com/features/copilot/\">GitHub Copilot</a> とは？(補足: 本ep公開時点でGA)</li>\n<li>GitHub Copilot の裏側で何が動いているのか？</li>\n<li>GPT(Generative Pre-trained Transformer) とは何か？</li>\n<li>言語モデルのパラメータとは？</li>\n<li>パラメータって GPT では、どのぐらいの数があるのか？</li>\n<li>パラメータとは数が多ければいいもの？</li>\n<li>Youtube: <a href=\"https://www.youtube.com/watch?v=n1QYofU3_hY\">【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】</a></li>\n<li>論文: <a href=\"https://arxiv.org/abs/2001.08361\">Scaling Laws for Neural Language Models</a></li>\n<li>学習の計算量と時間量</li>\n<li><a href=\"https://openai.com/dall-e-2/\">DALL·E 2</a></li>\n<li>Transformer は並列が得意、とあるがもともとはできなかった？</li>\n<li>LSTM(Long Short Term Memory)</li>\n<li>Multi-head Attention とは？</li>\n<li>GPT -&gt; GPT-2 -&gt; GPT-3 と進化するときに何が変わった？</li>\n<li>GPT-3 の弱点は？</li>\n<li><a href=\"https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/\">The Google engineer who thinks the company’s AI has come to life</a></li>\n<li>GPT-3 を使う側は何をすればいい？</li>\n<li>Fine Tuning と <a href=\"https://huggingface.co/\">Hugging Face</a></li>\n<li>YouTube: <a href=\"https://www.youtube.com/watch?v=hMQG-oF9pgw\">【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】</a></li>\n<li>Few-Shot、 One-Shot、 Zero-Shot</li>\n<li>動画でわかりやすく説明するために何を意識している？</li>\n<li>数式にこもっている魂を抜き出して説明する</li>\n<li>非専門領域の人にわかりやすく伝える方法</li>\n<li>なぜこの活動(AIcia Solid Project)を続けられている？</li>\n<li>(収録で間に合わなかった重大告知) 2022/7/26に書籍 <a href=\"https://amzn.to/3yhE4YI\">分析モデル入門</a> が発売開始！</li>\n</ul>\n<h2 id=\"-\">訂正</h2>\n<p>冒頭で &quot;fukabori.fm の76回です&quot; と言っていますが &quot;75回&quot; の間違いです。</p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured\">AIcia Solid Project</a></li>\n<li><a href=\"https://github.com/features/copilot/\">GitHub Copilot</a> とは？(補足: 本ep公開時点でGA)</li>\n<li>GitHub Copilot の裏側で何が動いているのか？</li>\n<li>GPT(Generative Pre-trained Transformer) とは何か？</li>\n<li>言語モデルのパラメータとは？</li>\n<li>パラメータって GPT では、どのぐらいの数があるのか？</li>\n<li>パラメータとは数が多ければいいもの？</li>\n<li>Youtube: <a href=\"https://www.youtube.com/watch?v=n1QYofU3_hY\">【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】</a></li>\n<li>論文: <a href=\"https://arxiv.org/abs/2001.08361\">Scaling Laws for Neural Language Models</a></li>\n<li>学習の計算量と時間量</li>\n<li><a href=\"https://openai.com/dall-e-2/\">DALL·E 2</a></li>\n<li>Transformer は並列が得意、とあるがもともとはできなかった？</li>\n<li>LSTM(Long Short Term Memory)</li>\n<li>Multi-head Attention とは？</li>\n<li>GPT -&gt; GPT-2 -&gt; GPT-3 と進化するときに何が変わった？</li>\n<li>GPT-3 の弱点は？</li>\n<li><a href=\"https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/\">The Google engineer who thinks the company’s AI has come to life</a></li>\n<li>GPT-3 を使う側は何をすればいい？</li>\n<li>Fine Tuning と <a href=\"https://huggingface.co/\">Hugging Face</a></li>\n<li>YouTube: <a href=\"https://www.youtube.com/watch?v=hMQG-oF9pgw\">【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】</a></li>\n<li>Few-Shot、 One-Shot、 Zero-Shot</li>\n<li>動画でわかりやすく説明するために何を意識している？</li>\n<li>数式にこもっている魂を抜き出して説明する</li>\n<li>非専門領域の人にわかりやすく伝える方法</li>\n<li>なぜこの活動(AIcia Solid Project)を続けられている？</li>\n<li>(収録で間に合わなかった重大告知) 2022/7/26に書籍 <a href=\"https://amzn.to/3yhE4YI\">分析モデル入門</a> が発売開始！</li>\n</ul>\n<h2 id=\"-\">訂正</h2>\n<p>冒頭で &quot;fukabori.fm の76回です&quot; と言っていますが &quot;75回&quot; の間違いです。</p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "75. GitHub Copilotの裏側 と 難解なテーマをわかりやすく説明する方法 w/ AIcia_Solid",
      "itunes:episodeType": "full",
      "podcast:episode": 76
    },
    {
      "title": "74. PMFしているスタートアップがスケールする上での組織課題と解法 w/ kameike",
      "link": "https://fukabori.fm/episode/74",
      "description": "<p>タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>タイミーのプロダクトとは</li>\n<li>スタートアップがスケールするにあたっての組織課題とは？</li>\n<li>プロダクトの優先順位を決める上で意識していることは？</li>\n<li>プロダクトバックログの優先順位の判断はどのようにしている？</li>\n<li>CTOとしてのビジョン、未来の組織とは？</li>\n<li>専門性を分化させて、プロセスを高速化させる</li>\n<li>採用は答え合わせ</li>\n<li>Engineering Manager の責務と Tech Lead の責務</li>\n<li><a href=\"https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/\">Google re:Work</a></li>\n<li>プロダクトHRとは何をしている？</li>\n<li>セールスの採用とエンジニアの採用との違いは？</li>\n<li>タイミーにおけるエンジニアの目標設計・評価とは？</li>\n<li>キャリアラダーの上げ下げは、誰が・どのように判断している？</li>\n<li><a href=\"https://www.youtube.com/watch?v=uJL3M7R8MLc\">チームトポロジーを成功させる実践方法の探求 - Team Topologies Study</a></li>\n<li>タイミーにおける採用戦略とは？</li>\n<li>採用で必要な人数はどのように決定している？</li>\n<li>タイミーにおけるコミュニケーション設計とは？</li>\n<li>コミュニケーションで上手くいかなかったこと・上手くいったこと</li>\n<li>伝わらないと透明性は出ない</li>\n<li>組織としてドキュメントを書く力をどのようにつけていくか？</li>\n<li><a href=\"https://twitter.com/TimeeDev\">タイミーエンジニア公式Twitter</a></li>\n<li><a href=\"https://twitter.com/kameike\">kameikeさんのTwitter</a></li>\n<li><a href=\"https://meety.net/matches/AXfZQZhoWeBe\">fukabori用のmeety</a></li>\n<li><a href=\"https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1\">エントランスブック</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<ul>\n<li><a href=\"https://timee.co.jp/\">株式会社タイミー</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/075_eFUfv.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01g5hhyqdzhmgty68g4t0dgpsc.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 15 Jun 2022 01:50:06 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01g5hhyqdzhmgty68g4t0dgpsc.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/9068/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:52:47",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>タイミーのプロダクトとは</li>\n<li>スタートアップがスケールするにあたっての組織課題とは？</li>\n<li>プロダクトの優先順位を決める上で意識していることは？</li>\n<li>プロダクトバックログの優先順位の判断はどのようにしている？</li>\n<li>CTOとしてのビジョン、未来の組織とは？</li>\n<li>専門性を分化させて、プロセスを高速化させる</li>\n<li>採用は答え合わせ</li>\n<li>Engineering Manager の責務と Tech Lead の責務</li>\n<li><a href=\"https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/\">Google re:Work</a></li>\n<li>プロダクトHRとは何をしている？</li>\n<li>セールスの採用とエンジニアの採用との違いは？</li>\n<li>タイミーにおけるエンジニアの目標設計・評価とは？</li>\n<li>キャリアラダーの上げ下げは、誰が・どのように判断している？</li>\n<li><a href=\"https://www.youtube.com/watch?v=uJL3M7R8MLc\">チームトポロジーを成功させる実践方法の探求 - Team Topologies Study</a></li>\n<li>タイミーにおける採用戦略とは？</li>\n<li>採用で必要な人数はどのように決定している？</li>\n<li>タイミーにおけるコミュニケーション設計とは？</li>\n<li>コミュニケーションで上手くいかなかったこと・上手くいったこと</li>\n<li>伝わらないと透明性は出ない</li>\n<li>組織としてドキュメントを書く力をどのようにつけていくか？</li>\n<li><a href=\"https://twitter.com/TimeeDev\">タイミーエンジニア公式Twitter</a></li>\n<li><a href=\"https://twitter.com/kameike\">kameikeさんのTwitter</a></li>\n<li><a href=\"https://meety.net/matches/AXfZQZhoWeBe\">fukabori用のmeety</a></li>\n<li><a href=\"https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1\">エントランスブック</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<ul>\n<li><a href=\"https://timee.co.jp/\">株式会社タイミー</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>タイミーのプロダクトとは</li>\n<li>スタートアップがスケールするにあたっての組織課題とは？</li>\n<li>プロダクトの優先順位を決める上で意識していることは？</li>\n<li>プロダクトバックログの優先順位の判断はどのようにしている？</li>\n<li>CTOとしてのビジョン、未来の組織とは？</li>\n<li>専門性を分化させて、プロセスを高速化させる</li>\n<li>採用は答え合わせ</li>\n<li>Engineering Manager の責務と Tech Lead の責務</li>\n<li><a href=\"https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/\">Google re:Work</a></li>\n<li>プロダクトHRとは何をしている？</li>\n<li>セールスの採用とエンジニアの採用との違いは？</li>\n<li>タイミーにおけるエンジニアの目標設計・評価とは？</li>\n<li>キャリアラダーの上げ下げは、誰が・どのように判断している？</li>\n<li><a href=\"https://www.youtube.com/watch?v=uJL3M7R8MLc\">チームトポロジーを成功させる実践方法の探求 - Team Topologies Study</a></li>\n<li>タイミーにおける採用戦略とは？</li>\n<li>採用で必要な人数はどのように決定している？</li>\n<li>タイミーにおけるコミュニケーション設計とは？</li>\n<li>コミュニケーションで上手くいかなかったこと・上手くいったこと</li>\n<li>伝わらないと透明性は出ない</li>\n<li>組織としてドキュメントを書く力をどのようにつけていくか？</li>\n<li><a href=\"https://twitter.com/TimeeDev\">タイミーエンジニア公式Twitter</a></li>\n<li><a href=\"https://twitter.com/kameike\">kameikeさんのTwitter</a></li>\n<li><a href=\"https://meety.net/matches/AXfZQZhoWeBe\">fukabori用のmeety</a></li>\n<li><a href=\"https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1\">エントランスブック</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<ul>\n<li><a href=\"https://timee.co.jp/\">株式会社タイミー</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "74. PMFしているスタートアップがスケールする上での組織課題と解法 w/ kameike",
      "itunes:episodeType": "full",
      "podcast:episode": 75
    },
    {
      "title": "73. Value Object w/ kumagi",
      "link": "https://fukabori.fm/episode/73",
      "description": "<p>kumagi さんをゲストに、Value Object について語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://kumagi.hatenablog.com/entry/value-object\">Value Objectについて整理しよう</a></li>\n<li>Value Object とは何か？</li>\n<li>Value Object で複数の値をくるむcompoundの具体例は？</li>\n<li>Value Object のメリット・デメリットは？</li>\n<li>別名参照問題</li>\n<li>Value Object は何でないか？</li>\n<li>YAGNI原則</li>\n<li>不変オブジェクト (Immutable Object)</li>\n<li>書籍: <a href=\"https://amzn.to/3a3AlnV\">リファクタリング 既存のコードを安全に改善する（第2版）</a></li>\n<li><a href=\"https://martinfowler.com/bliki/ValueObject.html\">マーチン・ファウラー氏のblog記事 - ValueObject</a></li>\n<li>Value Object Obsession と Primitive Obsession</li>\n<li>Primitive Obsession のメリットは？</li>\n<li>Value Objectの言説はどこから生まれてきたのか？</li>\n<li><a href=\"https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/\">「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう</a></li>\n<li>書籍: <a href=\"https://amzn.to/3sE2vw5\">Effective C++ 第3版</a></li>\n<li>書籍: <a href=\"https://amzn.to/3wflbod\">Effective Java 第3版</a></li>\n<li>書籍: <a href=\"https://amzn.to/38uNc1Y\">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>\n<li>書籍: <a href=\"https://amzn.to/3wspQlu\">CODE COMPLETE 第2版 下 完全なプログラミングを目指して</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/074_joNbx.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01g348akn5e7as01tjqj3jc6yp.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 16 May 2022 01:20:19 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01g348akn5e7as01tjqj3jc6yp.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/7913/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:26:38",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>kumagi さんをゲストに、Value Object について語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://kumagi.hatenablog.com/entry/value-object\">Value Objectについて整理しよう</a></li>\n<li>Value Object とは何か？</li>\n<li>Value Object で複数の値をくるむcompoundの具体例は？</li>\n<li>Value Object のメリット・デメリットは？</li>\n<li>別名参照問題</li>\n<li>Value Object は何でないか？</li>\n<li>YAGNI原則</li>\n<li>不変オブジェクト (Immutable Object)</li>\n<li>書籍: <a href=\"https://amzn.to/3a3AlnV\">リファクタリング 既存のコードを安全に改善する（第2版）</a></li>\n<li><a href=\"https://martinfowler.com/bliki/ValueObject.html\">マーチン・ファウラー氏のblog記事 - ValueObject</a></li>\n<li>Value Object Obsession と Primitive Obsession</li>\n<li>Primitive Obsession のメリットは？</li>\n<li>Value Objectの言説はどこから生まれてきたのか？</li>\n<li><a href=\"https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/\">「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう</a></li>\n<li>書籍: <a href=\"https://amzn.to/3sE2vw5\">Effective C++ 第3版</a></li>\n<li>書籍: <a href=\"https://amzn.to/3wflbod\">Effective Java 第3版</a></li>\n<li>書籍: <a href=\"https://amzn.to/38uNc1Y\">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>\n<li>書籍: <a href=\"https://amzn.to/3wspQlu\">CODE COMPLETE 第2版 下 完全なプログラミングを目指して</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>kumagi さんをゲストに、Value Object について語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://kumagi.hatenablog.com/entry/value-object\">Value Objectについて整理しよう</a></li>\n<li>Value Object とは何か？</li>\n<li>Value Object で複数の値をくるむcompoundの具体例は？</li>\n<li>Value Object のメリット・デメリットは？</li>\n<li>別名参照問題</li>\n<li>Value Object は何でないか？</li>\n<li>YAGNI原則</li>\n<li>不変オブジェクト (Immutable Object)</li>\n<li>書籍: <a href=\"https://amzn.to/3a3AlnV\">リファクタリング 既存のコードを安全に改善する（第2版）</a></li>\n<li><a href=\"https://martinfowler.com/bliki/ValueObject.html\">マーチン・ファウラー氏のblog記事 - ValueObject</a></li>\n<li>Value Object Obsession と Primitive Obsession</li>\n<li>Primitive Obsession のメリットは？</li>\n<li>Value Objectの言説はどこから生まれてきたのか？</li>\n<li><a href=\"https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/\">「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう</a></li>\n<li>書籍: <a href=\"https://amzn.to/3sE2vw5\">Effective C++ 第3版</a></li>\n<li>書籍: <a href=\"https://amzn.to/3wflbod\">Effective Java 第3版</a></li>\n<li>書籍: <a href=\"https://amzn.to/38uNc1Y\">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>\n<li>書籍: <a href=\"https://amzn.to/3wspQlu\">CODE COMPLETE 第2版 下 完全なプログラミングを目指して</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "73. Value Object w/ kumagi",
      "itunes:episodeType": "full",
      "podcast:episode": 74
    },
    {
      "title": "72. 2022年のフロントエンド開発、特にCSS事情 w/ tsukkee",
      "description": "<p>tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>最近のフロントエンド開発ってどんな感じ？</li>\n<li>なぜ、 transpile などの変換が必要なのか？</li>\n<li>CSS Grid とは？ 何が良いのか？</li>\n<li>もともと昔はどうやってレイアウトしていた？</li>\n<li>Table から Float へ</li>\n<li><a href=\"http://abehiroshi.la.coocan.jp/\">阿部 寛のホームページ</a></li>\n<li>Flexbox とは</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/XUL\">XUL</a></li>\n<li>Grid と Flexbox の違いは？</li>\n<li>HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？</li>\n<li>CSSで変数利用って、どう進化してきた？</li>\n<li><a href=\"https://sass-lang.com/\">Sass</a> や SCSS</li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties\">Custom Properties</a></li>\n<li>Custom Properties のメリットとは？</li>\n<li>Web Component との関連</li>\n<li>この先、SassやSCSSはこの先どうなっていく？</li>\n<li><a href=\"https://www.w3.org/TR/css-nesting-1/\">CSS Nesting Module</a></li>\n<li>CSS Animation / Transition の進化</li>\n<li>JSでアニメーション実装をすると、何が難しいのか？</li>\n<li><a href=\"https://developer.apple.com/design/human-interface-guidelines/\">Apple Interface Guideline</a></li>\n<li>アニメーションの使い時はいつか？</li>\n<li>アニメーション習いたてで使いたくなっちゃう問題</li>\n<li>Animation と SVG との組み合わせが便利</li>\n<li>CSS の仕様を、どうやって追っかけているか？</li>\n<li><a href=\"https://web.dev/\">web.dev</a></li>\n<li>チームでフロントエンド情報をどうやって学習しているか？</li>\n<li>CSS設計をどうやって決めている？</li>\n<li>Shadow DOM と スコープ</li>\n<li>実際のプロダクト開発では何を使っている？</li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/@layer\">CSS Layer</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/:has\">:has() 疑似クラス</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/Guide/Houdini\">CSS Houdini</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide\">Painting API</a></li>\n<li><a href=\"https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md\">Layout API</a></li>\n<li>採用: <a href=\"https://herp.careers/v1/stockmark\">ストックマーク社 エンジニア募集中</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/073_aysdL.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01g22m71nygyj0x1nqpm5qwvy4.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 02 May 2022 23:53:54 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01g22m71nygyj0x1nqpm5qwvy4.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/7724/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:45:49",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>最近のフロントエンド開発ってどんな感じ？</li>\n<li>なぜ、 transpile などの変換が必要なのか？</li>\n<li>CSS Grid とは？ 何が良いのか？</li>\n<li>もともと昔はどうやってレイアウトしていた？</li>\n<li>Table から Float へ</li>\n<li><a href=\"http://abehiroshi.la.coocan.jp/\">阿部 寛のホームページ</a></li>\n<li>Flexbox とは</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/XUL\">XUL</a></li>\n<li>Grid と Flexbox の違いは？</li>\n<li>HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？</li>\n<li>CSSで変数利用って、どう進化してきた？</li>\n<li><a href=\"https://sass-lang.com/\">Sass</a> や SCSS</li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties\">Custom Properties</a></li>\n<li>Custom Properties のメリットとは？</li>\n<li>Web Component との関連</li>\n<li>この先、SassやSCSSはこの先どうなっていく？</li>\n<li><a href=\"https://www.w3.org/TR/css-nesting-1/\">CSS Nesting Module</a></li>\n<li>CSS Animation / Transition の進化</li>\n<li>JSでアニメーション実装をすると、何が難しいのか？</li>\n<li><a href=\"https://developer.apple.com/design/human-interface-guidelines/\">Apple Interface Guideline</a></li>\n<li>アニメーションの使い時はいつか？</li>\n<li>アニメーション習いたてで使いたくなっちゃう問題</li>\n<li>Animation と SVG との組み合わせが便利</li>\n<li>CSS の仕様を、どうやって追っかけているか？</li>\n<li><a href=\"https://web.dev/\">web.dev</a></li>\n<li>チームでフロントエンド情報をどうやって学習しているか？</li>\n<li>CSS設計をどうやって決めている？</li>\n<li>Shadow DOM と スコープ</li>\n<li>実際のプロダクト開発では何を使っている？</li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/@layer\">CSS Layer</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/:has\">:has() 疑似クラス</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/Guide/Houdini\">CSS Houdini</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide\">Painting API</a></li>\n<li><a href=\"https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md\">Layout API</a></li>\n<li>採用: <a href=\"https://herp.careers/v1/stockmark\">ストックマーク社 エンジニア募集中</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>最近のフロントエンド開発ってどんな感じ？</li>\n<li>なぜ、 transpile などの変換が必要なのか？</li>\n<li>CSS Grid とは？ 何が良いのか？</li>\n<li>もともと昔はどうやってレイアウトしていた？</li>\n<li>Table から Float へ</li>\n<li><a href=\"http://abehiroshi.la.coocan.jp/\">阿部 寛のホームページ</a></li>\n<li>Flexbox とは</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/XUL\">XUL</a></li>\n<li>Grid と Flexbox の違いは？</li>\n<li>HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？</li>\n<li>CSSで変数利用って、どう進化してきた？</li>\n<li><a href=\"https://sass-lang.com/\">Sass</a> や SCSS</li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties\">Custom Properties</a></li>\n<li>Custom Properties のメリットとは？</li>\n<li>Web Component との関連</li>\n<li>この先、SassやSCSSはこの先どうなっていく？</li>\n<li><a href=\"https://www.w3.org/TR/css-nesting-1/\">CSS Nesting Module</a></li>\n<li>CSS Animation / Transition の進化</li>\n<li>JSでアニメーション実装をすると、何が難しいのか？</li>\n<li><a href=\"https://developer.apple.com/design/human-interface-guidelines/\">Apple Interface Guideline</a></li>\n<li>アニメーションの使い時はいつか？</li>\n<li>アニメーション習いたてで使いたくなっちゃう問題</li>\n<li>Animation と SVG との組み合わせが便利</li>\n<li>CSS の仕様を、どうやって追っかけているか？</li>\n<li><a href=\"https://web.dev/\">web.dev</a></li>\n<li>チームでフロントエンド情報をどうやって学習しているか？</li>\n<li>CSS設計をどうやって決めている？</li>\n<li>Shadow DOM と スコープ</li>\n<li>実際のプロダクト開発では何を使っている？</li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/@layer\">CSS Layer</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/:has\">:has() 疑似クラス</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/Guide/Houdini\">CSS Houdini</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide\">Painting API</a></li>\n<li><a href=\"https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md\">Layout API</a></li>\n<li>採用: <a href=\"https://herp.careers/v1/stockmark\">ストックマーク社 エンジニア募集中</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "72. 2022年のフロントエンド開発、特にCSS事情 w/ tsukkee",
      "itunes:episodeType": "full",
      "podcast:episode": 73
    },
    {
      "title": "71. アジャイルソフトウェア開発と統計的品質管理 w/ sakata_akinori",
      "link": "https://fukabori.fm/episode/71",
      "description": "<p>sakata_akinori さんに &quot;アジャイル開発は品質が悪い&quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。</p>\n<ul>\n<li><a href=\"https://www.slideshare.net/sakataakinori/jasst-tokyo-2022\">JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用</a></li>\n<li>書籍: <a href=\"https://amzn.to/3uKDSzf\">エクストリームプログラミング</a></li>\n<li>「アジャイル開発は品質が悪い？」という風評・言説</li>\n<li>この言説はどこからやってきたのか？なぜ生まれたのか？</li>\n<li>ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール</li>\n<li>コードの複雑性をマネジメントできない状態</li>\n<li>マネジメントプロセスの原因はどこにあるのか？</li>\n<li>絶対イヤだ or 偉くなる</li>\n<li>バグ密度曲線などの指標は、どこからきて、何がしたかったのか？</li>\n<li>品質指標は、いつもと同じかどうかを見ていただけ</li>\n<li>メインフレーム や COBOL</li>\n<li>いつもと同じかどうか、を見るのは過去において意味があったのではないか</li>\n<li>ウォーターフォールのメトリクスはコストに由来しているのではないか</li>\n<li>2022年において、いつもと同じかどうかを見る手法は意味があるのか？</li>\n<li>統計的品質管理の考え方自体は現代でも有効</li>\n<li>アジャイル開発では、何を指標として追えばいいのか？</li>\n<li>スピードに着目したメトリクス</li>\n<li>リードタイム、サイクルタイム</li>\n<li>審議プロセスにおける納得感とは？</li>\n<li>そもそもリスクを小さくしている、ということで納得する</li>\n<li>常に上限値におさまるというのは統計的にありえない</li>\n<li>代用特性とは？ と 温度計での例</li>\n<li>ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB\">狩野モデル</a></li>\n<li>&quot;品質は誰かにとっての価値である&quot; / ワインバーグ</li>\n<li><a href=\"http://www.juse.or.jp/sqip/squbok/index.html\">SQuBOK</a></li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93\">ホーソン実験</a></li>\n<li>魅了的品質をどう高めていくか？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/072_XpTik.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01g0v7hn4hm9fgxtb1h0j8jt7w.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 17 Apr 2022 17:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01g0v7hn4hm9fgxtb1h0j8jt7w.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/7295/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:46:12",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>sakata_akinori さんに &quot;アジャイル開発は品質が悪い&quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。</p>\n<ul>\n<li><a href=\"https://www.slideshare.net/sakataakinori/jasst-tokyo-2022\">JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用</a></li>\n<li>書籍: <a href=\"https://amzn.to/3uKDSzf\">エクストリームプログラミング</a></li>\n<li>「アジャイル開発は品質が悪い？」という風評・言説</li>\n<li>この言説はどこからやってきたのか？なぜ生まれたのか？</li>\n<li>ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール</li>\n<li>コードの複雑性をマネジメントできない状態</li>\n<li>マネジメントプロセスの原因はどこにあるのか？</li>\n<li>絶対イヤだ or 偉くなる</li>\n<li>バグ密度曲線などの指標は、どこからきて、何がしたかったのか？</li>\n<li>品質指標は、いつもと同じかどうかを見ていただけ</li>\n<li>メインフレーム や COBOL</li>\n<li>いつもと同じかどうか、を見るのは過去において意味があったのではないか</li>\n<li>ウォーターフォールのメトリクスはコストに由来しているのではないか</li>\n<li>2022年において、いつもと同じかどうかを見る手法は意味があるのか？</li>\n<li>統計的品質管理の考え方自体は現代でも有効</li>\n<li>アジャイル開発では、何を指標として追えばいいのか？</li>\n<li>スピードに着目したメトリクス</li>\n<li>リードタイム、サイクルタイム</li>\n<li>審議プロセスにおける納得感とは？</li>\n<li>そもそもリスクを小さくしている、ということで納得する</li>\n<li>常に上限値におさまるというのは統計的にありえない</li>\n<li>代用特性とは？ と 温度計での例</li>\n<li>ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB\">狩野モデル</a></li>\n<li>&quot;品質は誰かにとっての価値である&quot; / ワインバーグ</li>\n<li><a href=\"http://www.juse.or.jp/sqip/squbok/index.html\">SQuBOK</a></li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93\">ホーソン実験</a></li>\n<li>魅了的品質をどう高めていくか？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>sakata_akinori さんに &quot;アジャイル開発は品質が悪い&quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。</p>\n<ul>\n<li><a href=\"https://www.slideshare.net/sakataakinori/jasst-tokyo-2022\">JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用</a></li>\n<li>書籍: <a href=\"https://amzn.to/3uKDSzf\">エクストリームプログラミング</a></li>\n<li>「アジャイル開発は品質が悪い？」という風評・言説</li>\n<li>この言説はどこからやってきたのか？なぜ生まれたのか？</li>\n<li>ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール</li>\n<li>コードの複雑性をマネジメントできない状態</li>\n<li>マネジメントプロセスの原因はどこにあるのか？</li>\n<li>絶対イヤだ or 偉くなる</li>\n<li>バグ密度曲線などの指標は、どこからきて、何がしたかったのか？</li>\n<li>品質指標は、いつもと同じかどうかを見ていただけ</li>\n<li>メインフレーム や COBOL</li>\n<li>いつもと同じかどうか、を見るのは過去において意味があったのではないか</li>\n<li>ウォーターフォールのメトリクスはコストに由来しているのではないか</li>\n<li>2022年において、いつもと同じかどうかを見る手法は意味があるのか？</li>\n<li>統計的品質管理の考え方自体は現代でも有効</li>\n<li>アジャイル開発では、何を指標として追えばいいのか？</li>\n<li>スピードに着目したメトリクス</li>\n<li>リードタイム、サイクルタイム</li>\n<li>審議プロセスにおける納得感とは？</li>\n<li>そもそもリスクを小さくしている、ということで納得する</li>\n<li>常に上限値におさまるというのは統計的にありえない</li>\n<li>代用特性とは？ と 温度計での例</li>\n<li>ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB\">狩野モデル</a></li>\n<li>&quot;品質は誰かにとっての価値である&quot; / ワインバーグ</li>\n<li><a href=\"http://www.juse.or.jp/sqip/squbok/index.html\">SQuBOK</a></li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93\">ホーソン実験</a></li>\n<li>魅了的品質をどう高めていくか？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "71. アジャイルソフトウェア開発と統計的品質管理 w/ sakata_akinori",
      "itunes:episodeType": "full",
      "podcast:episode": 72
    },
    {
      "title": "70. チームトポロジー(後編) w/ miholovesq",
      "link": "https://fukabori.fm/episode/70",
      "description": "<p>書籍&quot;チームトポロジー&quot; 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3vLiz1C\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>チーム間のインタラクションの3モードについて</li>\n<li>コラボレーションモードとは？</li>\n<li>XaaSモードとは？</li>\n<li>ファシリテーションモードとは？</li>\n<li>認知負荷を下げるのが重要</li>\n<li>サービス境界をどう設定するかがポイント</li>\n<li>組織設計をするためにエンジニアリング能力が必要</li>\n<li>認知負荷(cognitive load)とは何か？</li>\n<li>チームサイズを認知負荷に合わせて設計する</li>\n<li>ダンバー数</li>\n<li>設計は人を驚かせるべきじゃない</li>\n<li><a href=\"https://amzn.to/3wbEGOX\">Clean Code　アジャイルソフトウェア達人の技</a></li>\n<li>スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事</li>\n<li>モブプログラミング・モブワーク</li>\n<li><a href=\"https://amzn.to/3I9Luip\">Amazon audible</a></li>\n<li>書籍翻訳の裏話</li>\n</ul>\n<h2 id=\"-\">リスナーの皆様へのお願い</h2>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/071_XlkUu.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fy91hzxje6pmfybhb77yyrrp.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 16 Mar 2022 18:39:44 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fy91hzxje6pmfybhb77yyrrp.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/6258/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:19:30",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>書籍&quot;チームトポロジー&quot; 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3vLiz1C\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>チーム間のインタラクションの3モードについて</li>\n<li>コラボレーションモードとは？</li>\n<li>XaaSモードとは？</li>\n<li>ファシリテーションモードとは？</li>\n<li>認知負荷を下げるのが重要</li>\n<li>サービス境界をどう設定するかがポイント</li>\n<li>組織設計をするためにエンジニアリング能力が必要</li>\n<li>認知負荷(cognitive load)とは何か？</li>\n<li>チームサイズを認知負荷に合わせて設計する</li>\n<li>ダンバー数</li>\n<li>設計は人を驚かせるべきじゃない</li>\n<li><a href=\"https://amzn.to/3wbEGOX\">Clean Code　アジャイルソフトウェア達人の技</a></li>\n<li>スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事</li>\n<li>モブプログラミング・モブワーク</li>\n<li><a href=\"https://amzn.to/3I9Luip\">Amazon audible</a></li>\n<li>書籍翻訳の裏話</li>\n</ul>\n<h2 id=\"-\">リスナーの皆様へのお願い</h2>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>書籍&quot;チームトポロジー&quot; 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3vLiz1C\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>チーム間のインタラクションの3モードについて</li>\n<li>コラボレーションモードとは？</li>\n<li>XaaSモードとは？</li>\n<li>ファシリテーションモードとは？</li>\n<li>認知負荷を下げるのが重要</li>\n<li>サービス境界をどう設定するかがポイント</li>\n<li>組織設計をするためにエンジニアリング能力が必要</li>\n<li>認知負荷(cognitive load)とは何か？</li>\n<li>チームサイズを認知負荷に合わせて設計する</li>\n<li>ダンバー数</li>\n<li>設計は人を驚かせるべきじゃない</li>\n<li><a href=\"https://amzn.to/3wbEGOX\">Clean Code　アジャイルソフトウェア達人の技</a></li>\n<li>スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事</li>\n<li>モブプログラミング・モブワーク</li>\n<li><a href=\"https://amzn.to/3I9Luip\">Amazon audible</a></li>\n<li>書籍翻訳の裏話</li>\n</ul>\n<h2 id=\"-\">リスナーの皆様へのお願い</h2>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "70. チームトポロジー(後編) w/ miholovesq",
      "itunes:episodeType": "full",
      "podcast:episode": 71
    },
    {
      "title": "69. チームトポロジー(前編) w/ miholovesq",
      "link": "https://fukabori.fm/episode/69",
      "description": "<p>書籍 &quot;チームトポロジー&quot; 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3vLiz1C\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>書籍: <a href=\"https://amzn.to/35WSi5y\">SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発</a></li>\n<li>チームトポロジーという書籍の概要</li>\n<li>コンウェイの法則とは？</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Conway%27s_law\">wikipedia: Conway&#39;s law</a></li>\n<li>逆コンウェイ戦略とは？</li>\n<li>ソフトウェアを設計するように組織を設計する</li>\n<li>ストリームアラインドチーム とは？</li>\n<li>プラットフォームチーム とは？</li>\n<li>イネイブリングチーム とは？</li>\n<li>コンプリケイテッドサブシステムチーム とは？</li>\n<li>ストリームアラインドチーム と プロダクトチームとの違いは？</li>\n<li>アジャイル開発とチームトポロジーとの関連は？</li>\n<li>書籍: <a href=\"https://amzn.to/3hPVh25\">LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する</a></li>\n<li>現代型マネジメントと人間関係論</li>\n<li>マインドセットがなくてもアジリティを出せるのではないか</li>\n<li><a href=\"https://agilepbl.org/\">Agile PBL祭り 2022</a></li>\n<li><a href=\"https://confengine.com/conferences/agile-pbl-2022/sponsor\">Agile PBL祭り 2022 スポンサー募集中</a></li>\n<li>Agile PBL祭り での最大のアンラーニングとは？</li>\n</ul>\n<h2 id=\"-\">リスナーの皆様へのお願い</h2>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/070_piSrY.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fxhbx2521ymxdyy9qt0n5vv4.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 07 Mar 2022 17:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fxhbx2521ymxdyy9qt0n5vv4.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/5934/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:40:11",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>書籍 &quot;チームトポロジー&quot; 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3vLiz1C\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>書籍: <a href=\"https://amzn.to/35WSi5y\">SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発</a></li>\n<li>チームトポロジーという書籍の概要</li>\n<li>コンウェイの法則とは？</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Conway%27s_law\">wikipedia: Conway&#39;s law</a></li>\n<li>逆コンウェイ戦略とは？</li>\n<li>ソフトウェアを設計するように組織を設計する</li>\n<li>ストリームアラインドチーム とは？</li>\n<li>プラットフォームチーム とは？</li>\n<li>イネイブリングチーム とは？</li>\n<li>コンプリケイテッドサブシステムチーム とは？</li>\n<li>ストリームアラインドチーム と プロダクトチームとの違いは？</li>\n<li>アジャイル開発とチームトポロジーとの関連は？</li>\n<li>書籍: <a href=\"https://amzn.to/3hPVh25\">LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する</a></li>\n<li>現代型マネジメントと人間関係論</li>\n<li>マインドセットがなくてもアジリティを出せるのではないか</li>\n<li><a href=\"https://agilepbl.org/\">Agile PBL祭り 2022</a></li>\n<li><a href=\"https://confengine.com/conferences/agile-pbl-2022/sponsor\">Agile PBL祭り 2022 スポンサー募集中</a></li>\n<li>Agile PBL祭り での最大のアンラーニングとは？</li>\n</ul>\n<h2 id=\"-\">リスナーの皆様へのお願い</h2>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>書籍 &quot;チームトポロジー&quot; 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3vLiz1C\">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>\n<li>書籍: <a href=\"https://amzn.to/35WSi5y\">SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発</a></li>\n<li>チームトポロジーという書籍の概要</li>\n<li>コンウェイの法則とは？</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Conway%27s_law\">wikipedia: Conway&#39;s law</a></li>\n<li>逆コンウェイ戦略とは？</li>\n<li>ソフトウェアを設計するように組織を設計する</li>\n<li>ストリームアラインドチーム とは？</li>\n<li>プラットフォームチーム とは？</li>\n<li>イネイブリングチーム とは？</li>\n<li>コンプリケイテッドサブシステムチーム とは？</li>\n<li>ストリームアラインドチーム と プロダクトチームとの違いは？</li>\n<li>アジャイル開発とチームトポロジーとの関連は？</li>\n<li>書籍: <a href=\"https://amzn.to/3hPVh25\">LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する</a></li>\n<li>現代型マネジメントと人間関係論</li>\n<li>マインドセットがなくてもアジリティを出せるのではないか</li>\n<li><a href=\"https://agilepbl.org/\">Agile PBL祭り 2022</a></li>\n<li><a href=\"https://confengine.com/conferences/agile-pbl-2022/sponsor\">Agile PBL祭り 2022 スポンサー募集中</a></li>\n<li>Agile PBL祭り での最大のアンラーニングとは？</li>\n</ul>\n<h2 id=\"-\">リスナーの皆様へのお願い</h2>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "69. チームトポロジー(前編) w/ miholovesq",
      "itunes:episodeType": "full",
      "podcast:episode": 70
    },
    {
      "title": "68. エンジニアリング組織に溶け込むHRBP w/ yamamuteking",
      "link": "https://fukabori.fm/episode/68",
      "description": "<p>エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>HRBP(Human Resource Business Partner)とは何か？</li>\n<li>HRBPの登場背景とは？</li>\n<li><a href=\"https://amzn.to/3vvLd6O\">ハーバード･ビジネス･レビュー21年12月号 これからの人事</a></li>\n<li>プロダクト開発組織におけるHRBP</li>\n<li>プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成</li>\n<li>人事がプロダクトチームになぜ入る必要があるのか？</li>\n<li>役割1. 採用の加速</li>\n<li>候補者体験を最大化するためのルート整備</li>\n<li>社内のエンジニアに対する深い理解</li>\n<li>役割2. リテンション</li>\n<li>エンジニアでは見落としがちな課題を早めに拾う</li>\n<li>人事がエンジニアの朝会に入って課題設定する</li>\n<li>スクラムマスターに近い振る舞い</li>\n<li>エンジニア オンボーディングでの期待値調整</li>\n<li>役割3. チャレンジマネジメント</li>\n<li>HRBPが深く入るチームの優先度付けは？ </li>\n<li><a href=\"https://open.talentio.com/r/1/c/m3-inc/pages/57566\">m3 HRBP募集ページ</a></li>\n<li>(退職を検知する)人事的センサーとは？</li>\n<li>多様性がチームを強くする</li>\n<li>どうやってHRBPをスケールさせるか？</li>\n<li>スタートアップでHRBPを置くならいつが良いか？</li>\n<li>エンジニアリングマネジメントを「ちゃんと」やる？とは</li>\n<li>エンジニアリングの成果 と 経営 を接続する</li>\n<li><a href=\"https://corporate.m3.com/recruit/\">m3 採用情報ページ</a></li>\n</ul>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！</a></p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/069_gAVbY.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fx3ykazqdc801pzygcn2k6sh.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 02 Mar 2022 09:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fx3ykazqdc801pzygcn2k6sh.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/5809/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:39:32",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>HRBP(Human Resource Business Partner)とは何か？</li>\n<li>HRBPの登場背景とは？</li>\n<li><a href=\"https://amzn.to/3vvLd6O\">ハーバード･ビジネス･レビュー21年12月号 これからの人事</a></li>\n<li>プロダクト開発組織におけるHRBP</li>\n<li>プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成</li>\n<li>人事がプロダクトチームになぜ入る必要があるのか？</li>\n<li>役割1. 採用の加速</li>\n<li>候補者体験を最大化するためのルート整備</li>\n<li>社内のエンジニアに対する深い理解</li>\n<li>役割2. リテンション</li>\n<li>エンジニアでは見落としがちな課題を早めに拾う</li>\n<li>人事がエンジニアの朝会に入って課題設定する</li>\n<li>スクラムマスターに近い振る舞い</li>\n<li>エンジニア オンボーディングでの期待値調整</li>\n<li>役割3. チャレンジマネジメント</li>\n<li>HRBPが深く入るチームの優先度付けは？ </li>\n<li><a href=\"https://open.talentio.com/r/1/c/m3-inc/pages/57566\">m3 HRBP募集ページ</a></li>\n<li>(退職を検知する)人事的センサーとは？</li>\n<li>多様性がチームを強くする</li>\n<li>どうやってHRBPをスケールさせるか？</li>\n<li>スタートアップでHRBPを置くならいつが良いか？</li>\n<li>エンジニアリングマネジメントを「ちゃんと」やる？とは</li>\n<li>エンジニアリングの成果 と 経営 を接続する</li>\n<li><a href=\"https://corporate.m3.com/recruit/\">m3 採用情報ページ</a></li>\n</ul>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！</a></p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>HRBP(Human Resource Business Partner)とは何か？</li>\n<li>HRBPの登場背景とは？</li>\n<li><a href=\"https://amzn.to/3vvLd6O\">ハーバード･ビジネス･レビュー21年12月号 これからの人事</a></li>\n<li>プロダクト開発組織におけるHRBP</li>\n<li>プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成</li>\n<li>人事がプロダクトチームになぜ入る必要があるのか？</li>\n<li>役割1. 採用の加速</li>\n<li>候補者体験を最大化するためのルート整備</li>\n<li>社内のエンジニアに対する深い理解</li>\n<li>役割2. リテンション</li>\n<li>エンジニアでは見落としがちな課題を早めに拾う</li>\n<li>人事がエンジニアの朝会に入って課題設定する</li>\n<li>スクラムマスターに近い振る舞い</li>\n<li>エンジニア オンボーディングでの期待値調整</li>\n<li>役割3. チャレンジマネジメント</li>\n<li>HRBPが深く入るチームの優先度付けは？ </li>\n<li><a href=\"https://open.talentio.com/r/1/c/m3-inc/pages/57566\">m3 HRBP募集ページ</a></li>\n<li>(退職を検知する)人事的センサーとは？</li>\n<li>多様性がチームを強くする</li>\n<li>どうやってHRBPをスケールさせるか？</li>\n<li>スタートアップでHRBPを置くならいつが良いか？</li>\n<li>エンジニアリングマネジメントを「ちゃんと」やる？とは</li>\n<li>エンジニアリングの成果 と 経営 を接続する</li>\n<li><a href=\"https://corporate.m3.com/recruit/\">m3 採用情報ページ</a></li>\n</ul>\n<p><a href=\"https://pitpa.cc/3pfSweB\">fukabori.fm リスナーアンケートを実施中です！</a></p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "68. エンジニアリング組織に溶け込むHRBP w/ yamamuteking",
      "itunes:episodeType": "full",
      "podcast:episode": 69
    },
    {
      "title": "67. 命名規則 と heyのエンジニア組織 w/ ffu_",
      "link": "https://fukabori.fm/episode/67",
      "description": "<p>hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>プログラミングにおける命名規則になぜこだわるのか？</li>\n<li>名前のないプログラミング言語</li>\n<li><a href=\"https://amzn.to/3gaeuLm\">WEB+DB PRESS Vol.110</a> もしくは <a href=\"https://amzn.to/3Gew23g\">WEB+DB PRESS総集編[Vol.1~120] </a></li>\n<li><a href=\"https://speakerdeck.com/fujimura/ru-men-ming-qian\">入門 名前</a></li>\n<li>命名規則における「良い」とは何か？</li>\n<li><a href=\"https://amzn.to/3AGEA1Y\">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>\n<li>名前の意味と挙動が一致していること</li>\n<li>parse という関数命名における例</li>\n<li>primary と primal</li>\n<li>全体の名前のルーツになる命名は丁寧につける</li>\n<li>日本語を、命名規則に使うのはどうか？</li>\n<li>関数・変数名を短くすべきか？長くすべきか？</li>\n<li><a href=\"https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names\">Clarity over brevity in variable and method names</a></li>\n<li>Haskell での命名</li>\n<li>紛らわしい動詞をやめる、例: check()</li>\n<li>値を返すのか、副作用があるのか分からない</li>\n<li>Ruby の predicate メソッド</li>\n<li>hey のプロダクト開発組織デザインとは？</li>\n<li>横断チームとプロダクトチームを作り分ける判断基準は？</li>\n<li>チーム・組織が遠くなると、話にいくハードルが上がらないか？</li>\n<li>オンラインで話しかけやすいようにするための工夫は？</li>\n<li>全社ミーティングでの愛のあるいじり</li>\n<li>CTO本部って何をしている？どの課題を解こうとしている？</li>\n<li>エンジニア組織のマネジメントをチームで進める</li>\n<li>得意な人・知見がある人がファイナルアンサーを持っている</li>\n<li>権限委譲をどのように進めているか？</li>\n<li>8象限 と <a href=\"https://ja.wikipedia.org/wiki/RACI%E5%9B%B3\">RACI</a></li>\n<li><a href=\"https://nuworks.jp/ja/product/del-poker/\">デリゲーションポーカー</a></li>\n<li>heyの評価制度は？</li>\n<li>heyのエンジニア採用戦略は？</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0\">ABM</a></li>\n<li>採用でやらないと決めていることは？</li>\n<li><a href=\"https://pitpa.cc/33R7S1X\">採用サイト</a></li>\n<li><a href=\"https://pitpa.cc/3AH6ElW\">hey BOOK for Engineers</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<p><a href=\"https://www.hey.jp/company\">ヘイ株式会社</a></p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/068_fZPbk.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01ftm6mdzbpm6ykzbvk1whn7p9.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 31 Jan 2022 06:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01ftm6mdzbpm6ykzbvk1whn7p9.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/5208/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:43:35",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>プログラミングにおける命名規則になぜこだわるのか？</li>\n<li>名前のないプログラミング言語</li>\n<li><a href=\"https://amzn.to/3gaeuLm\">WEB+DB PRESS Vol.110</a> もしくは <a href=\"https://amzn.to/3Gew23g\">WEB+DB PRESS総集編[Vol.1~120] </a></li>\n<li><a href=\"https://speakerdeck.com/fujimura/ru-men-ming-qian\">入門 名前</a></li>\n<li>命名規則における「良い」とは何か？</li>\n<li><a href=\"https://amzn.to/3AGEA1Y\">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>\n<li>名前の意味と挙動が一致していること</li>\n<li>parse という関数命名における例</li>\n<li>primary と primal</li>\n<li>全体の名前のルーツになる命名は丁寧につける</li>\n<li>日本語を、命名規則に使うのはどうか？</li>\n<li>関数・変数名を短くすべきか？長くすべきか？</li>\n<li><a href=\"https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names\">Clarity over brevity in variable and method names</a></li>\n<li>Haskell での命名</li>\n<li>紛らわしい動詞をやめる、例: check()</li>\n<li>値を返すのか、副作用があるのか分からない</li>\n<li>Ruby の predicate メソッド</li>\n<li>hey のプロダクト開発組織デザインとは？</li>\n<li>横断チームとプロダクトチームを作り分ける判断基準は？</li>\n<li>チーム・組織が遠くなると、話にいくハードルが上がらないか？</li>\n<li>オンラインで話しかけやすいようにするための工夫は？</li>\n<li>全社ミーティングでの愛のあるいじり</li>\n<li>CTO本部って何をしている？どの課題を解こうとしている？</li>\n<li>エンジニア組織のマネジメントをチームで進める</li>\n<li>得意な人・知見がある人がファイナルアンサーを持っている</li>\n<li>権限委譲をどのように進めているか？</li>\n<li>8象限 と <a href=\"https://ja.wikipedia.org/wiki/RACI%E5%9B%B3\">RACI</a></li>\n<li><a href=\"https://nuworks.jp/ja/product/del-poker/\">デリゲーションポーカー</a></li>\n<li>heyの評価制度は？</li>\n<li>heyのエンジニア採用戦略は？</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0\">ABM</a></li>\n<li>採用でやらないと決めていることは？</li>\n<li><a href=\"https://pitpa.cc/33R7S1X\">採用サイト</a></li>\n<li><a href=\"https://pitpa.cc/3AH6ElW\">hey BOOK for Engineers</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<p><a href=\"https://www.hey.jp/company\">ヘイ株式会社</a></p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>プログラミングにおける命名規則になぜこだわるのか？</li>\n<li>名前のないプログラミング言語</li>\n<li><a href=\"https://amzn.to/3gaeuLm\">WEB+DB PRESS Vol.110</a> もしくは <a href=\"https://amzn.to/3Gew23g\">WEB+DB PRESS総集編[Vol.1~120] </a></li>\n<li><a href=\"https://speakerdeck.com/fujimura/ru-men-ming-qian\">入門 名前</a></li>\n<li>命名規則における「良い」とは何か？</li>\n<li><a href=\"https://amzn.to/3AGEA1Y\">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>\n<li>名前の意味と挙動が一致していること</li>\n<li>parse という関数命名における例</li>\n<li>primary と primal</li>\n<li>全体の名前のルーツになる命名は丁寧につける</li>\n<li>日本語を、命名規則に使うのはどうか？</li>\n<li>関数・変数名を短くすべきか？長くすべきか？</li>\n<li><a href=\"https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names\">Clarity over brevity in variable and method names</a></li>\n<li>Haskell での命名</li>\n<li>紛らわしい動詞をやめる、例: check()</li>\n<li>値を返すのか、副作用があるのか分からない</li>\n<li>Ruby の predicate メソッド</li>\n<li>hey のプロダクト開発組織デザインとは？</li>\n<li>横断チームとプロダクトチームを作り分ける判断基準は？</li>\n<li>チーム・組織が遠くなると、話にいくハードルが上がらないか？</li>\n<li>オンラインで話しかけやすいようにするための工夫は？</li>\n<li>全社ミーティングでの愛のあるいじり</li>\n<li>CTO本部って何をしている？どの課題を解こうとしている？</li>\n<li>エンジニア組織のマネジメントをチームで進める</li>\n<li>得意な人・知見がある人がファイナルアンサーを持っている</li>\n<li>権限委譲をどのように進めているか？</li>\n<li>8象限 と <a href=\"https://ja.wikipedia.org/wiki/RACI%E5%9B%B3\">RACI</a></li>\n<li><a href=\"https://nuworks.jp/ja/product/del-poker/\">デリゲーションポーカー</a></li>\n<li>heyの評価制度は？</li>\n<li>heyのエンジニア採用戦略は？</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0\">ABM</a></li>\n<li>採用でやらないと決めていることは？</li>\n<li><a href=\"https://pitpa.cc/33R7S1X\">採用サイト</a></li>\n<li><a href=\"https://pitpa.cc/3AH6ElW\">hey BOOK for Engineers</a></li>\n</ul>\n<h2 id=\"-\">エピソード提供スポンサー</h2>\n<p><a href=\"https://www.hey.jp/company\">ヘイ株式会社</a></p>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "67. 命名規則 と heyのエンジニア組織 w/ ffu_",
      "itunes:episodeType": "full",
      "podcast:episode": 68
    },
    {
      "title": "66. 問いかけの作法(後編) w/ YukiAnzai",
      "link": "https://fukabori.fm/episode/66",
      "description": "<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3GbSLxV\">問いかけの作法:チームの魅力と才能を引き出す技術</a></li>\n<li>問いを引き出す基本定石とは？</li>\n<li>上司が至らなさに光を当ててしまう</li>\n<li>問いかけは相手の意見・個性を引き出すために使う</li>\n<li>いたらなさになぜ、スポットライトをあててしまうのか？</li>\n<li>「何か良いアイデアはありますか？なんでもよいので」</li>\n<li>「これまでのボツネタのなかでもったいない、と思うものはありましたか？」</li>\n<li>質問のスポットライトの良い角度をどのように探すか？</li>\n<li>同じものをみているふりして違う意味で使っている</li>\n<li>定義されていない言葉は とらわれ の可能性が高い</li>\n<li>理念を良い意味で各現場が解釈していく</li>\n<li>現場の理念のすれ違いをどうやって、すり合わせしていくのか？</li>\n<li>パラフレーズという問いかけのパターン</li>\n<li>ブレストのアイデアをどのように収束させるか？</li>\n<li>アイデアの決め方を事前に合意しておく</li>\n<li>多数決と多様決</li>\n<li>組織の創造性を引き出すエンジニアリングとは</li>\n<li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">MIMIGURI 採用・求人</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/067_HVpBI.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fseqen7wbxn7778066ry8f22.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 17 Jan 2022 06:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fseqen7wbxn7778066ry8f22.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/5049/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:19:39",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3GbSLxV\">問いかけの作法:チームの魅力と才能を引き出す技術</a></li>\n<li>問いを引き出す基本定石とは？</li>\n<li>上司が至らなさに光を当ててしまう</li>\n<li>問いかけは相手の意見・個性を引き出すために使う</li>\n<li>いたらなさになぜ、スポットライトをあててしまうのか？</li>\n<li>「何か良いアイデアはありますか？なんでもよいので」</li>\n<li>「これまでのボツネタのなかでもったいない、と思うものはありましたか？」</li>\n<li>質問のスポットライトの良い角度をどのように探すか？</li>\n<li>同じものをみているふりして違う意味で使っている</li>\n<li>定義されていない言葉は とらわれ の可能性が高い</li>\n<li>理念を良い意味で各現場が解釈していく</li>\n<li>現場の理念のすれ違いをどうやって、すり合わせしていくのか？</li>\n<li>パラフレーズという問いかけのパターン</li>\n<li>ブレストのアイデアをどのように収束させるか？</li>\n<li>アイデアの決め方を事前に合意しておく</li>\n<li>多数決と多様決</li>\n<li>組織の創造性を引き出すエンジニアリングとは</li>\n<li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">MIMIGURI 採用・求人</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3GbSLxV\">問いかけの作法:チームの魅力と才能を引き出す技術</a></li>\n<li>問いを引き出す基本定石とは？</li>\n<li>上司が至らなさに光を当ててしまう</li>\n<li>問いかけは相手の意見・個性を引き出すために使う</li>\n<li>いたらなさになぜ、スポットライトをあててしまうのか？</li>\n<li>「何か良いアイデアはありますか？なんでもよいので」</li>\n<li>「これまでのボツネタのなかでもったいない、と思うものはありましたか？」</li>\n<li>質問のスポットライトの良い角度をどのように探すか？</li>\n<li>同じものをみているふりして違う意味で使っている</li>\n<li>定義されていない言葉は とらわれ の可能性が高い</li>\n<li>理念を良い意味で各現場が解釈していく</li>\n<li>現場の理念のすれ違いをどうやって、すり合わせしていくのか？</li>\n<li>パラフレーズという問いかけのパターン</li>\n<li>ブレストのアイデアをどのように収束させるか？</li>\n<li>アイデアの決め方を事前に合意しておく</li>\n<li>多数決と多様決</li>\n<li>組織の創造性を引き出すエンジニアリングとは</li>\n<li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">MIMIGURI 採用・求人</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "66. 問いかけの作法(後編) w/ YukiAnzai",
      "itunes:episodeType": "full",
      "podcast:episode": 67
    },
    {
      "title": "65. 問いかけの作法(前編) w/ YukiAnzai",
      "link": "https://fukabori.fm/episode/65",
      "description": "<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、&quot;問いかけの作法&quot;の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3GbSLxV\">問いかけの作法:チームの魅力と才能を引き出す技術</a></li>\n<li>&quot;問いかけの作法&quot; の概要について</li>\n<li>書籍: <a href=\"https://amzn.to/3t9e6o5\">問いのデザイン: 創造的対話のファシリテーション</a></li>\n<li>書籍: <a href=\"https://amzn.to/3zQ9u7G\">リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する</a></li>\n<li>前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？</li>\n<li>両利きの経営とサクセストラップ</li>\n<li>孤軍奮闘の悪循環 とは？</li>\n<li>誰も意見を言ってくれないお通夜のようなミーティング</li>\n<li>孤軍奮闘の悪循環は、どのような起点で生まれてくる？</li>\n<li>学校の先生にファシリテーションの方法を伝えると、教育効果が悪い</li>\n<li>ファシリテーションで、介入するタイミングは？</li>\n<li>相手の思考のステータスを観察する・見立てる</li>\n<li>オンラインで観察するコツ・工夫は？</li>\n<li>コミュニケーションのチャネルを複数にしておく</li>\n<li>ハードルが低い方から段階的にアウトプットしてもらう</li>\n<li><a href=\"https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html\">【エッセイ】どうして日本人は質問しなくなるのか</a></li>\n<li>意見・質問を出せる環境を作っていくのが大事</li>\n<li>「問いかけの作法」で言及される4つの現代病とは？</li>\n<li>認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化</li>\n<li>関係性が固定されている状況では、非常に意見が言いにくい</li>\n<li>のび太がこんなに優秀なはずがない</li>\n<li>3人のレンガ職人のメタファーにおける1人目の凄さ</li>\n<li>現代病に対して、我々はどう振る舞っていくべきなのか？</li>\n<li>「うちの会社って、伝統があるのでリセットできないんですよ」</li>\n<li>固定観念は、昨日までの強力な武器である</li>\n<li>こだわりと、とらわれの二項対立を往復する</li>\n<li>知の探索と知の深化との両方をやり続ける大変さ</li>\n<li>構造的に分担するアプローチ と 文脈的両利きのアプローチ</li>\n<li>個人で探索と深化のループを回すにはどうしたらいいか？</li>\n<li>評価制度と連動させるのが重要</li>\n<li>MIMIGURIにおける制度での連動例</li>\n<li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">MIMIGURI 採用・求人</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/066_TlYxi.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fs28mw8cyv2kh4bvrnar79wg.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 11 Jan 2022 06:21:38 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fs28mw8cyv2kh4bvrnar79wg.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4992/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:44:25",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、&quot;問いかけの作法&quot;の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3GbSLxV\">問いかけの作法:チームの魅力と才能を引き出す技術</a></li>\n<li>&quot;問いかけの作法&quot; の概要について</li>\n<li>書籍: <a href=\"https://amzn.to/3t9e6o5\">問いのデザイン: 創造的対話のファシリテーション</a></li>\n<li>書籍: <a href=\"https://amzn.to/3zQ9u7G\">リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する</a></li>\n<li>前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？</li>\n<li>両利きの経営とサクセストラップ</li>\n<li>孤軍奮闘の悪循環 とは？</li>\n<li>誰も意見を言ってくれないお通夜のようなミーティング</li>\n<li>孤軍奮闘の悪循環は、どのような起点で生まれてくる？</li>\n<li>学校の先生にファシリテーションの方法を伝えると、教育効果が悪い</li>\n<li>ファシリテーションで、介入するタイミングは？</li>\n<li>相手の思考のステータスを観察する・見立てる</li>\n<li>オンラインで観察するコツ・工夫は？</li>\n<li>コミュニケーションのチャネルを複数にしておく</li>\n<li>ハードルが低い方から段階的にアウトプットしてもらう</li>\n<li><a href=\"https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html\">【エッセイ】どうして日本人は質問しなくなるのか</a></li>\n<li>意見・質問を出せる環境を作っていくのが大事</li>\n<li>「問いかけの作法」で言及される4つの現代病とは？</li>\n<li>認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化</li>\n<li>関係性が固定されている状況では、非常に意見が言いにくい</li>\n<li>のび太がこんなに優秀なはずがない</li>\n<li>3人のレンガ職人のメタファーにおける1人目の凄さ</li>\n<li>現代病に対して、我々はどう振る舞っていくべきなのか？</li>\n<li>「うちの会社って、伝統があるのでリセットできないんですよ」</li>\n<li>固定観念は、昨日までの強力な武器である</li>\n<li>こだわりと、とらわれの二項対立を往復する</li>\n<li>知の探索と知の深化との両方をやり続ける大変さ</li>\n<li>構造的に分担するアプローチ と 文脈的両利きのアプローチ</li>\n<li>個人で探索と深化のループを回すにはどうしたらいいか？</li>\n<li>評価制度と連動させるのが重要</li>\n<li>MIMIGURIにおける制度での連動例</li>\n<li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">MIMIGURI 採用・求人</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、&quot;問いかけの作法&quot;の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。</p>\n<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3GbSLxV\">問いかけの作法:チームの魅力と才能を引き出す技術</a></li>\n<li>&quot;問いかけの作法&quot; の概要について</li>\n<li>書籍: <a href=\"https://amzn.to/3t9e6o5\">問いのデザイン: 創造的対話のファシリテーション</a></li>\n<li>書籍: <a href=\"https://amzn.to/3zQ9u7G\">リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する</a></li>\n<li>前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？</li>\n<li>両利きの経営とサクセストラップ</li>\n<li>孤軍奮闘の悪循環 とは？</li>\n<li>誰も意見を言ってくれないお通夜のようなミーティング</li>\n<li>孤軍奮闘の悪循環は、どのような起点で生まれてくる？</li>\n<li>学校の先生にファシリテーションの方法を伝えると、教育効果が悪い</li>\n<li>ファシリテーションで、介入するタイミングは？</li>\n<li>相手の思考のステータスを観察する・見立てる</li>\n<li>オンラインで観察するコツ・工夫は？</li>\n<li>コミュニケーションのチャネルを複数にしておく</li>\n<li>ハードルが低い方から段階的にアウトプットしてもらう</li>\n<li><a href=\"https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html\">【エッセイ】どうして日本人は質問しなくなるのか</a></li>\n<li>意見・質問を出せる環境を作っていくのが大事</li>\n<li>「問いかけの作法」で言及される4つの現代病とは？</li>\n<li>認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化</li>\n<li>関係性が固定されている状況では、非常に意見が言いにくい</li>\n<li>のび太がこんなに優秀なはずがない</li>\n<li>3人のレンガ職人のメタファーにおける1人目の凄さ</li>\n<li>現代病に対して、我々はどう振る舞っていくべきなのか？</li>\n<li>「うちの会社って、伝統があるのでリセットできないんですよ」</li>\n<li>固定観念は、昨日までの強力な武器である</li>\n<li>こだわりと、とらわれの二項対立を往復する</li>\n<li>知の探索と知の深化との両方をやり続ける大変さ</li>\n<li>構造的に分担するアプローチ と 文脈的両利きのアプローチ</li>\n<li>個人で探索と深化のループを回すにはどうしたらいいか？</li>\n<li>評価制度と連動させるのが重要</li>\n<li>MIMIGURIにおける制度での連動例</li>\n<li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">MIMIGURI 採用・求人</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "65. 問いかけの作法(前編) w/ YukiAnzai",
      "itunes:episodeType": "full",
      "podcast:episode": 66
    },
    {
      "title": "64. ロボット x スキル w/ nakakura, kmat",
      "link": "https://fukabori.fm/episode/64",
      "description": "<p>前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。</p>\n<ul>\n<li>ROSとは何か？</li>\n<li>ロボット x スキル</li>\n<li><a href=\"https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing\">AIが判断してロボットを動かしている動画</a></li>\n<li>ロボットの身体構造におけるネックとは</li>\n<li>ロボット業界における車輪の再発明</li>\n<li>強化学習とニューラルネットの応用</li>\n<li>ROS上で動作するロボットが持つ身体構造情報の活用</li>\n<li>ロボットの動作を作り込むときの苦労とは？何が大変なのか？</li>\n<li>最も大変なのは、ロボット周辺の環境が変化すること</li>\n<li>シーケンス的作業の実装</li>\n<li>ドアを開ける場合の実装例</li>\n<li>ロボットプログラミングに対するテストはめちゃめちゃ大変？</li>\n<li>テストのフィードバックサイクル</li>\n<li>物理シミュレータの利用</li>\n<li>ハードウェアの劣化・故障</li>\n<li><a href=\"https://www.ntt.com/about-us/recruit/event/event01.html\">インターンシップ募集中</a></li>\n<li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0011314\">中途採用も募集中</a></li>\n<li>チームを一言で表現すると？</li>\n<li>プロフェッショナル集団</li>\n<li>攻殻機動隊 - Stand Alone Complex</li>\n<li><a href=\"https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener\">第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/065_KPHCL.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01frgwwv9p48pwhqa8q70cb7aw.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 04 Jan 2022 06:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01frgwwv9p48pwhqa8q70cb7aw.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4929/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:20:39",
      "itunes:explicit": "no",
      "itunes:subtitle": "<p>前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。</p>\n<ul>\n<li>ROSとは何か？</li>\n<li>ロボット x スキル</li>\n<li><a href=\"https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing\">AIが判断してロボットを動かしている動画</a></li>\n<li>ロボットの身体構造におけるネックとは</li>\n<li>ロボット業界における車輪の再発明</li>\n<li>強化学習とニューラルネットの応用</li>\n<li>ROS上で動作するロボットが持つ身体構造情報の活用</li>\n<li>ロボットの動作を作り込むときの苦労とは？何が大変なのか？</li>\n<li>最も大変なのは、ロボット周辺の環境が変化すること</li>\n<li>シーケンス的作業の実装</li>\n<li>ドアを開ける場合の実装例</li>\n<li>ロボットプログラミングに対するテストはめちゃめちゃ大変？</li>\n<li>テストのフィードバックサイクル</li>\n<li>物理シミュレータの利用</li>\n<li>ハードウェアの劣化・故障</li>\n<li><a href=\"https://www.ntt.com/about-us/recruit/event/event01.html\">インターンシップ募集中</a></li>\n<li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0011314\">中途採用も募集中</a></li>\n<li>チームを一言で表現すると？</li>\n<li>プロフェッショナル集団</li>\n<li>攻殻機動隊 - Stand Alone Complex</li>\n<li><a href=\"https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener\">第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<p>前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。</p>\n<ul>\n<li>ROSとは何か？</li>\n<li>ロボット x スキル</li>\n<li><a href=\"https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing\">AIが判断してロボットを動かしている動画</a></li>\n<li>ロボットの身体構造におけるネックとは</li>\n<li>ロボット業界における車輪の再発明</li>\n<li>強化学習とニューラルネットの応用</li>\n<li>ROS上で動作するロボットが持つ身体構造情報の活用</li>\n<li>ロボットの動作を作り込むときの苦労とは？何が大変なのか？</li>\n<li>最も大変なのは、ロボット周辺の環境が変化すること</li>\n<li>シーケンス的作業の実装</li>\n<li>ドアを開ける場合の実装例</li>\n<li>ロボットプログラミングに対するテストはめちゃめちゃ大変？</li>\n<li>テストのフィードバックサイクル</li>\n<li>物理シミュレータの利用</li>\n<li>ハードウェアの劣化・故障</li>\n<li><a href=\"https://www.ntt.com/about-us/recruit/event/event01.html\">インターンシップ募集中</a></li>\n<li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0011314\">中途採用も募集中</a></li>\n<li>チームを一言で表現すると？</li>\n<li>プロフェッショナル集団</li>\n<li>攻殻機動隊 - Stand Alone Complex</li>\n<li><a href=\"https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener\">第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "64. ロボット x スキル w/ nakakura, kmat",
      "itunes:episodeType": "full",
      "podcast:episode": 65
    },
    {
      "title": "63. テレプレゼンス・ロボット・最後にRust w/ nakakura, kmat",
      "link": "https://fukabori.fm/episode/63",
      "description": "<ul>\n<li>テレプレゼンスとは？</li>\n<li><a href=\"https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view\">参考: テレプレゼンスのイメージがわかる動画</a></li>\n<li>攻殻機動隊の義体</li>\n<li>学術的にはいつから？</li>\n<li>何回かあるVR元年</li>\n<li>テレプレゼンスが解決しようとしている課題とは？</li>\n<li>VR酔い</li>\n<li>HMD(Head Mounted Display)</li>\n<li>テレプレゼンスとメタバースとの関連は？</li>\n<li>メタバースが現実を侵食する</li>\n<li>現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス</li>\n<li>テレプレゼンスにおける技術的課題とビジネス的課題</li>\n<li>ロボット費に比べて人件費が安すぎる問題</li>\n<li>データセンターにおけるロボット利用のユースケース</li>\n<li>ヒューマノイドはなぜ人型である必要があるのか？</li>\n<li>脳に直結したときには、人間に近い形じゃないと動かせない</li>\n<li>ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？</li>\n<li>遅延、パケットロス、ジッター(jitter)</li>\n<li>Zoom飲みで友達の猫を触りたい</li>\n<li>触原色</li>\n<li><a href=\"https://www.w3.org/wiki/TPAC/2021\">W3C TPAC</a></li>\n<li>テレプレゼンスビジネスの活性に必要な通信エンジンの開発</li>\n<li>WebRTCを拡張した通信エンジン提供</li>\n<li><a href=\"https://janus.conf.meetecho.com/\">Janus</a></li>\n<li>Rustはロボット開発でメリットがある</li>\n<li><a href=\"https://www.ntt.com/about-us/recruit/event/event01.html\">インターンシップ募集中</a></li>\n<li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0011314\">中途採用も募集中</a></li>\n<li>参考動画<ul>\n<li><a href=\"https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing\">XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー</a></li>\n<li><a href=\"https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing\">遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)</a> </li>\n</ul>\n</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/064_reshT.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fqw8ptggfc4rhwhp3k1jhe0q.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 27 Dec 2021 10:01:24 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fqw8ptggfc4rhwhp3k1jhe0q.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4871/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:37:59",
      "itunes:explicit": "no",
      "itunes:subtitle": "<ul>\n<li>テレプレゼンスとは？</li>\n<li><a href=\"https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view\">参考: テレプレゼンスのイメージがわかる動画</a></li>\n<li>攻殻機動隊の義体</li>\n<li>学術的にはいつから？</li>\n<li>何回かあるVR元年</li>\n<li>テレプレゼンスが解決しようとしている課題とは？</li>\n<li>VR酔い</li>\n<li>HMD(Head Mounted Display)</li>\n<li>テレプレゼンスとメタバースとの関連は？</li>\n<li>メタバースが現実を侵食する</li>\n<li>現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス</li>\n<li>テレプレゼンスにおける技術的課題とビジネス的課題</li>\n<li>ロボット費に比べて人件費が安すぎる問題</li>\n<li>データセンターにおけるロボット利用のユースケース</li>\n<li>ヒューマノイドはなぜ人型である必要があるのか？</li>\n<li>脳に直結したときには、人間に近い形じゃないと動かせない</li>\n<li>ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？</li>\n<li>遅延、パケットロス、ジッター(jitter)</li>\n<li>Zoom飲みで友達の猫を触りたい</li>\n<li>触原色</li>\n<li><a href=\"https://www.w3.org/wiki/TPAC/2021\">W3C TPAC</a></li>\n<li>テレプレゼンスビジネスの活性に必要な通信エンジンの開発</li>\n<li>WebRTCを拡張した通信エンジン提供</li>\n<li><a href=\"https://janus.conf.meetecho.com/\">Janus</a></li>\n<li>Rustはロボット開発でメリットがある</li>\n<li><a href=\"https://www.ntt.com/about-us/recruit/event/event01.html\">インターンシップ募集中</a></li>\n<li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0011314\">中途採用も募集中</a></li>\n<li>参考動画<ul>\n<li><a href=\"https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing\">XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー</a></li>\n<li><a href=\"https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing\">遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)</a> </li>\n</ul>\n</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<ul>\n<li>テレプレゼンスとは？</li>\n<li><a href=\"https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view\">参考: テレプレゼンスのイメージがわかる動画</a></li>\n<li>攻殻機動隊の義体</li>\n<li>学術的にはいつから？</li>\n<li>何回かあるVR元年</li>\n<li>テレプレゼンスが解決しようとしている課題とは？</li>\n<li>VR酔い</li>\n<li>HMD(Head Mounted Display)</li>\n<li>テレプレゼンスとメタバースとの関連は？</li>\n<li>メタバースが現実を侵食する</li>\n<li>現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス</li>\n<li>テレプレゼンスにおける技術的課題とビジネス的課題</li>\n<li>ロボット費に比べて人件費が安すぎる問題</li>\n<li>データセンターにおけるロボット利用のユースケース</li>\n<li>ヒューマノイドはなぜ人型である必要があるのか？</li>\n<li>脳に直結したときには、人間に近い形じゃないと動かせない</li>\n<li>ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？</li>\n<li>遅延、パケットロス、ジッター(jitter)</li>\n<li>Zoom飲みで友達の猫を触りたい</li>\n<li>触原色</li>\n<li><a href=\"https://www.w3.org/wiki/TPAC/2021\">W3C TPAC</a></li>\n<li>テレプレゼンスビジネスの活性に必要な通信エンジンの開発</li>\n<li>WebRTCを拡張した通信エンジン提供</li>\n<li><a href=\"https://janus.conf.meetecho.com/\">Janus</a></li>\n<li>Rustはロボット開発でメリットがある</li>\n<li><a href=\"https://www.ntt.com/about-us/recruit/event/event01.html\">インターンシップ募集中</a></li>\n<li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0011314\">中途採用も募集中</a></li>\n<li>参考動画<ul>\n<li><a href=\"https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing\">XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー</a></li>\n<li><a href=\"https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing\">遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)</a> </li>\n</ul>\n</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "63. テレプレゼンス・ロボット・最後にRust w/ nakakura, kmat",
      "itunes:episodeType": "full",
      "podcast:episode": 64
    },
    {
      "title": "62. プロダクト・レッド・オーガニゼーション w/ ykmc09",
      "link": "https://fukabori.fm/episode/62",
      "description": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3yF5juO\">プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築</a></li>\n<li>プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？</li>\n<li>書籍: <a href=\"https://amzn.to/3p9qvWs\">PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」</a></li>\n<li>プロダクト自体がプロダクトを売るためにはどうしたらいいか？</li>\n<li>書籍Part1/2/3でどのようなコンテンツがあるか？</li>\n<li>データ インフォームド とは？</li>\n<li>定量データと定性データをどのように組み合わせて使えばいいのか？</li>\n<li>参考: <a href=\"https://note.com/hiroko_nozawa/n/n96fc42d4370f\">UXリサーチャーのための「Mixed Methods」読書会を開催しました</a></li>\n<li>&quot;最悪なのは、フィードバックを求めておきながら、それを無視することだ&quot;</li>\n<li>コミュニケーションを決着させる</li>\n<li>遅行指標と先行指標</li>\n<li>ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？</li>\n<li>ProductOpsとは何か？</li>\n<li>&quot;プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。&quot;</li>\n<li>ykmc09さんにとって、良いプロダクトマネージャとは何か？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/063_GqKBR.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fqa53jnxcc9twq6sw7hz3svy.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 20 Dec 2021 05:11:06 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fqa53jnxcc9twq6sw7hz3svy.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4797/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:42:51",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3yF5juO\">プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築</a></li>\n<li>プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？</li>\n<li>書籍: <a href=\"https://amzn.to/3p9qvWs\">PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」</a></li>\n<li>プロダクト自体がプロダクトを売るためにはどうしたらいいか？</li>\n<li>書籍Part1/2/3でどのようなコンテンツがあるか？</li>\n<li>データ インフォームド とは？</li>\n<li>定量データと定性データをどのように組み合わせて使えばいいのか？</li>\n<li>参考: <a href=\"https://note.com/hiroko_nozawa/n/n96fc42d4370f\">UXリサーチャーのための「Mixed Methods」読書会を開催しました</a></li>\n<li>&quot;最悪なのは、フィードバックを求めておきながら、それを無視することだ&quot;</li>\n<li>コミュニケーションを決着させる</li>\n<li>遅行指標と先行指標</li>\n<li>ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？</li>\n<li>ProductOpsとは何か？</li>\n<li>&quot;プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。&quot;</li>\n<li>ykmc09さんにとって、良いプロダクトマネージャとは何か？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li>書籍: <a href=\"https://amzn.to/3yF5juO\">プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築</a></li>\n<li>プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？</li>\n<li>書籍: <a href=\"https://amzn.to/3p9qvWs\">PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」</a></li>\n<li>プロダクト自体がプロダクトを売るためにはどうしたらいいか？</li>\n<li>書籍Part1/2/3でどのようなコンテンツがあるか？</li>\n<li>データ インフォームド とは？</li>\n<li>定量データと定性データをどのように組み合わせて使えばいいのか？</li>\n<li>参考: <a href=\"https://note.com/hiroko_nozawa/n/n96fc42d4370f\">UXリサーチャーのための「Mixed Methods」読書会を開催しました</a></li>\n<li>&quot;最悪なのは、フィードバックを求めておきながら、それを無視することだ&quot;</li>\n<li>コミュニケーションを決着させる</li>\n<li>遅行指標と先行指標</li>\n<li>ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？</li>\n<li>ProductOpsとは何か？</li>\n<li>&quot;プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。&quot;</li>\n<li>ykmc09さんにとって、良いプロダクトマネージャとは何か？</li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "62. プロダクト・レッド・オーガニゼーション w/ ykmc09",
      "itunes:episodeType": "full",
      "podcast:episode": 63
    },
    {
      "title": "61. 電動マイクロモビリティのプロダクト開発 w/ 7omich, t-kurimura",
      "link": "https://fukabori.fm/episode/61",
      "description": "<h2>話したネタ</h2>\n<ul>\n  <li>LUUPのプロダクトって？</li>\n  <li>電動キックボードへのソフトウェアによる速度制限</li>\n  <li>Over The Air Update</li>\n  <li>ハードとソフトウェア混合のシステムアーキテクチャとは？</li>\n  <li>IoTデバイスとIoTサーバの通信内容</li>\n  <li>MQTT と接続が切れたら？</li>\n  <li>電動マイクロモビリティデバイスのポートをどうやって決めているか？</li>\n  <li>屋外の置かれるIoTデバイスにおきる障害とは？</li>\n  <li>IoTデバイスの車体はどのように調達している？設計から自社？</li>\n  <li>中国のODM先はどのように発見する？</li>\n  <li>IoTサービスのエラー設計とは？</li>\n  <li>キックボードの技師がいまはほとんどいない</li>\n  <li>LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？</li>\n  <li>実際にユーザ意見を反映して開発した例は？</li>\n  <li>Twitterからのユーザーの声を収集</li>\n  <li>開発機能の優先度付けの順序をどのように決めるか？</li>\n  <li>課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける</li>\n  <li>どのようにして情報の透明性を高めているか？</li>\n  <li>バックログを、何で管理しているか？</li>\n  <li>経営陣の経営方針をどのように現場に伝えていくか？</li>\n  <li>高頻度な1on1</li>\n  <li>開発チームの文化は？</li>\n  <li>技術者の採用プロセス</li>\n  <li>技術的に面白いチャレンジには何がある？</li>\n  <li>今後のプロダクトの方向性をどうしていく？</li>\n</ul>\n<h2>エピソード提供スポンサー</h2>\n<p><a href=\"https://pitpa.cc/3ozy7RI\">株式会社Luup</a>&nbsp;</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/062_IAino.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fpr5xp61a7jwv8b3ch1fgjbv.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 13 Dec 2021 12:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fpr5xp61a7jwv8b3ch1fgjbv.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4720/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:41:10",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2>話したネタ</h2>\n<ul>\n  <li>LUUPのプロダクトって？</li>\n  <li>電動キックボードへのソフトウェアによる速度制限</li>\n  <li>Over The Air Update</li>\n  <li>ハードとソフトウェア混合のシステムアーキテクチャとは？</li>\n  <li>IoTデバイスとIoTサーバの通信内容</li>\n  <li>MQTT と接続が切れたら？</li>\n  <li>電動マイクロモビリティデバイスのポートをどうやって決めているか？</li>\n  <li>屋外の置かれるIoTデバイスにおきる障害とは？</li>\n  <li>IoTデバイスの車体はどのように調達している？設計から自社？</li>\n  <li>中国のODM先はどのように発見する？</li>\n  <li>IoTサービスのエラー設計とは？</li>\n  <li>キックボードの技師がいまはほとんどいない</li>\n  <li>LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？</li>\n  <li>実際にユーザ意見を反映して開発した例は？</li>\n  <li>Twitterからのユーザーの声を収集</li>\n  <li>開発機能の優先度付けの順序をどのように決めるか？</li>\n  <li>課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける</li>\n  <li>どのようにして情報の透明性を高めているか？</li>\n  <li>バックログを、何で管理しているか？</li>\n  <li>経営陣の経営方針をどのように現場に伝えていくか？</li>\n  <li>高頻度な1on1</li>\n  <li>開発チームの文化は？</li>\n  <li>技術者の採用プロセス</li>\n  <li>技術的に面白いチャレンジには何がある？</li>\n  <li>今後のプロダクトの方向性をどうしていく？</li>\n</ul>\n<h2>エピソード提供スポンサー</h2>\n<p><a href=\"https://pitpa.cc/3ozy7RI\">株式会社Luup</a>&nbsp;</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2>話したネタ</h2>\n<ul>\n  <li>LUUPのプロダクトって？</li>\n  <li>電動キックボードへのソフトウェアによる速度制限</li>\n  <li>Over The Air Update</li>\n  <li>ハードとソフトウェア混合のシステムアーキテクチャとは？</li>\n  <li>IoTデバイスとIoTサーバの通信内容</li>\n  <li>MQTT と接続が切れたら？</li>\n  <li>電動マイクロモビリティデバイスのポートをどうやって決めているか？</li>\n  <li>屋外の置かれるIoTデバイスにおきる障害とは？</li>\n  <li>IoTデバイスの車体はどのように調達している？設計から自社？</li>\n  <li>中国のODM先はどのように発見する？</li>\n  <li>IoTサービスのエラー設計とは？</li>\n  <li>キックボードの技師がいまはほとんどいない</li>\n  <li>LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？</li>\n  <li>実際にユーザ意見を反映して開発した例は？</li>\n  <li>Twitterからのユーザーの声を収集</li>\n  <li>開発機能の優先度付けの順序をどのように決めるか？</li>\n  <li>課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける</li>\n  <li>どのようにして情報の透明性を高めているか？</li>\n  <li>バックログを、何で管理しているか？</li>\n  <li>経営陣の経営方針をどのように現場に伝えていくか？</li>\n  <li>高頻度な1on1</li>\n  <li>開発チームの文化は？</li>\n  <li>技術者の採用プロセス</li>\n  <li>技術的に面白いチャレンジには何がある？</li>\n  <li>今後のプロダクトの方向性をどうしていく？</li>\n</ul>\n<h2>エピソード提供スポンサー</h2>\n<p><a href=\"https://pitpa.cc/3ozy7RI\">株式会社Luup</a>&nbsp;</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "61. 電動マイクロモビリティのプロダクト開発 w/ 7omich, t-kurimura",
      "itunes:episodeType": "full",
      "podcast:episode": 62
    },
    {
      "title": "60. エムスリーにおけるエンジニアリングマネジメント・リーダーの役割・1on1 w/ yamamuteking",
      "link": "https://fukabori.fm/episode/60",
      "description": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.m3tech.blog/entry/vpoe-retrospective-2020\">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>\n<li>山崎さんがエムスリーで実施した、最大の組織変更は？</li>\n<li>小さいチーム・数多くのリーダー</li>\n<li>マネジメントチームが見る範囲は？</li>\n<li>マネジメントチームに所属するHRBPの役割は？</li>\n<li>エンジニアのチャレンジをどのように管理しているか？</li>\n<li>チームのチャレンジとは、具体的にどのようなものか？</li>\n<li>どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？</li>\n<li>オンボーディングで何を選ぶかが重要</li>\n<li>オンボーディングで3連発の成功を目指す</li>\n<li>エムスリーにおける、エンジニアリングリーダーに求められるものは？</li>\n<li>目標設定・評価・採用への貢献</li>\n<li>山崎さんであれば、どのように目標設定をするか？</li>\n<li>「正しく」評価するために何を気をつけているか？</li>\n<li>Cross 1on1 とは？</li>\n<li>評価に直接関与しないグループリーダーとの新入社員との1on1</li>\n<li>Cross 1on1 は、社員から申請して実施するのか？</li>\n<li>Cross 1on1 の実施頻度は？</li>\n<li>エムスリーにおける1on1の目的は？</li>\n<li>山崎さんの1on1スタイルは？</li>\n<li><a href=\"https://twitter.com/m3_engineering\">M3 エンジニア公式 Twitter</a></li>\n<li><a href=\"https://www.m3tech.blog/\">M3 Tech Blog</a></li>\n<li><a href=\"https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ\">エムスリー公式テックチャンネル 【M3 Tech Channel】</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/062_yvfSc.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fmb8w4sjqekgfg86aqq1x6qf.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 15 Nov 2021 08:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fmb8w4sjqekgfg86aqq1x6qf.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4377/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:30:07",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.m3tech.blog/entry/vpoe-retrospective-2020\">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>\n<li>山崎さんがエムスリーで実施した、最大の組織変更は？</li>\n<li>小さいチーム・数多くのリーダー</li>\n<li>マネジメントチームが見る範囲は？</li>\n<li>マネジメントチームに所属するHRBPの役割は？</li>\n<li>エンジニアのチャレンジをどのように管理しているか？</li>\n<li>チームのチャレンジとは、具体的にどのようなものか？</li>\n<li>どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？</li>\n<li>オンボーディングで何を選ぶかが重要</li>\n<li>オンボーディングで3連発の成功を目指す</li>\n<li>エムスリーにおける、エンジニアリングリーダーに求められるものは？</li>\n<li>目標設定・評価・採用への貢献</li>\n<li>山崎さんであれば、どのように目標設定をするか？</li>\n<li>「正しく」評価するために何を気をつけているか？</li>\n<li>Cross 1on1 とは？</li>\n<li>評価に直接関与しないグループリーダーとの新入社員との1on1</li>\n<li>Cross 1on1 は、社員から申請して実施するのか？</li>\n<li>Cross 1on1 の実施頻度は？</li>\n<li>エムスリーにおける1on1の目的は？</li>\n<li>山崎さんの1on1スタイルは？</li>\n<li><a href=\"https://twitter.com/m3_engineering\">M3 エンジニア公式 Twitter</a></li>\n<li><a href=\"https://www.m3tech.blog/\">M3 Tech Blog</a></li>\n<li><a href=\"https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ\">エムスリー公式テックチャンネル 【M3 Tech Channel】</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.m3tech.blog/entry/vpoe-retrospective-2020\">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>\n<li>山崎さんがエムスリーで実施した、最大の組織変更は？</li>\n<li>小さいチーム・数多くのリーダー</li>\n<li>マネジメントチームが見る範囲は？</li>\n<li>マネジメントチームに所属するHRBPの役割は？</li>\n<li>エンジニアのチャレンジをどのように管理しているか？</li>\n<li>チームのチャレンジとは、具体的にどのようなものか？</li>\n<li>どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？</li>\n<li>オンボーディングで何を選ぶかが重要</li>\n<li>オンボーディングで3連発の成功を目指す</li>\n<li>エムスリーにおける、エンジニアリングリーダーに求められるものは？</li>\n<li>目標設定・評価・採用への貢献</li>\n<li>山崎さんであれば、どのように目標設定をするか？</li>\n<li>「正しく」評価するために何を気をつけているか？</li>\n<li>Cross 1on1 とは？</li>\n<li>評価に直接関与しないグループリーダーとの新入社員との1on1</li>\n<li>Cross 1on1 は、社員から申請して実施するのか？</li>\n<li>Cross 1on1 の実施頻度は？</li>\n<li>エムスリーにおける1on1の目的は？</li>\n<li>山崎さんの1on1スタイルは？</li>\n<li><a href=\"https://twitter.com/m3_engineering\">M3 エンジニア公式 Twitter</a></li>\n<li><a href=\"https://www.m3tech.blog/\">M3 Tech Blog</a></li>\n<li><a href=\"https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ\">エムスリー公式テックチャンネル 【M3 Tech Channel】</a></li>\n</ul>\n<h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "60. エムスリーにおけるエンジニアリングマネジメント・リーダーの役割・1on1 w/ yamamuteking",
      "itunes:episodeType": "full",
      "podcast:episode": 61
    },
    {
      "title": "59. エムスリーにおけるVPoEの役割・エンジニア採用について w/ yamamuteking",
      "description": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.m3tech.blog/entry/vpoe-retrospective-2020\">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>\n<li>山崎さんの考えるVPoEとは？</li>\n<li>m3にてVPoEを配置するきっかけは何だったか？</li>\n<li>50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？</li>\n<li>もともとオープンソースの文化が強い</li>\n<li>外部委託での失敗経験から、エンジニアリングの内製化へ</li>\n<li>要所要所で技術的に良い判断をしてきた</li>\n<li><a href=\"https://amzn.to/3mUVmFo\">Release It！ 本番用ソフトウェア製品の設計とデプロイのために</a></li>\n<li><a href=\"https://amzn.to/3odv14S\">不格好経営</a></li>\n<li>60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？</li>\n<li>採用基準を限界まで引き上げる</li>\n<li>CTOレベルという定義、およびなぜCTOレベルに着目したのか？</li>\n<li><a href=\"https://m3.recruitment.jp/business/philosophy/\">くしゃみ</a></li>\n<li>CTOレベルをどのように判断していくか？</li>\n<li><a href=\"https://amzn.to/3GYYWWW\">最難関のリーダーシップ ― 変革をやり遂げる意志とスキル</a> をどのように活用してきたか？</li>\n<li>ハイフェッツの技術的問題と適応課題</li>\n<li>採用をテコ入れするときに、後ろのプロセスから改善していった</li>\n<li>内定承諾率100%を目指す</li>\n<li>自分たちが変わらない限り解決が難しい問題</li>\n<li>内定承諾率をあげるために、何をしていったか？</li>\n<li>改善をすすめるときに、何が有効かをどう判断していったか？</li>\n<li>オファー面談より手前のプロセスで、何を改善したか？</li>\n<li><a href=\"https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup\">エンジニアを採用する技術 VPofEngineering Meetup</a></li>\n</ul>\n<p>エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。</p>\n<h2 id=\"-\">エピソードスポンサー</h2>\n<ul>\n<li><a href=\"https://forkwell.com/\">Forkwell</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/060_gTMto.mp3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fkysw27a44ypphhw90ecdtx4.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 08 Nov 2021 18:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fkysw27a44ypphhw90ecdtx4.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4324/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:31:53",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.m3tech.blog/entry/vpoe-retrospective-2020\">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>\n<li>山崎さんの考えるVPoEとは？</li>\n<li>m3にてVPoEを配置するきっかけは何だったか？</li>\n<li>50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？</li>\n<li>もともとオープンソースの文化が強い</li>\n<li>外部委託での失敗経験から、エンジニアリングの内製化へ</li>\n<li>要所要所で技術的に良い判断をしてきた</li>\n<li><a href=\"https://amzn.to/3mUVmFo\">Release It！ 本番用ソフトウェア製品の設計とデプロイのために</a></li>\n<li><a href=\"https://amzn.to/3odv14S\">不格好経営</a></li>\n<li>60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？</li>\n<li>採用基準を限界まで引き上げる</li>\n<li>CTOレベルという定義、およびなぜCTOレベルに着目したのか？</li>\n<li><a href=\"https://m3.recruitment.jp/business/philosophy/\">くしゃみ</a></li>\n<li>CTOレベルをどのように判断していくか？</li>\n<li><a href=\"https://amzn.to/3GYYWWW\">最難関のリーダーシップ ― 変革をやり遂げる意志とスキル</a> をどのように活用してきたか？</li>\n<li>ハイフェッツの技術的問題と適応課題</li>\n<li>採用をテコ入れするときに、後ろのプロセスから改善していった</li>\n<li>内定承諾率100%を目指す</li>\n<li>自分たちが変わらない限り解決が難しい問題</li>\n<li>内定承諾率をあげるために、何をしていったか？</li>\n<li>改善をすすめるときに、何が有効かをどう判断していったか？</li>\n<li>オファー面談より手前のプロセスで、何を改善したか？</li>\n<li><a href=\"https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup\">エンジニアを採用する技術 VPofEngineering Meetup</a></li>\n</ul>\n<p>エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。</p>\n<h2 id=\"-\">エピソードスポンサー</h2>\n<ul>\n<li><a href=\"https://forkwell.com/\">Forkwell</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"-\">話したネタ</h2>\n<ul>\n<li><a href=\"https://www.m3tech.blog/entry/vpoe-retrospective-2020\">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>\n<li>山崎さんの考えるVPoEとは？</li>\n<li>m3にてVPoEを配置するきっかけは何だったか？</li>\n<li>50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？</li>\n<li>もともとオープンソースの文化が強い</li>\n<li>外部委託での失敗経験から、エンジニアリングの内製化へ</li>\n<li>要所要所で技術的に良い判断をしてきた</li>\n<li><a href=\"https://amzn.to/3mUVmFo\">Release It！ 本番用ソフトウェア製品の設計とデプロイのために</a></li>\n<li><a href=\"https://amzn.to/3odv14S\">不格好経営</a></li>\n<li>60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？</li>\n<li>採用基準を限界まで引き上げる</li>\n<li>CTOレベルという定義、およびなぜCTOレベルに着目したのか？</li>\n<li><a href=\"https://m3.recruitment.jp/business/philosophy/\">くしゃみ</a></li>\n<li>CTOレベルをどのように判断していくか？</li>\n<li><a href=\"https://amzn.to/3GYYWWW\">最難関のリーダーシップ ― 変革をやり遂げる意志とスキル</a> をどのように活用してきたか？</li>\n<li>ハイフェッツの技術的問題と適応課題</li>\n<li>採用をテコ入れするときに、後ろのプロセスから改善していった</li>\n<li>内定承諾率100%を目指す</li>\n<li>自分たちが変わらない限り解決が難しい問題</li>\n<li>内定承諾率をあげるために、何をしていったか？</li>\n<li>改善をすすめるときに、何が有効かをどう判断していったか？</li>\n<li>オファー面談より手前のプロセスで、何を改善したか？</li>\n<li><a href=\"https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup\">エンジニアを採用する技術 VPofEngineering Meetup</a></li>\n</ul>\n<p>エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。</p>\n<h2 id=\"-\">エピソードスポンサー</h2>\n<ul>\n<li><a href=\"https://forkwell.com/\">Forkwell</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "59. エムスリーにおけるVPoEの役割・エンジニア採用について w/ yamamuteking",
      "itunes:episodeType": "full",
      "podcast:episode": 60
    },
    {
      "title": "58. プロダクトマネージャーカンファレンス 2021 w/ Nunerm",
      "link": "https://fukabori.fm/episode/58",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://2021.pmconf.jp/\">プロダクトマネージャーカンファレンス 2021</a></li>\n  <li>プロダクトマネジメントとは改めて何か？</li>\n  <li>顧客に価値を提供しビジネスとして利益を出すこと</li>\n  <li>プロダクトマネージャーがセールス活動も、ときにはする？</li>\n  <li>プロダクトマネージャーカンファレンスとは？</li>\n  <li>どのような講演があるのか？</li>\n  <li>過去のプロダクトマネージャーカンファレンス講演で面白かったものは？</li>\n  <li><a href=\"https://2017.pmconf.jp/sessions/2017/09/14/whypm/\">齊藤 満さん(2017)：95% of PM Work is Disgusting</a></li>\n  <li>やりたいことというより、やらなきゃいけないことをやる</li>\n  <li>過去のプロダクトマネージャー経験で辛かったことは？</li>\n  <li>プロダクトマネージャーとして最高に楽しかったことは？</li>\n  <li>仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？</li>\n  <li>プロダクトチームで共通理解を得る方法とは？</li>\n  <li><a href=\"https://2018.pmconf.jp/sessions/2018/10/07/session0711/\">Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃</a></li>\n  <li>強いニーズさえ解決できれば価値になる</li>\n  <li><a href=\"https://www.youtube.com/watch?v=YDezR5VTKhw\">顧客のBurning Needsを解決し、PMFを達成する</a></li>\n  <li><a href=\"https://2020.pmconf.jp/sessions/83VXZiqj\">川崎さん(2020)：お手本のような仮説・価値検証アプローチ</a></li>\n  <li>今年のpmconfのキーメッセージは？</li>\n  <li>イベントのテーマを決めるときの対話・プロセスは？</li>\n  <li>優先順位を決める判断基準はあったか？</li>\n  <li>抽象的な話を収束させるときに使う方法は？</li>\n  <li>pmconf 2021 の注目トピックは？</li>\n  <li>Miro のプロダクトマネージャーの方の登壇、行政の方の登壇</li>\n  <li>プロダクトマネージャカンファレンスを最大限に活用する方法は？</li>\n  <li>参加前、参加中、参加後のアプローチ</li>\n  <li><a href=\"https://productmanager55.hatenablog.com/entry/2020/01/12/222825\">RSGT2020に行ってないけどレポートをする</a></li>\n  <li>pmconf 2021は今年無料</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://forkwell.com/\">Forkwell</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/58"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nrwmg5scxx2py1nm6n.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Thu, 07 Oct 2021 17:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nrwmg5scxx2py1nm6n.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4035/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:49:11",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://2021.pmconf.jp/\">プロダクトマネージャーカンファレンス 2021</a></li>\n  <li>プロダクトマネジメントとは改めて何か？</li>\n  <li>顧客に価値を提供しビジネスとして利益を出すこと</li>\n  <li>プロダクトマネージャーがセールス活動も、ときにはする？</li>\n  <li>プロダクトマネージャーカンファレンスとは？</li>\n  <li>どのような講演があるのか？</li>\n  <li>過去のプロダクトマネージャーカンファレンス講演で面白かったものは？</li>\n  <li><a href=\"https://2017.pmconf.jp/sessions/2017/09/14/whypm/\">齊藤 満さん(2017)：95% of PM Work is Disgusting</a></li>\n  <li>やりたいことというより、やらなきゃいけないことをやる</li>\n  <li>過去のプロダクトマネージャー経験で辛かったことは？</li>\n  <li>プロダクトマネージャーとして最高に楽しかったことは？</li>\n  <li>仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？</li>\n  <li>プロダクトチームで共通理解を得る方法とは？</li>\n  <li><a href=\"https://2018.pmconf.jp/sessions/2018/10/07/session0711/\">Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃</a></li>\n  <li>強いニーズさえ解決できれば価値になる</li>\n  <li><a href=\"https://www.youtube.com/watch?v=YDezR5VTKhw\">顧客のBurning Needsを解決し、PMFを達成する</a></li>\n  <li><a href=\"https://2020.pmconf.jp/sessions/83VXZiqj\">川崎さん(2020)：お手本のような仮説・価値検証アプローチ</a></li>\n  <li>今年のpmconfのキーメッセージは？</li>\n  <li>イベントのテーマを決めるときの対話・プロセスは？</li>\n  <li>優先順位を決める判断基準はあったか？</li>\n  <li>抽象的な話を収束させるときに使う方法は？</li>\n  <li>pmconf 2021 の注目トピックは？</li>\n  <li>Miro のプロダクトマネージャーの方の登壇、行政の方の登壇</li>\n  <li>プロダクトマネージャカンファレンスを最大限に活用する方法は？</li>\n  <li>参加前、参加中、参加後のアプローチ</li>\n  <li><a href=\"https://productmanager55.hatenablog.com/entry/2020/01/12/222825\">RSGT2020に行ってないけどレポートをする</a></li>\n  <li>pmconf 2021は今年無料</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://forkwell.com/\">Forkwell</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://2021.pmconf.jp/\">プロダクトマネージャーカンファレンス 2021</a></li>\n  <li>プロダクトマネジメントとは改めて何か？</li>\n  <li>顧客に価値を提供しビジネスとして利益を出すこと</li>\n  <li>プロダクトマネージャーがセールス活動も、ときにはする？</li>\n  <li>プロダクトマネージャーカンファレンスとは？</li>\n  <li>どのような講演があるのか？</li>\n  <li>過去のプロダクトマネージャーカンファレンス講演で面白かったものは？</li>\n  <li><a href=\"https://2017.pmconf.jp/sessions/2017/09/14/whypm/\">齊藤 満さん(2017)：95% of PM Work is Disgusting</a></li>\n  <li>やりたいことというより、やらなきゃいけないことをやる</li>\n  <li>過去のプロダクトマネージャー経験で辛かったことは？</li>\n  <li>プロダクトマネージャーとして最高に楽しかったことは？</li>\n  <li>仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？</li>\n  <li>プロダクトチームで共通理解を得る方法とは？</li>\n  <li><a href=\"https://2018.pmconf.jp/sessions/2018/10/07/session0711/\">Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃</a></li>\n  <li>強いニーズさえ解決できれば価値になる</li>\n  <li><a href=\"https://www.youtube.com/watch?v=YDezR5VTKhw\">顧客のBurning Needsを解決し、PMFを達成する</a></li>\n  <li><a href=\"https://2020.pmconf.jp/sessions/83VXZiqj\">川崎さん(2020)：お手本のような仮説・価値検証アプローチ</a></li>\n  <li>今年のpmconfのキーメッセージは？</li>\n  <li>イベントのテーマを決めるときの対話・プロセスは？</li>\n  <li>優先順位を決める判断基準はあったか？</li>\n  <li>抽象的な話を収束させるときに使う方法は？</li>\n  <li>pmconf 2021 の注目トピックは？</li>\n  <li>Miro のプロダクトマネージャーの方の登壇、行政の方の登壇</li>\n  <li>プロダクトマネージャカンファレンスを最大限に活用する方法は？</li>\n  <li>参加前、参加中、参加後のアプローチ</li>\n  <li><a href=\"https://productmanager55.hatenablog.com/entry/2020/01/12/222825\">RSGT2020に行ってないけどレポートをする</a></li>\n  <li>pmconf 2021は今年無料</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://forkwell.com/\">Forkwell</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "58. プロダクトマネージャーカンファレンス 2021 w/ Nunerm",
      "itunes:episodeType": "full",
      "podcast:episode": 59
    },
    {
      "title": "57. クリエーションライン社の軌跡 w/ yasudatadahiro",
      "link": "https://fukabori.fm/episode/57",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020\">JoyInc Journey ScrumFestSapporo 2020</a></li>\n  <li><a href=\"https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492\">日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡</a></li>\n  <li>会社が大変だった時期はどのような様子だったのか？</li>\n  <li>悪い状態になってしまった要因は何だったのか？</li>\n  <li>組織の成功循環モデルと失敗モデル</li>\n  <li>どうやって会社・組織を立ち直らせていったのか？</li>\n  <li>TGIFを持ち込んだときの失敗</li>\n  <li><a href=\"https://www.youtube.com/watch?v=GA8z7f7a2Pk\">Sasquatch music festival 2009 - Guy starts dance party</a></li>\n  <li>フォロワーシップ</li>\n  <li>自分が一番最初に踊ってオープンにする</li>\n  <li>何をオープンにしているのか？</li>\n  <li><a href=\"https://amzn.to/2XAohUO\">社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント</a></li>\n  <li><a href=\"https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/\">ヴァル研究所の写真例</a></li>\n  <li>社員をどのようにモチベートしていったのか？</li>\n  <li>社長の目指す姿を共有できていたのが良かった</li>\n  <li>ミッション・ビジョンは上手く使えていたか？</li>\n  <li>魂のないビジョンと、あるビジョン</li>\n  <li>どのように理念浸透させていったのか？</li>\n  <li>ビジョンをベースにしたワークショップの実施</li>\n  <li>ビジョンが意識できていると、どのような行動が起きるのか？</li>\n  <li><a href=\"https://amzn.to/3CBhKIz\">ジョイ・インク 役職も部署もない全員主役のマネジメント</a></li>\n  <li>エンゲージメントスコアの可視化</li>\n  <li>社員全員と社長との1:1の対話</li>\n  <li>雑談を意識的に取り入れる</li>\n  <li>雑談を決める相手はどのように決めていた？</li>\n  <li><a href=\"https://nttcom.github.io/onboarding-handbook/\">オンボーディング ハンドブック</a></li>\n  <li>オンボーディングハンドブックの作成経緯</li>\n  <li>チーム全員との1on1(mixin)</li>\n  <li>オンボーディング用のテンプレート</li>\n  <li><a href=\"https://www.creationline.com/recruit\">採用情報 - クリエーションライン</a></li>\n  <li><a href=\"https://amzn.to/3CyTBCB\">Team Geek ―Googleのギークたちはいかにしてチームを作るのか</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/57"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nr6g492xrh73rzdr3z.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 21 Sep 2021 23:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nr6g492xrh73rzdr3z.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4034/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:53:48",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020\">JoyInc Journey ScrumFestSapporo 2020</a></li>\n  <li><a href=\"https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492\">日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡</a></li>\n  <li>会社が大変だった時期はどのような様子だったのか？</li>\n  <li>悪い状態になってしまった要因は何だったのか？</li>\n  <li>組織の成功循環モデルと失敗モデル</li>\n  <li>どうやって会社・組織を立ち直らせていったのか？</li>\n  <li>TGIFを持ち込んだときの失敗</li>\n  <li><a href=\"https://www.youtube.com/watch?v=GA8z7f7a2Pk\">Sasquatch music festival 2009 - Guy starts dance party</a></li>\n  <li>フォロワーシップ</li>\n  <li>自分が一番最初に踊ってオープンにする</li>\n  <li>何をオープンにしているのか？</li>\n  <li><a href=\"https://amzn.to/2XAohUO\">社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント</a></li>\n  <li><a href=\"https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/\">ヴァル研究所の写真例</a></li>\n  <li>社員をどのようにモチベートしていったのか？</li>\n  <li>社長の目指す姿を共有できていたのが良かった</li>\n  <li>ミッション・ビジョンは上手く使えていたか？</li>\n  <li>魂のないビジョンと、あるビジョン</li>\n  <li>どのように理念浸透させていったのか？</li>\n  <li>ビジョンをベースにしたワークショップの実施</li>\n  <li>ビジョンが意識できていると、どのような行動が起きるのか？</li>\n  <li><a href=\"https://amzn.to/3CBhKIz\">ジョイ・インク 役職も部署もない全員主役のマネジメント</a></li>\n  <li>エンゲージメントスコアの可視化</li>\n  <li>社員全員と社長との1:1の対話</li>\n  <li>雑談を意識的に取り入れる</li>\n  <li>雑談を決める相手はどのように決めていた？</li>\n  <li><a href=\"https://nttcom.github.io/onboarding-handbook/\">オンボーディング ハンドブック</a></li>\n  <li>オンボーディングハンドブックの作成経緯</li>\n  <li>チーム全員との1on1(mixin)</li>\n  <li>オンボーディング用のテンプレート</li>\n  <li><a href=\"https://www.creationline.com/recruit\">採用情報 - クリエーションライン</a></li>\n  <li><a href=\"https://amzn.to/3CyTBCB\">Team Geek ―Googleのギークたちはいかにしてチームを作るのか</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020\">JoyInc Journey ScrumFestSapporo 2020</a></li>\n  <li><a href=\"https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492\">日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡</a></li>\n  <li>会社が大変だった時期はどのような様子だったのか？</li>\n  <li>悪い状態になってしまった要因は何だったのか？</li>\n  <li>組織の成功循環モデルと失敗モデル</li>\n  <li>どうやって会社・組織を立ち直らせていったのか？</li>\n  <li>TGIFを持ち込んだときの失敗</li>\n  <li><a href=\"https://www.youtube.com/watch?v=GA8z7f7a2Pk\">Sasquatch music festival 2009 - Guy starts dance party</a></li>\n  <li>フォロワーシップ</li>\n  <li>自分が一番最初に踊ってオープンにする</li>\n  <li>何をオープンにしているのか？</li>\n  <li><a href=\"https://amzn.to/2XAohUO\">社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント</a></li>\n  <li><a href=\"https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/\">ヴァル研究所の写真例</a></li>\n  <li>社員をどのようにモチベートしていったのか？</li>\n  <li>社長の目指す姿を共有できていたのが良かった</li>\n  <li>ミッション・ビジョンは上手く使えていたか？</li>\n  <li>魂のないビジョンと、あるビジョン</li>\n  <li>どのように理念浸透させていったのか？</li>\n  <li>ビジョンをベースにしたワークショップの実施</li>\n  <li>ビジョンが意識できていると、どのような行動が起きるのか？</li>\n  <li><a href=\"https://amzn.to/3CBhKIz\">ジョイ・インク 役職も部署もない全員主役のマネジメント</a></li>\n  <li>エンゲージメントスコアの可視化</li>\n  <li>社員全員と社長との1:1の対話</li>\n  <li>雑談を意識的に取り入れる</li>\n  <li>雑談を決める相手はどのように決めていた？</li>\n  <li><a href=\"https://nttcom.github.io/onboarding-handbook/\">オンボーディング ハンドブック</a></li>\n  <li>オンボーディングハンドブックの作成経緯</li>\n  <li>チーム全員との1on1(mixin)</li>\n  <li>オンボーディング用のテンプレート</li>\n  <li><a href=\"https://www.creationline.com/recruit\">採用情報 - クリエーションライン</a></li>\n  <li><a href=\"https://amzn.to/3CyTBCB\">Team Geek ―Googleのギークたちはいかにしてチームを作るのか</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "57. クリエーションライン社の軌跡 w/ yasudatadahiro",
      "itunes:episodeType": "full",
      "podcast:episode": 58
    },
    {
      "title": "56. 自然言語処理(NLP)の歴史、BERT w/ Takahiro Omi",
      "link": "https://fukabori.fm/episode/56",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/3jTBEIr\">BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―</a></li>\n  <li>自然言語処理とは？</li>\n  <li>自然言語処理の応用範囲は？</li>\n  <li>機械翻訳、メールフィルタ、チャットボット</li>\n  <li>自然言語処理はどのように発展してきたのか？</li>\n  <li>NN (ニューラルネットワーク) とは何か？</li>\n  <li>NN における大きなブレイクスルー</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/AlexNet\">AlexNet</a></li>\n  <li>エンドツーエンド処理</li>\n  <li>Deep NN におけるディープとは？</li>\n  <li>学習とは具体的にはどのような処理？</li>\n  <li>RNN (Recurrent Neural Network) とは？</li>\n  <li>RNN で解きたかった課題は何か？</li>\n  <li>RNN における処理イメージ</li>\n  <li>RNN の課題</li>\n  <li>LSTM (Long Short Term Memory)</li>\n  <li>LSTM の特徴、文脈考慮</li>\n  <li>NN への文章はどのように入力するのか？</li>\n  <li>単語をベクトルで表現する</li>\n  <li>ELMo と LSTM との関連性は？</li>\n  <li>なぜ双方向の情報を使うのが効果的なのか？</li>\n  <li>セサミストリート</li>\n  <li>Transformers の登場</li>\n  <li>Self-Attention とは？</li>\n  <li>Self-Attention の計算効率利点</li>\n  <li>Attention と Transformer との関連性は？</li>\n  <li>BERT(Bidirectional Encoder Representations from Transformers) とは？</li>\n  <li>エンコーダとデコーダとは？</li>\n  <li>BERT の特徴とは？</li>\n  <li><a href=\"https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/\">BERTによるニュース記事の構造化：企業名抽出</a></li>\n  <li>自然言語処理界隈はどのように進化していくのか？</li>\n  <li>GitHub Copilot</li>\n  <li><a href=\"https://stockmark.co.jp/recruit\">Recruit、ストックマーク株式会社</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/56"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqqj5pe2007e2emd62.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 08 Sep 2021 23:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqqj5pe2007e2emd62.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4033/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:38:45",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/3jTBEIr\">BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―</a></li>\n  <li>自然言語処理とは？</li>\n  <li>自然言語処理の応用範囲は？</li>\n  <li>機械翻訳、メールフィルタ、チャットボット</li>\n  <li>自然言語処理はどのように発展してきたのか？</li>\n  <li>NN (ニューラルネットワーク) とは何か？</li>\n  <li>NN における大きなブレイクスルー</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/AlexNet\">AlexNet</a></li>\n  <li>エンドツーエンド処理</li>\n  <li>Deep NN におけるディープとは？</li>\n  <li>学習とは具体的にはどのような処理？</li>\n  <li>RNN (Recurrent Neural Network) とは？</li>\n  <li>RNN で解きたかった課題は何か？</li>\n  <li>RNN における処理イメージ</li>\n  <li>RNN の課題</li>\n  <li>LSTM (Long Short Term Memory)</li>\n  <li>LSTM の特徴、文脈考慮</li>\n  <li>NN への文章はどのように入力するのか？</li>\n  <li>単語をベクトルで表現する</li>\n  <li>ELMo と LSTM との関連性は？</li>\n  <li>なぜ双方向の情報を使うのが効果的なのか？</li>\n  <li>セサミストリート</li>\n  <li>Transformers の登場</li>\n  <li>Self-Attention とは？</li>\n  <li>Self-Attention の計算効率利点</li>\n  <li>Attention と Transformer との関連性は？</li>\n  <li>BERT(Bidirectional Encoder Representations from Transformers) とは？</li>\n  <li>エンコーダとデコーダとは？</li>\n  <li>BERT の特徴とは？</li>\n  <li><a href=\"https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/\">BERTによるニュース記事の構造化：企業名抽出</a></li>\n  <li>自然言語処理界隈はどのように進化していくのか？</li>\n  <li>GitHub Copilot</li>\n  <li><a href=\"https://stockmark.co.jp/recruit\">Recruit、ストックマーク株式会社</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/3jTBEIr\">BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―</a></li>\n  <li>自然言語処理とは？</li>\n  <li>自然言語処理の応用範囲は？</li>\n  <li>機械翻訳、メールフィルタ、チャットボット</li>\n  <li>自然言語処理はどのように発展してきたのか？</li>\n  <li>NN (ニューラルネットワーク) とは何か？</li>\n  <li>NN における大きなブレイクスルー</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/AlexNet\">AlexNet</a></li>\n  <li>エンドツーエンド処理</li>\n  <li>Deep NN におけるディープとは？</li>\n  <li>学習とは具体的にはどのような処理？</li>\n  <li>RNN (Recurrent Neural Network) とは？</li>\n  <li>RNN で解きたかった課題は何か？</li>\n  <li>RNN における処理イメージ</li>\n  <li>RNN の課題</li>\n  <li>LSTM (Long Short Term Memory)</li>\n  <li>LSTM の特徴、文脈考慮</li>\n  <li>NN への文章はどのように入力するのか？</li>\n  <li>単語をベクトルで表現する</li>\n  <li>ELMo と LSTM との関連性は？</li>\n  <li>なぜ双方向の情報を使うのが効果的なのか？</li>\n  <li>セサミストリート</li>\n  <li>Transformers の登場</li>\n  <li>Self-Attention とは？</li>\n  <li>Self-Attention の計算効率利点</li>\n  <li>Attention と Transformer との関連性は？</li>\n  <li>BERT(Bidirectional Encoder Representations from Transformers) とは？</li>\n  <li>エンコーダとデコーダとは？</li>\n  <li>BERT の特徴とは？</li>\n  <li><a href=\"https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/\">BERTによるニュース記事の構造化：企業名抽出</a></li>\n  <li>自然言語処理界隈はどのように進化していくのか？</li>\n  <li>GitHub Copilot</li>\n  <li><a href=\"https://stockmark.co.jp/recruit\">Recruit、ストックマーク株式会社</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "56. 自然言語処理(NLP)の歴史、BERT w/ Takahiro Omi",
      "itunes:episodeType": "full",
      "podcast:episode": 57
    },
    {
      "title": "55. コンテナランタイム(後編) w/ TokunagaKohei",
      "link": "https://fukabori.fm/episode/55",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>高レベルランタイムとは何か？</li>\n  <li>デスクトップなどで使われる高レベルランタイム実装には何があるか？</li>\n  <li><a href=\"https://containerd.io/\">containerd</a></li>\n  <li>docker が containerd を活用するまでの流れ</li>\n  <li><a href=\"https://podman.io/\">podman</a></li>\n  <li>podman の特徴は?</li>\n  <li>補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の <a href=\"https://www.slideshare.net/AkihiroSuda/dockerpodman\">DockerとPodmanの比較(Container Runtime Meetup #3発表資料)</a>に分かりやすくまとめられています</li>\n  <li><a href=\"https://github.com/containers/conmon\">conmon</a></li>\n  <li><a href=\"https://github.com/containerd/nerdctl\">nerdctl</a></li>\n  <li>nerdctl を利用するメリットは何か？</li>\n  <li>kubernetes から叩かれるCRIには何があるか？</li>\n  <li><a href=\"https://www.cncf.io/\">CNCF(Cloud Native Computing Foundation)</a></li>\n  <li><a href=\"https://github.com/moby/buildkit\">BuildKit</a></li>\n  <li><a href=\"https://github.com/cri-o/cri-o\">CRI-O</a></li>\n  <li>CRI-O は containerd と比べた場合の特徴は何か？</li>\n  <li>OCIランタイムの実装には何があるか？</li>\n  <li><a href=\"https://github.com/opencontainers/runc\">runc</a></li>\n  <li><a href=\"https://github.com/opencontainers/runc/releases/tag/v1.0.0\">runc の v1.0.0 リリース</a></li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">Open Container Initiative Runtime Specification</a></li>\n  <li>OCIランタイムの実装はできるもの？</li>\n  <li><a href=\"https://github.com/containers/youki\">youki: A container runtime in Rust</a></li>\n  <li><a href=\"https://zenn.dev/utam0k/articles/74d08c9f556534\">2021年に今更コンテナ入門した僕の最初の一歩</a></li>\n  <li>セキュアなコンテナランタイム</li>\n  <li><a href=\"https://katacontainers.io/\">Kata Containers</a></li>\n  <li>Kata Containers の特徴とは？</li>\n  <li><a href=\"https://github.com/google/gvisor\">gVisor</a></li>\n  <li>gVisor の特徴とは？</li>\n  <li>C言語による実装 <a href=\"https://github.com/containers/crun\">crun</a></li>\n  <li>言語実装に差異はどの辺りにあるか？</li>\n  <li>パフォーマンスとコミュニティ</li>\n  <li><a href=\"https://opencontainers.org/\">Open Container Initiative</a></li>\n  <li>OCI で規定される仕様には何があるか？</li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">OCI Runtime Specification</a></li>\n  <li><a href=\"https://github.com/opencontainers/image-spec\">OCI Image Specification</a></li>\n  <li><a href=\"https://github.com/opencontainers/distribution-spec\">OCI Distribution Specification</a></li>\n  <li>この先、コンテナ関連の仕様・実装はどのように発展していくか？</li>\n  <li><a href=\"https://amzn.to/3CvNhwF\">イラストでわかるDockerとKubernetes Software Design plus</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/55"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqdqraq4x18c446yjt.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 23 Aug 2021 00:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqdqraq4x18c446yjt.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4032/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:37:42",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>高レベルランタイムとは何か？</li>\n  <li>デスクトップなどで使われる高レベルランタイム実装には何があるか？</li>\n  <li><a href=\"https://containerd.io/\">containerd</a></li>\n  <li>docker が containerd を活用するまでの流れ</li>\n  <li><a href=\"https://podman.io/\">podman</a></li>\n  <li>podman の特徴は?</li>\n  <li>補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の <a href=\"https://www.slideshare.net/AkihiroSuda/dockerpodman\">DockerとPodmanの比較(Container Runtime Meetup #3発表資料)</a>に分かりやすくまとめられています</li>\n  <li><a href=\"https://github.com/containers/conmon\">conmon</a></li>\n  <li><a href=\"https://github.com/containerd/nerdctl\">nerdctl</a></li>\n  <li>nerdctl を利用するメリットは何か？</li>\n  <li>kubernetes から叩かれるCRIには何があるか？</li>\n  <li><a href=\"https://www.cncf.io/\">CNCF(Cloud Native Computing Foundation)</a></li>\n  <li><a href=\"https://github.com/moby/buildkit\">BuildKit</a></li>\n  <li><a href=\"https://github.com/cri-o/cri-o\">CRI-O</a></li>\n  <li>CRI-O は containerd と比べた場合の特徴は何か？</li>\n  <li>OCIランタイムの実装には何があるか？</li>\n  <li><a href=\"https://github.com/opencontainers/runc\">runc</a></li>\n  <li><a href=\"https://github.com/opencontainers/runc/releases/tag/v1.0.0\">runc の v1.0.0 リリース</a></li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">Open Container Initiative Runtime Specification</a></li>\n  <li>OCIランタイムの実装はできるもの？</li>\n  <li><a href=\"https://github.com/containers/youki\">youki: A container runtime in Rust</a></li>\n  <li><a href=\"https://zenn.dev/utam0k/articles/74d08c9f556534\">2021年に今更コンテナ入門した僕の最初の一歩</a></li>\n  <li>セキュアなコンテナランタイム</li>\n  <li><a href=\"https://katacontainers.io/\">Kata Containers</a></li>\n  <li>Kata Containers の特徴とは？</li>\n  <li><a href=\"https://github.com/google/gvisor\">gVisor</a></li>\n  <li>gVisor の特徴とは？</li>\n  <li>C言語による実装 <a href=\"https://github.com/containers/crun\">crun</a></li>\n  <li>言語実装に差異はどの辺りにあるか？</li>\n  <li>パフォーマンスとコミュニティ</li>\n  <li><a href=\"https://opencontainers.org/\">Open Container Initiative</a></li>\n  <li>OCI で規定される仕様には何があるか？</li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">OCI Runtime Specification</a></li>\n  <li><a href=\"https://github.com/opencontainers/image-spec\">OCI Image Specification</a></li>\n  <li><a href=\"https://github.com/opencontainers/distribution-spec\">OCI Distribution Specification</a></li>\n  <li>この先、コンテナ関連の仕様・実装はどのように発展していくか？</li>\n  <li><a href=\"https://amzn.to/3CvNhwF\">イラストでわかるDockerとKubernetes Software Design plus</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>高レベルランタイムとは何か？</li>\n  <li>デスクトップなどで使われる高レベルランタイム実装には何があるか？</li>\n  <li><a href=\"https://containerd.io/\">containerd</a></li>\n  <li>docker が containerd を活用するまでの流れ</li>\n  <li><a href=\"https://podman.io/\">podman</a></li>\n  <li>podman の特徴は?</li>\n  <li>補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の <a href=\"https://www.slideshare.net/AkihiroSuda/dockerpodman\">DockerとPodmanの比較(Container Runtime Meetup #3発表資料)</a>に分かりやすくまとめられています</li>\n  <li><a href=\"https://github.com/containers/conmon\">conmon</a></li>\n  <li><a href=\"https://github.com/containerd/nerdctl\">nerdctl</a></li>\n  <li>nerdctl を利用するメリットは何か？</li>\n  <li>kubernetes から叩かれるCRIには何があるか？</li>\n  <li><a href=\"https://www.cncf.io/\">CNCF(Cloud Native Computing Foundation)</a></li>\n  <li><a href=\"https://github.com/moby/buildkit\">BuildKit</a></li>\n  <li><a href=\"https://github.com/cri-o/cri-o\">CRI-O</a></li>\n  <li>CRI-O は containerd と比べた場合の特徴は何か？</li>\n  <li>OCIランタイムの実装には何があるか？</li>\n  <li><a href=\"https://github.com/opencontainers/runc\">runc</a></li>\n  <li><a href=\"https://github.com/opencontainers/runc/releases/tag/v1.0.0\">runc の v1.0.0 リリース</a></li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">Open Container Initiative Runtime Specification</a></li>\n  <li>OCIランタイムの実装はできるもの？</li>\n  <li><a href=\"https://github.com/containers/youki\">youki: A container runtime in Rust</a></li>\n  <li><a href=\"https://zenn.dev/utam0k/articles/74d08c9f556534\">2021年に今更コンテナ入門した僕の最初の一歩</a></li>\n  <li>セキュアなコンテナランタイム</li>\n  <li><a href=\"https://katacontainers.io/\">Kata Containers</a></li>\n  <li>Kata Containers の特徴とは？</li>\n  <li><a href=\"https://github.com/google/gvisor\">gVisor</a></li>\n  <li>gVisor の特徴とは？</li>\n  <li>C言語による実装 <a href=\"https://github.com/containers/crun\">crun</a></li>\n  <li>言語実装に差異はどの辺りにあるか？</li>\n  <li>パフォーマンスとコミュニティ</li>\n  <li><a href=\"https://opencontainers.org/\">Open Container Initiative</a></li>\n  <li>OCI で規定される仕様には何があるか？</li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">OCI Runtime Specification</a></li>\n  <li><a href=\"https://github.com/opencontainers/image-spec\">OCI Image Specification</a></li>\n  <li><a href=\"https://github.com/opencontainers/distribution-spec\">OCI Distribution Specification</a></li>\n  <li>この先、コンテナ関連の仕様・実装はどのように発展していくか？</li>\n  <li><a href=\"https://amzn.to/3CvNhwF\">イラストでわかるDockerとKubernetes Software Design plus</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "55. コンテナランタイム(後編) w/ TokunagaKohei",
      "itunes:episodeType": "full",
      "podcast:episode": 56
    },
    {
      "title": "54. コンテナランタイム(前編) w/ TokunagaKohei",
      "link": "https://fukabori.fm/episode/54",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/3CvNhwF\">イラストでわかるDockerとKubernetes Software Design plus</a></li>\n  <li><a href=\"https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142\">DockerとKubernetesをかけめぐる</a></li>\n  <li>コンテナとは何か？</li>\n  <li>docker の大きな貢献って何だった？</li>\n  <li>コンテナランタイムとは何か？</li>\n  <li>コンテナの隔離とは、具体的にどのように実現するのか？</li>\n  <li>cgroups は実際に何をしているのか？</li>\n  <li>runc での実装例</li>\n  <li>他の隔離方法の概要</li>\n  <li>OCI とは何か？ OCI と runc の関係性は？</li>\n  <li>docker と OCIランタイム の関係</li>\n  <li>CRI ランタイムとは？</li>\n  <li>docker run 実行後の流れ</li>\n  <li>16:09 - 16:30 の「runc run」についての補足:\n    <ul>\n      <li>実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。</li>\n      <li>参考\n        <ul>\n          <li><a href=\"https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations\">OCI Runtime Specificationで定められるOCIランタイムへ可能な操作</a></li>\n          <li><a href=\"https://medium.com/nttlabs/runc-overview-263b83164c98\">runc runの実行とコードリーディング</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>高レベルランタイムとは？</li>\n  <li>docker以外のCLIランタイム実装</li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">Open Container Initiative Runtime Specification</a></li>\n  <li>OCI Runtime Specification には何が規定されているのか？</li>\n  <li>コンテナの材料には何が含まれているのか？</li>\n  <li>docker 登場以後の歴史</li>\n  <li><a href=\"https://github.com/rkt/rkt\">rkt - the pod-native container engine</a></li>\n  <li>kubernetes 利用時のコンテナ実行までの流れとは？</li>\n  <li>kubelet の役割</li>\n  <li>kubelet からの CRIランタイム への指示に使うプロトコル</li>\n  <li>dockershim が deprecated になったときに発生した誤解</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/54"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqtvafe14ez5a9cz8z.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 10 Aug 2021 14:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqtvafe14ez5a9cz8z.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4031/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:38:01",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/3CvNhwF\">イラストでわかるDockerとKubernetes Software Design plus</a></li>\n  <li><a href=\"https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142\">DockerとKubernetesをかけめぐる</a></li>\n  <li>コンテナとは何か？</li>\n  <li>docker の大きな貢献って何だった？</li>\n  <li>コンテナランタイムとは何か？</li>\n  <li>コンテナの隔離とは、具体的にどのように実現するのか？</li>\n  <li>cgroups は実際に何をしているのか？</li>\n  <li>runc での実装例</li>\n  <li>他の隔離方法の概要</li>\n  <li>OCI とは何か？ OCI と runc の関係性は？</li>\n  <li>docker と OCIランタイム の関係</li>\n  <li>CRI ランタイムとは？</li>\n  <li>docker run 実行後の流れ</li>\n  <li>16:09 - 16:30 の「runc run」についての補足:\n    <ul>\n      <li>実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。</li>\n      <li>参考\n        <ul>\n          <li><a href=\"https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations\">OCI Runtime Specificationで定められるOCIランタイムへ可能な操作</a></li>\n          <li><a href=\"https://medium.com/nttlabs/runc-overview-263b83164c98\">runc runの実行とコードリーディング</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>高レベルランタイムとは？</li>\n  <li>docker以外のCLIランタイム実装</li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">Open Container Initiative Runtime Specification</a></li>\n  <li>OCI Runtime Specification には何が規定されているのか？</li>\n  <li>コンテナの材料には何が含まれているのか？</li>\n  <li>docker 登場以後の歴史</li>\n  <li><a href=\"https://github.com/rkt/rkt\">rkt - the pod-native container engine</a></li>\n  <li>kubernetes 利用時のコンテナ実行までの流れとは？</li>\n  <li>kubelet の役割</li>\n  <li>kubelet からの CRIランタイム への指示に使うプロトコル</li>\n  <li>dockershim が deprecated になったときに発生した誤解</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/3CvNhwF\">イラストでわかるDockerとKubernetes Software Design plus</a></li>\n  <li><a href=\"https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142\">DockerとKubernetesをかけめぐる</a></li>\n  <li>コンテナとは何か？</li>\n  <li>docker の大きな貢献って何だった？</li>\n  <li>コンテナランタイムとは何か？</li>\n  <li>コンテナの隔離とは、具体的にどのように実現するのか？</li>\n  <li>cgroups は実際に何をしているのか？</li>\n  <li>runc での実装例</li>\n  <li>他の隔離方法の概要</li>\n  <li>OCI とは何か？ OCI と runc の関係性は？</li>\n  <li>docker と OCIランタイム の関係</li>\n  <li>CRI ランタイムとは？</li>\n  <li>docker run 実行後の流れ</li>\n  <li>16:09 - 16:30 の「runc run」についての補足:\n    <ul>\n      <li>実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。</li>\n      <li>参考\n        <ul>\n          <li><a href=\"https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations\">OCI Runtime Specificationで定められるOCIランタイムへ可能な操作</a></li>\n          <li><a href=\"https://medium.com/nttlabs/runc-overview-263b83164c98\">runc runの実行とコードリーディング</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>高レベルランタイムとは？</li>\n  <li>docker以外のCLIランタイム実装</li>\n  <li><a href=\"https://github.com/opencontainers/runtime-spec\">Open Container Initiative Runtime Specification</a></li>\n  <li>OCI Runtime Specification には何が規定されているのか？</li>\n  <li>コンテナの材料には何が含まれているのか？</li>\n  <li>docker 登場以後の歴史</li>\n  <li><a href=\"https://github.com/rkt/rkt\">rkt - the pod-native container engine</a></li>\n  <li>kubernetes 利用時のコンテナ実行までの流れとは？</li>\n  <li>kubelet の役割</li>\n  <li>kubelet からの CRIランタイム への指示に使うプロトコル</li>\n  <li>dockershim が deprecated になったときに発生した誤解</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "54. コンテナランタイム(前編) w/ TokunagaKohei",
      "itunes:episodeType": "full",
      "podcast:episode": 55
    },
    {
      "title": "53. 時系列データベースエンジン w/ nakabonne",
      "link": "https://fukabori.fm/episode/53",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://zenn.dev/nakabonne/articles/d300838a1500c7\">ゼロから作る時系列データベースエンジン</a></li>\n  <li>時系列データとは何か？</li>\n  <li>RDBで時系列データを扱う場合の課題とは？</li>\n  <li>時系列データの特徴とは？</li>\n  <li>イミュータブルなデータとは？</li>\n  <li><a href=\"https://www.influxdata.com/\">influxDB</a></li>\n  <li><a href=\"https://www.timescale.com/\">Timescale DB</a></li>\n  <li><a href=\"https://github.com/VictoriaMetrics/VictoriaMetrics\">VictoriaMetrics</a></li>\n  <li><a href=\"https://m3db.io/\">M3DB</a></li>\n  <li>時系列DBにおけるカーディナリティの高さとは？</li>\n  <li><a href=\"https://github.com/nakabonne/tstorage\">tstorage</a></li>\n  <li>なぜ時系列DBを自分で実装したのか？</li>\n  <li><a href=\"https://github.com/nakabonne/ali\">ali</a></li>\n  <li><a href=\"https://github.com/nakabonne/gosivy\">gosivy</a></li>\n  <li>tstorageの設計概要は？</li>\n  <li>パーティショニングのメリットとは？</li>\n  <li>Write Amplificatonとは？</li>\n  <li>Bloom Filter</li>\n  <li>LSM Treeとは？</li>\n  <li><a href=\"https://fukabori.fm/episode/34\">34. NewSQLとは w/ tzkb</a></li>\n  <li>メモリパーティションの特徴とは？</li>\n  <li>時系列データをソート済みにする工夫</li>\n  <li><a href=\"https://questdb.io/\">QuestDB</a></li>\n  <li>パーティションをフラッシュするタイミングは？</li>\n  <li>Write Ahead Log</li>\n  <li>データ量を削減する工夫は？</li>\n  <li><a href=\"http://www.vldb.org/pvldb/vol8/p1816-teller.pdf\">Gorilla: A Fast, Scalable, In-Memory Time Series Database</a></li>\n  <li>タイムスタンプとデータを分けて符号化する</li>\n  <li>delta encoding と delta-of-delta encoding</li>\n  <li>データ側はXORで符号化する</li>\n  <li>tstorageのdisadvantageは？</li>\n  <li>tstorageの今後の開発方針</li>\n  <li>YAGNI原則</li>\n  <li><a href=\"https://hrmos.co/pages/cyberagent-group/jobs/0000694\">【メディア事業部】サーバーサイドエンジニア（基盤）</a></li>\n</ul>\n\n<h2 id=\"宣伝\">宣伝</h2>\n\n<p><a href=\"https://www.patreon.com/fukabori\">fukabori.fm の個人スポンサー募集中</a></p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/53"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqyypqr64baaggdt6c.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Thu, 22 Jul 2021 13:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqyypqr64baaggdt6c.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4030/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:38:11",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://zenn.dev/nakabonne/articles/d300838a1500c7\">ゼロから作る時系列データベースエンジン</a></li>\n  <li>時系列データとは何か？</li>\n  <li>RDBで時系列データを扱う場合の課題とは？</li>\n  <li>時系列データの特徴とは？</li>\n  <li>イミュータブルなデータとは？</li>\n  <li><a href=\"https://www.influxdata.com/\">influxDB</a></li>\n  <li><a href=\"https://www.timescale.com/\">Timescale DB</a></li>\n  <li><a href=\"https://github.com/VictoriaMetrics/VictoriaMetrics\">VictoriaMetrics</a></li>\n  <li><a href=\"https://m3db.io/\">M3DB</a></li>\n  <li>時系列DBにおけるカーディナリティの高さとは？</li>\n  <li><a href=\"https://github.com/nakabonne/tstorage\">tstorage</a></li>\n  <li>なぜ時系列DBを自分で実装したのか？</li>\n  <li><a href=\"https://github.com/nakabonne/ali\">ali</a></li>\n  <li><a href=\"https://github.com/nakabonne/gosivy\">gosivy</a></li>\n  <li>tstorageの設計概要は？</li>\n  <li>パーティショニングのメリットとは？</li>\n  <li>Write Amplificatonとは？</li>\n  <li>Bloom Filter</li>\n  <li>LSM Treeとは？</li>\n  <li><a href=\"https://fukabori.fm/episode/34\">34. NewSQLとは w/ tzkb</a></li>\n  <li>メモリパーティションの特徴とは？</li>\n  <li>時系列データをソート済みにする工夫</li>\n  <li><a href=\"https://questdb.io/\">QuestDB</a></li>\n  <li>パーティションをフラッシュするタイミングは？</li>\n  <li>Write Ahead Log</li>\n  <li>データ量を削減する工夫は？</li>\n  <li><a href=\"http://www.vldb.org/pvldb/vol8/p1816-teller.pdf\">Gorilla: A Fast, Scalable, In-Memory Time Series Database</a></li>\n  <li>タイムスタンプとデータを分けて符号化する</li>\n  <li>delta encoding と delta-of-delta encoding</li>\n  <li>データ側はXORで符号化する</li>\n  <li>tstorageのdisadvantageは？</li>\n  <li>tstorageの今後の開発方針</li>\n  <li>YAGNI原則</li>\n  <li><a href=\"https://hrmos.co/pages/cyberagent-group/jobs/0000694\">【メディア事業部】サーバーサイドエンジニア（基盤）</a></li>\n</ul>\n\n<h2 id=\"宣伝\">宣伝</h2>\n\n<p><a href=\"https://www.patreon.com/fukabori\">fukabori.fm の個人スポンサー募集中</a></p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://zenn.dev/nakabonne/articles/d300838a1500c7\">ゼロから作る時系列データベースエンジン</a></li>\n  <li>時系列データとは何か？</li>\n  <li>RDBで時系列データを扱う場合の課題とは？</li>\n  <li>時系列データの特徴とは？</li>\n  <li>イミュータブルなデータとは？</li>\n  <li><a href=\"https://www.influxdata.com/\">influxDB</a></li>\n  <li><a href=\"https://www.timescale.com/\">Timescale DB</a></li>\n  <li><a href=\"https://github.com/VictoriaMetrics/VictoriaMetrics\">VictoriaMetrics</a></li>\n  <li><a href=\"https://m3db.io/\">M3DB</a></li>\n  <li>時系列DBにおけるカーディナリティの高さとは？</li>\n  <li><a href=\"https://github.com/nakabonne/tstorage\">tstorage</a></li>\n  <li>なぜ時系列DBを自分で実装したのか？</li>\n  <li><a href=\"https://github.com/nakabonne/ali\">ali</a></li>\n  <li><a href=\"https://github.com/nakabonne/gosivy\">gosivy</a></li>\n  <li>tstorageの設計概要は？</li>\n  <li>パーティショニングのメリットとは？</li>\n  <li>Write Amplificatonとは？</li>\n  <li>Bloom Filter</li>\n  <li>LSM Treeとは？</li>\n  <li><a href=\"https://fukabori.fm/episode/34\">34. NewSQLとは w/ tzkb</a></li>\n  <li>メモリパーティションの特徴とは？</li>\n  <li>時系列データをソート済みにする工夫</li>\n  <li><a href=\"https://questdb.io/\">QuestDB</a></li>\n  <li>パーティションをフラッシュするタイミングは？</li>\n  <li>Write Ahead Log</li>\n  <li>データ量を削減する工夫は？</li>\n  <li><a href=\"http://www.vldb.org/pvldb/vol8/p1816-teller.pdf\">Gorilla: A Fast, Scalable, In-Memory Time Series Database</a></li>\n  <li>タイムスタンプとデータを分けて符号化する</li>\n  <li>delta encoding と delta-of-delta encoding</li>\n  <li>データ側はXORで符号化する</li>\n  <li>tstorageのdisadvantageは？</li>\n  <li>tstorageの今後の開発方針</li>\n  <li>YAGNI原則</li>\n  <li><a href=\"https://hrmos.co/pages/cyberagent-group/jobs/0000694\">【メディア事業部】サーバーサイドエンジニア（基盤）</a></li>\n</ul>\n\n<h2 id=\"宣伝\">宣伝</h2>\n\n<p><a href=\"https://www.patreon.com/fukabori\">fukabori.fm の個人スポンサー募集中</a></p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "53. 時系列データベースエンジン w/ nakabonne",
      "itunes:episodeType": "full",
      "podcast:episode": 54
    },
    {
      "title": "52. ISUCON w/ 941",
      "link": "https://fukabori.fm/episode/52",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://isucon.net/\">ISUCON</a></li>\n  <li>ISUCONとは何か？</li>\n  <li>「ISUCON こわくないよ」</li>\n  <li><a href=\"https://fukabori.fm/episode/23\">ep23. 社内ISUCON w/ yosuke_furukawa</a></li>\n  <li>ISUCONはエンジニアの人生を変えてきたらしい</li>\n  <li>ISU婚</li>\n  <li>ISUCONの初回はどんな感じで進んでいった？</li>\n  <li>ISUCON3で予選導入、参加者はISUCON9まで増加</li>\n  <li>なぜ、ISUCONはこんなに注目されたのか？</li>\n  <li>ISUCONらしい問題を作る</li>\n  <li>リアルISUCON</li>\n  <li>ISUCON開催の大変なところ</li>\n  <li><a href=\"https://github.com/isucon/isucandar\">isucon/isucandar</a></li>\n  <li><a href=\"https://github.com/matsuu/aws-isucon\">ISUCON過去問</a></li>\n  <li><a href=\"https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate\">エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate</a></li>\n  <li>ISUCON沼</li>\n  <li><a href=\"https://isucon.net/archives/55835733.html\">ISUCON 事前講習2021</a></li>\n  <li>コミュニティは新しい人が入ってこないと終わってしまう</li>\n  <li>コミュニティ運営の続け方</li>\n  <li>コミュニティ参加者の想いを拾うために何をしているか？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://route06.co.jp/\">株式会社 ROUTE06</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/52"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqfatca9a03fp53cds.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 21 Jun 2021 20:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqfatca9a03fp53cds.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4029/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:43:02",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://isucon.net/\">ISUCON</a></li>\n  <li>ISUCONとは何か？</li>\n  <li>「ISUCON こわくないよ」</li>\n  <li><a href=\"https://fukabori.fm/episode/23\">ep23. 社内ISUCON w/ yosuke_furukawa</a></li>\n  <li>ISUCONはエンジニアの人生を変えてきたらしい</li>\n  <li>ISU婚</li>\n  <li>ISUCONの初回はどんな感じで進んでいった？</li>\n  <li>ISUCON3で予選導入、参加者はISUCON9まで増加</li>\n  <li>なぜ、ISUCONはこんなに注目されたのか？</li>\n  <li>ISUCONらしい問題を作る</li>\n  <li>リアルISUCON</li>\n  <li>ISUCON開催の大変なところ</li>\n  <li><a href=\"https://github.com/isucon/isucandar\">isucon/isucandar</a></li>\n  <li><a href=\"https://github.com/matsuu/aws-isucon\">ISUCON過去問</a></li>\n  <li><a href=\"https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate\">エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate</a></li>\n  <li>ISUCON沼</li>\n  <li><a href=\"https://isucon.net/archives/55835733.html\">ISUCON 事前講習2021</a></li>\n  <li>コミュニティは新しい人が入ってこないと終わってしまう</li>\n  <li>コミュニティ運営の続け方</li>\n  <li>コミュニティ参加者の想いを拾うために何をしているか？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://route06.co.jp/\">株式会社 ROUTE06</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://isucon.net/\">ISUCON</a></li>\n  <li>ISUCONとは何か？</li>\n  <li>「ISUCON こわくないよ」</li>\n  <li><a href=\"https://fukabori.fm/episode/23\">ep23. 社内ISUCON w/ yosuke_furukawa</a></li>\n  <li>ISUCONはエンジニアの人生を変えてきたらしい</li>\n  <li>ISU婚</li>\n  <li>ISUCONの初回はどんな感じで進んでいった？</li>\n  <li>ISUCON3で予選導入、参加者はISUCON9まで増加</li>\n  <li>なぜ、ISUCONはこんなに注目されたのか？</li>\n  <li>ISUCONらしい問題を作る</li>\n  <li>リアルISUCON</li>\n  <li>ISUCON開催の大変なところ</li>\n  <li><a href=\"https://github.com/isucon/isucandar\">isucon/isucandar</a></li>\n  <li><a href=\"https://github.com/matsuu/aws-isucon\">ISUCON過去問</a></li>\n  <li><a href=\"https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate\">エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate</a></li>\n  <li>ISUCON沼</li>\n  <li><a href=\"https://isucon.net/archives/55835733.html\">ISUCON 事前講習2021</a></li>\n  <li>コミュニティは新しい人が入ってこないと終わってしまう</li>\n  <li>コミュニティ運営の続け方</li>\n  <li>コミュニティ参加者の想いを拾うために何をしているか？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://route06.co.jp/\">株式会社 ROUTE06</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "52. ISUCON w/ 941",
      "itunes:episodeType": "full",
      "podcast:episode": 53
    },
    {
      "title": "51. 組織学習、心理的契約、エンゲージメント w/ tomomiminabe",
      "link": "https://fukabori.fm/episode/51",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://cultibase.jp/\">CULTIBASE</a></li>\n  <li>CI(Corporate Identity)</li>\n  <li>スタートアップがスタートアップのままスケールする</li>\n  <li>大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも</li>\n  <li>スタートアップの成長フェーズにおける組織課題とは？</li>\n  <li>書籍: <a href=\"https://amzn.to/3pd0eVI\">THE MODEL</a></li>\n  <li>ミドルマネージャの役割は何か？</li>\n  <li>マネージャにどのように成長してもらうのか？</li>\n  <li>書籍: <a href=\"https://amzn.to/2SPOdJV\">エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング</a></li>\n  <li>技術を理解していないマネージャの言うことをメンバが聞かない問題</li>\n  <li>大企業向けのコンサル提供では、振る舞いを変える</li>\n  <li>組織学習とは何か？</li>\n  <li>シングルループ学習とダブルループ学習</li>\n  <li>ふりかえりでは、シングルループに目が向きがちでは</li>\n  <li>制圧寄りのコミュニケーションの何が悪いのか？</li>\n  <li>対話の上手いファシリテートの方法</li>\n  <li>意見を言わないボトルネックを探す</li>\n  <li>定例の前に関係を作るのが大切</li>\n  <li>上司が一方的に話して、「何かありますか？」で終わる</li>\n  <li>1on1職人</li>\n  <li>初対面の人と1on1の警戒を解く方法</li>\n  <li><a href=\"https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121\">組織デザイン概論 - WDA研究会191121</a></li>\n  <li>従業員体験とは何か？</li>\n  <li>どうしたら従業員体験を損ねずに、評価面談を実施するか？</li>\n  <li>評価面談のアンチパターンとは？</li>\n  <li>ショッキング評価</li>\n  <li>心理的契約とは？</li>\n  <li>評価面談におけるストーリーテリングとは？</li>\n  <li>書籍: <a href=\"https://amzn.to/3vPNaZ4\">はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」</a></li>\n  <li>期待値調整</li>\n  <li>心理的契約をどうやって言語化するか？</li>\n  <li>エンゲージメントと従業員体験の関連は？</li>\n  <li>エンゲージメントとモチベーションの違い</li>\n  <li><a href=\"https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei\">担ぎたくなる“神輿上司”の目指し方</a></li>\n  <li>ミミグリではどのようにエンゲージメントを高めているか？</li>\n  <li>プレイフル</li>\n  <li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">株式会社MIMIGURI 採用募集(wantedly)</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://route06.co.jp/\">株式会社 ROUTE06</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/51"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nq7hrmvrmemztn7bks.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 02 Jun 2021 23:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nq7hrmvrmemztn7bks.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4028/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:54:40",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://cultibase.jp/\">CULTIBASE</a></li>\n  <li>CI(Corporate Identity)</li>\n  <li>スタートアップがスタートアップのままスケールする</li>\n  <li>大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも</li>\n  <li>スタートアップの成長フェーズにおける組織課題とは？</li>\n  <li>書籍: <a href=\"https://amzn.to/3pd0eVI\">THE MODEL</a></li>\n  <li>ミドルマネージャの役割は何か？</li>\n  <li>マネージャにどのように成長してもらうのか？</li>\n  <li>書籍: <a href=\"https://amzn.to/2SPOdJV\">エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング</a></li>\n  <li>技術を理解していないマネージャの言うことをメンバが聞かない問題</li>\n  <li>大企業向けのコンサル提供では、振る舞いを変える</li>\n  <li>組織学習とは何か？</li>\n  <li>シングルループ学習とダブルループ学習</li>\n  <li>ふりかえりでは、シングルループに目が向きがちでは</li>\n  <li>制圧寄りのコミュニケーションの何が悪いのか？</li>\n  <li>対話の上手いファシリテートの方法</li>\n  <li>意見を言わないボトルネックを探す</li>\n  <li>定例の前に関係を作るのが大切</li>\n  <li>上司が一方的に話して、「何かありますか？」で終わる</li>\n  <li>1on1職人</li>\n  <li>初対面の人と1on1の警戒を解く方法</li>\n  <li><a href=\"https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121\">組織デザイン概論 - WDA研究会191121</a></li>\n  <li>従業員体験とは何か？</li>\n  <li>どうしたら従業員体験を損ねずに、評価面談を実施するか？</li>\n  <li>評価面談のアンチパターンとは？</li>\n  <li>ショッキング評価</li>\n  <li>心理的契約とは？</li>\n  <li>評価面談におけるストーリーテリングとは？</li>\n  <li>書籍: <a href=\"https://amzn.to/3vPNaZ4\">はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」</a></li>\n  <li>期待値調整</li>\n  <li>心理的契約をどうやって言語化するか？</li>\n  <li>エンゲージメントと従業員体験の関連は？</li>\n  <li>エンゲージメントとモチベーションの違い</li>\n  <li><a href=\"https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei\">担ぎたくなる“神輿上司”の目指し方</a></li>\n  <li>ミミグリではどのようにエンゲージメントを高めているか？</li>\n  <li>プレイフル</li>\n  <li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">株式会社MIMIGURI 採用募集(wantedly)</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://route06.co.jp/\">株式会社 ROUTE06</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://cultibase.jp/\">CULTIBASE</a></li>\n  <li>CI(Corporate Identity)</li>\n  <li>スタートアップがスタートアップのままスケールする</li>\n  <li>大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも</li>\n  <li>スタートアップの成長フェーズにおける組織課題とは？</li>\n  <li>書籍: <a href=\"https://amzn.to/3pd0eVI\">THE MODEL</a></li>\n  <li>ミドルマネージャの役割は何か？</li>\n  <li>マネージャにどのように成長してもらうのか？</li>\n  <li>書籍: <a href=\"https://amzn.to/2SPOdJV\">エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング</a></li>\n  <li>技術を理解していないマネージャの言うことをメンバが聞かない問題</li>\n  <li>大企業向けのコンサル提供では、振る舞いを変える</li>\n  <li>組織学習とは何か？</li>\n  <li>シングルループ学習とダブルループ学習</li>\n  <li>ふりかえりでは、シングルループに目が向きがちでは</li>\n  <li>制圧寄りのコミュニケーションの何が悪いのか？</li>\n  <li>対話の上手いファシリテートの方法</li>\n  <li>意見を言わないボトルネックを探す</li>\n  <li>定例の前に関係を作るのが大切</li>\n  <li>上司が一方的に話して、「何かありますか？」で終わる</li>\n  <li>1on1職人</li>\n  <li>初対面の人と1on1の警戒を解く方法</li>\n  <li><a href=\"https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121\">組織デザイン概論 - WDA研究会191121</a></li>\n  <li>従業員体験とは何か？</li>\n  <li>どうしたら従業員体験を損ねずに、評価面談を実施するか？</li>\n  <li>評価面談のアンチパターンとは？</li>\n  <li>ショッキング評価</li>\n  <li>心理的契約とは？</li>\n  <li>評価面談におけるストーリーテリングとは？</li>\n  <li>書籍: <a href=\"https://amzn.to/3vPNaZ4\">はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」</a></li>\n  <li>期待値調整</li>\n  <li>心理的契約をどうやって言語化するか？</li>\n  <li>エンゲージメントと従業員体験の関連は？</li>\n  <li>エンゲージメントとモチベーションの違い</li>\n  <li><a href=\"https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei\">担ぎたくなる“神輿上司”の目指し方</a></li>\n  <li>ミミグリではどのようにエンゲージメントを高めているか？</li>\n  <li>プレイフル</li>\n  <li><a href=\"https://www.wantedly.com/companies/mimiguri/projects\">株式会社MIMIGURI 採用募集(wantedly)</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://route06.co.jp/\">株式会社 ROUTE06</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "51. 組織学習、心理的契約、エンゲージメント w/ tomomiminabe",
      "itunes:episodeType": "full",
      "podcast:episode": 52
    },
    {
      "title": "50. 社内DevOps基盤、Tekton、Cuelang w/ JunMakishi",
      "link": "https://fukabori.fm/episode/50",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>社内DevOps基盤の狙いとは？</li>\n  <li>アプリケーションのライフサイクル管理とは？</li>\n  <li>対応するクラウドなどは？</li>\n  <li>市中にも同様のSaaSがあるが、なぜ自社開発するのか？</li>\n  <li>エンタープライズ向け・自社用での作り込みとは、たとえば何を？</li>\n  <li>どういう技術を利用しているのか？</li>\n  <li><a href=\"https://tekton.dev/\">Tekton</a></li>\n  <li>Tektonは何をするのか？</li>\n  <li><a href=\"https://jenkins-x.io/\">Jenkins X</a> でも Tektonを活用</li>\n  <li>ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？</li>\n  <li>Tektonの採用事例は増えている？</li>\n  <li><a href=\"https://spinnaker.io/\">Spinnaker</a></li>\n  <li><a href=\"https://github.com/argoproj/argo-workflows\">Argo Workflows</a></li>\n  <li>なぜTektonを採用したのか？</li>\n  <li><a href=\"https://github.com/GoogleContainerTools/kaniko\">kaniko</a></li>\n  <li><a href=\"https://cuelang.org/\">CUE</a></li>\n  <li>なぜCUEを利用するのか？</li>\n  <li>YAMLやJSONとの違いは？</li>\n  <li>HashiCorp Configuration Language</li>\n  <li>CUEの特徴は？</li>\n  <li>Type Validation</li>\n  <li>Overlayを認めておらず、Unifyする</li>\n  <li><a href=\"https://jsonnet.org/\">jsonnet</a></li>\n  <li><a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a></li>\n  <li>なぜ、CUEでOverlayを認めていないのか？</li>\n  <li>GopherがCUEの開発に携わっている</li>\n  <li>CUEは日本でも採用されている？</li>\n  <li><a href=\"https://changelog.com/gotime/163\">gotime</a></li>\n  <li>Grafanaでも取り込まれつつある</li>\n  <li>社内的になぜCUEを採用するのか？</li>\n  <li>社内に基盤の良さを伝えるのは大変では？</li>\n  <li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0000019\">採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/50"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqmhxffk4bm7vbk9ar.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 25 May 2021 23:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqmhxffk4bm7vbk9ar.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4027/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:36:40",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>社内DevOps基盤の狙いとは？</li>\n  <li>アプリケーションのライフサイクル管理とは？</li>\n  <li>対応するクラウドなどは？</li>\n  <li>市中にも同様のSaaSがあるが、なぜ自社開発するのか？</li>\n  <li>エンタープライズ向け・自社用での作り込みとは、たとえば何を？</li>\n  <li>どういう技術を利用しているのか？</li>\n  <li><a href=\"https://tekton.dev/\">Tekton</a></li>\n  <li>Tektonは何をするのか？</li>\n  <li><a href=\"https://jenkins-x.io/\">Jenkins X</a> でも Tektonを活用</li>\n  <li>ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？</li>\n  <li>Tektonの採用事例は増えている？</li>\n  <li><a href=\"https://spinnaker.io/\">Spinnaker</a></li>\n  <li><a href=\"https://github.com/argoproj/argo-workflows\">Argo Workflows</a></li>\n  <li>なぜTektonを採用したのか？</li>\n  <li><a href=\"https://github.com/GoogleContainerTools/kaniko\">kaniko</a></li>\n  <li><a href=\"https://cuelang.org/\">CUE</a></li>\n  <li>なぜCUEを利用するのか？</li>\n  <li>YAMLやJSONとの違いは？</li>\n  <li>HashiCorp Configuration Language</li>\n  <li>CUEの特徴は？</li>\n  <li>Type Validation</li>\n  <li>Overlayを認めておらず、Unifyする</li>\n  <li><a href=\"https://jsonnet.org/\">jsonnet</a></li>\n  <li><a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a></li>\n  <li>なぜ、CUEでOverlayを認めていないのか？</li>\n  <li>GopherがCUEの開発に携わっている</li>\n  <li>CUEは日本でも採用されている？</li>\n  <li><a href=\"https://changelog.com/gotime/163\">gotime</a></li>\n  <li>Grafanaでも取り込まれつつある</li>\n  <li>社内的になぜCUEを採用するのか？</li>\n  <li>社内に基盤の良さを伝えるのは大変では？</li>\n  <li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0000019\">採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>社内DevOps基盤の狙いとは？</li>\n  <li>アプリケーションのライフサイクル管理とは？</li>\n  <li>対応するクラウドなどは？</li>\n  <li>市中にも同様のSaaSがあるが、なぜ自社開発するのか？</li>\n  <li>エンタープライズ向け・自社用での作り込みとは、たとえば何を？</li>\n  <li>どういう技術を利用しているのか？</li>\n  <li><a href=\"https://tekton.dev/\">Tekton</a></li>\n  <li>Tektonは何をするのか？</li>\n  <li><a href=\"https://jenkins-x.io/\">Jenkins X</a> でも Tektonを活用</li>\n  <li>ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？</li>\n  <li>Tektonの採用事例は増えている？</li>\n  <li><a href=\"https://spinnaker.io/\">Spinnaker</a></li>\n  <li><a href=\"https://github.com/argoproj/argo-workflows\">Argo Workflows</a></li>\n  <li>なぜTektonを採用したのか？</li>\n  <li><a href=\"https://github.com/GoogleContainerTools/kaniko\">kaniko</a></li>\n  <li><a href=\"https://cuelang.org/\">CUE</a></li>\n  <li>なぜCUEを利用するのか？</li>\n  <li>YAMLやJSONとの違いは？</li>\n  <li>HashiCorp Configuration Language</li>\n  <li>CUEの特徴は？</li>\n  <li>Type Validation</li>\n  <li>Overlayを認めておらず、Unifyする</li>\n  <li><a href=\"https://jsonnet.org/\">jsonnet</a></li>\n  <li><a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a></li>\n  <li>なぜ、CUEでOverlayを認めていないのか？</li>\n  <li>GopherがCUEの開発に携わっている</li>\n  <li>CUEは日本でも採用されている？</li>\n  <li><a href=\"https://changelog.com/gotime/163\">gotime</a></li>\n  <li>Grafanaでも取り込まれつつある</li>\n  <li>社内的になぜCUEを採用するのか？</li>\n  <li>社内に基盤の良さを伝えるのは大変では？</li>\n  <li><a href=\"https://hrmos.co/pages/nttcom0033/jobs/0000019\">採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "50. 社内DevOps基盤、Tekton、Cuelang w/ JunMakishi",
      "itunes:episodeType": "full",
      "podcast:episode": 51
    },
    {
      "title": "49. GoFデザインパターンとDI + リファクタリング (後編) w/ twada",
      "link": "https://fukabori.fm/episode/49",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>DIを勉強したい場合には何を参照する？</li>\n  <li>書籍: <a href=\"https://amzn.to/3omXLrc\">Dependency Injection Principles, Practices, and Patterns</a></li>\n  <li><a href=\"https://laravel.com/\">Laravel</a></li>\n  <li><a href=\"https://github.com/silexphp/Pimple\">Pimple</a></li>\n  <li>書籍: <a href=\"https://amzn.to/3tQcLix\">Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本</a></li>\n  <li>GoFデザインパターンは、なぜここまで普及したのか？</li>\n  <li>OOPを理解するきっかけになったため</li>\n  <li>差分プログラミングの誤解</li>\n  <li>継承には悪い面も多い</li>\n  <li>書籍: <a href=\"https://amzn.to/3tU8n1S\">増補改訂版Java言語で学ぶデザインパターン入門</a></li>\n  <li>OMT法とUML</li>\n  <li>Don’t Repeat Yourself 原則 と 差分プログラミング</li>\n  <li>差分プログラミングは、継承以外の手法でも実現できる</li>\n  <li>is-a と has-a</li>\n  <li>構造ではなくて、責務・振る舞いについてプログラミングする</li>\n  <li>DIコンテナ と Main関数</li>\n  <li>継承があるデザインパターンの現代における利用価値は？</li>\n  <li>GolangやRustには継承がそもそもない</li>\n  <li>Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった</li>\n  <li>Template method は現代においても使う</li>\n  <li>Abstract Factory と DIコンテナ は似ている？</li>\n  <li>リファクタリングとデザインパターンは、どういう関係性があるのか？</li>\n  <li>「こういうこともあろうかと」</li>\n  <li>YAGNI(You aren’t gonna need it)</li>\n  <li>リファクタリングのターゲットとしてのデザインパターン</li>\n  <li>振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？</li>\n  <li>テストピラミッド</li>\n  <li>ユニットテストしかないのは、あまり良い状況ではない</li>\n  <li><a href=\"https://www.informit.com/articles/article.aspx?p=1404056\">15 年後に再整理された Design Patterns</a></li>\n  <li>Null Object</li>\n  <li>Nullish coalescing</li>\n  <li>書籍: <a href=\"https://amzn.to/3uXI2Bq\">テスト駆動開発</a></li>\n  <li>書籍: <a href=\"https://amzn.to/2SRzZIh\">リファクタリング(第2版): 既存のコードを安全に改善する</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/49"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqfrn3f1qfwdjtezxq.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 17 May 2021 11:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nqfrn3f1qfwdjtezxq.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4026/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:01:49",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>DIを勉強したい場合には何を参照する？</li>\n  <li>書籍: <a href=\"https://amzn.to/3omXLrc\">Dependency Injection Principles, Practices, and Patterns</a></li>\n  <li><a href=\"https://laravel.com/\">Laravel</a></li>\n  <li><a href=\"https://github.com/silexphp/Pimple\">Pimple</a></li>\n  <li>書籍: <a href=\"https://amzn.to/3tQcLix\">Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本</a></li>\n  <li>GoFデザインパターンは、なぜここまで普及したのか？</li>\n  <li>OOPを理解するきっかけになったため</li>\n  <li>差分プログラミングの誤解</li>\n  <li>継承には悪い面も多い</li>\n  <li>書籍: <a href=\"https://amzn.to/3tU8n1S\">増補改訂版Java言語で学ぶデザインパターン入門</a></li>\n  <li>OMT法とUML</li>\n  <li>Don’t Repeat Yourself 原則 と 差分プログラミング</li>\n  <li>差分プログラミングは、継承以外の手法でも実現できる</li>\n  <li>is-a と has-a</li>\n  <li>構造ではなくて、責務・振る舞いについてプログラミングする</li>\n  <li>DIコンテナ と Main関数</li>\n  <li>継承があるデザインパターンの現代における利用価値は？</li>\n  <li>GolangやRustには継承がそもそもない</li>\n  <li>Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった</li>\n  <li>Template method は現代においても使う</li>\n  <li>Abstract Factory と DIコンテナ は似ている？</li>\n  <li>リファクタリングとデザインパターンは、どういう関係性があるのか？</li>\n  <li>「こういうこともあろうかと」</li>\n  <li>YAGNI(You aren’t gonna need it)</li>\n  <li>リファクタリングのターゲットとしてのデザインパターン</li>\n  <li>振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？</li>\n  <li>テストピラミッド</li>\n  <li>ユニットテストしかないのは、あまり良い状況ではない</li>\n  <li><a href=\"https://www.informit.com/articles/article.aspx?p=1404056\">15 年後に再整理された Design Patterns</a></li>\n  <li>Null Object</li>\n  <li>Nullish coalescing</li>\n  <li>書籍: <a href=\"https://amzn.to/3uXI2Bq\">テスト駆動開発</a></li>\n  <li>書籍: <a href=\"https://amzn.to/2SRzZIh\">リファクタリング(第2版): 既存のコードを安全に改善する</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>DIを勉強したい場合には何を参照する？</li>\n  <li>書籍: <a href=\"https://amzn.to/3omXLrc\">Dependency Injection Principles, Practices, and Patterns</a></li>\n  <li><a href=\"https://laravel.com/\">Laravel</a></li>\n  <li><a href=\"https://github.com/silexphp/Pimple\">Pimple</a></li>\n  <li>書籍: <a href=\"https://amzn.to/3tQcLix\">Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本</a></li>\n  <li>GoFデザインパターンは、なぜここまで普及したのか？</li>\n  <li>OOPを理解するきっかけになったため</li>\n  <li>差分プログラミングの誤解</li>\n  <li>継承には悪い面も多い</li>\n  <li>書籍: <a href=\"https://amzn.to/3tU8n1S\">増補改訂版Java言語で学ぶデザインパターン入門</a></li>\n  <li>OMT法とUML</li>\n  <li>Don’t Repeat Yourself 原則 と 差分プログラミング</li>\n  <li>差分プログラミングは、継承以外の手法でも実現できる</li>\n  <li>is-a と has-a</li>\n  <li>構造ではなくて、責務・振る舞いについてプログラミングする</li>\n  <li>DIコンテナ と Main関数</li>\n  <li>継承があるデザインパターンの現代における利用価値は？</li>\n  <li>GolangやRustには継承がそもそもない</li>\n  <li>Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった</li>\n  <li>Template method は現代においても使う</li>\n  <li>Abstract Factory と DIコンテナ は似ている？</li>\n  <li>リファクタリングとデザインパターンは、どういう関係性があるのか？</li>\n  <li>「こういうこともあろうかと」</li>\n  <li>YAGNI(You aren’t gonna need it)</li>\n  <li>リファクタリングのターゲットとしてのデザインパターン</li>\n  <li>振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？</li>\n  <li>テストピラミッド</li>\n  <li>ユニットテストしかないのは、あまり良い状況ではない</li>\n  <li><a href=\"https://www.informit.com/articles/article.aspx?p=1404056\">15 年後に再整理された Design Patterns</a></li>\n  <li>Null Object</li>\n  <li>Nullish coalescing</li>\n  <li>書籍: <a href=\"https://amzn.to/3uXI2Bq\">テスト駆動開発</a></li>\n  <li>書籍: <a href=\"https://amzn.to/2SRzZIh\">リファクタリング(第2版): 既存のコードを安全に改善する</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "49. GoFデザインパターンとDI + リファクタリング (後編) w/ twada",
      "itunes:episodeType": "full",
      "podcast:episode": 50
    },
    {
      "title": "48. GoFデザインパターンとDI (前編) w/ twada",
      "link": "https://fukabori.fm/episode/48",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>デザインパターンとは？</li>\n  <li>ソフトウェアパターン</li>\n  <li>書籍: <a href=\"https://amzn.to/3y1OuJU\">オブジェクト指向における再利用のためのデザインパターン</a></li>\n  <li>Gang of Four</li>\n  <li>進研ゼミみたいなもの</li>\n  <li>Composite パターン</li>\n  <li>デザインパターン以外のソフトウェアパターンとは？</li>\n  <li>アーキテクチャパターン、アンチパターン、コンカレンシーパターン</li>\n  <li><a href=\"http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8\">AWSクラウドデザインパターン</a></li>\n  <li>パターンにはフォーマットがある</li>\n  <li>GoFのデザインパターンはいつ頃生まれたもの？</li>\n  <li>GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？</li>\n  <li><a href=\"https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html\">Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ</a></li>\n  <li>C、C++、Perl、Smalltalk、Visual Basic の時代</li>\n  <li>デザインパターンには、どういうカテゴリがある？</li>\n  <li>生成・構造・振る舞い</li>\n  <li>Javaのクラスライブラリにおけるデザインパターン利用</li>\n  <li>GoFデザインパターンは、2021年において活用できるのか？</li>\n  <li>Iteratorパターン の言語標準実装</li>\n  <li>Iterator の登場背景とは？本質とは？</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Depth-first_search\">深さ優先探索</a>と<a href=\"https://en.wikipedia.org/wiki/Breadth-first_search\">幅優先探索</a></li>\n  <li>2021年で不要となったデザインパターンは？</li>\n  <li>Singletonパターンはいらない</li>\n  <li>Singletonパターンが解きたかった課題と引き起こす副作用</li>\n  <li>グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない</li>\n  <li>Singletonの解決したかった課題を、現代ではどう解くのか？</li>\n  <li>DI(Dependenc Injection)</li>\n  <li>IoC(Inversion of Control)</li>\n  <li>オブジェクト指向における依存性解決</li>\n  <li>DIは、たとえばどう実装するのか？</li>\n  <li>DI Containerとは？</li>\n  <li>生成知識は結合度が高い</li>\n  <li>書籍: <a href=\"https://amzn.to/3nZGvbs\">LeanとDevOpsの科学</a></li>\n  <li>DI Container はどう実装するのか？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/48"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nq95390v8ghmk4md1p.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 09 May 2021 23:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nq95390v8ghmk4md1p.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4025/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:57:28",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>デザインパターンとは？</li>\n  <li>ソフトウェアパターン</li>\n  <li>書籍: <a href=\"https://amzn.to/3y1OuJU\">オブジェクト指向における再利用のためのデザインパターン</a></li>\n  <li>Gang of Four</li>\n  <li>進研ゼミみたいなもの</li>\n  <li>Composite パターン</li>\n  <li>デザインパターン以外のソフトウェアパターンとは？</li>\n  <li>アーキテクチャパターン、アンチパターン、コンカレンシーパターン</li>\n  <li><a href=\"http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8\">AWSクラウドデザインパターン</a></li>\n  <li>パターンにはフォーマットがある</li>\n  <li>GoFのデザインパターンはいつ頃生まれたもの？</li>\n  <li>GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？</li>\n  <li><a href=\"https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html\">Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ</a></li>\n  <li>C、C++、Perl、Smalltalk、Visual Basic の時代</li>\n  <li>デザインパターンには、どういうカテゴリがある？</li>\n  <li>生成・構造・振る舞い</li>\n  <li>Javaのクラスライブラリにおけるデザインパターン利用</li>\n  <li>GoFデザインパターンは、2021年において活用できるのか？</li>\n  <li>Iteratorパターン の言語標準実装</li>\n  <li>Iterator の登場背景とは？本質とは？</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Depth-first_search\">深さ優先探索</a>と<a href=\"https://en.wikipedia.org/wiki/Breadth-first_search\">幅優先探索</a></li>\n  <li>2021年で不要となったデザインパターンは？</li>\n  <li>Singletonパターンはいらない</li>\n  <li>Singletonパターンが解きたかった課題と引き起こす副作用</li>\n  <li>グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない</li>\n  <li>Singletonの解決したかった課題を、現代ではどう解くのか？</li>\n  <li>DI(Dependenc Injection)</li>\n  <li>IoC(Inversion of Control)</li>\n  <li>オブジェクト指向における依存性解決</li>\n  <li>DIは、たとえばどう実装するのか？</li>\n  <li>DI Containerとは？</li>\n  <li>生成知識は結合度が高い</li>\n  <li>書籍: <a href=\"https://amzn.to/3nZGvbs\">LeanとDevOpsの科学</a></li>\n  <li>DI Container はどう実装するのか？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>デザインパターンとは？</li>\n  <li>ソフトウェアパターン</li>\n  <li>書籍: <a href=\"https://amzn.to/3y1OuJU\">オブジェクト指向における再利用のためのデザインパターン</a></li>\n  <li>Gang of Four</li>\n  <li>進研ゼミみたいなもの</li>\n  <li>Composite パターン</li>\n  <li>デザインパターン以外のソフトウェアパターンとは？</li>\n  <li>アーキテクチャパターン、アンチパターン、コンカレンシーパターン</li>\n  <li><a href=\"http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8\">AWSクラウドデザインパターン</a></li>\n  <li>パターンにはフォーマットがある</li>\n  <li>GoFのデザインパターンはいつ頃生まれたもの？</li>\n  <li>GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？</li>\n  <li><a href=\"https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html\">Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ</a></li>\n  <li>C、C++、Perl、Smalltalk、Visual Basic の時代</li>\n  <li>デザインパターンには、どういうカテゴリがある？</li>\n  <li>生成・構造・振る舞い</li>\n  <li>Javaのクラスライブラリにおけるデザインパターン利用</li>\n  <li>GoFデザインパターンは、2021年において活用できるのか？</li>\n  <li>Iteratorパターン の言語標準実装</li>\n  <li>Iterator の登場背景とは？本質とは？</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Depth-first_search\">深さ優先探索</a>と<a href=\"https://en.wikipedia.org/wiki/Breadth-first_search\">幅優先探索</a></li>\n  <li>2021年で不要となったデザインパターンは？</li>\n  <li>Singletonパターンはいらない</li>\n  <li>Singletonパターンが解きたかった課題と引き起こす副作用</li>\n  <li>グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない</li>\n  <li>Singletonの解決したかった課題を、現代ではどう解くのか？</li>\n  <li>DI(Dependenc Injection)</li>\n  <li>IoC(Inversion of Control)</li>\n  <li>オブジェクト指向における依存性解決</li>\n  <li>DIは、たとえばどう実装するのか？</li>\n  <li>DI Containerとは？</li>\n  <li>生成知識は結合度が高い</li>\n  <li>書籍: <a href=\"https://amzn.to/3nZGvbs\">LeanとDevOpsの科学</a></li>\n  <li>DI Container はどう実装するのか？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://www.yumemi.co.jp/\">株式会社ゆめみ</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "48. GoFデザインパターンとDI (前編) w/ twada",
      "itunes:episodeType": "full",
      "podcast:episode": 49
    },
    {
      "title": "47. プロダクトマネジメントのすべて w/ takoratta",
      "link": "https://fukabori.fm/episode/47",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/2R5SxUo\">プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで</a></li>\n  <li>書籍の概要</li>\n  <li>プロダクトの成功とチームの組成</li>\n  <li>Core/Why/What/How</li>\n  <li>プロダクトマネージャ以外の人だと、誰が読むべき？</li>\n  <li>プロダクトマネジメントの応用範囲の広さ</li>\n  <li>アウトプットじゃなくアウトカムを考える</li>\n  <li>大企業のミッションは抽象度が高いが、それを上手く使う</li>\n  <li>会社を自己実現に活用する</li>\n  <li>大義に沿っているかどうか</li>\n  <li>書籍のおすすめの読み方</li>\n  <li>そもそも執筆者陣は、どうやって勉強して執筆したのか？</li>\n  <li>大量にあるフレームワークは使わなければいけないのか？</li>\n  <li>プロダクトマネージャとプロダクトオーナとの関係性は？</li>\n  <li>プロダクトマネージャの毎日のタイムテーブル</li>\n  <li>企業内で、プロダクトマネジメントの概念をどのように広めていくか？</li>\n  <li>プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？</li>\n  <li>KGI/KPI/NSM</li>\n  <li>プロダクトマネージャはどのように信頼を積み重ねていくのか？</li>\n  <li>KPIやNSMを振り返るタイミング、頻度？</li>\n  <li>さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？</li>\n  <li>プロダクトマネージャの本当の成長の多くは、OJTである</li>\n  <li><a href=\"https://productmanagement-criteria.com/\">プロダクトマネジメントクライテリア</a></li>\n  <li><a href=\"https://note.com/tably/n/nce04f2446a86\">プロダクトをつくる力をアセスメントするDIA for PMのご案内</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/47"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nq8q92dzce2ggepztw.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 04 Apr 2021 11:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nq8q92dzce2ggepztw.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4024/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:56:54",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/2R5SxUo\">プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで</a></li>\n  <li>書籍の概要</li>\n  <li>プロダクトの成功とチームの組成</li>\n  <li>Core/Why/What/How</li>\n  <li>プロダクトマネージャ以外の人だと、誰が読むべき？</li>\n  <li>プロダクトマネジメントの応用範囲の広さ</li>\n  <li>アウトプットじゃなくアウトカムを考える</li>\n  <li>大企業のミッションは抽象度が高いが、それを上手く使う</li>\n  <li>会社を自己実現に活用する</li>\n  <li>大義に沿っているかどうか</li>\n  <li>書籍のおすすめの読み方</li>\n  <li>そもそも執筆者陣は、どうやって勉強して執筆したのか？</li>\n  <li>大量にあるフレームワークは使わなければいけないのか？</li>\n  <li>プロダクトマネージャとプロダクトオーナとの関係性は？</li>\n  <li>プロダクトマネージャの毎日のタイムテーブル</li>\n  <li>企業内で、プロダクトマネジメントの概念をどのように広めていくか？</li>\n  <li>プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？</li>\n  <li>KGI/KPI/NSM</li>\n  <li>プロダクトマネージャはどのように信頼を積み重ねていくのか？</li>\n  <li>KPIやNSMを振り返るタイミング、頻度？</li>\n  <li>さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？</li>\n  <li>プロダクトマネージャの本当の成長の多くは、OJTである</li>\n  <li><a href=\"https://productmanagement-criteria.com/\">プロダクトマネジメントクライテリア</a></li>\n  <li><a href=\"https://note.com/tably/n/nce04f2446a86\">プロダクトをつくる力をアセスメントするDIA for PMのご案内</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/2R5SxUo\">プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで</a></li>\n  <li>書籍の概要</li>\n  <li>プロダクトの成功とチームの組成</li>\n  <li>Core/Why/What/How</li>\n  <li>プロダクトマネージャ以外の人だと、誰が読むべき？</li>\n  <li>プロダクトマネジメントの応用範囲の広さ</li>\n  <li>アウトプットじゃなくアウトカムを考える</li>\n  <li>大企業のミッションは抽象度が高いが、それを上手く使う</li>\n  <li>会社を自己実現に活用する</li>\n  <li>大義に沿っているかどうか</li>\n  <li>書籍のおすすめの読み方</li>\n  <li>そもそも執筆者陣は、どうやって勉強して執筆したのか？</li>\n  <li>大量にあるフレームワークは使わなければいけないのか？</li>\n  <li>プロダクトマネージャとプロダクトオーナとの関係性は？</li>\n  <li>プロダクトマネージャの毎日のタイムテーブル</li>\n  <li>企業内で、プロダクトマネジメントの概念をどのように広めていくか？</li>\n  <li>プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？</li>\n  <li>KGI/KPI/NSM</li>\n  <li>プロダクトマネージャはどのように信頼を積み重ねていくのか？</li>\n  <li>KPIやNSMを振り返るタイミング、頻度？</li>\n  <li>さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？</li>\n  <li>プロダクトマネージャの本当の成長の多くは、OJTである</li>\n  <li><a href=\"https://productmanagement-criteria.com/\">プロダクトマネジメントクライテリア</a></li>\n  <li><a href=\"https://note.com/tably/n/nce04f2446a86\">プロダクトをつくる力をアセスメントするDIA for PMのご案内</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "47. プロダクトマネジメントのすべて w/ takoratta",
      "itunes:episodeType": "full",
      "podcast:episode": 48
    },
    {
      "title": "46. アジャイルコーチとは？ w/ yohhatu",
      "link": "https://fukabori.fm/episode/46",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>アジャイルコーチって何？</li>\n  <li>多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？</li>\n  <li>アジャイルコーチリファラル</li>\n  <li>RSGT、アジャイルコーチコミュニティ</li>\n  <li>ペアコーチによる現場支援体制</li>\n  <li>どれが正解か分からないので、試してみたらいい</li>\n  <li>透明性は現場ごとに違う</li>\n  <li>透明性を高くするためには何をするのか？</li>\n  <li>解像度をあげるための取り組みとは？</li>\n  <li>現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？</li>\n  <li>スクラムガイドと現場の間の溝を埋める</li>\n  <li>事例を伝える旅人</li>\n  <li>ファシリテーションで何をするのか？</li>\n  <li>良いファシリテーションとは何か？</li>\n  <li>アジェンダからトピックがはずれたときの対応</li>\n  <li>親指投票とは何か？</li>\n  <li>ファイブフィンガーとは？</li>\n  <li><a href=\"https://amzn.to/3tIG2wa\">カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで</a></li>\n  <li>前の人の意見にひっぱられる問題</li>\n  <li>同調圧力がかかる状況を減らす</li>\n  <li>ファシリテーションをどうやって学べばいいのか？</li>\n  <li><a href=\"https://www.sonicgarden.jp/members/fujiwara\">ソニックガーデンの藤原さん</a></li>\n  <li>現場でどのような悩みを解決するのか？</li>\n  <li>ええ感じに解決するの、ええ感じとは何か？</li>\n  <li>正しいことを言えば物事が進むわけじゃない</li>\n  <li>技術的問題と適応課題</li>\n  <li><a href=\"https://amzn.to/2PaGCDV\">学習する組織 ― システム思考で未来を創造する</a></li>\n  <li><a href=\"https://amzn.to/2Ph91s0\">他者と働く──「わかりあえなさ」から始める組織論</a></li>\n  <li>大変だからしなくていいわけじゃない</li>\n  <li>アジャイルコーチに依頼して上手くいったことの指標・判断は？</li>\n  <li>ベロシティを上げるのを目的にしてはいけない</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/46"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7np07yj9k1jnhr49ssv.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 21 Mar 2021 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7np07yj9k1jnhr49ssv.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4023/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:44:06",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>アジャイルコーチって何？</li>\n  <li>多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？</li>\n  <li>アジャイルコーチリファラル</li>\n  <li>RSGT、アジャイルコーチコミュニティ</li>\n  <li>ペアコーチによる現場支援体制</li>\n  <li>どれが正解か分からないので、試してみたらいい</li>\n  <li>透明性は現場ごとに違う</li>\n  <li>透明性を高くするためには何をするのか？</li>\n  <li>解像度をあげるための取り組みとは？</li>\n  <li>現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？</li>\n  <li>スクラムガイドと現場の間の溝を埋める</li>\n  <li>事例を伝える旅人</li>\n  <li>ファシリテーションで何をするのか？</li>\n  <li>良いファシリテーションとは何か？</li>\n  <li>アジェンダからトピックがはずれたときの対応</li>\n  <li>親指投票とは何か？</li>\n  <li>ファイブフィンガーとは？</li>\n  <li><a href=\"https://amzn.to/3tIG2wa\">カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで</a></li>\n  <li>前の人の意見にひっぱられる問題</li>\n  <li>同調圧力がかかる状況を減らす</li>\n  <li>ファシリテーションをどうやって学べばいいのか？</li>\n  <li><a href=\"https://www.sonicgarden.jp/members/fujiwara\">ソニックガーデンの藤原さん</a></li>\n  <li>現場でどのような悩みを解決するのか？</li>\n  <li>ええ感じに解決するの、ええ感じとは何か？</li>\n  <li>正しいことを言えば物事が進むわけじゃない</li>\n  <li>技術的問題と適応課題</li>\n  <li><a href=\"https://amzn.to/2PaGCDV\">学習する組織 ― システム思考で未来を創造する</a></li>\n  <li><a href=\"https://amzn.to/2Ph91s0\">他者と働く──「わかりあえなさ」から始める組織論</a></li>\n  <li>大変だからしなくていいわけじゃない</li>\n  <li>アジャイルコーチに依頼して上手くいったことの指標・判断は？</li>\n  <li>ベロシティを上げるのを目的にしてはいけない</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>アジャイルコーチって何？</li>\n  <li>多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？</li>\n  <li>アジャイルコーチリファラル</li>\n  <li>RSGT、アジャイルコーチコミュニティ</li>\n  <li>ペアコーチによる現場支援体制</li>\n  <li>どれが正解か分からないので、試してみたらいい</li>\n  <li>透明性は現場ごとに違う</li>\n  <li>透明性を高くするためには何をするのか？</li>\n  <li>解像度をあげるための取り組みとは？</li>\n  <li>現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？</li>\n  <li>スクラムガイドと現場の間の溝を埋める</li>\n  <li>事例を伝える旅人</li>\n  <li>ファシリテーションで何をするのか？</li>\n  <li>良いファシリテーションとは何か？</li>\n  <li>アジェンダからトピックがはずれたときの対応</li>\n  <li>親指投票とは何か？</li>\n  <li>ファイブフィンガーとは？</li>\n  <li><a href=\"https://amzn.to/3tIG2wa\">カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで</a></li>\n  <li>前の人の意見にひっぱられる問題</li>\n  <li>同調圧力がかかる状況を減らす</li>\n  <li>ファシリテーションをどうやって学べばいいのか？</li>\n  <li><a href=\"https://www.sonicgarden.jp/members/fujiwara\">ソニックガーデンの藤原さん</a></li>\n  <li>現場でどのような悩みを解決するのか？</li>\n  <li>ええ感じに解決するの、ええ感じとは何か？</li>\n  <li>正しいことを言えば物事が進むわけじゃない</li>\n  <li>技術的問題と適応課題</li>\n  <li><a href=\"https://amzn.to/2PaGCDV\">学習する組織 ― システム思考で未来を創造する</a></li>\n  <li><a href=\"https://amzn.to/2Ph91s0\">他者と働く──「わかりあえなさ」から始める組織論</a></li>\n  <li>大変だからしなくていいわけじゃない</li>\n  <li>アジャイルコーチに依頼して上手くいったことの指標・判断は？</li>\n  <li>ベロシティを上げるのを目的にしてはいけない</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "46. アジャイルコーチとは？ w/ yohhatu",
      "itunes:episodeType": "full",
      "podcast:episode": 47
    },
    {
      "title": "45. 組織の心理的安全性をどうやって高めるか？ w/ raykataoka",
      "link": "https://fukabori.fm/episode/45",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://note.com/raykataoka/n/n1e3397bb153e\">心理的安全ジャーニーSlackでの５つの実装方法</a></li>\n  <li>心理的安全性とは？その正体は何なのか？</li>\n  <li><a href=\"https://amzn.to/3t28xUU\">チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ</a></li>\n  <li><a href=\"https://amzn.to/3cigChM\">恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす</a></li>\n  <li>心理的安全性によくある誤解とは何か？</li>\n  <li>批判・反論ができる組織・チームをどう作っていくのか？</li>\n  <li>正しい行動を強化して、間違った行動を消失させる</li>\n  <li>社内の心理的安全性を高めるために、何をしているか？</li>\n  <li>Bad News First</li>\n  <li>悪い情報を共有すること自体には感謝をする</li>\n  <li>失敗を共有できるようにリフレームしていく</li>\n  <li>実際の失敗共有はどんなものがある？</li>\n  <li>失敗共有時に怒ったらどうなるか？</li>\n  <li>失敗からどうやってノウハウを溜めていくのか？</li>\n  <li>失敗にはどのような種類があるのか？</li>\n  <li><a href=\"https://amzn.to/3eshgvJ\">失敗学のすすめ</a></li>\n  <li>Slack Maturity Score、日本1位の企業の独創的な使い方は？</li>\n  <li>ゆめみにおける分報の使い方、自己開示を推奨していく</li>\n  <li>分報の数が多いが、どのぐらい見ている？</li>\n  <li>ネガティブな情報はSlackでも拡散しやすい</li>\n  <li>Slackのコミュニケーションガイドラインが規定されている</li>\n  <li>主語が大きい否定後は示唆を受ける</li>\n  <li>\n    <p><a href=\"https://www.yumemi.co.jp/all_member_ceo\">プロポーザルレビューリクエスト（Proposal Review Request）</a></p>\n\n    <h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n  </li>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/45"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nphgw17ydk9b076hsd.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 10 Mar 2021 21:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nphgw17ydk9b076hsd.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4022/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:38:41",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://note.com/raykataoka/n/n1e3397bb153e\">心理的安全ジャーニーSlackでの５つの実装方法</a></li>\n  <li>心理的安全性とは？その正体は何なのか？</li>\n  <li><a href=\"https://amzn.to/3t28xUU\">チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ</a></li>\n  <li><a href=\"https://amzn.to/3cigChM\">恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす</a></li>\n  <li>心理的安全性によくある誤解とは何か？</li>\n  <li>批判・反論ができる組織・チームをどう作っていくのか？</li>\n  <li>正しい行動を強化して、間違った行動を消失させる</li>\n  <li>社内の心理的安全性を高めるために、何をしているか？</li>\n  <li>Bad News First</li>\n  <li>悪い情報を共有すること自体には感謝をする</li>\n  <li>失敗を共有できるようにリフレームしていく</li>\n  <li>実際の失敗共有はどんなものがある？</li>\n  <li>失敗共有時に怒ったらどうなるか？</li>\n  <li>失敗からどうやってノウハウを溜めていくのか？</li>\n  <li>失敗にはどのような種類があるのか？</li>\n  <li><a href=\"https://amzn.to/3eshgvJ\">失敗学のすすめ</a></li>\n  <li>Slack Maturity Score、日本1位の企業の独創的な使い方は？</li>\n  <li>ゆめみにおける分報の使い方、自己開示を推奨していく</li>\n  <li>分報の数が多いが、どのぐらい見ている？</li>\n  <li>ネガティブな情報はSlackでも拡散しやすい</li>\n  <li>Slackのコミュニケーションガイドラインが規定されている</li>\n  <li>主語が大きい否定後は示唆を受ける</li>\n  <li>\n    <p><a href=\"https://www.yumemi.co.jp/all_member_ceo\">プロポーザルレビューリクエスト（Proposal Review Request）</a></p>\n\n    <h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n  </li>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://note.com/raykataoka/n/n1e3397bb153e\">心理的安全ジャーニーSlackでの５つの実装方法</a></li>\n  <li>心理的安全性とは？その正体は何なのか？</li>\n  <li><a href=\"https://amzn.to/3t28xUU\">チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ</a></li>\n  <li><a href=\"https://amzn.to/3cigChM\">恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす</a></li>\n  <li>心理的安全性によくある誤解とは何か？</li>\n  <li>批判・反論ができる組織・チームをどう作っていくのか？</li>\n  <li>正しい行動を強化して、間違った行動を消失させる</li>\n  <li>社内の心理的安全性を高めるために、何をしているか？</li>\n  <li>Bad News First</li>\n  <li>悪い情報を共有すること自体には感謝をする</li>\n  <li>失敗を共有できるようにリフレームしていく</li>\n  <li>実際の失敗共有はどんなものがある？</li>\n  <li>失敗共有時に怒ったらどうなるか？</li>\n  <li>失敗からどうやってノウハウを溜めていくのか？</li>\n  <li>失敗にはどのような種類があるのか？</li>\n  <li><a href=\"https://amzn.to/3eshgvJ\">失敗学のすすめ</a></li>\n  <li>Slack Maturity Score、日本1位の企業の独創的な使い方は？</li>\n  <li>ゆめみにおける分報の使い方、自己開示を推奨していく</li>\n  <li>分報の数が多いが、どのぐらい見ている？</li>\n  <li>ネガティブな情報はSlackでも拡散しやすい</li>\n  <li>Slackのコミュニケーションガイドラインが規定されている</li>\n  <li>主語が大きい否定後は示唆を受ける</li>\n  <li>\n    <p><a href=\"https://www.yumemi.co.jp/all_member_ceo\">プロポーザルレビューリクエスト（Proposal Review Request）</a></p>\n\n    <h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n  </li>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "45. 組織の心理的安全性をどうやって高めるか？ w/ raykataoka",
      "itunes:episodeType": "full",
      "podcast:episode": 46
    },
    {
      "title": "44. Spotify型およびゆめみにおける組織モデルの変遷 w/ raykataoka",
      "link": "https://fukabori.fm/episode/44",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://anchor.fm/ray-kataoka\">Ray Wow FM</a></li>\n  <li>ゆめみの組織構造はどうなっている？</li>\n  <li>Spotify 組織モデルとは？</li>\n  <li>Spotify型組織のメリット・デメリット</li>\n  <li>技術的な評価は、技術者自身に評価してほしい</li>\n  <li>マトリクス型組織の難しさとは？</li>\n  <li>コミュニケーション・調整コストの高さ</li>\n  <li>ピープルマネジメントマネージャ側が深く関与できない</li>\n  <li>技術的な勉強会はどのような組織・チームで実施している？</li>\n  <li>人数が多くなった場合のナレッジシェアの難しさと対応</li>\n  <li>どのようにナレッジシェアを実現しているか</li>\n  <li>月間60回の勉強会</li>\n  <li>社内勉強会を活性化させる秘訣は？</li>\n  <li>雑な登壇で、雑壇</li>\n  <li>全てお金で人を動かそうとすると上手くいかない</li>\n  <li>Spotifyモデルはなぜ上手くいかない、何が大変なのか？</li>\n  <li>組織モデルを変更したターニングポイント・背景は？</li>\n  <li>事業部単位の縦割り</li>\n  <li>受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？</li>\n  <li>フィーチャーチームに、コンポーネントチームを割り当てる</li>\n  <li>案件ごとのドメイン知識が偏る問題をどうするか？</li>\n  <li>なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？</li>\n  <li>人気のある案件に偏ってしまわないか？</li>\n  <li>フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/44"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7npjh0n9y0crndagz1x.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 05 Mar 2021 03:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7npjh0n9y0crndagz1x.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4021/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:42:39",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://anchor.fm/ray-kataoka\">Ray Wow FM</a></li>\n  <li>ゆめみの組織構造はどうなっている？</li>\n  <li>Spotify 組織モデルとは？</li>\n  <li>Spotify型組織のメリット・デメリット</li>\n  <li>技術的な評価は、技術者自身に評価してほしい</li>\n  <li>マトリクス型組織の難しさとは？</li>\n  <li>コミュニケーション・調整コストの高さ</li>\n  <li>ピープルマネジメントマネージャ側が深く関与できない</li>\n  <li>技術的な勉強会はどのような組織・チームで実施している？</li>\n  <li>人数が多くなった場合のナレッジシェアの難しさと対応</li>\n  <li>どのようにナレッジシェアを実現しているか</li>\n  <li>月間60回の勉強会</li>\n  <li>社内勉強会を活性化させる秘訣は？</li>\n  <li>雑な登壇で、雑壇</li>\n  <li>全てお金で人を動かそうとすると上手くいかない</li>\n  <li>Spotifyモデルはなぜ上手くいかない、何が大変なのか？</li>\n  <li>組織モデルを変更したターニングポイント・背景は？</li>\n  <li>事業部単位の縦割り</li>\n  <li>受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？</li>\n  <li>フィーチャーチームに、コンポーネントチームを割り当てる</li>\n  <li>案件ごとのドメイン知識が偏る問題をどうするか？</li>\n  <li>なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？</li>\n  <li>人気のある案件に偏ってしまわないか？</li>\n  <li>フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://anchor.fm/ray-kataoka\">Ray Wow FM</a></li>\n  <li>ゆめみの組織構造はどうなっている？</li>\n  <li>Spotify 組織モデルとは？</li>\n  <li>Spotify型組織のメリット・デメリット</li>\n  <li>技術的な評価は、技術者自身に評価してほしい</li>\n  <li>マトリクス型組織の難しさとは？</li>\n  <li>コミュニケーション・調整コストの高さ</li>\n  <li>ピープルマネジメントマネージャ側が深く関与できない</li>\n  <li>技術的な勉強会はどのような組織・チームで実施している？</li>\n  <li>人数が多くなった場合のナレッジシェアの難しさと対応</li>\n  <li>どのようにナレッジシェアを実現しているか</li>\n  <li>月間60回の勉強会</li>\n  <li>社内勉強会を活性化させる秘訣は？</li>\n  <li>雑な登壇で、雑壇</li>\n  <li>全てお金で人を動かそうとすると上手くいかない</li>\n  <li>Spotifyモデルはなぜ上手くいかない、何が大変なのか？</li>\n  <li>組織モデルを変更したターニングポイント・背景は？</li>\n  <li>事業部単位の縦割り</li>\n  <li>受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？</li>\n  <li>フィーチャーチームに、コンポーネントチームを割り当てる</li>\n  <li>案件ごとのドメイン知識が偏る問題をどうするか？</li>\n  <li>なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？</li>\n  <li>人気のある案件に偏ってしまわないか？</li>\n  <li>フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "44. Spotify型およびゆめみにおける組織モデルの変遷 w/ raykataoka",
      "itunes:episodeType": "full",
      "podcast:episode": 45
    },
    {
      "title": "43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz",
      "link": "https://fukabori.fm/episode/43",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf\">WebSocketの次の技術！？WebTransportについての解説とチュートリアル</a></li>\n  <li><a href=\"https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58\">WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる</a></li>\n  <li>WebTransportとは何か？</li>\n  <li>HTTPの双方向通信の歴史</li>\n  <li>XHR、Polling、Cometとは？</li>\n  <li>WebSocket</li>\n  <li>Server-Sent Eventsとは？</li>\n  <li>SSEって今も使われるの？どこに使う？</li>\n  <li>WebSocketとSSEとのパフォーマンス差異は？</li>\n  <li>なぜWebTransportは登場してきたのか？WebSocketの課題とは？</li>\n  <li>TCP Head of Line Blocking</li>\n  <li>QUICとは？</li>\n  <li><a href=\"https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/\">QUIC プロトコルスタック</a></li>\n  <li>WebTransportは実際に使われている？</li>\n  <li>WebSocketとWebTransportのユースケース？</li>\n  <li>クラウドゲーミングとWebRTC</li>\n  <li>WebTransportでクライアントクライアント通信はできる？</li>\n  <li>TCPとUDP以外の選択肢は無かったのか？</li>\n  <li>ネットワークプロトコルの硬直化</li>\n  <li><a href=\"https://fukabori.fm/episode/1\">1. IETFとか、QUICとか</a></li>\n  <li>UDPが通らない環境ってあるのでは？どう対応する？</li>\n  <li>HTTP/2とは？</li>\n  <li>HTTP Head of Line Blocking</li>\n  <li><a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00\">Bootstrapping WebSockets with HTTP/2</a></li>\n  <li>HTTP/2の課題</li>\n  <li>HTTP/2と3の違いは？</li>\n  <li>内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。</li>\n  <li>Server Push と 103 Early Hints</li>\n  <li>内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています</li>\n  <li>WebCodecsとは何か？</li>\n  <li>なぜWebCodecsが登場してきたのか？</li>\n  <li>WebTransportやWebCodecsがだれが推進している？</li>\n  <li>WASM</li>\n  <li>WebTransportやWebCodecsは、個人の開発者には関係がある？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/43"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7np3gysmchrzrrzvhb3.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 12 Feb 2021 19:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7np3gysmchrzrrzvhb3.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4020/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:39:34",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf\">WebSocketの次の技術！？WebTransportについての解説とチュートリアル</a></li>\n  <li><a href=\"https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58\">WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる</a></li>\n  <li>WebTransportとは何か？</li>\n  <li>HTTPの双方向通信の歴史</li>\n  <li>XHR、Polling、Cometとは？</li>\n  <li>WebSocket</li>\n  <li>Server-Sent Eventsとは？</li>\n  <li>SSEって今も使われるの？どこに使う？</li>\n  <li>WebSocketとSSEとのパフォーマンス差異は？</li>\n  <li>なぜWebTransportは登場してきたのか？WebSocketの課題とは？</li>\n  <li>TCP Head of Line Blocking</li>\n  <li>QUICとは？</li>\n  <li><a href=\"https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/\">QUIC プロトコルスタック</a></li>\n  <li>WebTransportは実際に使われている？</li>\n  <li>WebSocketとWebTransportのユースケース？</li>\n  <li>クラウドゲーミングとWebRTC</li>\n  <li>WebTransportでクライアントクライアント通信はできる？</li>\n  <li>TCPとUDP以外の選択肢は無かったのか？</li>\n  <li>ネットワークプロトコルの硬直化</li>\n  <li><a href=\"https://fukabori.fm/episode/1\">1. IETFとか、QUICとか</a></li>\n  <li>UDPが通らない環境ってあるのでは？どう対応する？</li>\n  <li>HTTP/2とは？</li>\n  <li>HTTP Head of Line Blocking</li>\n  <li><a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00\">Bootstrapping WebSockets with HTTP/2</a></li>\n  <li>HTTP/2の課題</li>\n  <li>HTTP/2と3の違いは？</li>\n  <li>内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。</li>\n  <li>Server Push と 103 Early Hints</li>\n  <li>内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています</li>\n  <li>WebCodecsとは何か？</li>\n  <li>なぜWebCodecsが登場してきたのか？</li>\n  <li>WebTransportやWebCodecsがだれが推進している？</li>\n  <li>WASM</li>\n  <li>WebTransportやWebCodecsは、個人の開発者には関係がある？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf\">WebSocketの次の技術！？WebTransportについての解説とチュートリアル</a></li>\n  <li><a href=\"https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58\">WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる</a></li>\n  <li>WebTransportとは何か？</li>\n  <li>HTTPの双方向通信の歴史</li>\n  <li>XHR、Polling、Cometとは？</li>\n  <li>WebSocket</li>\n  <li>Server-Sent Eventsとは？</li>\n  <li>SSEって今も使われるの？どこに使う？</li>\n  <li>WebSocketとSSEとのパフォーマンス差異は？</li>\n  <li>なぜWebTransportは登場してきたのか？WebSocketの課題とは？</li>\n  <li>TCP Head of Line Blocking</li>\n  <li>QUICとは？</li>\n  <li><a href=\"https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/\">QUIC プロトコルスタック</a></li>\n  <li>WebTransportは実際に使われている？</li>\n  <li>WebSocketとWebTransportのユースケース？</li>\n  <li>クラウドゲーミングとWebRTC</li>\n  <li>WebTransportでクライアントクライアント通信はできる？</li>\n  <li>TCPとUDP以外の選択肢は無かったのか？</li>\n  <li>ネットワークプロトコルの硬直化</li>\n  <li><a href=\"https://fukabori.fm/episode/1\">1. IETFとか、QUICとか</a></li>\n  <li>UDPが通らない環境ってあるのでは？どう対応する？</li>\n  <li>HTTP/2とは？</li>\n  <li>HTTP Head of Line Blocking</li>\n  <li><a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00\">Bootstrapping WebSockets with HTTP/2</a></li>\n  <li>HTTP/2の課題</li>\n  <li>HTTP/2と3の違いは？</li>\n  <li>内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。</li>\n  <li>Server Push と 103 Early Hints</li>\n  <li>内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています</li>\n  <li>WebCodecsとは何か？</li>\n  <li>なぜWebCodecsが登場してきたのか？</li>\n  <li>WebTransportやWebCodecsがだれが推進している？</li>\n  <li>WASM</li>\n  <li>WebTransportやWebCodecsは、個人の開発者には関係がある？</li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz",
      "itunes:episodeType": "full",
      "podcast:episode": 44
    },
    {
      "title": "42. 良いマネジメントとは？良いミーティングとは？ w/ konifar",
      "link": "https://fukabori.fm/episode/42",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Konifarさんにとってマネジメントとは？</li>\n  <li><a href=\"https://amzn.to/3iiEdkP\">HIGH OUTPUT MANAGEMENT</a></li>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li>実際にマネージャとしてどういう課題に取り組んでいたのか？</li>\n  <li>情報設計の方法論</li>\n  <li>コミュニケーションの最適な形をどう追求するか？</li>\n  <li>Konifarさんはどうやって問題発見するか？</li>\n  <li>1on1の場、チームの振り返りで吸い取る</li>\n  <li>忘れないようにGoogleDocsに書いておく</li>\n  <li>TextやQuickCallで解決する、1on1で解決するための判断基準は？</li>\n  <li>Feedbackを与えるにあたって気をつけていることは？</li>\n  <li><a href=\"https://amzn.to/39C5daW\">フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術</a></li>\n  <li>言わないでいるより、言って後悔したほうが良い</li>\n  <li>どうやって褒める箇所を覚えておくか？</li>\n  <li>1on1 ミーティングの目的</li>\n  <li>Konifarさんにとって良いミーティングとは？</li>\n  <li>目的とゴールがハッキリしていること</li>\n  <li>目的とゴールの違いは？</li>\n  <li>何かを決めるミーティングは事前準備がすべて</li>\n  <li>ミーティングが上手くいかないとき = 例外処理</li>\n  <li>ミーティング関数の引数</li>\n  <li>参加者の発言偏り問題にどう対処するか？</li>\n  <li>発言しないのは、そもそもなぜなのかを考える必要がある</li>\n  <li>ネガティブなことを言えるように心理的安全性を高めるためにやっていること？</li>\n  <li>ストレートにネガティブな意見が出てくるのは嬉しい</li>\n  <li>タックマンモデルのStormingが苦手な人が多いのでは</li>\n  <li>率直に物事をいうのはすごい疲れる</li>\n  <li>ブログで言語化して楽になる</li>\n  <li><a href=\"https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122\">リモート環境での雑談の工夫</a></li>\n  <li>社内でボードゲーム</li>\n  <li><a href=\"https://fukabori.fm/Kyashの全社忘年会で使用したサービスremo\">Kyashの全社忘年会で使用したサービス(remo)</a></li>\n  <li>リモート飲み会でお話を聞く、という形になる</li>\n  <li>リモートミーティングで音声とチャットでマルチで会話する</li>\n  <li>Chatに即興でアンケートFormを埋め込む</li>\n  <li>「これについて意見ありますか？」の後の沈黙に耐える</li>\n  <li>チェックイン</li>\n  <li><a href=\"https://open.talentio.com/1/c/kyash/requisitions/232\">Kyash募集職種一覧</a></li>\n  <li><a href=\"https://www.patreon.com/fukabori\">fukabori.fm 個人サポータープラン</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/42"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7npatz9z73xhdw0410d.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 15 Jan 2021 03:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7npatz9z73xhdw0410d.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4019/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:52:39",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Konifarさんにとってマネジメントとは？</li>\n  <li><a href=\"https://amzn.to/3iiEdkP\">HIGH OUTPUT MANAGEMENT</a></li>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li>実際にマネージャとしてどういう課題に取り組んでいたのか？</li>\n  <li>情報設計の方法論</li>\n  <li>コミュニケーションの最適な形をどう追求するか？</li>\n  <li>Konifarさんはどうやって問題発見するか？</li>\n  <li>1on1の場、チームの振り返りで吸い取る</li>\n  <li>忘れないようにGoogleDocsに書いておく</li>\n  <li>TextやQuickCallで解決する、1on1で解決するための判断基準は？</li>\n  <li>Feedbackを与えるにあたって気をつけていることは？</li>\n  <li><a href=\"https://amzn.to/39C5daW\">フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術</a></li>\n  <li>言わないでいるより、言って後悔したほうが良い</li>\n  <li>どうやって褒める箇所を覚えておくか？</li>\n  <li>1on1 ミーティングの目的</li>\n  <li>Konifarさんにとって良いミーティングとは？</li>\n  <li>目的とゴールがハッキリしていること</li>\n  <li>目的とゴールの違いは？</li>\n  <li>何かを決めるミーティングは事前準備がすべて</li>\n  <li>ミーティングが上手くいかないとき = 例外処理</li>\n  <li>ミーティング関数の引数</li>\n  <li>参加者の発言偏り問題にどう対処するか？</li>\n  <li>発言しないのは、そもそもなぜなのかを考える必要がある</li>\n  <li>ネガティブなことを言えるように心理的安全性を高めるためにやっていること？</li>\n  <li>ストレートにネガティブな意見が出てくるのは嬉しい</li>\n  <li>タックマンモデルのStormingが苦手な人が多いのでは</li>\n  <li>率直に物事をいうのはすごい疲れる</li>\n  <li>ブログで言語化して楽になる</li>\n  <li><a href=\"https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122\">リモート環境での雑談の工夫</a></li>\n  <li>社内でボードゲーム</li>\n  <li><a href=\"https://fukabori.fm/Kyashの全社忘年会で使用したサービスremo\">Kyashの全社忘年会で使用したサービス(remo)</a></li>\n  <li>リモート飲み会でお話を聞く、という形になる</li>\n  <li>リモートミーティングで音声とチャットでマルチで会話する</li>\n  <li>Chatに即興でアンケートFormを埋め込む</li>\n  <li>「これについて意見ありますか？」の後の沈黙に耐える</li>\n  <li>チェックイン</li>\n  <li><a href=\"https://open.talentio.com/1/c/kyash/requisitions/232\">Kyash募集職種一覧</a></li>\n  <li><a href=\"https://www.patreon.com/fukabori\">fukabori.fm 個人サポータープラン</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Konifarさんにとってマネジメントとは？</li>\n  <li><a href=\"https://amzn.to/3iiEdkP\">HIGH OUTPUT MANAGEMENT</a></li>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li>実際にマネージャとしてどういう課題に取り組んでいたのか？</li>\n  <li>情報設計の方法論</li>\n  <li>コミュニケーションの最適な形をどう追求するか？</li>\n  <li>Konifarさんはどうやって問題発見するか？</li>\n  <li>1on1の場、チームの振り返りで吸い取る</li>\n  <li>忘れないようにGoogleDocsに書いておく</li>\n  <li>TextやQuickCallで解決する、1on1で解決するための判断基準は？</li>\n  <li>Feedbackを与えるにあたって気をつけていることは？</li>\n  <li><a href=\"https://amzn.to/39C5daW\">フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術</a></li>\n  <li>言わないでいるより、言って後悔したほうが良い</li>\n  <li>どうやって褒める箇所を覚えておくか？</li>\n  <li>1on1 ミーティングの目的</li>\n  <li>Konifarさんにとって良いミーティングとは？</li>\n  <li>目的とゴールがハッキリしていること</li>\n  <li>目的とゴールの違いは？</li>\n  <li>何かを決めるミーティングは事前準備がすべて</li>\n  <li>ミーティングが上手くいかないとき = 例外処理</li>\n  <li>ミーティング関数の引数</li>\n  <li>参加者の発言偏り問題にどう対処するか？</li>\n  <li>発言しないのは、そもそもなぜなのかを考える必要がある</li>\n  <li>ネガティブなことを言えるように心理的安全性を高めるためにやっていること？</li>\n  <li>ストレートにネガティブな意見が出てくるのは嬉しい</li>\n  <li>タックマンモデルのStormingが苦手な人が多いのでは</li>\n  <li>率直に物事をいうのはすごい疲れる</li>\n  <li>ブログで言語化して楽になる</li>\n  <li><a href=\"https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122\">リモート環境での雑談の工夫</a></li>\n  <li>社内でボードゲーム</li>\n  <li><a href=\"https://fukabori.fm/Kyashの全社忘年会で使用したサービスremo\">Kyashの全社忘年会で使用したサービス(remo)</a></li>\n  <li>リモート飲み会でお話を聞く、という形になる</li>\n  <li>リモートミーティングで音声とチャットでマルチで会話する</li>\n  <li>Chatに即興でアンケートFormを埋め込む</li>\n  <li>「これについて意見ありますか？」の後の沈黙に耐える</li>\n  <li>チェックイン</li>\n  <li><a href=\"https://open.talentio.com/1/c/kyash/requisitions/232\">Kyash募集職種一覧</a></li>\n  <li><a href=\"https://www.patreon.com/fukabori\">fukabori.fm 個人サポータープラン</a></li>\n</ul>\n\n<h2 id=\"エピソードスポンサー\">エピソードスポンサー</h2>\n\n<ul>\n  <li><a href=\"https://offers.jp/\">Offers</a>\n    <ul>\n      <li>運営会社: <a href=\"https://overflow.co.jp/\">株式会社overflow</a></li>\n    </ul>\n  </li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "42. 良いマネジメントとは？良いミーティングとは？ w/ konifar",
      "itunes:episodeType": "full",
      "podcast:episode": 43
    },
    {
      "title": "41. Wantedlyの開発組織 w/ kawasy",
      "link": "https://fukabori.fm/episode/41",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？</li>\n  <li><a href=\"https://www.atlassian.com/agile/agile-at-scale/spotify\">Discover the Spotify model</a></li>\n  <li>Tribe間の情報流通の課題などから組織再編</li>\n  <li>Productの情報ラインと、技術情報ラインの会議体設計</li>\n  <li>議事録などの情報展開</li>\n  <li>モノリシックアプリケーションからマイクロサービスへ</li>\n  <li><a href=\"https://blog.argoproj.io/tagged/cncf\">Argo</a></li>\n  <li><a href=\"https://looker.com/\">Looker</a></li>\n  <li>どのように技術判断を実施するのか？</li>\n  <li>組織の課題解決能力を向上させる</li>\n  <li>1-2年では困らないけど重要な問題をどのように対応するか？</li>\n  <li>たとえば、1チームの開発プロセスはどうなっている？</li>\n  <li>新しく価値をつくることと、リニューアルの難しさ</li>\n  <li>会社方針と個人方針でポジションがあわなくなった場合は？</li>\n  <li>インフラチームからの他チームへの留学制度</li>\n  <li>エンジニアの人事評価はどうしている？</li>\n  <li>「期待」を満たしたのか・満たしていのかをみる</li>\n  <li><a href=\"https://www.wantedly.com/companies/wantedly/projects\">Wantedly, Inc.の採用/求人一覧</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/41"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7npantr11wy38pezq0f.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 18 Dec 2020 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7npantr11wy38pezq0f.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4018/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:30:00",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？</li>\n  <li><a href=\"https://www.atlassian.com/agile/agile-at-scale/spotify\">Discover the Spotify model</a></li>\n  <li>Tribe間の情報流通の課題などから組織再編</li>\n  <li>Productの情報ラインと、技術情報ラインの会議体設計</li>\n  <li>議事録などの情報展開</li>\n  <li>モノリシックアプリケーションからマイクロサービスへ</li>\n  <li><a href=\"https://blog.argoproj.io/tagged/cncf\">Argo</a></li>\n  <li><a href=\"https://looker.com/\">Looker</a></li>\n  <li>どのように技術判断を実施するのか？</li>\n  <li>組織の課題解決能力を向上させる</li>\n  <li>1-2年では困らないけど重要な問題をどのように対応するか？</li>\n  <li>たとえば、1チームの開発プロセスはどうなっている？</li>\n  <li>新しく価値をつくることと、リニューアルの難しさ</li>\n  <li>会社方針と個人方針でポジションがあわなくなった場合は？</li>\n  <li>インフラチームからの他チームへの留学制度</li>\n  <li>エンジニアの人事評価はどうしている？</li>\n  <li>「期待」を満たしたのか・満たしていのかをみる</li>\n  <li><a href=\"https://www.wantedly.com/companies/wantedly/projects\">Wantedly, Inc.の採用/求人一覧</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？</li>\n  <li><a href=\"https://www.atlassian.com/agile/agile-at-scale/spotify\">Discover the Spotify model</a></li>\n  <li>Tribe間の情報流通の課題などから組織再編</li>\n  <li>Productの情報ラインと、技術情報ラインの会議体設計</li>\n  <li>議事録などの情報展開</li>\n  <li>モノリシックアプリケーションからマイクロサービスへ</li>\n  <li><a href=\"https://blog.argoproj.io/tagged/cncf\">Argo</a></li>\n  <li><a href=\"https://looker.com/\">Looker</a></li>\n  <li>どのように技術判断を実施するのか？</li>\n  <li>組織の課題解決能力を向上させる</li>\n  <li>1-2年では困らないけど重要な問題をどのように対応するか？</li>\n  <li>たとえば、1チームの開発プロセスはどうなっている？</li>\n  <li>新しく価値をつくることと、リニューアルの難しさ</li>\n  <li>会社方針と個人方針でポジションがあわなくなった場合は？</li>\n  <li>インフラチームからの他チームへの留学制度</li>\n  <li>エンジニアの人事評価はどうしている？</li>\n  <li>「期待」を満たしたのか・満たしていのかをみる</li>\n  <li><a href=\"https://www.wantedly.com/companies/wantedly/projects\">Wantedly, Inc.の採用/求人一覧</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "41. Wantedlyの開発組織 w/ kawasy",
      "itunes:episodeType": "full",
      "podcast:episode": 42
    },
    {
      "title": "40. 外資証券会社における独自言語および独自オブジェクト指向データベース w/ kawasy",
      "link": "https://fukabori.fm/episode/40",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg\">エンジニアトーク「ROLE MODEL」</a></li>\n  <li>外資証券会社のシステムとは？</li>\n  <li>使われていた独自のプログラミング言語とは？</li>\n  <li>社内に存在する独自のエコシステム</li>\n  <li>独自言語は、どの言語に似ている？</li>\n  <li>専用の統合開発環境</li>\n  <li>独自のオブジェクト指向データベースとは？</li>\n  <li>Active Record Pattern</li>\n  <li>インピーダンスミスマッチ</li>\n  <li>オブジェクト指向データベースはなぜ流行らなかったのか？</li>\n  <li>グローバルレベルでのマルチマスタ同期</li>\n  <li>パフォーマンスレベルでの問題は？</li>\n  <li>どのようにロックする？</li>\n  <li>Dependency graphが実装されている</li>\n  <li>処理軽減・速度向上のためのメモ化</li>\n  <li>変数名にスペースが使えるプログラミング言語</li>\n  <li>どうやって品質を担保していたのか？</li>\n  <li><a href=\"https://amzn.to/3qdLx53\">LeanとDevOpsの科学</a></li>\n  <li>コードレビューをもらうのが難しい問題とその対策</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/40"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7np80ze1hg6sv7w9byc.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 01 Dec 2020 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7np80ze1hg6sv7w9byc.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4017/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:32:57",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg\">エンジニアトーク「ROLE MODEL」</a></li>\n  <li>外資証券会社のシステムとは？</li>\n  <li>使われていた独自のプログラミング言語とは？</li>\n  <li>社内に存在する独自のエコシステム</li>\n  <li>独自言語は、どの言語に似ている？</li>\n  <li>専用の統合開発環境</li>\n  <li>独自のオブジェクト指向データベースとは？</li>\n  <li>Active Record Pattern</li>\n  <li>インピーダンスミスマッチ</li>\n  <li>オブジェクト指向データベースはなぜ流行らなかったのか？</li>\n  <li>グローバルレベルでのマルチマスタ同期</li>\n  <li>パフォーマンスレベルでの問題は？</li>\n  <li>どのようにロックする？</li>\n  <li>Dependency graphが実装されている</li>\n  <li>処理軽減・速度向上のためのメモ化</li>\n  <li>変数名にスペースが使えるプログラミング言語</li>\n  <li>どうやって品質を担保していたのか？</li>\n  <li><a href=\"https://amzn.to/3qdLx53\">LeanとDevOpsの科学</a></li>\n  <li>コードレビューをもらうのが難しい問題とその対策</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg\">エンジニアトーク「ROLE MODEL」</a></li>\n  <li>外資証券会社のシステムとは？</li>\n  <li>使われていた独自のプログラミング言語とは？</li>\n  <li>社内に存在する独自のエコシステム</li>\n  <li>独自言語は、どの言語に似ている？</li>\n  <li>専用の統合開発環境</li>\n  <li>独自のオブジェクト指向データベースとは？</li>\n  <li>Active Record Pattern</li>\n  <li>インピーダンスミスマッチ</li>\n  <li>オブジェクト指向データベースはなぜ流行らなかったのか？</li>\n  <li>グローバルレベルでのマルチマスタ同期</li>\n  <li>パフォーマンスレベルでの問題は？</li>\n  <li>どのようにロックする？</li>\n  <li>Dependency graphが実装されている</li>\n  <li>処理軽減・速度向上のためのメモ化</li>\n  <li>変数名にスペースが使えるプログラミング言語</li>\n  <li>どうやって品質を担保していたのか？</li>\n  <li><a href=\"https://amzn.to/3qdLx53\">LeanとDevOpsの科学</a></li>\n  <li>コードレビューをもらうのが難しい問題とその対策</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "40. 外資証券会社における独自言語および独自オブジェクト指向データベース w/ kawasy",
      "itunes:episodeType": "full",
      "podcast:episode": 41
    },
    {
      "title": "39. Work Together Anywhere w/ Lisette Sutherland",
      "link": "https://fukabori.fm/episode/39",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/323rFY1\">Work Together Anywhere</a></li>\n  <li><a href=\"https://amzn.to/3bv9w8I\">リモートワーク - チームが結束する次世代型メソッド</a></li>\n  <li><a href=\"https://www.collaborationsuperpowers.com/schedule/\">Collaboration superpowers workshops</a></li>\n  <li>Why remote working is so important?</li>\n  <li>The reasons from company’s view and individual’s view</li>\n  <li>The future of work is choice; Let us choose</li>\n  <li>Shift to result oriented work</li>\n  <li>What are the difficulties in working at home?</li>\n  <li>Build boundary; turn off computers at certain time</li>\n  <li><a href=\"https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf\">Template for creating a REMOTE TEAM AGREEMENT:</a></li>\n  <li>Should we share the agreements with other teams?</li>\n  <li>What’s difference in term of manager’s role?</li>\n  <li>How do managers find roadblocks when working remotely?</li>\n  <li>Not only 1 on 1 between a boss and a member but also between team members</li>\n  <li>Just calling without urgent matter</li>\n  <li>Over communiacation is definitely recommended</li>\n  <li><a href=\"https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf\">Japanese Super Cards</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/39"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7np80mbsmxn3sspaz29.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sat, 05 Sep 2020 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7np80mbsmxn3sspaz29.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4016/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:30:33",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/323rFY1\">Work Together Anywhere</a></li>\n  <li><a href=\"https://amzn.to/3bv9w8I\">リモートワーク - チームが結束する次世代型メソッド</a></li>\n  <li><a href=\"https://www.collaborationsuperpowers.com/schedule/\">Collaboration superpowers workshops</a></li>\n  <li>Why remote working is so important?</li>\n  <li>The reasons from company’s view and individual’s view</li>\n  <li>The future of work is choice; Let us choose</li>\n  <li>Shift to result oriented work</li>\n  <li>What are the difficulties in working at home?</li>\n  <li>Build boundary; turn off computers at certain time</li>\n  <li><a href=\"https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf\">Template for creating a REMOTE TEAM AGREEMENT:</a></li>\n  <li>Should we share the agreements with other teams?</li>\n  <li>What’s difference in term of manager’s role?</li>\n  <li>How do managers find roadblocks when working remotely?</li>\n  <li>Not only 1 on 1 between a boss and a member but also between team members</li>\n  <li>Just calling without urgent matter</li>\n  <li>Over communiacation is definitely recommended</li>\n  <li><a href=\"https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf\">Japanese Super Cards</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/323rFY1\">Work Together Anywhere</a></li>\n  <li><a href=\"https://amzn.to/3bv9w8I\">リモートワーク - チームが結束する次世代型メソッド</a></li>\n  <li><a href=\"https://www.collaborationsuperpowers.com/schedule/\">Collaboration superpowers workshops</a></li>\n  <li>Why remote working is so important?</li>\n  <li>The reasons from company’s view and individual’s view</li>\n  <li>The future of work is choice; Let us choose</li>\n  <li>Shift to result oriented work</li>\n  <li>What are the difficulties in working at home?</li>\n  <li>Build boundary; turn off computers at certain time</li>\n  <li><a href=\"https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf\">Template for creating a REMOTE TEAM AGREEMENT:</a></li>\n  <li>Should we share the agreements with other teams?</li>\n  <li>What’s difference in term of manager’s role?</li>\n  <li>How do managers find roadblocks when working remotely?</li>\n  <li>Not only 1 on 1 between a boss and a member but also between team members</li>\n  <li>Just calling without urgent matter</li>\n  <li>Over communiacation is definitely recommended</li>\n  <li><a href=\"https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf\">Japanese Super Cards</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "39. Work Together Anywhere w/ Lisette Sutherland",
      "itunes:episodeType": "full",
      "podcast:episode": 40
    },
    {
      "title": "38. 良い組織を作るために w/ yunon_phys",
      "link": "https://fukabori.fm/episode/38",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<p>(収録環境都合により、途中で音質が変わります)</p>\n\n<ul>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li>Chief of Staff, Games とは何をする人？</li>\n  <li><a href=\"https://voice.aktsk.jp/5302/\">偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）</a></li>\n  <li><a href=\"https://voice.aktsk.jp/5345/\">偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）</a></li>\n  <li>Engineering Managerとは？</li>\n  <li><a href=\"https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki\">アカツキのEngineering Managerは何をする人なのか、EM Triangle</a></li>\n  <li>Managementというの言葉の訳語</li>\n  <li>これまでどのような組織づくりをしてきたのか？</li>\n  <li>問題を見つけるために、どのような行動をするのか？</li>\n  <li>30人以上との1on1からの模索</li>\n  <li>1on1で本音を出してもらうために、どのように話す？</li>\n  <li>学習する組織</li>\n  <li>1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？</li>\n  <li>大量の課題に面したとき、どう行動するか？</li>\n  <li>マインドマップで可視化して、システム思考的に考える</li>\n  <li>関係ないと思われた課題がつながる例とは？</li>\n  <li>組織開発(Organization Development)とは何か？</li>\n  <li>Developmentにある発展という意味</li>\n  <li>30人以上の意識をあわせにいくときの方法</li>\n  <li>対立をなくすのではなく、なぜそう考えたかという起点を考える</li>\n  <li>相手が自分と同じではない、また自分と同じ人間であることを認識する</li>\n  <li>無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく</li>\n  <li>何を考えているのか、何に困っているのかを共有するようなファシリテーション</li>\n  <li>未来を良くするために、自分が置かれている地点をメタ認知する</li>\n  <li>職能で自律して進めてもらうようなアプローチ</li>\n  <li>ゆのんさんにとってコミュニティとは？</li>\n  <li>コミュニティから一番得るのは活力</li>\n  <li><a href=\"https://2020.scrumgatheringtokyo.org/\">Reginal Scrum Gathering Tokyo</a></li>\n  <li>fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる</li>\n  <li>ピープルマネジメントのネタは人に話しにくいこともある</li>\n  <li>心のNDA</li>\n  <li>マネージャ自身のバイアスを他者と会話することで見つける</li>\n  <li>オンライン勉強会は参加が簡単、出席率も変わる</li>\n  <li>https://game.aktsk.jp/</li>\n  <li>https://voice.aktsk.jp/</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/38"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nn589vwh449ccqe6d4.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sat, 22 Aug 2020 14:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nn589vwh449ccqe6d4.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4015/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:53:58",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<p>(収録環境都合により、途中で音質が変わります)</p>\n\n<ul>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li>Chief of Staff, Games とは何をする人？</li>\n  <li><a href=\"https://voice.aktsk.jp/5302/\">偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）</a></li>\n  <li><a href=\"https://voice.aktsk.jp/5345/\">偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）</a></li>\n  <li>Engineering Managerとは？</li>\n  <li><a href=\"https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki\">アカツキのEngineering Managerは何をする人なのか、EM Triangle</a></li>\n  <li>Managementというの言葉の訳語</li>\n  <li>これまでどのような組織づくりをしてきたのか？</li>\n  <li>問題を見つけるために、どのような行動をするのか？</li>\n  <li>30人以上との1on1からの模索</li>\n  <li>1on1で本音を出してもらうために、どのように話す？</li>\n  <li>学習する組織</li>\n  <li>1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？</li>\n  <li>大量の課題に面したとき、どう行動するか？</li>\n  <li>マインドマップで可視化して、システム思考的に考える</li>\n  <li>関係ないと思われた課題がつながる例とは？</li>\n  <li>組織開発(Organization Development)とは何か？</li>\n  <li>Developmentにある発展という意味</li>\n  <li>30人以上の意識をあわせにいくときの方法</li>\n  <li>対立をなくすのではなく、なぜそう考えたかという起点を考える</li>\n  <li>相手が自分と同じではない、また自分と同じ人間であることを認識する</li>\n  <li>無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく</li>\n  <li>何を考えているのか、何に困っているのかを共有するようなファシリテーション</li>\n  <li>未来を良くするために、自分が置かれている地点をメタ認知する</li>\n  <li>職能で自律して進めてもらうようなアプローチ</li>\n  <li>ゆのんさんにとってコミュニティとは？</li>\n  <li>コミュニティから一番得るのは活力</li>\n  <li><a href=\"https://2020.scrumgatheringtokyo.org/\">Reginal Scrum Gathering Tokyo</a></li>\n  <li>fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる</li>\n  <li>ピープルマネジメントのネタは人に話しにくいこともある</li>\n  <li>心のNDA</li>\n  <li>マネージャ自身のバイアスを他者と会話することで見つける</li>\n  <li>オンライン勉強会は参加が簡単、出席率も変わる</li>\n  <li>https://game.aktsk.jp/</li>\n  <li>https://voice.aktsk.jp/</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<p>(収録環境都合により、途中で音質が変わります)</p>\n\n<ul>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li>Chief of Staff, Games とは何をする人？</li>\n  <li><a href=\"https://voice.aktsk.jp/5302/\">偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）</a></li>\n  <li><a href=\"https://voice.aktsk.jp/5345/\">偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）</a></li>\n  <li>Engineering Managerとは？</li>\n  <li><a href=\"https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki\">アカツキのEngineering Managerは何をする人なのか、EM Triangle</a></li>\n  <li>Managementというの言葉の訳語</li>\n  <li>これまでどのような組織づくりをしてきたのか？</li>\n  <li>問題を見つけるために、どのような行動をするのか？</li>\n  <li>30人以上との1on1からの模索</li>\n  <li>1on1で本音を出してもらうために、どのように話す？</li>\n  <li>学習する組織</li>\n  <li>1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？</li>\n  <li>大量の課題に面したとき、どう行動するか？</li>\n  <li>マインドマップで可視化して、システム思考的に考える</li>\n  <li>関係ないと思われた課題がつながる例とは？</li>\n  <li>組織開発(Organization Development)とは何か？</li>\n  <li>Developmentにある発展という意味</li>\n  <li>30人以上の意識をあわせにいくときの方法</li>\n  <li>対立をなくすのではなく、なぜそう考えたかという起点を考える</li>\n  <li>相手が自分と同じではない、また自分と同じ人間であることを認識する</li>\n  <li>無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく</li>\n  <li>何を考えているのか、何に困っているのかを共有するようなファシリテーション</li>\n  <li>未来を良くするために、自分が置かれている地点をメタ認知する</li>\n  <li>職能で自律して進めてもらうようなアプローチ</li>\n  <li>ゆのんさんにとってコミュニティとは？</li>\n  <li>コミュニティから一番得るのは活力</li>\n  <li><a href=\"https://2020.scrumgatheringtokyo.org/\">Reginal Scrum Gathering Tokyo</a></li>\n  <li>fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる</li>\n  <li>ピープルマネジメントのネタは人に話しにくいこともある</li>\n  <li>心のNDA</li>\n  <li>マネージャ自身のバイアスを他者と会話することで見つける</li>\n  <li>オンライン勉強会は参加が簡単、出席率も変わる</li>\n  <li>https://game.aktsk.jp/</li>\n  <li>https://voice.aktsk.jp/</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "38. 良い組織を作るために w/ yunon_phys",
      "itunes:episodeType": "full",
      "podcast:episode": 39
    },
    {
      "title": "37. MLOpsとは？どのようにMLOpsを実装しているか？ w/ kenta_sato3",
      "link": "https://fukabori.fm/episode/37",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>MLOpsとは何か？</li>\n  <li>MLOpsの定義</li>\n  <li>MLのおけるモデルとは何か？</li>\n  <li>MLOpsで解決する課題とは？</li>\n  <li>CACE / Changing Anything Changes Everything</li>\n  <li>学習に使ったデータ管理の難しさ</li>\n  <li>メタ情報だけのバージョン管理というプラクティス</li>\n  <li>MLに必要なパイプラインを回すのは大変</li>\n  <li>ML Superhero、MLからインフラ構築まですべて担う人</li>\n  <li>Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？</li>\n  <li><a href=\"https://tech.stockmark.co.jp/blog/mlops/\">BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み</a></li>\n  <li>MLOps取り組み前のアーキテクチャの課題とは？</li>\n  <li>温かみのある手動Opsの自動化</li>\n  <li>AWS CodeBuildの権限周りの楽さ</li>\n  <li>ワークフローが見えにくい課題をワークフローエンジンで解決する</li>\n  <li>AWS Step Functions と AWS Batch の活用</li>\n  <li>今後のMLOpsの野望</li>\n  <li>モデルのパフォーマンスを決める上流データバリデーション</li>\n  <li>学習のパイプラインの整理、その目指すべきところは？</li>\n  <li>汎用言語モデルをGoogle TPUでの開発</li>\n  <li>MLOpsにどのような気持ちで望んでいるか？</li>\n  <li>ペインをどうやって発見しているか？</li>\n  <li>推測するな、計測せよ</li>\n  <li><a href=\"https://aws.amazon.com/jp/builders-flash/202007/bokete-2/\">電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者</a></li>\n  <li><a href=\"https://tech.stockmark.co.jp/\">Stockmark Tech Blog</a></li>\n  <li><a href=\"https://www.wantedly.com/companies/stockmark\">エンジニア募集中</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/37"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nndq0kvnhb0s26260w.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 07 Aug 2020 09:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nndq0kvnhb0s26260w.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4014/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:39:07",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>MLOpsとは何か？</li>\n  <li>MLOpsの定義</li>\n  <li>MLのおけるモデルとは何か？</li>\n  <li>MLOpsで解決する課題とは？</li>\n  <li>CACE / Changing Anything Changes Everything</li>\n  <li>学習に使ったデータ管理の難しさ</li>\n  <li>メタ情報だけのバージョン管理というプラクティス</li>\n  <li>MLに必要なパイプラインを回すのは大変</li>\n  <li>ML Superhero、MLからインフラ構築まですべて担う人</li>\n  <li>Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？</li>\n  <li><a href=\"https://tech.stockmark.co.jp/blog/mlops/\">BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み</a></li>\n  <li>MLOps取り組み前のアーキテクチャの課題とは？</li>\n  <li>温かみのある手動Opsの自動化</li>\n  <li>AWS CodeBuildの権限周りの楽さ</li>\n  <li>ワークフローが見えにくい課題をワークフローエンジンで解決する</li>\n  <li>AWS Step Functions と AWS Batch の活用</li>\n  <li>今後のMLOpsの野望</li>\n  <li>モデルのパフォーマンスを決める上流データバリデーション</li>\n  <li>学習のパイプラインの整理、その目指すべきところは？</li>\n  <li>汎用言語モデルをGoogle TPUでの開発</li>\n  <li>MLOpsにどのような気持ちで望んでいるか？</li>\n  <li>ペインをどうやって発見しているか？</li>\n  <li>推測するな、計測せよ</li>\n  <li><a href=\"https://aws.amazon.com/jp/builders-flash/202007/bokete-2/\">電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者</a></li>\n  <li><a href=\"https://tech.stockmark.co.jp/\">Stockmark Tech Blog</a></li>\n  <li><a href=\"https://www.wantedly.com/companies/stockmark\">エンジニア募集中</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>MLOpsとは何か？</li>\n  <li>MLOpsの定義</li>\n  <li>MLのおけるモデルとは何か？</li>\n  <li>MLOpsで解決する課題とは？</li>\n  <li>CACE / Changing Anything Changes Everything</li>\n  <li>学習に使ったデータ管理の難しさ</li>\n  <li>メタ情報だけのバージョン管理というプラクティス</li>\n  <li>MLに必要なパイプラインを回すのは大変</li>\n  <li>ML Superhero、MLからインフラ構築まですべて担う人</li>\n  <li>Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？</li>\n  <li><a href=\"https://tech.stockmark.co.jp/blog/mlops/\">BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み</a></li>\n  <li>MLOps取り組み前のアーキテクチャの課題とは？</li>\n  <li>温かみのある手動Opsの自動化</li>\n  <li>AWS CodeBuildの権限周りの楽さ</li>\n  <li>ワークフローが見えにくい課題をワークフローエンジンで解決する</li>\n  <li>AWS Step Functions と AWS Batch の活用</li>\n  <li>今後のMLOpsの野望</li>\n  <li>モデルのパフォーマンスを決める上流データバリデーション</li>\n  <li>学習のパイプラインの整理、その目指すべきところは？</li>\n  <li>汎用言語モデルをGoogle TPUでの開発</li>\n  <li>MLOpsにどのような気持ちで望んでいるか？</li>\n  <li>ペインをどうやって発見しているか？</li>\n  <li>推測するな、計測せよ</li>\n  <li><a href=\"https://aws.amazon.com/jp/builders-flash/202007/bokete-2/\">電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者</a></li>\n  <li><a href=\"https://tech.stockmark.co.jp/\">Stockmark Tech Blog</a></li>\n  <li><a href=\"https://www.wantedly.com/companies/stockmark\">エンジニア募集中</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "37. MLOpsとは？どのようにMLOpsを実装しているか？ w/ kenta_sato3",
      "itunes:episodeType": "full",
      "podcast:episode": 38
    },
    {
      "title": "36. [後編] You have commit bit! w/ songmu",
      "link": "https://fukabori.fm/episode/36",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>OSSをどのように読むか？</li>\n  <li>利用するOSSをどうやって選定していくか？</li>\n  <li>協調できるかどうか、という選定基準</li>\n  <li><a href=\"https://songmu.jp/riji/entry/2020-03-18-ecspresso.html\">ecs-deployからecspressoに乗り換えた</a></li>\n  <li><a href=\"https://github.com/kayac/go-katsubushi\">go-katsubushi</a></li>\n  <li><a href=\"https://github.com/kayac/go-katsubushi/pull/40\">implement STAT via binary protocol </a></li>\n  <li>そもそも、なぜ採番する必要があるのか？</li>\n  <li>Snowflakeの意味が複数ある</li>\n  <li><a href=\"https://yapcjapan.org/2020kyoto/timetable.html#/detail/21\">OSS貢献を小さく始めて技術力を高め、大きく花開かせる</a></li>\n  <li>GitHubはSoftware Engineerのpixiv</li>\n  <li>OSSの引き継ぎ</li>\n  <li>0-&gt;1よりも1-&gt;10のが得意になった原点</li>\n  <li>OSSの引き継ぎを自分から提言する</li>\n  <li>OSSのメンテは具体的には何をしている？</li>\n  <li>OSSを引き継いだ結果、どう成長したか？</li>\n  <li>コードの個性</li>\n  <li>どうやってOSSへコントリビュートしやすくしているか？</li>\n  <li><a href=\"https://github.com/x-motemen/ghq\">ghq</a>ですぐ見つけること</li>\n  <li>最新のバージョンを使うこと</li>\n  <li><a href=\"https://github.com/renovatebot/renovate\">renovate</a></li>\n  <li><a href=\"https://dependabot.com/\">dependabot</a></li>\n  <li>Pull Requestを送る際の心構えとは？</li>\n  <li>Pull Requestを放置されても気にしない</li>\n  <li>OSSを他者へ引き継ぐ場合に何を考えているか？</li>\n  <li>Songmuさんの考えるCTOの役割とは？</li>\n  <li>プロダクトセントリックとは？何を意識するか？</li>\n  <li>広告塔の役割として何をするか？</li>\n  <li>チームのパフォーマンスを最大化するために何をするか？</li>\n  <li><a href=\"https://blog.song.mu/entry/startup-manifest\">スタートアップマニフェスト</a></li>\n  <li>アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏</li>\n  <li>生み出せることに敬意を払って、コミュニケーションをとる</li>\n  <li><a href=\"https://nature.global/jp/nature-remo-3\">Nature Remo 3</a></li>\n  <li><a href=\"https://nature.global/jp/careers\">Nature株式会社 採用情報</a></li>\n  <li><a href=\"https://leanpub.com/ghq-handbook\">ghq handbook</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/36"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nnwf4j9q2dp22pm48q.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 31 Jul 2020 13:20:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nnwf4j9q2dp22pm48q.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4013/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:47:24",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>OSSをどのように読むか？</li>\n  <li>利用するOSSをどうやって選定していくか？</li>\n  <li>協調できるかどうか、という選定基準</li>\n  <li><a href=\"https://songmu.jp/riji/entry/2020-03-18-ecspresso.html\">ecs-deployからecspressoに乗り換えた</a></li>\n  <li><a href=\"https://github.com/kayac/go-katsubushi\">go-katsubushi</a></li>\n  <li><a href=\"https://github.com/kayac/go-katsubushi/pull/40\">implement STAT via binary protocol </a></li>\n  <li>そもそも、なぜ採番する必要があるのか？</li>\n  <li>Snowflakeの意味が複数ある</li>\n  <li><a href=\"https://yapcjapan.org/2020kyoto/timetable.html#/detail/21\">OSS貢献を小さく始めて技術力を高め、大きく花開かせる</a></li>\n  <li>GitHubはSoftware Engineerのpixiv</li>\n  <li>OSSの引き継ぎ</li>\n  <li>0-&gt;1よりも1-&gt;10のが得意になった原点</li>\n  <li>OSSの引き継ぎを自分から提言する</li>\n  <li>OSSのメンテは具体的には何をしている？</li>\n  <li>OSSを引き継いだ結果、どう成長したか？</li>\n  <li>コードの個性</li>\n  <li>どうやってOSSへコントリビュートしやすくしているか？</li>\n  <li><a href=\"https://github.com/x-motemen/ghq\">ghq</a>ですぐ見つけること</li>\n  <li>最新のバージョンを使うこと</li>\n  <li><a href=\"https://github.com/renovatebot/renovate\">renovate</a></li>\n  <li><a href=\"https://dependabot.com/\">dependabot</a></li>\n  <li>Pull Requestを送る際の心構えとは？</li>\n  <li>Pull Requestを放置されても気にしない</li>\n  <li>OSSを他者へ引き継ぐ場合に何を考えているか？</li>\n  <li>Songmuさんの考えるCTOの役割とは？</li>\n  <li>プロダクトセントリックとは？何を意識するか？</li>\n  <li>広告塔の役割として何をするか？</li>\n  <li>チームのパフォーマンスを最大化するために何をするか？</li>\n  <li><a href=\"https://blog.song.mu/entry/startup-manifest\">スタートアップマニフェスト</a></li>\n  <li>アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏</li>\n  <li>生み出せることに敬意を払って、コミュニケーションをとる</li>\n  <li><a href=\"https://nature.global/jp/nature-remo-3\">Nature Remo 3</a></li>\n  <li><a href=\"https://nature.global/jp/careers\">Nature株式会社 採用情報</a></li>\n  <li><a href=\"https://leanpub.com/ghq-handbook\">ghq handbook</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>OSSをどのように読むか？</li>\n  <li>利用するOSSをどうやって選定していくか？</li>\n  <li>協調できるかどうか、という選定基準</li>\n  <li><a href=\"https://songmu.jp/riji/entry/2020-03-18-ecspresso.html\">ecs-deployからecspressoに乗り換えた</a></li>\n  <li><a href=\"https://github.com/kayac/go-katsubushi\">go-katsubushi</a></li>\n  <li><a href=\"https://github.com/kayac/go-katsubushi/pull/40\">implement STAT via binary protocol </a></li>\n  <li>そもそも、なぜ採番する必要があるのか？</li>\n  <li>Snowflakeの意味が複数ある</li>\n  <li><a href=\"https://yapcjapan.org/2020kyoto/timetable.html#/detail/21\">OSS貢献を小さく始めて技術力を高め、大きく花開かせる</a></li>\n  <li>GitHubはSoftware Engineerのpixiv</li>\n  <li>OSSの引き継ぎ</li>\n  <li>0-&gt;1よりも1-&gt;10のが得意になった原点</li>\n  <li>OSSの引き継ぎを自分から提言する</li>\n  <li>OSSのメンテは具体的には何をしている？</li>\n  <li>OSSを引き継いだ結果、どう成長したか？</li>\n  <li>コードの個性</li>\n  <li>どうやってOSSへコントリビュートしやすくしているか？</li>\n  <li><a href=\"https://github.com/x-motemen/ghq\">ghq</a>ですぐ見つけること</li>\n  <li>最新のバージョンを使うこと</li>\n  <li><a href=\"https://github.com/renovatebot/renovate\">renovate</a></li>\n  <li><a href=\"https://dependabot.com/\">dependabot</a></li>\n  <li>Pull Requestを送る際の心構えとは？</li>\n  <li>Pull Requestを放置されても気にしない</li>\n  <li>OSSを他者へ引き継ぐ場合に何を考えているか？</li>\n  <li>Songmuさんの考えるCTOの役割とは？</li>\n  <li>プロダクトセントリックとは？何を意識するか？</li>\n  <li>広告塔の役割として何をするか？</li>\n  <li>チームのパフォーマンスを最大化するために何をするか？</li>\n  <li><a href=\"https://blog.song.mu/entry/startup-manifest\">スタートアップマニフェスト</a></li>\n  <li>アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏</li>\n  <li>生み出せることに敬意を払って、コミュニケーションをとる</li>\n  <li><a href=\"https://nature.global/jp/nature-remo-3\">Nature Remo 3</a></li>\n  <li><a href=\"https://nature.global/jp/careers\">Nature株式会社 採用情報</a></li>\n  <li><a href=\"https://leanpub.com/ghq-handbook\">ghq handbook</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "36. [後編] You have commit bit! w/ songmu",
      "itunes:episodeType": "full",
      "podcast:episode": 37
    },
    {
      "title": "35. [前編] Nature Remoから学ぶシステムアーキテクチャと開発プロセス w/ songmu",
      "link": "https://fukabori.fm/episode/35",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/songmu/inside-nature-remo\">Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo</a></li>\n  <li>Nature Remoとは何か？</li>\n  <li>Nature Remoのアーキテクチャとは</li>\n  <li>Redis Pub/Sub</li>\n  <li>Timer処理をどのように実装するか？</li>\n  <li>ElastiCache Redisが将来的にボトルネックになる可能性</li>\n  <li>Redisの分割はどのような方式とするか？</li>\n  <li>SNSでよくあるID分割による弊害（お化けユーザなど）</li>\n  <li>DDoSに対する防御は？</li>\n  <li>WebSocketを受けるWorkerのCPUはサチらないの？</li>\n  <li>GolangのWebSocket実装が優秀</li>\n  <li>接続先解決の方式はどうするか？</li>\n  <li>ConsulからALBへの移行</li>\n  <li>ALBからWorkerへの接続はTLSを解いている？</li>\n  <li>Streamはどうやってスケールさせるか？</li>\n  <li>積み上げマイグレーションは何がイマイチなのか？</li>\n  <li>手続き型 vs 宣言型</li>\n  <li><a href=\"https://github.com/schemalex/schemalex\">schemalex</a>や<a href=\"https://github.com/k0kubun/sqldef\">sqldef</a></li>\n  <li>Nature Remoは何人ぐらいで開発している？</li>\n  <li>Songmuさんはどうやって採用している？</li>\n  <li>採用時にどうやってスキル的に十分である、と判断するのか？</li>\n  <li>Nature RemoにおけるGitHubのブランチとデプロイ戦略</li>\n  <li><a href=\"https://github.com/x-motemen/git-pr-release\">git-pr-release</a></li>\n  <li><a href=\"https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html\">CircleCIでgit-pr-releaseする</a></li>\n  <li>デプロイ後の障害をどうやって気づくか？</li>\n  <li>ALBにおけるReal IPの解決の課題</li>\n  <li><a href=\"https://songmu.jp/riji/entry/2020-04-24-realip.html\">GoのWebアプリでクライアントIPを検出するrealipモジュール</a></li>\n  <li>Nginxのngx_http_realip_module</li>\n  <li>全員が自分たちのプロダクトのユーザである</li>\n  <li>ビジネス要求の管理はどうしているか？</li>\n  <li><a href=\"https://www.zenhub.com/\">ZenHub</a></li>\n  <li>オフィス移転とリモートワーク</li>\n  <li>どうやって見積もりする？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/35"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nn4hrntnxgt20b06e1.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 29 Jul 2020 16:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nn4hrntnxgt20b06e1.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4012/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:45:41",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/songmu/inside-nature-remo\">Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo</a></li>\n  <li>Nature Remoとは何か？</li>\n  <li>Nature Remoのアーキテクチャとは</li>\n  <li>Redis Pub/Sub</li>\n  <li>Timer処理をどのように実装するか？</li>\n  <li>ElastiCache Redisが将来的にボトルネックになる可能性</li>\n  <li>Redisの分割はどのような方式とするか？</li>\n  <li>SNSでよくあるID分割による弊害（お化けユーザなど）</li>\n  <li>DDoSに対する防御は？</li>\n  <li>WebSocketを受けるWorkerのCPUはサチらないの？</li>\n  <li>GolangのWebSocket実装が優秀</li>\n  <li>接続先解決の方式はどうするか？</li>\n  <li>ConsulからALBへの移行</li>\n  <li>ALBからWorkerへの接続はTLSを解いている？</li>\n  <li>Streamはどうやってスケールさせるか？</li>\n  <li>積み上げマイグレーションは何がイマイチなのか？</li>\n  <li>手続き型 vs 宣言型</li>\n  <li><a href=\"https://github.com/schemalex/schemalex\">schemalex</a>や<a href=\"https://github.com/k0kubun/sqldef\">sqldef</a></li>\n  <li>Nature Remoは何人ぐらいで開発している？</li>\n  <li>Songmuさんはどうやって採用している？</li>\n  <li>採用時にどうやってスキル的に十分である、と判断するのか？</li>\n  <li>Nature RemoにおけるGitHubのブランチとデプロイ戦略</li>\n  <li><a href=\"https://github.com/x-motemen/git-pr-release\">git-pr-release</a></li>\n  <li><a href=\"https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html\">CircleCIでgit-pr-releaseする</a></li>\n  <li>デプロイ後の障害をどうやって気づくか？</li>\n  <li>ALBにおけるReal IPの解決の課題</li>\n  <li><a href=\"https://songmu.jp/riji/entry/2020-04-24-realip.html\">GoのWebアプリでクライアントIPを検出するrealipモジュール</a></li>\n  <li>Nginxのngx_http_realip_module</li>\n  <li>全員が自分たちのプロダクトのユーザである</li>\n  <li>ビジネス要求の管理はどうしているか？</li>\n  <li><a href=\"https://www.zenhub.com/\">ZenHub</a></li>\n  <li>オフィス移転とリモートワーク</li>\n  <li>どうやって見積もりする？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/songmu/inside-nature-remo\">Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo</a></li>\n  <li>Nature Remoとは何か？</li>\n  <li>Nature Remoのアーキテクチャとは</li>\n  <li>Redis Pub/Sub</li>\n  <li>Timer処理をどのように実装するか？</li>\n  <li>ElastiCache Redisが将来的にボトルネックになる可能性</li>\n  <li>Redisの分割はどのような方式とするか？</li>\n  <li>SNSでよくあるID分割による弊害（お化けユーザなど）</li>\n  <li>DDoSに対する防御は？</li>\n  <li>WebSocketを受けるWorkerのCPUはサチらないの？</li>\n  <li>GolangのWebSocket実装が優秀</li>\n  <li>接続先解決の方式はどうするか？</li>\n  <li>ConsulからALBへの移行</li>\n  <li>ALBからWorkerへの接続はTLSを解いている？</li>\n  <li>Streamはどうやってスケールさせるか？</li>\n  <li>積み上げマイグレーションは何がイマイチなのか？</li>\n  <li>手続き型 vs 宣言型</li>\n  <li><a href=\"https://github.com/schemalex/schemalex\">schemalex</a>や<a href=\"https://github.com/k0kubun/sqldef\">sqldef</a></li>\n  <li>Nature Remoは何人ぐらいで開発している？</li>\n  <li>Songmuさんはどうやって採用している？</li>\n  <li>採用時にどうやってスキル的に十分である、と判断するのか？</li>\n  <li>Nature RemoにおけるGitHubのブランチとデプロイ戦略</li>\n  <li><a href=\"https://github.com/x-motemen/git-pr-release\">git-pr-release</a></li>\n  <li><a href=\"https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html\">CircleCIでgit-pr-releaseする</a></li>\n  <li>デプロイ後の障害をどうやって気づくか？</li>\n  <li>ALBにおけるReal IPの解決の課題</li>\n  <li><a href=\"https://songmu.jp/riji/entry/2020-04-24-realip.html\">GoのWebアプリでクライアントIPを検出するrealipモジュール</a></li>\n  <li>Nginxのngx_http_realip_module</li>\n  <li>全員が自分たちのプロダクトのユーザである</li>\n  <li>ビジネス要求の管理はどうしているか？</li>\n  <li><a href=\"https://www.zenhub.com/\">ZenHub</a></li>\n  <li>オフィス移転とリモートワーク</li>\n  <li>どうやって見積もりする？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "35. [前編] Nature Remoから学ぶシステムアーキテクチャと開発プロセス w/ songmu",
      "itunes:episodeType": "full",
      "podcast:episode": 36
    },
    {
      "title": "34. NewSQLとは w/ tzkb",
      "link": "https://fukabori.fm/episode/34",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>2000年初頭のデータストアは何が主流だったのか？</li>\n  <li>OLTPとDWH</li>\n  <li>データベースから見るとReadのスケールアウトは難しくない</li>\n  <li>Web系で難しいのはWriteのスケールアウト</li>\n  <li>RDBのReadのスケールアウト方法とは？</li>\n  <li>Web + RDB + Cache のアーキテクチャの辛い点は？</li>\n  <li>UniverseとMultiverse</li>\n  <li>Oracle Exadata</li>\n  <li>RDBにおける全文検索</li>\n  <li>NewSQLとは何か？</li>\n  <li>NoSQLとは何を指すか？</li>\n  <li>トランザクション処理はなぜ難しいのか？</li>\n  <li>マルチマスタの難しさ</li>\n  <li>Google Cloud Spannerについて</li>\n  <li>金の弾丸</li>\n  <li>YugabyteDB/CockroachDB/TiDB</li>\n  <li>YugabyteDBの特徴は？</li>\n  <li>PostgreSQL互換とMySQL互換という売り</li>\n  <li>NewSQLの技術要素は？</li>\n  <li>NewSQLのレプリケーションはどうやるか？</li>\n  <li>Raftとは？</li>\n  <li>DBにおけるShardingとは何か？</li>\n  <li>Partioningとは何か？</li>\n  <li>RDBのデータ構造は何を利用しているか？</li>\n  <li>B+TreeのRead/Writeはどうやるか？</li>\n  <li>B+Treeの計算量は？</li>\n  <li>NewSQLのデータ構造は？</li>\n  <li>LSM Tree(Log Structured Merge Tree)とは？</li>\n  <li>B+Treeのメリット・デメリット</li>\n  <li>LSM Treeのメリット・デメリット</li>\n  <li>DBに難しいのは古いバージョンのデータを取るとき</li>\n  <li>MVCC(Multi Version Concurrency Control)とは？</li>\n  <li>LSM Treeで古いデータをどうやって探すのか？</li>\n  <li>Bloom Filter</li>\n  <li>Facebook製のRocksDB</li>\n  <li>分散トランザクションをどう実現するのか？</li>\n  <li>DBにおける分離レベルとは？</li>\n  <li>Read Commited/Repeatable Read/Serializable</li>\n  <li>SpannerのExternal Consistency</li>\n  <li>AWS Auroraの裏側の作りは？</li>\n  <li>OracleのRAC(Real Application Cluster)とは？</li>\n  <li>令和時代のアプリケーション開発者のデータストア選定について</li>\n  <li>MySQLとPostgrSQLの使い分けは？</li>\n  <li>どうやってDBについて学習するか？</li>\n  <li>CAPの定理をあえて使う必要はない</li>\n  <li><a href=\"https://databaseinternals.connpass.com/\">Database Internals 輪読会</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/34"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nnqcgjheh0hnepz99b.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Thu, 02 Jul 2020 18:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nnqcgjheh0hnepz99b.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4011/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:59:21",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>2000年初頭のデータストアは何が主流だったのか？</li>\n  <li>OLTPとDWH</li>\n  <li>データベースから見るとReadのスケールアウトは難しくない</li>\n  <li>Web系で難しいのはWriteのスケールアウト</li>\n  <li>RDBのReadのスケールアウト方法とは？</li>\n  <li>Web + RDB + Cache のアーキテクチャの辛い点は？</li>\n  <li>UniverseとMultiverse</li>\n  <li>Oracle Exadata</li>\n  <li>RDBにおける全文検索</li>\n  <li>NewSQLとは何か？</li>\n  <li>NoSQLとは何を指すか？</li>\n  <li>トランザクション処理はなぜ難しいのか？</li>\n  <li>マルチマスタの難しさ</li>\n  <li>Google Cloud Spannerについて</li>\n  <li>金の弾丸</li>\n  <li>YugabyteDB/CockroachDB/TiDB</li>\n  <li>YugabyteDBの特徴は？</li>\n  <li>PostgreSQL互換とMySQL互換という売り</li>\n  <li>NewSQLの技術要素は？</li>\n  <li>NewSQLのレプリケーションはどうやるか？</li>\n  <li>Raftとは？</li>\n  <li>DBにおけるShardingとは何か？</li>\n  <li>Partioningとは何か？</li>\n  <li>RDBのデータ構造は何を利用しているか？</li>\n  <li>B+TreeのRead/Writeはどうやるか？</li>\n  <li>B+Treeの計算量は？</li>\n  <li>NewSQLのデータ構造は？</li>\n  <li>LSM Tree(Log Structured Merge Tree)とは？</li>\n  <li>B+Treeのメリット・デメリット</li>\n  <li>LSM Treeのメリット・デメリット</li>\n  <li>DBに難しいのは古いバージョンのデータを取るとき</li>\n  <li>MVCC(Multi Version Concurrency Control)とは？</li>\n  <li>LSM Treeで古いデータをどうやって探すのか？</li>\n  <li>Bloom Filter</li>\n  <li>Facebook製のRocksDB</li>\n  <li>分散トランザクションをどう実現するのか？</li>\n  <li>DBにおける分離レベルとは？</li>\n  <li>Read Commited/Repeatable Read/Serializable</li>\n  <li>SpannerのExternal Consistency</li>\n  <li>AWS Auroraの裏側の作りは？</li>\n  <li>OracleのRAC(Real Application Cluster)とは？</li>\n  <li>令和時代のアプリケーション開発者のデータストア選定について</li>\n  <li>MySQLとPostgrSQLの使い分けは？</li>\n  <li>どうやってDBについて学習するか？</li>\n  <li>CAPの定理をあえて使う必要はない</li>\n  <li><a href=\"https://databaseinternals.connpass.com/\">Database Internals 輪読会</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>2000年初頭のデータストアは何が主流だったのか？</li>\n  <li>OLTPとDWH</li>\n  <li>データベースから見るとReadのスケールアウトは難しくない</li>\n  <li>Web系で難しいのはWriteのスケールアウト</li>\n  <li>RDBのReadのスケールアウト方法とは？</li>\n  <li>Web + RDB + Cache のアーキテクチャの辛い点は？</li>\n  <li>UniverseとMultiverse</li>\n  <li>Oracle Exadata</li>\n  <li>RDBにおける全文検索</li>\n  <li>NewSQLとは何か？</li>\n  <li>NoSQLとは何を指すか？</li>\n  <li>トランザクション処理はなぜ難しいのか？</li>\n  <li>マルチマスタの難しさ</li>\n  <li>Google Cloud Spannerについて</li>\n  <li>金の弾丸</li>\n  <li>YugabyteDB/CockroachDB/TiDB</li>\n  <li>YugabyteDBの特徴は？</li>\n  <li>PostgreSQL互換とMySQL互換という売り</li>\n  <li>NewSQLの技術要素は？</li>\n  <li>NewSQLのレプリケーションはどうやるか？</li>\n  <li>Raftとは？</li>\n  <li>DBにおけるShardingとは何か？</li>\n  <li>Partioningとは何か？</li>\n  <li>RDBのデータ構造は何を利用しているか？</li>\n  <li>B+TreeのRead/Writeはどうやるか？</li>\n  <li>B+Treeの計算量は？</li>\n  <li>NewSQLのデータ構造は？</li>\n  <li>LSM Tree(Log Structured Merge Tree)とは？</li>\n  <li>B+Treeのメリット・デメリット</li>\n  <li>LSM Treeのメリット・デメリット</li>\n  <li>DBに難しいのは古いバージョンのデータを取るとき</li>\n  <li>MVCC(Multi Version Concurrency Control)とは？</li>\n  <li>LSM Treeで古いデータをどうやって探すのか？</li>\n  <li>Bloom Filter</li>\n  <li>Facebook製のRocksDB</li>\n  <li>分散トランザクションをどう実現するのか？</li>\n  <li>DBにおける分離レベルとは？</li>\n  <li>Read Commited/Repeatable Read/Serializable</li>\n  <li>SpannerのExternal Consistency</li>\n  <li>AWS Auroraの裏側の作りは？</li>\n  <li>OracleのRAC(Real Application Cluster)とは？</li>\n  <li>令和時代のアプリケーション開発者のデータストア選定について</li>\n  <li>MySQLとPostgrSQLの使い分けは？</li>\n  <li>どうやってDBについて学習するか？</li>\n  <li>CAPの定理をあえて使う必要はない</li>\n  <li><a href=\"https://databaseinternals.connpass.com/\">Database Internals 輪読会</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "34. NewSQLとは w/ tzkb",
      "itunes:episodeType": "full",
      "podcast:episode": 35
    },
    {
      "title": "33. エンジニアの新卒採用事情 w/ tomoaki_mura",
      "link": "https://fukabori.fm/episode/33",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>最近の新卒採用事情ってどんな感じ？</li>\n  <li>B3/M1であっても、5月時点でオファーを持っていることも</li>\n  <li>優秀な人材の低学年化</li>\n  <li>サマーインターンシップは増えている？</li>\n  <li>インターンシップで学生に刺さるコンテンツとは？</li>\n  <li>チーム開発形式のインターンシップが人気な理由とは？</li>\n  <li>ペアプロ、モブプロというコンテンツ</li>\n  <li><a href=\"https://athletix.run/events/bFPaKSbCE\">先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験</a></li>\n  <li>スタートアップ、大企業などで、どこが人気か？</li>\n  <li>職種別選考とは何か？メリット・デメリットは？</li>\n  <li>人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？</li>\n  <li>エンジニアの開発実態・KPTを見に行くプラクティス</li>\n  <li>最初の「なんだこいつ」の違和感を乗り越える</li>\n  <li>職種別選考を進める上で、重要なポイントとは？</li>\n  <li>経営戦略から採用戦略まで一気通貫で筋をとおす</li>\n  <li>立場関係なくお互いを信じ合う</li>\n  <li>配属ガチャは依然としてまだ結構ある？なぜ起きるのか？</li>\n  <li>採用と育成をやる人は同じの方がいい？</li>\n  <li>効果的な新入社員研修とは？</li>\n  <li>能力を可視化した上で、グルーピングする</li>\n  <li>グループ分けしたあとの研修コンテンツは？</li>\n  <li>入社した後のケアとしての新入社員研修</li>\n  <li><a href=\"https://givery.co.jp/services/track/\">track</a></li>\n  <li><a href=\"https://givery.co.jp/services/athletics/\">athletics</a></li>\n  <li><a href=\"https://hatenacorp.jp/intern2020\">はてなインターン2020</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/33"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nmb6zbhyf2ykgspbks.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 07 Jun 2020 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nmb6zbhyf2ykgspbks.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4010/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:48:00",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>最近の新卒採用事情ってどんな感じ？</li>\n  <li>B3/M1であっても、5月時点でオファーを持っていることも</li>\n  <li>優秀な人材の低学年化</li>\n  <li>サマーインターンシップは増えている？</li>\n  <li>インターンシップで学生に刺さるコンテンツとは？</li>\n  <li>チーム開発形式のインターンシップが人気な理由とは？</li>\n  <li>ペアプロ、モブプロというコンテンツ</li>\n  <li><a href=\"https://athletix.run/events/bFPaKSbCE\">先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験</a></li>\n  <li>スタートアップ、大企業などで、どこが人気か？</li>\n  <li>職種別選考とは何か？メリット・デメリットは？</li>\n  <li>人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？</li>\n  <li>エンジニアの開発実態・KPTを見に行くプラクティス</li>\n  <li>最初の「なんだこいつ」の違和感を乗り越える</li>\n  <li>職種別選考を進める上で、重要なポイントとは？</li>\n  <li>経営戦略から採用戦略まで一気通貫で筋をとおす</li>\n  <li>立場関係なくお互いを信じ合う</li>\n  <li>配属ガチャは依然としてまだ結構ある？なぜ起きるのか？</li>\n  <li>採用と育成をやる人は同じの方がいい？</li>\n  <li>効果的な新入社員研修とは？</li>\n  <li>能力を可視化した上で、グルーピングする</li>\n  <li>グループ分けしたあとの研修コンテンツは？</li>\n  <li>入社した後のケアとしての新入社員研修</li>\n  <li><a href=\"https://givery.co.jp/services/track/\">track</a></li>\n  <li><a href=\"https://givery.co.jp/services/athletics/\">athletics</a></li>\n  <li><a href=\"https://hatenacorp.jp/intern2020\">はてなインターン2020</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>最近の新卒採用事情ってどんな感じ？</li>\n  <li>B3/M1であっても、5月時点でオファーを持っていることも</li>\n  <li>優秀な人材の低学年化</li>\n  <li>サマーインターンシップは増えている？</li>\n  <li>インターンシップで学生に刺さるコンテンツとは？</li>\n  <li>チーム開発形式のインターンシップが人気な理由とは？</li>\n  <li>ペアプロ、モブプロというコンテンツ</li>\n  <li><a href=\"https://athletix.run/events/bFPaKSbCE\">先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験</a></li>\n  <li>スタートアップ、大企業などで、どこが人気か？</li>\n  <li>職種別選考とは何か？メリット・デメリットは？</li>\n  <li>人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？</li>\n  <li>エンジニアの開発実態・KPTを見に行くプラクティス</li>\n  <li>最初の「なんだこいつ」の違和感を乗り越える</li>\n  <li>職種別選考を進める上で、重要なポイントとは？</li>\n  <li>経営戦略から採用戦略まで一気通貫で筋をとおす</li>\n  <li>立場関係なくお互いを信じ合う</li>\n  <li>配属ガチャは依然としてまだ結構ある？なぜ起きるのか？</li>\n  <li>採用と育成をやる人は同じの方がいい？</li>\n  <li>効果的な新入社員研修とは？</li>\n  <li>能力を可視化した上で、グルーピングする</li>\n  <li>グループ分けしたあとの研修コンテンツは？</li>\n  <li>入社した後のケアとしての新入社員研修</li>\n  <li><a href=\"https://givery.co.jp/services/track/\">track</a></li>\n  <li><a href=\"https://givery.co.jp/services/athletics/\">athletics</a></li>\n  <li><a href=\"https://hatenacorp.jp/intern2020\">はてなインターン2020</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "33. エンジニアの新卒採用事情 w/ tomoaki_mura",
      "itunes:episodeType": "full",
      "podcast:episode": 34
    },
    {
      "title": "32. みんなでアジャイル w/ ryuzee",
      "link": "https://fukabori.fm/episode/32",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://www.oreilly.co.jp/books/9784873119090/\">みんなでアジャイル</a></li>\n  <li>想定読者は？</li>\n  <li>アジャイルはなぜ重要なのか？</li>\n  <li>書籍を通して伝えているのは、顧客に価値を届けること</li>\n  <li>説教臭い</li>\n  <li>プラクティスよりも、前段にあるなぜアジャイルなのか、から始める</li>\n  <li>たくさん作るのではなく、成果を出しにいく</li>\n  <li>サクッと読めるわりにグサグサやる</li>\n  <li>自分たちの北極星とは何か？</li>\n  <li>自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない</li>\n  <li>北極星を見つけるためには、どうすればいいのか？</li>\n  <li>どのぐらいのレイヤ、スコープで北極星を探せばいいのか？</li>\n  <li>経営方針とチームミッションが一致していると周りの支援が得やすい</li>\n  <li>OKRという考え方</li>\n  <li><a href=\"https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit\">みんなでアジャイル Playbook</a></li>\n  <li>オンラインでのチームビルディングはどうしたら良いか？</li>\n  <li><a href=\"https://simplearchitect.hatenablog.com/entry/2020/04/15/100449\">マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント</a></li>\n  <li>やっているのを見せるのが大事</li>\n  <li>分報から始まるQuick Call</li>\n  <li>制約があったほうが工夫、アイデアが生まれる</li>\n  <li>上手くいってないからフレームワークを探そうはダメ</li>\n  <li>アジャイルについて話すだけで、アジャイルになった気になる</li>\n  <li><a href=\"https://twitter.com/ryuzee/status/1250547829702930434\">必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう</a></li>\n  <li>組織重力の3法則</li>\n  <li>第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける</li>\n  <li>なぜ、第1法則が生まれるのか？</li>\n  <li>第1法則からはどうすれば脱却できるか？</li>\n  <li>顧客から一番離れている人が意思決定していて良いのか？</li>\n  <li>社員全員がカスタマサポートのチャットに入る</li>\n  <li>第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する</li>\n  <li>チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある</li>\n  <li>第2法則からはどうすれば脱却できるか？</li>\n  <li>今やっている仕事を見える化する、仕事をオープンにする</li>\n  <li>早期から頻繁にコラボレーションするには楽なやり方が必要</li>\n  <li>そもそもコラボレーションしたいものを扱ってるのか？</li>\n  <li>なぜ顧客の声を早期に聴きに行くのが難しいのか？</li>\n  <li>第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない</li>\n  <li>なぜ第3法則が生まれるのか？</li>\n  <li>目標設定と評価が関係している</li>\n  <li>第3法則からはどうすれば脱却できるか？</li>\n  <li>スタート地点からどんなリスクがあるのか明らかにする</li>\n  <li>不確実性を計画に組み込む</li>\n  <li>進捗レポートで「問題ありません」というのはダメ</li>\n  <li>紙のレポートは残るので、安全に倒してしまう</li>\n  <li>タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる</li>\n  <li>組織変革の熱狂は長くても6ヶ月しか持たない</li>\n  <li>ryuzeeさんが訳していて、書籍の一番好きなところは何か？</li>\n  <li>アジャイル系開発手法は応用範囲が広い</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/32"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nkeddectd93mnajwg0.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 05 May 2020 13:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nkeddectd93mnajwg0.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4009/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:49:48",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://www.oreilly.co.jp/books/9784873119090/\">みんなでアジャイル</a></li>\n  <li>想定読者は？</li>\n  <li>アジャイルはなぜ重要なのか？</li>\n  <li>書籍を通して伝えているのは、顧客に価値を届けること</li>\n  <li>説教臭い</li>\n  <li>プラクティスよりも、前段にあるなぜアジャイルなのか、から始める</li>\n  <li>たくさん作るのではなく、成果を出しにいく</li>\n  <li>サクッと読めるわりにグサグサやる</li>\n  <li>自分たちの北極星とは何か？</li>\n  <li>自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない</li>\n  <li>北極星を見つけるためには、どうすればいいのか？</li>\n  <li>どのぐらいのレイヤ、スコープで北極星を探せばいいのか？</li>\n  <li>経営方針とチームミッションが一致していると周りの支援が得やすい</li>\n  <li>OKRという考え方</li>\n  <li><a href=\"https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit\">みんなでアジャイル Playbook</a></li>\n  <li>オンラインでのチームビルディングはどうしたら良いか？</li>\n  <li><a href=\"https://simplearchitect.hatenablog.com/entry/2020/04/15/100449\">マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント</a></li>\n  <li>やっているのを見せるのが大事</li>\n  <li>分報から始まるQuick Call</li>\n  <li>制約があったほうが工夫、アイデアが生まれる</li>\n  <li>上手くいってないからフレームワークを探そうはダメ</li>\n  <li>アジャイルについて話すだけで、アジャイルになった気になる</li>\n  <li><a href=\"https://twitter.com/ryuzee/status/1250547829702930434\">必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう</a></li>\n  <li>組織重力の3法則</li>\n  <li>第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける</li>\n  <li>なぜ、第1法則が生まれるのか？</li>\n  <li>第1法則からはどうすれば脱却できるか？</li>\n  <li>顧客から一番離れている人が意思決定していて良いのか？</li>\n  <li>社員全員がカスタマサポートのチャットに入る</li>\n  <li>第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する</li>\n  <li>チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある</li>\n  <li>第2法則からはどうすれば脱却できるか？</li>\n  <li>今やっている仕事を見える化する、仕事をオープンにする</li>\n  <li>早期から頻繁にコラボレーションするには楽なやり方が必要</li>\n  <li>そもそもコラボレーションしたいものを扱ってるのか？</li>\n  <li>なぜ顧客の声を早期に聴きに行くのが難しいのか？</li>\n  <li>第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない</li>\n  <li>なぜ第3法則が生まれるのか？</li>\n  <li>目標設定と評価が関係している</li>\n  <li>第3法則からはどうすれば脱却できるか？</li>\n  <li>スタート地点からどんなリスクがあるのか明らかにする</li>\n  <li>不確実性を計画に組み込む</li>\n  <li>進捗レポートで「問題ありません」というのはダメ</li>\n  <li>紙のレポートは残るので、安全に倒してしまう</li>\n  <li>タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる</li>\n  <li>組織変革の熱狂は長くても6ヶ月しか持たない</li>\n  <li>ryuzeeさんが訳していて、書籍の一番好きなところは何か？</li>\n  <li>アジャイル系開発手法は応用範囲が広い</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://www.oreilly.co.jp/books/9784873119090/\">みんなでアジャイル</a></li>\n  <li>想定読者は？</li>\n  <li>アジャイルはなぜ重要なのか？</li>\n  <li>書籍を通して伝えているのは、顧客に価値を届けること</li>\n  <li>説教臭い</li>\n  <li>プラクティスよりも、前段にあるなぜアジャイルなのか、から始める</li>\n  <li>たくさん作るのではなく、成果を出しにいく</li>\n  <li>サクッと読めるわりにグサグサやる</li>\n  <li>自分たちの北極星とは何か？</li>\n  <li>自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない</li>\n  <li>北極星を見つけるためには、どうすればいいのか？</li>\n  <li>どのぐらいのレイヤ、スコープで北極星を探せばいいのか？</li>\n  <li>経営方針とチームミッションが一致していると周りの支援が得やすい</li>\n  <li>OKRという考え方</li>\n  <li><a href=\"https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit\">みんなでアジャイル Playbook</a></li>\n  <li>オンラインでのチームビルディングはどうしたら良いか？</li>\n  <li><a href=\"https://simplearchitect.hatenablog.com/entry/2020/04/15/100449\">マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント</a></li>\n  <li>やっているのを見せるのが大事</li>\n  <li>分報から始まるQuick Call</li>\n  <li>制約があったほうが工夫、アイデアが生まれる</li>\n  <li>上手くいってないからフレームワークを探そうはダメ</li>\n  <li>アジャイルについて話すだけで、アジャイルになった気になる</li>\n  <li><a href=\"https://twitter.com/ryuzee/status/1250547829702930434\">必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう</a></li>\n  <li>組織重力の3法則</li>\n  <li>第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける</li>\n  <li>なぜ、第1法則が生まれるのか？</li>\n  <li>第1法則からはどうすれば脱却できるか？</li>\n  <li>顧客から一番離れている人が意思決定していて良いのか？</li>\n  <li>社員全員がカスタマサポートのチャットに入る</li>\n  <li>第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する</li>\n  <li>チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある</li>\n  <li>第2法則からはどうすれば脱却できるか？</li>\n  <li>今やっている仕事を見える化する、仕事をオープンにする</li>\n  <li>早期から頻繁にコラボレーションするには楽なやり方が必要</li>\n  <li>そもそもコラボレーションしたいものを扱ってるのか？</li>\n  <li>なぜ顧客の声を早期に聴きに行くのが難しいのか？</li>\n  <li>第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない</li>\n  <li>なぜ第3法則が生まれるのか？</li>\n  <li>目標設定と評価が関係している</li>\n  <li>第3法則からはどうすれば脱却できるか？</li>\n  <li>スタート地点からどんなリスクがあるのか明らかにする</li>\n  <li>不確実性を計画に組み込む</li>\n  <li>進捗レポートで「問題ありません」というのはダメ</li>\n  <li>紙のレポートは残るので、安全に倒してしまう</li>\n  <li>タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる</li>\n  <li>組織変革の熱狂は長くても6ヶ月しか持たない</li>\n  <li>ryuzeeさんが訳していて、書籍の一番好きなところは何か？</li>\n  <li>アジャイル系開発手法は応用範囲が広い</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "32. みんなでアジャイル w/ ryuzee",
      "itunes:episodeType": "full",
      "podcast:episode": 33
    },
    {
      "title": "31. fukabori.fmのロゴ作成から学ぶデザイナーの業務プロセス w/ hiromisugie",
      "link": "https://fukabori.fm/episode/31",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://note.com/hiromisugie/n/n4f586af50513\">エンジニア向けPodcast 「fukabori.fm」のロゴデザイン</a></li>\n  <li>どのようなプロセスでロゴを作成するのか？</li>\n  <li>対象の理解では、何をするのか？</li>\n  <li>ヒアリングは何のためにするのか？</li>\n  <li>周辺の理解、リサーチでは何をするのか？</li>\n  <li>競合リサーチ、市場リサーチとは？</li>\n  <li>fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？</li>\n  <li>見えやすさの5性質とは？</li>\n  <li>誘目性、視認性、明視性、可読性、識別性とは？</li>\n  <li>行間をどのような目安で決めるのか？</li>\n  <li>noteの記事は、なぜ行間が広いのか？</li>\n  <li>ユニバーサルデザイン</li>\n  <li>デザインコンセプトの検討、ラフスイッチとは？</li>\n  <li>デザインコンセプトとはそもそも何か？</li>\n  <li>ロゴ作成のおけるプロトタイプ作成はどう進めるのか？</li>\n  <li>ロゴの似たもの調査はどうやるのか？</li>\n  <li>シンプルなロゴは非常にかぶりやすいのでは？</li>\n  <li>似てる・似てないの判断とは？</li>\n  <li>東京オリンピックのロゴ類似問題</li>\n  <li>シンガポールのティラミスヒーロー</li>\n  <li>最後の作り込み、ブラッシュアップは何をしていくのか？</li>\n  <li>ロゴにおける大文字と小文字の意味</li>\n  <li>どのように色を決めるのか？</li>\n  <li>デザイナーは安直にパターンを作ってはいけない</li>\n  <li>訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです</li>\n  <li>オススメ書籍名: ノンデザイナーズ・デザインブック</li>\n  <li>オススメ書籍名: マンガでわかる色のおもしろ心理学</li>\n  <li>オススメ書籍名: 7日間でマスターする 配色基礎講座</li>\n  <li>オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング</li>\n  <li>オススメ書籍名: 欧文書体 その背景と使い方</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/31"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk01xvg23pwdpnbxfq.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 27 Apr 2020 21:50:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk01xvg23pwdpnbxfq.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4008/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:01:19",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://note.com/hiromisugie/n/n4f586af50513\">エンジニア向けPodcast 「fukabori.fm」のロゴデザイン</a></li>\n  <li>どのようなプロセスでロゴを作成するのか？</li>\n  <li>対象の理解では、何をするのか？</li>\n  <li>ヒアリングは何のためにするのか？</li>\n  <li>周辺の理解、リサーチでは何をするのか？</li>\n  <li>競合リサーチ、市場リサーチとは？</li>\n  <li>fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？</li>\n  <li>見えやすさの5性質とは？</li>\n  <li>誘目性、視認性、明視性、可読性、識別性とは？</li>\n  <li>行間をどのような目安で決めるのか？</li>\n  <li>noteの記事は、なぜ行間が広いのか？</li>\n  <li>ユニバーサルデザイン</li>\n  <li>デザインコンセプトの検討、ラフスイッチとは？</li>\n  <li>デザインコンセプトとはそもそも何か？</li>\n  <li>ロゴ作成のおけるプロトタイプ作成はどう進めるのか？</li>\n  <li>ロゴの似たもの調査はどうやるのか？</li>\n  <li>シンプルなロゴは非常にかぶりやすいのでは？</li>\n  <li>似てる・似てないの判断とは？</li>\n  <li>東京オリンピックのロゴ類似問題</li>\n  <li>シンガポールのティラミスヒーロー</li>\n  <li>最後の作り込み、ブラッシュアップは何をしていくのか？</li>\n  <li>ロゴにおける大文字と小文字の意味</li>\n  <li>どのように色を決めるのか？</li>\n  <li>デザイナーは安直にパターンを作ってはいけない</li>\n  <li>訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです</li>\n  <li>オススメ書籍名: ノンデザイナーズ・デザインブック</li>\n  <li>オススメ書籍名: マンガでわかる色のおもしろ心理学</li>\n  <li>オススメ書籍名: 7日間でマスターする 配色基礎講座</li>\n  <li>オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング</li>\n  <li>オススメ書籍名: 欧文書体 その背景と使い方</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://note.com/hiromisugie/n/n4f586af50513\">エンジニア向けPodcast 「fukabori.fm」のロゴデザイン</a></li>\n  <li>どのようなプロセスでロゴを作成するのか？</li>\n  <li>対象の理解では、何をするのか？</li>\n  <li>ヒアリングは何のためにするのか？</li>\n  <li>周辺の理解、リサーチでは何をするのか？</li>\n  <li>競合リサーチ、市場リサーチとは？</li>\n  <li>fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？</li>\n  <li>見えやすさの5性質とは？</li>\n  <li>誘目性、視認性、明視性、可読性、識別性とは？</li>\n  <li>行間をどのような目安で決めるのか？</li>\n  <li>noteの記事は、なぜ行間が広いのか？</li>\n  <li>ユニバーサルデザイン</li>\n  <li>デザインコンセプトの検討、ラフスイッチとは？</li>\n  <li>デザインコンセプトとはそもそも何か？</li>\n  <li>ロゴ作成のおけるプロトタイプ作成はどう進めるのか？</li>\n  <li>ロゴの似たもの調査はどうやるのか？</li>\n  <li>シンプルなロゴは非常にかぶりやすいのでは？</li>\n  <li>似てる・似てないの判断とは？</li>\n  <li>東京オリンピックのロゴ類似問題</li>\n  <li>シンガポールのティラミスヒーロー</li>\n  <li>最後の作り込み、ブラッシュアップは何をしていくのか？</li>\n  <li>ロゴにおける大文字と小文字の意味</li>\n  <li>どのように色を決めるのか？</li>\n  <li>デザイナーは安直にパターンを作ってはいけない</li>\n  <li>訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです</li>\n  <li>オススメ書籍名: ノンデザイナーズ・デザインブック</li>\n  <li>オススメ書籍名: マンガでわかる色のおもしろ心理学</li>\n  <li>オススメ書籍名: 7日間でマスターする 配色基礎講座</li>\n  <li>オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング</li>\n  <li>オススメ書籍名: 欧文書体 その背景と使い方</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "31. fukabori.fmのロゴ作成から学ぶデザイナーの業務プロセス w/ hiromisugie",
      "itunes:episodeType": "full",
      "podcast:episode": 32
    },
    {
      "title": "30. Cloud Native Data Center Networking w/ toby",
      "link": "https://fukabori.fm/episode/30",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？</li>\n  <li>Aggregation Switchと、Access Switchの分割している理由は？</li>\n  <li>サーバとAccess Switchは、Ethernetでつないでいる？</li>\n  <li>Access Switchや、Aggregation Swtichの冗長化はどうするか？</li>\n  <li>トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？</li>\n  <li>STP(Spanning Tree Protocol)とBroadcast Storm</li>\n  <li>なぜ、このアーキテクチャが全盛だったのか？</li>\n  <li>従来のネットワーキングは、何が問題になるのか？</li>\n  <li>L2にTTL(Time To Live)は存在する？</li>\n  <li>検証で上手くいっていても、系の切り替え時はドキドキする</li>\n  <li>Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？</li>\n  <li>North South / East West トラフィック</li>\n  <li><a href=\"https://fukabori.fm/episode/11\">11. dockerネットワーキングとか、kubernetesネットワーキングとか</a></li>\n  <li>CLOS Topologyとは？</li>\n  <li><a href=\"http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html\">クロスバースイッチ</a></li>\n  <li>現代のDCで使うCLOSは、具体的にどういう構成になるのか？</li>\n  <li>CLOSはどういう特徴があるのか？</li>\n  <li>Leaf SwitchとSpine Switchとは？</li>\n  <li>なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？</li>\n  <li>ユーザがL2を使いたい場合はどうするのか？</li>\n  <li>CLOS上の構成では、トラフィックはACT/ACTか？</li>\n  <li>ECMPと、5 tuple flow</li>\n  <li>CLOSのスケール限界はあるのか？</li>\n  <li>CLOSにおけるフラクタル</li>\n  <li>NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？</li>\n  <li>なぜ、Storage Planeと、Data Planeを分けているのか？</li>\n  <li>Leafの冗長化はどのように実現しているのか？</li>\n  <li>運用上で大変なところは何か？これからどうしていきたいか？</li>\n  <li>リンクの自動化試験、LLDP(Link Layer Discovery Protocol)</li>\n  <li>ソフトウェアのやり方でネットワークを変えていきたい人を募集中</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/30"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk886hr8cvg0zm43z8.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 05 Apr 2020 08:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk886hr8cvg0zm43z8.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4007/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:43:30",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？</li>\n  <li>Aggregation Switchと、Access Switchの分割している理由は？</li>\n  <li>サーバとAccess Switchは、Ethernetでつないでいる？</li>\n  <li>Access Switchや、Aggregation Swtichの冗長化はどうするか？</li>\n  <li>トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？</li>\n  <li>STP(Spanning Tree Protocol)とBroadcast Storm</li>\n  <li>なぜ、このアーキテクチャが全盛だったのか？</li>\n  <li>従来のネットワーキングは、何が問題になるのか？</li>\n  <li>L2にTTL(Time To Live)は存在する？</li>\n  <li>検証で上手くいっていても、系の切り替え時はドキドキする</li>\n  <li>Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？</li>\n  <li>North South / East West トラフィック</li>\n  <li><a href=\"https://fukabori.fm/episode/11\">11. dockerネットワーキングとか、kubernetesネットワーキングとか</a></li>\n  <li>CLOS Topologyとは？</li>\n  <li><a href=\"http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html\">クロスバースイッチ</a></li>\n  <li>現代のDCで使うCLOSは、具体的にどういう構成になるのか？</li>\n  <li>CLOSはどういう特徴があるのか？</li>\n  <li>Leaf SwitchとSpine Switchとは？</li>\n  <li>なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？</li>\n  <li>ユーザがL2を使いたい場合はどうするのか？</li>\n  <li>CLOS上の構成では、トラフィックはACT/ACTか？</li>\n  <li>ECMPと、5 tuple flow</li>\n  <li>CLOSのスケール限界はあるのか？</li>\n  <li>CLOSにおけるフラクタル</li>\n  <li>NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？</li>\n  <li>なぜ、Storage Planeと、Data Planeを分けているのか？</li>\n  <li>Leafの冗長化はどのように実現しているのか？</li>\n  <li>運用上で大変なところは何か？これからどうしていきたいか？</li>\n  <li>リンクの自動化試験、LLDP(Link Layer Discovery Protocol)</li>\n  <li>ソフトウェアのやり方でネットワークを変えていきたい人を募集中</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？</li>\n  <li>Aggregation Switchと、Access Switchの分割している理由は？</li>\n  <li>サーバとAccess Switchは、Ethernetでつないでいる？</li>\n  <li>Access Switchや、Aggregation Swtichの冗長化はどうするか？</li>\n  <li>トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？</li>\n  <li>STP(Spanning Tree Protocol)とBroadcast Storm</li>\n  <li>なぜ、このアーキテクチャが全盛だったのか？</li>\n  <li>従来のネットワーキングは、何が問題になるのか？</li>\n  <li>L2にTTL(Time To Live)は存在する？</li>\n  <li>検証で上手くいっていても、系の切り替え時はドキドキする</li>\n  <li>Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？</li>\n  <li>North South / East West トラフィック</li>\n  <li><a href=\"https://fukabori.fm/episode/11\">11. dockerネットワーキングとか、kubernetesネットワーキングとか</a></li>\n  <li>CLOS Topologyとは？</li>\n  <li><a href=\"http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html\">クロスバースイッチ</a></li>\n  <li>現代のDCで使うCLOSは、具体的にどういう構成になるのか？</li>\n  <li>CLOSはどういう特徴があるのか？</li>\n  <li>Leaf SwitchとSpine Switchとは？</li>\n  <li>なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？</li>\n  <li>ユーザがL2を使いたい場合はどうするのか？</li>\n  <li>CLOS上の構成では、トラフィックはACT/ACTか？</li>\n  <li>ECMPと、5 tuple flow</li>\n  <li>CLOSのスケール限界はあるのか？</li>\n  <li>CLOSにおけるフラクタル</li>\n  <li>NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？</li>\n  <li>なぜ、Storage Planeと、Data Planeを分けているのか？</li>\n  <li>Leafの冗長化はどのように実現しているのか？</li>\n  <li>運用上で大変なところは何か？これからどうしていきたいか？</li>\n  <li>リンクの自動化試験、LLDP(Link Layer Discovery Protocol)</li>\n  <li>ソフトウェアのやり方でネットワークを変えていきたい人を募集中</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "30. Cloud Native Data Center Networking w/ toby",
      "itunes:episodeType": "full",
      "podcast:episode": 31
    },
    {
      "title": "29. 技術選定の審美眼(2) w/ twada",
      "link": "https://fukabori.fm/episode/29",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition\">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>\n  <li>集中と分散</li>\n  <li>Good Old Webとは何か？</li>\n  <li><a href=\"https://gihyo.jp/book/2006/4-7741-2687-X\">改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）</a></li>\n  <li>Linux, Apache, PostgreSQL, PHP</li>\n  <li>2層アーキテクチャから3層アーキテクチャへ</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/Enterprise_JavaBeans\">EJB(Enterprise Java Beans)</a>とは？</li>\n  <li>SOAP(Simple Object Access Protocol)とは？</li>\n  <li>なぜEJBやSOAPが生まれてきたのか？</li>\n  <li>言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3\">SOA(Service-Oriented Architecture)とは？</a></li>\n  <li><a href=\"http://e-words.jp/w/ESB.html\">Enterprise Service Bus</a></li>\n  <li>XMLによる設定とマッピングが多い時代だった</li>\n  <li>XMLエンジニアとYAMLエンジニア</li>\n  <li>Ruby on Railsの登場へ</li>\n  <li><a href=\"https://www.youtube.com/watch?v=Gzj723LkRJY\">How to build a blog engine in 15 minutes with Ruby on Rails</a></li>\n  <li>設定より規約(Convention over Configuration)</li>\n  <li>システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に</li>\n  <li>Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？</li>\n  <li><a href=\"https://spring.io/\">Spring</a>や<a href=\"https://www.seasar.org/en/\">Seasar</a></li>\n  <li>POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Delicious_(website)\">Delicious</a></li>\n  <li>成功している分散している分散システム(Web)が身近にあった</li>\n  <li>分散システムの設計がRPCからWebベースへ</li>\n  <li>RESTとステートレス、Shared Nothing、スケールアウト</li>\n  <li>XMLじゃなくてJSONで十分だったという気づき</li>\n  <li>クラウドコンピューティングの時代へ</li>\n  <li>ムーアの法則と、スケールアップ戦略の限界</li>\n  <li>Dockerの登場と、コンテナ技術</li>\n  <li>冪等性の難しさ</li>\n  <li>巨大化したモノリスによる問題から、マイクロサービスへ</li>\n  <li>BFF(Backend For Frontend)</li>\n  <li>SOAとマイクロサービスの螺旋</li>\n  <li>DevOps、コンウェイの法則・逆コンウェイの法則</li>\n  <li>組織は戦略に従う、戦略は組織に従う</li>\n  <li>ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ</li>\n  <li><a href=\"https://www.wsj.com/articles/SB10001424053111903480904576512250915629460\">Why Software Is Eating The World / Marc Andreessen</a></li>\n  <li>Swagger、GraphQL、gRPCの共通点とは何か？</li>\n  <li>動的型付けから静的型付けへ</li>\n  <li>サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ</li>\n  <li>Cloud Nativeとサーバレスコンピューティング</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/29"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk21h7w8nqyctne3v9.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 22 Mar 2020 14:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk21h7w8nqyctne3v9.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4006/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:17:37",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition\">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>\n  <li>集中と分散</li>\n  <li>Good Old Webとは何か？</li>\n  <li><a href=\"https://gihyo.jp/book/2006/4-7741-2687-X\">改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）</a></li>\n  <li>Linux, Apache, PostgreSQL, PHP</li>\n  <li>2層アーキテクチャから3層アーキテクチャへ</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/Enterprise_JavaBeans\">EJB(Enterprise Java Beans)</a>とは？</li>\n  <li>SOAP(Simple Object Access Protocol)とは？</li>\n  <li>なぜEJBやSOAPが生まれてきたのか？</li>\n  <li>言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3\">SOA(Service-Oriented Architecture)とは？</a></li>\n  <li><a href=\"http://e-words.jp/w/ESB.html\">Enterprise Service Bus</a></li>\n  <li>XMLによる設定とマッピングが多い時代だった</li>\n  <li>XMLエンジニアとYAMLエンジニア</li>\n  <li>Ruby on Railsの登場へ</li>\n  <li><a href=\"https://www.youtube.com/watch?v=Gzj723LkRJY\">How to build a blog engine in 15 minutes with Ruby on Rails</a></li>\n  <li>設定より規約(Convention over Configuration)</li>\n  <li>システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に</li>\n  <li>Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？</li>\n  <li><a href=\"https://spring.io/\">Spring</a>や<a href=\"https://www.seasar.org/en/\">Seasar</a></li>\n  <li>POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Delicious_(website)\">Delicious</a></li>\n  <li>成功している分散している分散システム(Web)が身近にあった</li>\n  <li>分散システムの設計がRPCからWebベースへ</li>\n  <li>RESTとステートレス、Shared Nothing、スケールアウト</li>\n  <li>XMLじゃなくてJSONで十分だったという気づき</li>\n  <li>クラウドコンピューティングの時代へ</li>\n  <li>ムーアの法則と、スケールアップ戦略の限界</li>\n  <li>Dockerの登場と、コンテナ技術</li>\n  <li>冪等性の難しさ</li>\n  <li>巨大化したモノリスによる問題から、マイクロサービスへ</li>\n  <li>BFF(Backend For Frontend)</li>\n  <li>SOAとマイクロサービスの螺旋</li>\n  <li>DevOps、コンウェイの法則・逆コンウェイの法則</li>\n  <li>組織は戦略に従う、戦略は組織に従う</li>\n  <li>ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ</li>\n  <li><a href=\"https://www.wsj.com/articles/SB10001424053111903480904576512250915629460\">Why Software Is Eating The World / Marc Andreessen</a></li>\n  <li>Swagger、GraphQL、gRPCの共通点とは何か？</li>\n  <li>動的型付けから静的型付けへ</li>\n  <li>サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ</li>\n  <li>Cloud Nativeとサーバレスコンピューティング</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition\">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>\n  <li>集中と分散</li>\n  <li>Good Old Webとは何か？</li>\n  <li><a href=\"https://gihyo.jp/book/2006/4-7741-2687-X\">改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）</a></li>\n  <li>Linux, Apache, PostgreSQL, PHP</li>\n  <li>2層アーキテクチャから3層アーキテクチャへ</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/Enterprise_JavaBeans\">EJB(Enterprise Java Beans)</a>とは？</li>\n  <li>SOAP(Simple Object Access Protocol)とは？</li>\n  <li>なぜEJBやSOAPが生まれてきたのか？</li>\n  <li>言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3\">SOA(Service-Oriented Architecture)とは？</a></li>\n  <li><a href=\"http://e-words.jp/w/ESB.html\">Enterprise Service Bus</a></li>\n  <li>XMLによる設定とマッピングが多い時代だった</li>\n  <li>XMLエンジニアとYAMLエンジニア</li>\n  <li>Ruby on Railsの登場へ</li>\n  <li><a href=\"https://www.youtube.com/watch?v=Gzj723LkRJY\">How to build a blog engine in 15 minutes with Ruby on Rails</a></li>\n  <li>設定より規約(Convention over Configuration)</li>\n  <li>システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に</li>\n  <li>Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？</li>\n  <li><a href=\"https://spring.io/\">Spring</a>や<a href=\"https://www.seasar.org/en/\">Seasar</a></li>\n  <li>POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Delicious_(website)\">Delicious</a></li>\n  <li>成功している分散している分散システム(Web)が身近にあった</li>\n  <li>分散システムの設計がRPCからWebベースへ</li>\n  <li>RESTとステートレス、Shared Nothing、スケールアウト</li>\n  <li>XMLじゃなくてJSONで十分だったという気づき</li>\n  <li>クラウドコンピューティングの時代へ</li>\n  <li>ムーアの法則と、スケールアップ戦略の限界</li>\n  <li>Dockerの登場と、コンテナ技術</li>\n  <li>冪等性の難しさ</li>\n  <li>巨大化したモノリスによる問題から、マイクロサービスへ</li>\n  <li>BFF(Backend For Frontend)</li>\n  <li>SOAとマイクロサービスの螺旋</li>\n  <li>DevOps、コンウェイの法則・逆コンウェイの法則</li>\n  <li>組織は戦略に従う、戦略は組織に従う</li>\n  <li>ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ</li>\n  <li><a href=\"https://www.wsj.com/articles/SB10001424053111903480904576512250915629460\">Why Software Is Eating The World / Marc Andreessen</a></li>\n  <li>Swagger、GraphQL、gRPCの共通点とは何か？</li>\n  <li>動的型付けから静的型付けへ</li>\n  <li>サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ</li>\n  <li>Cloud Nativeとサーバレスコンピューティング</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "29. 技術選定の審美眼(2) w/ twada",
      "itunes:episodeType": "full",
      "podcast:episode": 30
    },
    {
      "title": "28. 技術選定の審美眼(1) w/ twada",
      "link": "https://fukabori.fm/episode/28",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition\">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>\n  <li>フロントエンド疲れとは？</li>\n  <li>大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう</li>\n  <li>Gruntとgulp.js、ReactとVue.js</li>\n  <li>イメージ的には選球眼</li>\n  <li>変わるもの、変わらないものを見極めるモチベーションは何か？</li>\n  <li>技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある</li>\n  <li>振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事</li>\n  <li>ベテランエンジニアの唯一のアドバンテージとは？</li>\n  <li>プログラマとしての可処分時間はどんどん減っていく</li>\n  <li>ベテランプログラマに求められる役割としての、語り部と老害のボーダライン</li>\n  <li><a href=\"https://www.amazon.co.jp/dp/4274064069\">Unix哲学</a></li>\n  <li>小さいのは良いことだ(Small is beautiful)</li>\n  <li>一つのことを上手くやる(Make each program do one thing well)</li>\n  <li>すべてはファイルである</li>\n  <li>強い制約による高い相互接続性</li>\n  <li>ネットワークプロトコルにおける強い制約</li>\n  <li>REST / Web</li>\n  <li>すべてをURLで表現できる</li>\n  <li><a href=\"https://postd.cc/how-dhh-organizes-his-rails-controllers/\">DHHはどのようにRailsのコントローラを書くのか</a></li>\n  <li>RDBMS / SQL</li>\n  <li>すべては関係である、(わかりやすく言えば)集合である</li>\n  <li>共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと</li>\n  <li>コミュニケーションコストにを下げるという寄与</li>\n  <li>系が閉じることによる強さ</li>\n  <li>閉包性とは？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/28"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk3y83vqdss7a5pyx9.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 15 Mar 2020 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nk3y83vqdss7a5pyx9.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4005/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:41:52",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition\">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>\n  <li>フロントエンド疲れとは？</li>\n  <li>大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう</li>\n  <li>Gruntとgulp.js、ReactとVue.js</li>\n  <li>イメージ的には選球眼</li>\n  <li>変わるもの、変わらないものを見極めるモチベーションは何か？</li>\n  <li>技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある</li>\n  <li>振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事</li>\n  <li>ベテランエンジニアの唯一のアドバンテージとは？</li>\n  <li>プログラマとしての可処分時間はどんどん減っていく</li>\n  <li>ベテランプログラマに求められる役割としての、語り部と老害のボーダライン</li>\n  <li><a href=\"https://www.amazon.co.jp/dp/4274064069\">Unix哲学</a></li>\n  <li>小さいのは良いことだ(Small is beautiful)</li>\n  <li>一つのことを上手くやる(Make each program do one thing well)</li>\n  <li>すべてはファイルである</li>\n  <li>強い制約による高い相互接続性</li>\n  <li>ネットワークプロトコルにおける強い制約</li>\n  <li>REST / Web</li>\n  <li>すべてをURLで表現できる</li>\n  <li><a href=\"https://postd.cc/how-dhh-organizes-his-rails-controllers/\">DHHはどのようにRailsのコントローラを書くのか</a></li>\n  <li>RDBMS / SQL</li>\n  <li>すべては関係である、(わかりやすく言えば)集合である</li>\n  <li>共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと</li>\n  <li>コミュニケーションコストにを下げるという寄与</li>\n  <li>系が閉じることによる強さ</li>\n  <li>閉包性とは？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition\">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>\n  <li>フロントエンド疲れとは？</li>\n  <li>大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう</li>\n  <li>Gruntとgulp.js、ReactとVue.js</li>\n  <li>イメージ的には選球眼</li>\n  <li>変わるもの、変わらないものを見極めるモチベーションは何か？</li>\n  <li>技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある</li>\n  <li>振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事</li>\n  <li>ベテランエンジニアの唯一のアドバンテージとは？</li>\n  <li>プログラマとしての可処分時間はどんどん減っていく</li>\n  <li>ベテランプログラマに求められる役割としての、語り部と老害のボーダライン</li>\n  <li><a href=\"https://www.amazon.co.jp/dp/4274064069\">Unix哲学</a></li>\n  <li>小さいのは良いことだ(Small is beautiful)</li>\n  <li>一つのことを上手くやる(Make each program do one thing well)</li>\n  <li>すべてはファイルである</li>\n  <li>強い制約による高い相互接続性</li>\n  <li>ネットワークプロトコルにおける強い制約</li>\n  <li>REST / Web</li>\n  <li>すべてをURLで表現できる</li>\n  <li><a href=\"https://postd.cc/how-dhh-organizes-his-rails-controllers/\">DHHはどのようにRailsのコントローラを書くのか</a></li>\n  <li>RDBMS / SQL</li>\n  <li>すべては関係である、(わかりやすく言えば)集合である</li>\n  <li>共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと</li>\n  <li>コミュニケーションコストにを下げるという寄与</li>\n  <li>系が閉じることによる強さ</li>\n  <li>閉包性とは？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "28. 技術選定の審美眼(1) w/ twada",
      "itunes:episodeType": "full",
      "podcast:episode": 29
    },
    {
      "title": "27. 論理削除とは何か？どのような解法があるのか？ w/ twada",
      "link": "https://fukabori.fm/episode/27",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>論理削除とはそもそも何か？</li>\n  <li>物理削除とは？</li>\n  <li>なぜ、論理削除が生まれてくるのか？</li>\n  <li><a href=\"https://www.slideshare.net/t_wada/ronsakucasual\">SQLアンチパターン 幻の第26章「とりあえず削除フラグ」</a></li>\n  <li>理由1: 心理的なハードルの高さ、怖さがある</li>\n  <li>理由2: 削除したデータを検索対象に入れたい場合がある</li>\n  <li>理由3: ログとしての用途</li>\n  <li>理由4: 誤操作をすぐに戻したい</li>\n  <li>アンチパターンとは何か？</li>\n  <li>なぜ、論理削除はアンチパターンとして捉えられるのか？</li>\n  <li>全てのSQL文のWHERE句に削除フラグが必ず入る</li>\n  <li>LIMIT 1などが蔓延していく</li>\n  <li>論理削除に気づくきっかけは何か？</li>\n  <li>テーブル設計や、規約から気づく</li>\n  <li>論理削除というアンチパターンをどのように解いていくか？</li>\n  <li>論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない</li>\n  <li>要件をどのように設計すればいいのか？</li>\n  <li>ORMの論理削除プラグインはあまり良くない</li>\n  <li>状態遷移として捉える方法</li>\n  <li>Soft Delete と Hard Delete</li>\n  <li><a href=\"https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html\">Doctrine 2 “Behaviours” in a Nutshell</a></li>\n  <li>RDBにおけるStateパターンとは？</li>\n  <li>UMLにある状態遷移図</li>\n  <li>Stateパターンが使えないケースはある？</li>\n  <li>FSM - Finite State Machine</li>\n  <li>State Machineのプラグインをまず探す</li>\n  <li><a href=\"https://github.com/aasm/aasm\">AASM - Ruby state machines</a></li>\n  <li>履歴テーブルを使った設計による解法</li>\n  <li>履歴テーブルをあえて使う強いモチベーションは何か？</li>\n  <li>そもそも削除も更新もしない解法もある</li>\n  <li>発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81\">データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか</a></li>\n  <li>T字形ER手法</li>\n  <li>データ量が増えた場合にどうするか？</li>\n  <li>Webシステムが流行る前後のデータ量</li>\n  <li><a href=\"https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB\">イミュータブルデータモデル(入門編)</a></li>\n  <li>誤った操作をなかったことにしたい、という課題はまだ解けていない</li>\n  <li>教科書的なのは間違えにくいUI/画面設計を作る</li>\n  <li>遅延レプリケーションという解法</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/27"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nkegvy1bq8c150wm8b.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 01 Mar 2020 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nkegvy1bq8c150wm8b.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4004/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:05:48",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>論理削除とはそもそも何か？</li>\n  <li>物理削除とは？</li>\n  <li>なぜ、論理削除が生まれてくるのか？</li>\n  <li><a href=\"https://www.slideshare.net/t_wada/ronsakucasual\">SQLアンチパターン 幻の第26章「とりあえず削除フラグ」</a></li>\n  <li>理由1: 心理的なハードルの高さ、怖さがある</li>\n  <li>理由2: 削除したデータを検索対象に入れたい場合がある</li>\n  <li>理由3: ログとしての用途</li>\n  <li>理由4: 誤操作をすぐに戻したい</li>\n  <li>アンチパターンとは何か？</li>\n  <li>なぜ、論理削除はアンチパターンとして捉えられるのか？</li>\n  <li>全てのSQL文のWHERE句に削除フラグが必ず入る</li>\n  <li>LIMIT 1などが蔓延していく</li>\n  <li>論理削除に気づくきっかけは何か？</li>\n  <li>テーブル設計や、規約から気づく</li>\n  <li>論理削除というアンチパターンをどのように解いていくか？</li>\n  <li>論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない</li>\n  <li>要件をどのように設計すればいいのか？</li>\n  <li>ORMの論理削除プラグインはあまり良くない</li>\n  <li>状態遷移として捉える方法</li>\n  <li>Soft Delete と Hard Delete</li>\n  <li><a href=\"https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html\">Doctrine 2 “Behaviours” in a Nutshell</a></li>\n  <li>RDBにおけるStateパターンとは？</li>\n  <li>UMLにある状態遷移図</li>\n  <li>Stateパターンが使えないケースはある？</li>\n  <li>FSM - Finite State Machine</li>\n  <li>State Machineのプラグインをまず探す</li>\n  <li><a href=\"https://github.com/aasm/aasm\">AASM - Ruby state machines</a></li>\n  <li>履歴テーブルを使った設計による解法</li>\n  <li>履歴テーブルをあえて使う強いモチベーションは何か？</li>\n  <li>そもそも削除も更新もしない解法もある</li>\n  <li>発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81\">データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか</a></li>\n  <li>T字形ER手法</li>\n  <li>データ量が増えた場合にどうするか？</li>\n  <li>Webシステムが流行る前後のデータ量</li>\n  <li><a href=\"https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB\">イミュータブルデータモデル(入門編)</a></li>\n  <li>誤った操作をなかったことにしたい、という課題はまだ解けていない</li>\n  <li>教科書的なのは間違えにくいUI/画面設計を作る</li>\n  <li>遅延レプリケーションという解法</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>論理削除とはそもそも何か？</li>\n  <li>物理削除とは？</li>\n  <li>なぜ、論理削除が生まれてくるのか？</li>\n  <li><a href=\"https://www.slideshare.net/t_wada/ronsakucasual\">SQLアンチパターン 幻の第26章「とりあえず削除フラグ」</a></li>\n  <li>理由1: 心理的なハードルの高さ、怖さがある</li>\n  <li>理由2: 削除したデータを検索対象に入れたい場合がある</li>\n  <li>理由3: ログとしての用途</li>\n  <li>理由4: 誤操作をすぐに戻したい</li>\n  <li>アンチパターンとは何か？</li>\n  <li>なぜ、論理削除はアンチパターンとして捉えられるのか？</li>\n  <li>全てのSQL文のWHERE句に削除フラグが必ず入る</li>\n  <li>LIMIT 1などが蔓延していく</li>\n  <li>論理削除に気づくきっかけは何か？</li>\n  <li>テーブル設計や、規約から気づく</li>\n  <li>論理削除というアンチパターンをどのように解いていくか？</li>\n  <li>論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない</li>\n  <li>要件をどのように設計すればいいのか？</li>\n  <li>ORMの論理削除プラグインはあまり良くない</li>\n  <li>状態遷移として捉える方法</li>\n  <li>Soft Delete と Hard Delete</li>\n  <li><a href=\"https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html\">Doctrine 2 “Behaviours” in a Nutshell</a></li>\n  <li>RDBにおけるStateパターンとは？</li>\n  <li>UMLにある状態遷移図</li>\n  <li>Stateパターンが使えないケースはある？</li>\n  <li>FSM - Finite State Machine</li>\n  <li>State Machineのプラグインをまず探す</li>\n  <li><a href=\"https://github.com/aasm/aasm\">AASM - Ruby state machines</a></li>\n  <li>履歴テーブルを使った設計による解法</li>\n  <li>履歴テーブルをあえて使う強いモチベーションは何か？</li>\n  <li>そもそも削除も更新もしない解法もある</li>\n  <li>発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81\">データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか</a></li>\n  <li>T字形ER手法</li>\n  <li>データ量が増えた場合にどうするか？</li>\n  <li>Webシステムが流行る前後のデータ量</li>\n  <li><a href=\"https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB\">イミュータブルデータモデル(入門編)</a></li>\n  <li>誤った操作をなかったことにしたい、という課題はまだ解けていない</li>\n  <li>教科書的なのは間違えにくいUI/画面設計を作る</li>\n  <li>遅延レプリケーションという解法</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "27. 論理削除とは何か？どのような解法があるのか？ w/ twada",
      "itunes:episodeType": "full",
      "podcast:episode": 28
    },
    {
      "title": "26. Spinnakerとは w/ k_mrgk",
      "link": "https://fukabori.fm/episode/26",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/ktmrgk/sre-next-2020\">Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020</a></li>\n  <li><a href=\"https://www.spinnaker.io/\">Spinnaker</a>とは何か？</li>\n  <li>kubernetesのみではなく、他にも対応している？</li>\n  <li>継続的デリバリとは、継続的デプロイメントの違いとは？</li>\n  <li>CDについて、Spinnakerはどこまで対応している？</li>\n  <li>Spinnaker単体でRollbackも簡単になる？</li>\n  <li>国内だと、どれぐらい使われている？</li>\n  <li>GitOpsとは何か？</li>\n  <li>Single Source of Truth</li>\n  <li>リポジトリはどのように分割するのか？</li>\n  <li>Spinnakerのデプロイ戦略には何があるか？</li>\n  <li><a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\">ReplicaSet</a>とは？</li>\n  <li>訂正 fukabori ep.11は 市川さん -&gt; 市原さん です。ごめんなさい。</li>\n  <li>メトリクス周りでSpinnakerがケアしているくれるところはある？</li>\n  <li><a href=\"https://github.com/spinnaker/kayenta\">Kayenta</a></li>\n  <li>手動承認もできる</li>\n  <li>SpinnakerのPipelineでどんな感じ？</li>\n  <li>何かCIやテストで選定しているものはあるか？</li>\n  <li>kubernetesのJobでの制約は？</li>\n  <li>Spinnaker自体のアーキテクチャはどうなっている？</li>\n  <li>Spinnaker運用におけるトラブルシュートは大変？</li>\n  <li>開発チームとSREチームでの分解点、運用フローはどうする？</li>\n  <li>PipelineをテストするPipelineとは？どのようなテストをしている？</li>\n  <li>Spinnaker自体のモニタリングはどうするのか？</li>\n  <li><a href=\"https://github.com/argoproj/argo-rollouts\">Argo Rollouts</a></li>\n  <li><a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\">Custom Resources</a></li>\n  <li><a href=\"https://qiita.com/kanatakita/items/a68c6e7758524422ecb0\">アプリケーションのリリースに必要な会議を倒したい話</a></li>\n  <li>Istioを使っているか？</li>\n  <li><a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a>とは？</li>\n  <li><a href=\"https://github.com/helm/helm\">Helm</a>とは？</li>\n  <li><a href=\"https://nttcom.connpass.com/event/163460/\">学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/26"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nj32fjt4f27j607d3z.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 05 Feb 2020 14:45:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nj32fjt4f27j607d3z.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4003/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:38:47",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/ktmrgk/sre-next-2020\">Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020</a></li>\n  <li><a href=\"https://www.spinnaker.io/\">Spinnaker</a>とは何か？</li>\n  <li>kubernetesのみではなく、他にも対応している？</li>\n  <li>継続的デリバリとは、継続的デプロイメントの違いとは？</li>\n  <li>CDについて、Spinnakerはどこまで対応している？</li>\n  <li>Spinnaker単体でRollbackも簡単になる？</li>\n  <li>国内だと、どれぐらい使われている？</li>\n  <li>GitOpsとは何か？</li>\n  <li>Single Source of Truth</li>\n  <li>リポジトリはどのように分割するのか？</li>\n  <li>Spinnakerのデプロイ戦略には何があるか？</li>\n  <li><a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\">ReplicaSet</a>とは？</li>\n  <li>訂正 fukabori ep.11は 市川さん -&gt; 市原さん です。ごめんなさい。</li>\n  <li>メトリクス周りでSpinnakerがケアしているくれるところはある？</li>\n  <li><a href=\"https://github.com/spinnaker/kayenta\">Kayenta</a></li>\n  <li>手動承認もできる</li>\n  <li>SpinnakerのPipelineでどんな感じ？</li>\n  <li>何かCIやテストで選定しているものはあるか？</li>\n  <li>kubernetesのJobでの制約は？</li>\n  <li>Spinnaker自体のアーキテクチャはどうなっている？</li>\n  <li>Spinnaker運用におけるトラブルシュートは大変？</li>\n  <li>開発チームとSREチームでの分解点、運用フローはどうする？</li>\n  <li>PipelineをテストするPipelineとは？どのようなテストをしている？</li>\n  <li>Spinnaker自体のモニタリングはどうするのか？</li>\n  <li><a href=\"https://github.com/argoproj/argo-rollouts\">Argo Rollouts</a></li>\n  <li><a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\">Custom Resources</a></li>\n  <li><a href=\"https://qiita.com/kanatakita/items/a68c6e7758524422ecb0\">アプリケーションのリリースに必要な会議を倒したい話</a></li>\n  <li>Istioを使っているか？</li>\n  <li><a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a>とは？</li>\n  <li><a href=\"https://github.com/helm/helm\">Helm</a>とは？</li>\n  <li><a href=\"https://nttcom.connpass.com/event/163460/\">学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/ktmrgk/sre-next-2020\">Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020</a></li>\n  <li><a href=\"https://www.spinnaker.io/\">Spinnaker</a>とは何か？</li>\n  <li>kubernetesのみではなく、他にも対応している？</li>\n  <li>継続的デリバリとは、継続的デプロイメントの違いとは？</li>\n  <li>CDについて、Spinnakerはどこまで対応している？</li>\n  <li>Spinnaker単体でRollbackも簡単になる？</li>\n  <li>国内だと、どれぐらい使われている？</li>\n  <li>GitOpsとは何か？</li>\n  <li>Single Source of Truth</li>\n  <li>リポジトリはどのように分割するのか？</li>\n  <li>Spinnakerのデプロイ戦略には何があるか？</li>\n  <li><a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\">ReplicaSet</a>とは？</li>\n  <li>訂正 fukabori ep.11は 市川さん -&gt; 市原さん です。ごめんなさい。</li>\n  <li>メトリクス周りでSpinnakerがケアしているくれるところはある？</li>\n  <li><a href=\"https://github.com/spinnaker/kayenta\">Kayenta</a></li>\n  <li>手動承認もできる</li>\n  <li>SpinnakerのPipelineでどんな感じ？</li>\n  <li>何かCIやテストで選定しているものはあるか？</li>\n  <li>kubernetesのJobでの制約は？</li>\n  <li>Spinnaker自体のアーキテクチャはどうなっている？</li>\n  <li>Spinnaker運用におけるトラブルシュートは大変？</li>\n  <li>開発チームとSREチームでの分解点、運用フローはどうする？</li>\n  <li>PipelineをテストするPipelineとは？どのようなテストをしている？</li>\n  <li>Spinnaker自体のモニタリングはどうするのか？</li>\n  <li><a href=\"https://github.com/argoproj/argo-rollouts\">Argo Rollouts</a></li>\n  <li><a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\">Custom Resources</a></li>\n  <li><a href=\"https://qiita.com/kanatakita/items/a68c6e7758524422ecb0\">アプリケーションのリリースに必要な会議を倒したい話</a></li>\n  <li>Istioを使っているか？</li>\n  <li><a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a>とは？</li>\n  <li><a href=\"https://github.com/helm/helm\">Helm</a>とは？</li>\n  <li><a href=\"https://nttcom.connpass.com/event/163460/\">学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "26. Spinnakerとは w/ k_mrgk",
      "itunes:episodeType": "full",
      "podcast:episode": 27
    },
    {
      "title": "25. 日本企業を辞めてカーネギーメロン大学へ入学し、Nianticで働くまで  w/ noralife",
      "link": "https://fukabori.fm/episode/25",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>海外企業でソフトウェアエンジニアで働くための手段</li>\n  <li>ビザってなぜ必要なんだっけ？</li>\n  <li>米国のビザってどういう種類があるの？</li>\n  <li><a href=\"https://www.ryugaku.com/blog/entry/opt-mio.html\">OPT STEM</a></li>\n  <li>10:05 訂正 <a href=\"https://honkiku.com/getting-american-visa-is-impossible/\">H1は9月に発給される -&gt; 10/1の間違い</a></li>\n  <li>大学の出願候補はどうやって選んだのか？</li>\n  <li>就業中で働きながらどのように受験の勉強をしたのか？</li>\n  <li><a href=\"https://www.ets.org/toefl\">TOEFL</a>と<a href=\"https://www.ets.org/gre/\">GRE</a></li>\n  <li>GREの単語は無理ゲー</li>\n  <li>リスニングはどうやって勉強した？</li>\n  <li>何校程度、受験した？</li>\n  <li>入学したCMUのコースは何人ぐらいいるの？</li>\n  <li>コースにいる学生で米国Nativeの数は？</li>\n  <li>CMUの学生生活はブラック</li>\n  <li>CMUの授業はどういう形式が多い？</li>\n  <li><a href=\"https://mse.isri.cmu.edu/\">CMU Software Engineering</a></li>\n  <li><a href=\"https://www.cs.cmu.edu/~213/\">Introduction to Computer Systems</a></li>\n  <li>mallocを実装する宿題</li>\n  <li>修論執筆は必須？</li>\n  <li><a href=\"https://users.ece.cmu.edu/~raj/\">Raj教授</a></li>\n  <li>卒業制作はアジャイル開発で進める</li>\n  <li>アジャイル開発のフレームワークなどは？</li>\n  <li><a href=\"https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf\">ACDM/Architecture Centric Design Method</a></li>\n  <li>この授業、とくに面白かったな、って授業は？</li>\n  <li>Raftの実装する課題</li>\n  <li>課題のテストケースが秘伝のタレ</li>\n  <li>GoのTCPライブラリに仕込んである</li>\n  <li>Databaseの授業では、ほぼDBMSを作るような課題</li>\n  <li>b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変</li>\n  <li>在学中から就職先の選定はどのように進めた？</li>\n  <li>リファーラルが取れる場合はとったほうが良い</li>\n  <li>日本と違って自分の履歴書があればポジションへ応募できる</li>\n  <li>リモートでの技術面接はどのような問題が出る？</li>\n  <li>オンサイトでの技術面接は？</li>\n  <li>どのように面接準備した？</li>\n  <li><a href=\"https://leetcode.com/\">Leetcode</a></li>\n  <li><a href=\"https://www.amazon.com/dp/0984782850\">Cracking coding interview</a></li>\n  <li>Nianticで働いてみて、実際にどんな印象か？</li>\n  <li>エリートといえばリスクテイク</li>\n  <li>同僚をみていて、日本のエンジニアという違う部分はある？</li>\n  <li>1日のタイムスケジュール、どのぐらいコーディングしているか？</li>\n  <li>英語力は伸びる？</li>\n  <li>英語が分からなかったときの対応スキルが伸びる</li>\n  <li>海外で働いてみてよかった点は、英語の勉強から離れられたこと</li>\n  <li><a href=\"https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b\">東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/25"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7njd6pq8ztmbfxbztkg.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 17 Jan 2020 23:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7njd6pq8ztmbfxbztkg.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4002/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:47:24",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>海外企業でソフトウェアエンジニアで働くための手段</li>\n  <li>ビザってなぜ必要なんだっけ？</li>\n  <li>米国のビザってどういう種類があるの？</li>\n  <li><a href=\"https://www.ryugaku.com/blog/entry/opt-mio.html\">OPT STEM</a></li>\n  <li>10:05 訂正 <a href=\"https://honkiku.com/getting-american-visa-is-impossible/\">H1は9月に発給される -&gt; 10/1の間違い</a></li>\n  <li>大学の出願候補はどうやって選んだのか？</li>\n  <li>就業中で働きながらどのように受験の勉強をしたのか？</li>\n  <li><a href=\"https://www.ets.org/toefl\">TOEFL</a>と<a href=\"https://www.ets.org/gre/\">GRE</a></li>\n  <li>GREの単語は無理ゲー</li>\n  <li>リスニングはどうやって勉強した？</li>\n  <li>何校程度、受験した？</li>\n  <li>入学したCMUのコースは何人ぐらいいるの？</li>\n  <li>コースにいる学生で米国Nativeの数は？</li>\n  <li>CMUの学生生活はブラック</li>\n  <li>CMUの授業はどういう形式が多い？</li>\n  <li><a href=\"https://mse.isri.cmu.edu/\">CMU Software Engineering</a></li>\n  <li><a href=\"https://www.cs.cmu.edu/~213/\">Introduction to Computer Systems</a></li>\n  <li>mallocを実装する宿題</li>\n  <li>修論執筆は必須？</li>\n  <li><a href=\"https://users.ece.cmu.edu/~raj/\">Raj教授</a></li>\n  <li>卒業制作はアジャイル開発で進める</li>\n  <li>アジャイル開発のフレームワークなどは？</li>\n  <li><a href=\"https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf\">ACDM/Architecture Centric Design Method</a></li>\n  <li>この授業、とくに面白かったな、って授業は？</li>\n  <li>Raftの実装する課題</li>\n  <li>課題のテストケースが秘伝のタレ</li>\n  <li>GoのTCPライブラリに仕込んである</li>\n  <li>Databaseの授業では、ほぼDBMSを作るような課題</li>\n  <li>b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変</li>\n  <li>在学中から就職先の選定はどのように進めた？</li>\n  <li>リファーラルが取れる場合はとったほうが良い</li>\n  <li>日本と違って自分の履歴書があればポジションへ応募できる</li>\n  <li>リモートでの技術面接はどのような問題が出る？</li>\n  <li>オンサイトでの技術面接は？</li>\n  <li>どのように面接準備した？</li>\n  <li><a href=\"https://leetcode.com/\">Leetcode</a></li>\n  <li><a href=\"https://www.amazon.com/dp/0984782850\">Cracking coding interview</a></li>\n  <li>Nianticで働いてみて、実際にどんな印象か？</li>\n  <li>エリートといえばリスクテイク</li>\n  <li>同僚をみていて、日本のエンジニアという違う部分はある？</li>\n  <li>1日のタイムスケジュール、どのぐらいコーディングしているか？</li>\n  <li>英語力は伸びる？</li>\n  <li>英語が分からなかったときの対応スキルが伸びる</li>\n  <li>海外で働いてみてよかった点は、英語の勉強から離れられたこと</li>\n  <li><a href=\"https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b\">東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>海外企業でソフトウェアエンジニアで働くための手段</li>\n  <li>ビザってなぜ必要なんだっけ？</li>\n  <li>米国のビザってどういう種類があるの？</li>\n  <li><a href=\"https://www.ryugaku.com/blog/entry/opt-mio.html\">OPT STEM</a></li>\n  <li>10:05 訂正 <a href=\"https://honkiku.com/getting-american-visa-is-impossible/\">H1は9月に発給される -&gt; 10/1の間違い</a></li>\n  <li>大学の出願候補はどうやって選んだのか？</li>\n  <li>就業中で働きながらどのように受験の勉強をしたのか？</li>\n  <li><a href=\"https://www.ets.org/toefl\">TOEFL</a>と<a href=\"https://www.ets.org/gre/\">GRE</a></li>\n  <li>GREの単語は無理ゲー</li>\n  <li>リスニングはどうやって勉強した？</li>\n  <li>何校程度、受験した？</li>\n  <li>入学したCMUのコースは何人ぐらいいるの？</li>\n  <li>コースにいる学生で米国Nativeの数は？</li>\n  <li>CMUの学生生活はブラック</li>\n  <li>CMUの授業はどういう形式が多い？</li>\n  <li><a href=\"https://mse.isri.cmu.edu/\">CMU Software Engineering</a></li>\n  <li><a href=\"https://www.cs.cmu.edu/~213/\">Introduction to Computer Systems</a></li>\n  <li>mallocを実装する宿題</li>\n  <li>修論執筆は必須？</li>\n  <li><a href=\"https://users.ece.cmu.edu/~raj/\">Raj教授</a></li>\n  <li>卒業制作はアジャイル開発で進める</li>\n  <li>アジャイル開発のフレームワークなどは？</li>\n  <li><a href=\"https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf\">ACDM/Architecture Centric Design Method</a></li>\n  <li>この授業、とくに面白かったな、って授業は？</li>\n  <li>Raftの実装する課題</li>\n  <li>課題のテストケースが秘伝のタレ</li>\n  <li>GoのTCPライブラリに仕込んである</li>\n  <li>Databaseの授業では、ほぼDBMSを作るような課題</li>\n  <li>b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変</li>\n  <li>在学中から就職先の選定はどのように進めた？</li>\n  <li>リファーラルが取れる場合はとったほうが良い</li>\n  <li>日本と違って自分の履歴書があればポジションへ応募できる</li>\n  <li>リモートでの技術面接はどのような問題が出る？</li>\n  <li>オンサイトでの技術面接は？</li>\n  <li>どのように面接準備した？</li>\n  <li><a href=\"https://leetcode.com/\">Leetcode</a></li>\n  <li><a href=\"https://www.amazon.com/dp/0984782850\">Cracking coding interview</a></li>\n  <li>Nianticで働いてみて、実際にどんな印象か？</li>\n  <li>エリートといえばリスクテイク</li>\n  <li>同僚をみていて、日本のエンジニアという違う部分はある？</li>\n  <li>1日のタイムスケジュール、どのぐらいコーディングしているか？</li>\n  <li>英語力は伸びる？</li>\n  <li>英語が分からなかったときの対応スキルが伸びる</li>\n  <li>海外で働いてみてよかった点は、英語の勉強から離れられたこと</li>\n  <li><a href=\"https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b\">東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "25. 日本企業を辞めてカーネギーメロン大学へ入学し、Nianticで働くまで  w/ noralife",
      "itunes:episodeType": "full",
      "podcast:episode": 26
    },
    {
      "title": "24. 開発組織から部長がいなくなるまでの経緯 w/ teppeis",
      "link": "https://fukabori.fm/episode/24",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>サイボウズはどのようなプロダクトを開発しているのか？</li>\n  <li>kintoneの競合って？</li>\n  <li>サイボウズって外注しているの？オフショアは？</li>\n  <li><a href=\"https://blog.cybozu.io/entry/2019/02/13/080000\">組織変更したら部長がいなくなりました</a></li>\n  <li>部長がいなくなる組織変更する前はどのような組織だったのか？</li>\n  <li>マトリクス組織、上長って複数名？</li>\n  <li>マトリクス組織において、どのような問題があったのか？</li>\n  <li>職能定義に固定的に考えてしまう</li>\n  <li>どのように組織変更を進めていったのか？</li>\n  <li>60組以上に今考えている課題について、ヒアリング実施</li>\n  <li>左右の壁と、上下の壁</li>\n  <li>プロダクトチームはどういうメンバ構成なのか？</li>\n  <li>組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？</li>\n  <li>ヒアリング結果は常にオープンに</li>\n  <li>「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？</li>\n  <li>旧部長の多くは、組織運営チームにJoinした</li>\n  <li>マネージャは孤独な仕事であるが、チームを組んで考えるようになった</li>\n  <li>組織運営チームで解決する課題はどのように発見しているのか？</li>\n  <li>発見した課題の優先度付けは？</li>\n  <li>Scrum at ScaleにおけるEAT(Executive Action Team)に近い</li>\n  <li>EATはエスカレーションされた問題の即日解決を目指す</li>\n  <li>予算系のものの承認は、誰がするようになったのか？</li>\n  <li>予算枠確保よりも、必要なものを、必要なときに使うのが大事</li>\n  <li>チームの活動をkintone上というオープンな場に公開する</li>\n  <li>公明正大が会話にまで浸透している</li>\n  <li>チーム間の異動は自由にできるようになったのか？</li>\n  <li>チームメンバに(社内)採用の権限を落とした</li>\n  <li><a href=\"https://cybozu.co.jp/company/work-style/\">体験入部制度</a></li>\n  <li>公開されているJob boardでの応募はどのようにすればできる？</li>\n  <li>人気のあるチームに集まっちゃう問題？</li>\n  <li>レガシーとなったプロダクトのチームで解く課題の人気</li>\n  <li>組織変更後の給与評価はどのようにするようになった？</li>\n  <li>メンバの活躍をどのように把握しているのか？</li>\n  <li>市場価値として、社内＋社外の評価を利用している</li>\n  <li>アジャイル開発のフレームワークは何を使っている？</li>\n  <li>スクラムチームはどの程度ある？</li>\n  <li>スクラムチーム間の情報交換はどうしている？</li>\n  <li>開発ツールとしてのコード管理は何を使っている？</li>\n  <li>徐々にGitHub Enterpriseから、GitHub.comの利用へ</li>\n  <li><a href=\"https://2020.scrumgatheringtokyo.org/index.html\">RSGT2020</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/24"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nj3kn98vsbq3z86xzy.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 29 Dec 2019 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nj3kn98vsbq3z86xzy.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4001/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:06:55",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>サイボウズはどのようなプロダクトを開発しているのか？</li>\n  <li>kintoneの競合って？</li>\n  <li>サイボウズって外注しているの？オフショアは？</li>\n  <li><a href=\"https://blog.cybozu.io/entry/2019/02/13/080000\">組織変更したら部長がいなくなりました</a></li>\n  <li>部長がいなくなる組織変更する前はどのような組織だったのか？</li>\n  <li>マトリクス組織、上長って複数名？</li>\n  <li>マトリクス組織において、どのような問題があったのか？</li>\n  <li>職能定義に固定的に考えてしまう</li>\n  <li>どのように組織変更を進めていったのか？</li>\n  <li>60組以上に今考えている課題について、ヒアリング実施</li>\n  <li>左右の壁と、上下の壁</li>\n  <li>プロダクトチームはどういうメンバ構成なのか？</li>\n  <li>組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？</li>\n  <li>ヒアリング結果は常にオープンに</li>\n  <li>「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？</li>\n  <li>旧部長の多くは、組織運営チームにJoinした</li>\n  <li>マネージャは孤独な仕事であるが、チームを組んで考えるようになった</li>\n  <li>組織運営チームで解決する課題はどのように発見しているのか？</li>\n  <li>発見した課題の優先度付けは？</li>\n  <li>Scrum at ScaleにおけるEAT(Executive Action Team)に近い</li>\n  <li>EATはエスカレーションされた問題の即日解決を目指す</li>\n  <li>予算系のものの承認は、誰がするようになったのか？</li>\n  <li>予算枠確保よりも、必要なものを、必要なときに使うのが大事</li>\n  <li>チームの活動をkintone上というオープンな場に公開する</li>\n  <li>公明正大が会話にまで浸透している</li>\n  <li>チーム間の異動は自由にできるようになったのか？</li>\n  <li>チームメンバに(社内)採用の権限を落とした</li>\n  <li><a href=\"https://cybozu.co.jp/company/work-style/\">体験入部制度</a></li>\n  <li>公開されているJob boardでの応募はどのようにすればできる？</li>\n  <li>人気のあるチームに集まっちゃう問題？</li>\n  <li>レガシーとなったプロダクトのチームで解く課題の人気</li>\n  <li>組織変更後の給与評価はどのようにするようになった？</li>\n  <li>メンバの活躍をどのように把握しているのか？</li>\n  <li>市場価値として、社内＋社外の評価を利用している</li>\n  <li>アジャイル開発のフレームワークは何を使っている？</li>\n  <li>スクラムチームはどの程度ある？</li>\n  <li>スクラムチーム間の情報交換はどうしている？</li>\n  <li>開発ツールとしてのコード管理は何を使っている？</li>\n  <li>徐々にGitHub Enterpriseから、GitHub.comの利用へ</li>\n  <li><a href=\"https://2020.scrumgatheringtokyo.org/index.html\">RSGT2020</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>サイボウズはどのようなプロダクトを開発しているのか？</li>\n  <li>kintoneの競合って？</li>\n  <li>サイボウズって外注しているの？オフショアは？</li>\n  <li><a href=\"https://blog.cybozu.io/entry/2019/02/13/080000\">組織変更したら部長がいなくなりました</a></li>\n  <li>部長がいなくなる組織変更する前はどのような組織だったのか？</li>\n  <li>マトリクス組織、上長って複数名？</li>\n  <li>マトリクス組織において、どのような問題があったのか？</li>\n  <li>職能定義に固定的に考えてしまう</li>\n  <li>どのように組織変更を進めていったのか？</li>\n  <li>60組以上に今考えている課題について、ヒアリング実施</li>\n  <li>左右の壁と、上下の壁</li>\n  <li>プロダクトチームはどういうメンバ構成なのか？</li>\n  <li>組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？</li>\n  <li>ヒアリング結果は常にオープンに</li>\n  <li>「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？</li>\n  <li>旧部長の多くは、組織運営チームにJoinした</li>\n  <li>マネージャは孤独な仕事であるが、チームを組んで考えるようになった</li>\n  <li>組織運営チームで解決する課題はどのように発見しているのか？</li>\n  <li>発見した課題の優先度付けは？</li>\n  <li>Scrum at ScaleにおけるEAT(Executive Action Team)に近い</li>\n  <li>EATはエスカレーションされた問題の即日解決を目指す</li>\n  <li>予算系のものの承認は、誰がするようになったのか？</li>\n  <li>予算枠確保よりも、必要なものを、必要なときに使うのが大事</li>\n  <li>チームの活動をkintone上というオープンな場に公開する</li>\n  <li>公明正大が会話にまで浸透している</li>\n  <li>チーム間の異動は自由にできるようになったのか？</li>\n  <li>チームメンバに(社内)採用の権限を落とした</li>\n  <li><a href=\"https://cybozu.co.jp/company/work-style/\">体験入部制度</a></li>\n  <li>公開されているJob boardでの応募はどのようにすればできる？</li>\n  <li>人気のあるチームに集まっちゃう問題？</li>\n  <li>レガシーとなったプロダクトのチームで解く課題の人気</li>\n  <li>組織変更後の給与評価はどのようにするようになった？</li>\n  <li>メンバの活躍をどのように把握しているのか？</li>\n  <li>市場価値として、社内＋社外の評価を利用している</li>\n  <li>アジャイル開発のフレームワークは何を使っている？</li>\n  <li>スクラムチームはどの程度ある？</li>\n  <li>スクラムチーム間の情報交換はどうしている？</li>\n  <li>開発ツールとしてのコード管理は何を使っている？</li>\n  <li>徐々にGitHub Enterpriseから、GitHub.comの利用へ</li>\n  <li><a href=\"https://2020.scrumgatheringtokyo.org/index.html\">RSGT2020</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "24. 開発組織から部長がいなくなるまでの経緯 w/ teppeis",
      "itunes:episodeType": "full",
      "podcast:episode": 25
    },
    {
      "title": "23. 社内ISUCON w/ yosuke_furukawa",
      "link": "https://fukabori.fm/episode/23",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Write Code Every Day</li>\n  <li>ISUCONとは？</li>\n  <li><a href=\"https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate\">エンジニア5000名が参加するISUCONとは何か</a></li>\n  <li>ISUCONに参加するまでの流れ</li>\n  <li>ISUCON問題作問する側のインフラ担当は大変</li>\n  <li><a href=\"https://github.com/isucon/isucon9-qualify\">ISUCARI</a></li>\n  <li><a href=\"https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011\">ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium</a></li>\n  <li>R-ISUCONは優勝者が作問側へ</li>\n  <li>ISUCON参加側のyosuke_furukawaの役割は？</li>\n  <li>テディベアプログラミング</li>\n  <li>なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？</li>\n  <li>ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く</li>\n  <li>社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？</li>\n  <li>スモールスタートで始めつつ、偉い人を巻き込む</li>\n  <li><a href=\"https://github.com/recruit-tech/r-isucon\">R-ISUCON</a></li>\n  <li>PortalにVM再起動ボタン</li>\n  <li>ベンチ動きっぱなしISUCON</li>\n  <li><a href=\"https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0\">NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON</a></li>\n  <li>DevOpsエンジニアリング</li>\n  <li>エンジニアの横のつながり</li>\n  <li>運営メンバってだいたいどのぐらい人数？</li>\n  <li>社内ISUCONの言語選定は？</li>\n  <li>開催までの工数ってどう考えるか？</li>\n  <li>社内ISUCONデスマーチ</li>\n  <li>インフラ基盤には何を使う？</li>\n  <li>VMのOSは何を？</li>\n  <li>複数VMを異なるスペック、構成で提供する</li>\n  <li>参照実装を増やす場合に、CIなどを回す？</li>\n  <li>フロントエンドエンジニアがISUCONでは能力を出しにくい</li>\n  <li>フロントエンド限定のスピードハッカソン</li>\n  <li>ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも</li>\n  <li>ベンチマーカはどうやってい実装している？</li>\n  <li>データベースに入れておくデータセットはどうやって作る？</li>\n  <li>画像のプリセットを作るのが大変</li>\n  <li><a href=\"https://github.com/loadimpact/k6\">loadimpact/k6</a></li>\n  <li><a href=\"https://www.getpostman.com\">Postman</a></li>\n  <li>現代システムアーキテクチャとの乖離について</li>\n  <li><a href=\"https://recruit-tech.co.jp/recruitment/\">リクルートテクノロジーズ 採用情報</a></li>\n  <li><a href=\"https://jsconf.jp/2019/\">JSConf JP</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/23"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7njpm3cnm85q8p9rezq.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 21 Oct 2019 04:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7njpm3cnm85q8p9rezq.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/4000/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:03:30",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Write Code Every Day</li>\n  <li>ISUCONとは？</li>\n  <li><a href=\"https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate\">エンジニア5000名が参加するISUCONとは何か</a></li>\n  <li>ISUCONに参加するまでの流れ</li>\n  <li>ISUCON問題作問する側のインフラ担当は大変</li>\n  <li><a href=\"https://github.com/isucon/isucon9-qualify\">ISUCARI</a></li>\n  <li><a href=\"https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011\">ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium</a></li>\n  <li>R-ISUCONは優勝者が作問側へ</li>\n  <li>ISUCON参加側のyosuke_furukawaの役割は？</li>\n  <li>テディベアプログラミング</li>\n  <li>なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？</li>\n  <li>ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く</li>\n  <li>社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？</li>\n  <li>スモールスタートで始めつつ、偉い人を巻き込む</li>\n  <li><a href=\"https://github.com/recruit-tech/r-isucon\">R-ISUCON</a></li>\n  <li>PortalにVM再起動ボタン</li>\n  <li>ベンチ動きっぱなしISUCON</li>\n  <li><a href=\"https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0\">NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON</a></li>\n  <li>DevOpsエンジニアリング</li>\n  <li>エンジニアの横のつながり</li>\n  <li>運営メンバってだいたいどのぐらい人数？</li>\n  <li>社内ISUCONの言語選定は？</li>\n  <li>開催までの工数ってどう考えるか？</li>\n  <li>社内ISUCONデスマーチ</li>\n  <li>インフラ基盤には何を使う？</li>\n  <li>VMのOSは何を？</li>\n  <li>複数VMを異なるスペック、構成で提供する</li>\n  <li>参照実装を増やす場合に、CIなどを回す？</li>\n  <li>フロントエンドエンジニアがISUCONでは能力を出しにくい</li>\n  <li>フロントエンド限定のスピードハッカソン</li>\n  <li>ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも</li>\n  <li>ベンチマーカはどうやってい実装している？</li>\n  <li>データベースに入れておくデータセットはどうやって作る？</li>\n  <li>画像のプリセットを作るのが大変</li>\n  <li><a href=\"https://github.com/loadimpact/k6\">loadimpact/k6</a></li>\n  <li><a href=\"https://www.getpostman.com\">Postman</a></li>\n  <li>現代システムアーキテクチャとの乖離について</li>\n  <li><a href=\"https://recruit-tech.co.jp/recruitment/\">リクルートテクノロジーズ 採用情報</a></li>\n  <li><a href=\"https://jsconf.jp/2019/\">JSConf JP</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Write Code Every Day</li>\n  <li>ISUCONとは？</li>\n  <li><a href=\"https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate\">エンジニア5000名が参加するISUCONとは何か</a></li>\n  <li>ISUCONに参加するまでの流れ</li>\n  <li>ISUCON問題作問する側のインフラ担当は大変</li>\n  <li><a href=\"https://github.com/isucon/isucon9-qualify\">ISUCARI</a></li>\n  <li><a href=\"https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011\">ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium</a></li>\n  <li>R-ISUCONは優勝者が作問側へ</li>\n  <li>ISUCON参加側のyosuke_furukawaの役割は？</li>\n  <li>テディベアプログラミング</li>\n  <li>なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？</li>\n  <li>ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く</li>\n  <li>社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？</li>\n  <li>スモールスタートで始めつつ、偉い人を巻き込む</li>\n  <li><a href=\"https://github.com/recruit-tech/r-isucon\">R-ISUCON</a></li>\n  <li>PortalにVM再起動ボタン</li>\n  <li>ベンチ動きっぱなしISUCON</li>\n  <li><a href=\"https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0\">NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON</a></li>\n  <li>DevOpsエンジニアリング</li>\n  <li>エンジニアの横のつながり</li>\n  <li>運営メンバってだいたいどのぐらい人数？</li>\n  <li>社内ISUCONの言語選定は？</li>\n  <li>開催までの工数ってどう考えるか？</li>\n  <li>社内ISUCONデスマーチ</li>\n  <li>インフラ基盤には何を使う？</li>\n  <li>VMのOSは何を？</li>\n  <li>複数VMを異なるスペック、構成で提供する</li>\n  <li>参照実装を増やす場合に、CIなどを回す？</li>\n  <li>フロントエンドエンジニアがISUCONでは能力を出しにくい</li>\n  <li>フロントエンド限定のスピードハッカソン</li>\n  <li>ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも</li>\n  <li>ベンチマーカはどうやってい実装している？</li>\n  <li>データベースに入れておくデータセットはどうやって作る？</li>\n  <li>画像のプリセットを作るのが大変</li>\n  <li><a href=\"https://github.com/loadimpact/k6\">loadimpact/k6</a></li>\n  <li><a href=\"https://www.getpostman.com\">Postman</a></li>\n  <li>現代システムアーキテクチャとの乖離について</li>\n  <li><a href=\"https://recruit-tech.co.jp/recruitment/\">リクルートテクノロジーズ 採用情報</a></li>\n  <li><a href=\"https://jsconf.jp/2019/\">JSConf JP</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "23. 社内ISUCON w/ yosuke_furukawa",
      "itunes:episodeType": "full",
      "podcast:episode": 24
    },
    {
      "title": "22. ソフトウェア・ファースト w/ takoratta",
      "link": "https://fukabori.fm/episode/22",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/\">ソフトウェア・ファースト</a></li>\n  <li><a href=\"https://note.mu/softwarefirst\">製作委員会のnote</a></li>\n  <li>書籍執筆の動機</li>\n  <li><a href=\"https://www.oreilly.co.jp/books/9784873118482/\">エンジニアのためのマネジメントキャリアパス</a></li>\n  <li>DXという言葉は使いたくなかった</li>\n  <li>ソフトウェア・ファーストという名前がついた経緯</li>\n  <li>モバイルファースト、AIファーストとの対比</li>\n  <li>ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける</li>\n  <li>トランスフォーメーションより変革という言葉</li>\n  <li>人と組織を変える気がないDX</li>\n  <li>RPAは変革の途中であり、小手先の技術</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/4GL\">4GL</a>や<a href=\"http://e-words.jp/w/EUC-1.html\">EUC</a></li>\n  <li>エンプラの技術的負債の解消？</li>\n  <li>事業会社がSIerへ丸投げするのは、負債の発生</li>\n  <li>内製化、手の内化</li>\n  <li>メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える</li>\n  <li>常に触り続けるのが、負債化を避けるのは王道</li>\n  <li><a href=\"https://shuuji3.github.io/eng-practices/\">Google エンジニアリング・プラクティス ドキュメント</a></li>\n  <li>1章 ソフトウェアファースト のサマリ</li>\n  <li>2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ</li>\n  <li>日本でIT産業の競争力を失った理由</li>\n  <li>IT産業は製造業を模倣しているが、実際は模倣できていない</li>\n  <li>なぜ、製造業ではオーナーシップを保っているのか？</li>\n  <li>ものづくりにおける技能オリンピック</li>\n  <li>経営層がITを理解しているかどうか</li>\n  <li>役員の中にソフトウェアがわかる人が何人いるか？</li>\n  <li>ソフトウェアがわかるとは、どの程度まで理解していればいいのか？</li>\n  <li>幹部や経営層にどのような教育をお願いすればいいのか？</li>\n  <li>日本の経営者がITを理解できないのは、お友達が悪いから</li>\n  <li><a href=\"https://twitter.com/kunihirotanaka\">さくらインターネットの田中さん</a></li>\n  <li>3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ</li>\n  <li>DXの勝者と敗者：ネットフリックスとブロックバスター</li>\n  <li>経営陣のITリテラシ、風通しの良い組織文化、会社のミッション</li>\n  <li>セブンペイ</li>\n  <li>某元国営企業のアプリ</li>\n  <li>技術を分かってる経営層を増やすには？</li>\n  <li>前回同様に、やっぱり辞めちゃえばいい、辞める気で変える</li>\n  <li><a href=\"https://toyokeizai.net/articles/-/92606\">Google TGIF</a></li>\n  <li>社内システムのリバースエンジニアリングから技術の価値を見せる</li>\n  <li>4章：これからの「強い開発組織」を考える のサマリ</li>\n  <li>5章：ソフトウェア・ファーストなキャリアを築くには のサマリ</li>\n  <li>組織を作るのはプロダクトを作る人、人事はサポート</li>\n  <li>組織に対するオーナーシップをどうやって持ってもらうか？</li>\n  <li>組織はコミュニティと一緒である</li>\n  <li>書籍の制作秘話、何が大変だったのか？</li>\n  <li>受託開発のように受け身で執筆してしまっていた</li>\n  <li>ペルソナを後で書いた</li>\n  <li>書籍が、自分の分身になっていなかった</li>\n  <li>3万字を捨てる決断</li>\n  <li><a href=\"https://2019.pmconf.jp\">プロダクトマネージャーカンファレンス 2019</a></li>\n  <li>プロダクトマネージャーカンファレンスを始めたきっかけ</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/22"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7njmh5n8fyehbwwf97h.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 14 Oct 2019 10:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7njmh5n8fyehbwwf97h.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3999/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:15:45",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/\">ソフトウェア・ファースト</a></li>\n  <li><a href=\"https://note.mu/softwarefirst\">製作委員会のnote</a></li>\n  <li>書籍執筆の動機</li>\n  <li><a href=\"https://www.oreilly.co.jp/books/9784873118482/\">エンジニアのためのマネジメントキャリアパス</a></li>\n  <li>DXという言葉は使いたくなかった</li>\n  <li>ソフトウェア・ファーストという名前がついた経緯</li>\n  <li>モバイルファースト、AIファーストとの対比</li>\n  <li>ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける</li>\n  <li>トランスフォーメーションより変革という言葉</li>\n  <li>人と組織を変える気がないDX</li>\n  <li>RPAは変革の途中であり、小手先の技術</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/4GL\">4GL</a>や<a href=\"http://e-words.jp/w/EUC-1.html\">EUC</a></li>\n  <li>エンプラの技術的負債の解消？</li>\n  <li>事業会社がSIerへ丸投げするのは、負債の発生</li>\n  <li>内製化、手の内化</li>\n  <li>メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える</li>\n  <li>常に触り続けるのが、負債化を避けるのは王道</li>\n  <li><a href=\"https://shuuji3.github.io/eng-practices/\">Google エンジニアリング・プラクティス ドキュメント</a></li>\n  <li>1章 ソフトウェアファースト のサマリ</li>\n  <li>2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ</li>\n  <li>日本でIT産業の競争力を失った理由</li>\n  <li>IT産業は製造業を模倣しているが、実際は模倣できていない</li>\n  <li>なぜ、製造業ではオーナーシップを保っているのか？</li>\n  <li>ものづくりにおける技能オリンピック</li>\n  <li>経営層がITを理解しているかどうか</li>\n  <li>役員の中にソフトウェアがわかる人が何人いるか？</li>\n  <li>ソフトウェアがわかるとは、どの程度まで理解していればいいのか？</li>\n  <li>幹部や経営層にどのような教育をお願いすればいいのか？</li>\n  <li>日本の経営者がITを理解できないのは、お友達が悪いから</li>\n  <li><a href=\"https://twitter.com/kunihirotanaka\">さくらインターネットの田中さん</a></li>\n  <li>3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ</li>\n  <li>DXの勝者と敗者：ネットフリックスとブロックバスター</li>\n  <li>経営陣のITリテラシ、風通しの良い組織文化、会社のミッション</li>\n  <li>セブンペイ</li>\n  <li>某元国営企業のアプリ</li>\n  <li>技術を分かってる経営層を増やすには？</li>\n  <li>前回同様に、やっぱり辞めちゃえばいい、辞める気で変える</li>\n  <li><a href=\"https://toyokeizai.net/articles/-/92606\">Google TGIF</a></li>\n  <li>社内システムのリバースエンジニアリングから技術の価値を見せる</li>\n  <li>4章：これからの「強い開発組織」を考える のサマリ</li>\n  <li>5章：ソフトウェア・ファーストなキャリアを築くには のサマリ</li>\n  <li>組織を作るのはプロダクトを作る人、人事はサポート</li>\n  <li>組織に対するオーナーシップをどうやって持ってもらうか？</li>\n  <li>組織はコミュニティと一緒である</li>\n  <li>書籍の制作秘話、何が大変だったのか？</li>\n  <li>受託開発のように受け身で執筆してしまっていた</li>\n  <li>ペルソナを後で書いた</li>\n  <li>書籍が、自分の分身になっていなかった</li>\n  <li>3万字を捨てる決断</li>\n  <li><a href=\"https://2019.pmconf.jp\">プロダクトマネージャーカンファレンス 2019</a></li>\n  <li>プロダクトマネージャーカンファレンスを始めたきっかけ</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/\">ソフトウェア・ファースト</a></li>\n  <li><a href=\"https://note.mu/softwarefirst\">製作委員会のnote</a></li>\n  <li>書籍執筆の動機</li>\n  <li><a href=\"https://www.oreilly.co.jp/books/9784873118482/\">エンジニアのためのマネジメントキャリアパス</a></li>\n  <li>DXという言葉は使いたくなかった</li>\n  <li>ソフトウェア・ファーストという名前がついた経緯</li>\n  <li>モバイルファースト、AIファーストとの対比</li>\n  <li>ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける</li>\n  <li>トランスフォーメーションより変革という言葉</li>\n  <li>人と組織を変える気がないDX</li>\n  <li>RPAは変革の途中であり、小手先の技術</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/4GL\">4GL</a>や<a href=\"http://e-words.jp/w/EUC-1.html\">EUC</a></li>\n  <li>エンプラの技術的負債の解消？</li>\n  <li>事業会社がSIerへ丸投げするのは、負債の発生</li>\n  <li>内製化、手の内化</li>\n  <li>メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える</li>\n  <li>常に触り続けるのが、負債化を避けるのは王道</li>\n  <li><a href=\"https://shuuji3.github.io/eng-practices/\">Google エンジニアリング・プラクティス ドキュメント</a></li>\n  <li>1章 ソフトウェアファースト のサマリ</li>\n  <li>2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ</li>\n  <li>日本でIT産業の競争力を失った理由</li>\n  <li>IT産業は製造業を模倣しているが、実際は模倣できていない</li>\n  <li>なぜ、製造業ではオーナーシップを保っているのか？</li>\n  <li>ものづくりにおける技能オリンピック</li>\n  <li>経営層がITを理解しているかどうか</li>\n  <li>役員の中にソフトウェアがわかる人が何人いるか？</li>\n  <li>ソフトウェアがわかるとは、どの程度まで理解していればいいのか？</li>\n  <li>幹部や経営層にどのような教育をお願いすればいいのか？</li>\n  <li>日本の経営者がITを理解できないのは、お友達が悪いから</li>\n  <li><a href=\"https://twitter.com/kunihirotanaka\">さくらインターネットの田中さん</a></li>\n  <li>3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ</li>\n  <li>DXの勝者と敗者：ネットフリックスとブロックバスター</li>\n  <li>経営陣のITリテラシ、風通しの良い組織文化、会社のミッション</li>\n  <li>セブンペイ</li>\n  <li>某元国営企業のアプリ</li>\n  <li>技術を分かってる経営層を増やすには？</li>\n  <li>前回同様に、やっぱり辞めちゃえばいい、辞める気で変える</li>\n  <li><a href=\"https://toyokeizai.net/articles/-/92606\">Google TGIF</a></li>\n  <li>社内システムのリバースエンジニアリングから技術の価値を見せる</li>\n  <li>4章：これからの「強い開発組織」を考える のサマリ</li>\n  <li>5章：ソフトウェア・ファーストなキャリアを築くには のサマリ</li>\n  <li>組織を作るのはプロダクトを作る人、人事はサポート</li>\n  <li>組織に対するオーナーシップをどうやって持ってもらうか？</li>\n  <li>組織はコミュニティと一緒である</li>\n  <li>書籍の制作秘話、何が大変だったのか？</li>\n  <li>受託開発のように受け身で執筆してしまっていた</li>\n  <li>ペルソナを後で書いた</li>\n  <li>書籍が、自分の分身になっていなかった</li>\n  <li>3万字を捨てる決断</li>\n  <li><a href=\"https://2019.pmconf.jp\">プロダクトマネージャーカンファレンス 2019</a></li>\n  <li>プロダクトマネージャーカンファレンスを始めたきっかけ</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "22. ソフトウェア・ファースト w/ takoratta",
      "itunes:episodeType": "full",
      "podcast:episode": 23
    },
    {
      "title": "21. Segment Routing v6 とは何か？ w/ slankdev",
      "link": "https://fukabori.fm/episode/21",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Segment Routingとはそもそも何か？</li>\n  <li>Segmentはどういう単位か？</li>\n  <li>Source Routingとの関連は？</li>\n  <li>Segment Routingで、どういう問題が解けるのか？</li>\n  <li>現在のバックボーンネットワークにおけるMPLS</li>\n  <li>MPLSでネットワークを構成したときの課題</li>\n  <li>Segment RoutingだとNetwork Nodeが、よりステートレス</li>\n  <li>Segment Routing MPLSの動きは？</li>\n  <li>Segment Routing v6では、どういう拡張ヘッダを付与する？</li>\n  <li>Segment Routing Header(SRH)</li>\n  <li>Segment IDは128bit</li>\n  <li>SRHはネットワークノードで剥がすのか？</li>\n  <li>Segment Routingだからこその特徴は？</li>\n  <li>SRv6は世の中でどういうフェーズか？</li>\n  <li>IETF側で基本的な部分は決まってきている</li>\n  <li>SRv6の実装状況はどうか？</li>\n  <li>Juniperの指摘はSegment IDが広いという点</li>\n  <li>Kamueeって何でしたっけ？</li>\n  <li>InteropにおけるShownetとは？</li>\n  <li>InteropでKamueeをどう組み込んだ？</li>\n  <li>Service Chain周りで組み込んだ</li>\n  <li>Service Chainでは、どんな機能がつながった？</li>\n  <li>SRv6だと、Security Functionと上手くいかない部分がある</li>\n  <li>SR Proxyという機能</li>\n  <li>SRv6に対応していない機器が、SDHを見たときにどう動く？</li>\n  <li>SRv6の実装はどの辺が大変だった？</li>\n  <li>VRF(Virtual Routing and Forwarding)とは？</li>\n  <li>パケット作るのは簡単</li>\n  <li>VRFにおけるルーティングテーブルの選択ロジックは？</li>\n  <li>Kamueeのネットワークデバッグ機能とは？</li>\n  <li>SRv6の課題は？</li>\n  <li>ソフトウェアルータの課題は？</li>\n  <li>Segment Routingは自由研究のネタになる</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/21"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7njf1c2rnm73w4q2sq5.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Mon, 16 Sep 2019 14:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7njf1c2rnm73w4q2sq5.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3998/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:46:13",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Segment Routingとはそもそも何か？</li>\n  <li>Segmentはどういう単位か？</li>\n  <li>Source Routingとの関連は？</li>\n  <li>Segment Routingで、どういう問題が解けるのか？</li>\n  <li>現在のバックボーンネットワークにおけるMPLS</li>\n  <li>MPLSでネットワークを構成したときの課題</li>\n  <li>Segment RoutingだとNetwork Nodeが、よりステートレス</li>\n  <li>Segment Routing MPLSの動きは？</li>\n  <li>Segment Routing v6では、どういう拡張ヘッダを付与する？</li>\n  <li>Segment Routing Header(SRH)</li>\n  <li>Segment IDは128bit</li>\n  <li>SRHはネットワークノードで剥がすのか？</li>\n  <li>Segment Routingだからこその特徴は？</li>\n  <li>SRv6は世の中でどういうフェーズか？</li>\n  <li>IETF側で基本的な部分は決まってきている</li>\n  <li>SRv6の実装状況はどうか？</li>\n  <li>Juniperの指摘はSegment IDが広いという点</li>\n  <li>Kamueeって何でしたっけ？</li>\n  <li>InteropにおけるShownetとは？</li>\n  <li>InteropでKamueeをどう組み込んだ？</li>\n  <li>Service Chain周りで組み込んだ</li>\n  <li>Service Chainでは、どんな機能がつながった？</li>\n  <li>SRv6だと、Security Functionと上手くいかない部分がある</li>\n  <li>SR Proxyという機能</li>\n  <li>SRv6に対応していない機器が、SDHを見たときにどう動く？</li>\n  <li>SRv6の実装はどの辺が大変だった？</li>\n  <li>VRF(Virtual Routing and Forwarding)とは？</li>\n  <li>パケット作るのは簡単</li>\n  <li>VRFにおけるルーティングテーブルの選択ロジックは？</li>\n  <li>Kamueeのネットワークデバッグ機能とは？</li>\n  <li>SRv6の課題は？</li>\n  <li>ソフトウェアルータの課題は？</li>\n  <li>Segment Routingは自由研究のネタになる</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>Segment Routingとはそもそも何か？</li>\n  <li>Segmentはどういう単位か？</li>\n  <li>Source Routingとの関連は？</li>\n  <li>Segment Routingで、どういう問題が解けるのか？</li>\n  <li>現在のバックボーンネットワークにおけるMPLS</li>\n  <li>MPLSでネットワークを構成したときの課題</li>\n  <li>Segment RoutingだとNetwork Nodeが、よりステートレス</li>\n  <li>Segment Routing MPLSの動きは？</li>\n  <li>Segment Routing v6では、どういう拡張ヘッダを付与する？</li>\n  <li>Segment Routing Header(SRH)</li>\n  <li>Segment IDは128bit</li>\n  <li>SRHはネットワークノードで剥がすのか？</li>\n  <li>Segment Routingだからこその特徴は？</li>\n  <li>SRv6は世の中でどういうフェーズか？</li>\n  <li>IETF側で基本的な部分は決まってきている</li>\n  <li>SRv6の実装状況はどうか？</li>\n  <li>Juniperの指摘はSegment IDが広いという点</li>\n  <li>Kamueeって何でしたっけ？</li>\n  <li>InteropにおけるShownetとは？</li>\n  <li>InteropでKamueeをどう組み込んだ？</li>\n  <li>Service Chain周りで組み込んだ</li>\n  <li>Service Chainでは、どんな機能がつながった？</li>\n  <li>SRv6だと、Security Functionと上手くいかない部分がある</li>\n  <li>SR Proxyという機能</li>\n  <li>SRv6に対応していない機器が、SDHを見たときにどう動く？</li>\n  <li>SRv6の実装はどの辺が大変だった？</li>\n  <li>VRF(Virtual Routing and Forwarding)とは？</li>\n  <li>パケット作るのは簡単</li>\n  <li>VRFにおけるルーティングテーブルの選択ロジックは？</li>\n  <li>Kamueeのネットワークデバッグ機能とは？</li>\n  <li>SRv6の課題は？</li>\n  <li>ソフトウェアルータの課題は？</li>\n  <li>Segment Routingは自由研究のネタになる</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "21. Segment Routing v6 とは何か？ w/ slankdev",
      "itunes:episodeType": "full",
      "podcast:episode": 22
    },
    {
      "title": "20. 技術力をいかに評価するか？インターンシップにおける採用・戦略とは？ w/ makoga",
      "link": "https://fukabori.fm/episode/20",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>CTOの1日ってどんな感じですか？コードは書きますか？</li>\n  <li>会社の経営戦略と人事制度（等級制度）との関連</li>\n  <li>等級（グレード）ダウンってありえる？</li>\n  <li>報酬はどのように決定しているのか？</li>\n  <li>技術力評価制度はどのような全体像・プロセスなのか？</li>\n  <li>評価のすり合わせは、なぜ実施するのか？</li>\n  <li>評価者2人はどのように選定しているのか？</li>\n  <li>定量的な評価を最初になぜ導入したのか？</li>\n  <li>人の給料を決めたくない</li>\n  <li>評価制度とグレードの昇給ってどういう相関？</li>\n  <li>技術力評価制度の社内の満足感はどうか？</li>\n  <li>自分の成長につながるフィードバックをもらえるのが大事</li>\n  <li>評価する側にも学びが多い</li>\n  <li>Voyageグループでは開発チームごとに色を出して良い</li>\n  <li>全社での技術ガイドラインはあるのか？</li>\n  <li>ない、事業特性と技術特性を考慮して決める</li>\n  <li>流行りで技術選定しない</li>\n  <li>好きな技術をねじ込んでくる機会はあっていい</li>\n  <li>新しい技術を浸透するための勉強会などは自主的に発生する？</li>\n  <li>今までの延長業務でも、新しい技術を学び選択肢を増やす</li>\n  <li>グレードを上げる判断基準は何か？</li>\n  <li>CCFB(360度評価)の評価項目は何か？</li>\n  <li>AmazonのLeadership Principle</li>\n  <li>エンジニア職種以外に技術力評価制度を応用可能か？</li>\n  <li>(技術力評価制度の)全体振り返りはどのようにやっているのか？</li>\n  <li>次に活かすTry項目はどのように決定するのか？</li>\n  <li>評価制度も自分たちでエンジニアリングしていく</li>\n  <li>新卒・中途採用はどのように改善したのか？</li>\n  <li>中途向けの面接の同席から始めた</li>\n  <li>評価会を通じて、採用スキルが上がる</li>\n  <li>どのタイミングで、面接の同席を辞めたのか？</li>\n  <li>最悪な状況を理解して、そこさえならなければやり方を任せる</li>\n  <li>採用における最低のラインとは何か？</li>\n  <li>新卒研修をどのように変えていったのか？</li>\n  <li>新卒入社研修を結果的になくした</li>\n  <li>チームとして、新卒を受け入れて育てられるスキル0</li>\n  <li>アジャイル戦略室では何をしたのか？</li>\n  <li>アジャイルは思想</li>\n  <li>振り返りの文化を根付かせる</li>\n  <li>振り返りでよく話す人、あまり話さない人</li>\n  <li>インターンシップ面白すぎでは？どのように決めているのか？</li>\n  <li>いかにインターンで、学生向けに目立つか？</li>\n  <li>講義をしっかりすることで学生に訴求した</li>\n  <li><a href=\"https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360\">エンジニア募集中</a></li>\n  <li>2019/8/31 builderscon のランチセッションで <a href=\"https://fukabori.fm/ajito.fm\">ajito.fm</a> の公開収録！</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/20"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7njm82xrcy3fszed86t.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 28 Jul 2019 15:50:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7njm82xrcy3fszed86t.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3997/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:00:36",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>CTOの1日ってどんな感じですか？コードは書きますか？</li>\n  <li>会社の経営戦略と人事制度（等級制度）との関連</li>\n  <li>等級（グレード）ダウンってありえる？</li>\n  <li>報酬はどのように決定しているのか？</li>\n  <li>技術力評価制度はどのような全体像・プロセスなのか？</li>\n  <li>評価のすり合わせは、なぜ実施するのか？</li>\n  <li>評価者2人はどのように選定しているのか？</li>\n  <li>定量的な評価を最初になぜ導入したのか？</li>\n  <li>人の給料を決めたくない</li>\n  <li>評価制度とグレードの昇給ってどういう相関？</li>\n  <li>技術力評価制度の社内の満足感はどうか？</li>\n  <li>自分の成長につながるフィードバックをもらえるのが大事</li>\n  <li>評価する側にも学びが多い</li>\n  <li>Voyageグループでは開発チームごとに色を出して良い</li>\n  <li>全社での技術ガイドラインはあるのか？</li>\n  <li>ない、事業特性と技術特性を考慮して決める</li>\n  <li>流行りで技術選定しない</li>\n  <li>好きな技術をねじ込んでくる機会はあっていい</li>\n  <li>新しい技術を浸透するための勉強会などは自主的に発生する？</li>\n  <li>今までの延長業務でも、新しい技術を学び選択肢を増やす</li>\n  <li>グレードを上げる判断基準は何か？</li>\n  <li>CCFB(360度評価)の評価項目は何か？</li>\n  <li>AmazonのLeadership Principle</li>\n  <li>エンジニア職種以外に技術力評価制度を応用可能か？</li>\n  <li>(技術力評価制度の)全体振り返りはどのようにやっているのか？</li>\n  <li>次に活かすTry項目はどのように決定するのか？</li>\n  <li>評価制度も自分たちでエンジニアリングしていく</li>\n  <li>新卒・中途採用はどのように改善したのか？</li>\n  <li>中途向けの面接の同席から始めた</li>\n  <li>評価会を通じて、採用スキルが上がる</li>\n  <li>どのタイミングで、面接の同席を辞めたのか？</li>\n  <li>最悪な状況を理解して、そこさえならなければやり方を任せる</li>\n  <li>採用における最低のラインとは何か？</li>\n  <li>新卒研修をどのように変えていったのか？</li>\n  <li>新卒入社研修を結果的になくした</li>\n  <li>チームとして、新卒を受け入れて育てられるスキル0</li>\n  <li>アジャイル戦略室では何をしたのか？</li>\n  <li>アジャイルは思想</li>\n  <li>振り返りの文化を根付かせる</li>\n  <li>振り返りでよく話す人、あまり話さない人</li>\n  <li>インターンシップ面白すぎでは？どのように決めているのか？</li>\n  <li>いかにインターンで、学生向けに目立つか？</li>\n  <li>講義をしっかりすることで学生に訴求した</li>\n  <li><a href=\"https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360\">エンジニア募集中</a></li>\n  <li>2019/8/31 builderscon のランチセッションで <a href=\"https://fukabori.fm/ajito.fm\">ajito.fm</a> の公開収録！</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>CTOの1日ってどんな感じですか？コードは書きますか？</li>\n  <li>会社の経営戦略と人事制度（等級制度）との関連</li>\n  <li>等級（グレード）ダウンってありえる？</li>\n  <li>報酬はどのように決定しているのか？</li>\n  <li>技術力評価制度はどのような全体像・プロセスなのか？</li>\n  <li>評価のすり合わせは、なぜ実施するのか？</li>\n  <li>評価者2人はどのように選定しているのか？</li>\n  <li>定量的な評価を最初になぜ導入したのか？</li>\n  <li>人の給料を決めたくない</li>\n  <li>評価制度とグレードの昇給ってどういう相関？</li>\n  <li>技術力評価制度の社内の満足感はどうか？</li>\n  <li>自分の成長につながるフィードバックをもらえるのが大事</li>\n  <li>評価する側にも学びが多い</li>\n  <li>Voyageグループでは開発チームごとに色を出して良い</li>\n  <li>全社での技術ガイドラインはあるのか？</li>\n  <li>ない、事業特性と技術特性を考慮して決める</li>\n  <li>流行りで技術選定しない</li>\n  <li>好きな技術をねじ込んでくる機会はあっていい</li>\n  <li>新しい技術を浸透するための勉強会などは自主的に発生する？</li>\n  <li>今までの延長業務でも、新しい技術を学び選択肢を増やす</li>\n  <li>グレードを上げる判断基準は何か？</li>\n  <li>CCFB(360度評価)の評価項目は何か？</li>\n  <li>AmazonのLeadership Principle</li>\n  <li>エンジニア職種以外に技術力評価制度を応用可能か？</li>\n  <li>(技術力評価制度の)全体振り返りはどのようにやっているのか？</li>\n  <li>次に活かすTry項目はどのように決定するのか？</li>\n  <li>評価制度も自分たちでエンジニアリングしていく</li>\n  <li>新卒・中途採用はどのように改善したのか？</li>\n  <li>中途向けの面接の同席から始めた</li>\n  <li>評価会を通じて、採用スキルが上がる</li>\n  <li>どのタイミングで、面接の同席を辞めたのか？</li>\n  <li>最悪な状況を理解して、そこさえならなければやり方を任せる</li>\n  <li>採用における最低のラインとは何か？</li>\n  <li>新卒研修をどのように変えていったのか？</li>\n  <li>新卒入社研修を結果的になくした</li>\n  <li>チームとして、新卒を受け入れて育てられるスキル0</li>\n  <li>アジャイル戦略室では何をしたのか？</li>\n  <li>アジャイルは思想</li>\n  <li>振り返りの文化を根付かせる</li>\n  <li>振り返りでよく話す人、あまり話さない人</li>\n  <li>インターンシップ面白すぎでは？どのように決めているのか？</li>\n  <li>いかにインターンで、学生向けに目立つか？</li>\n  <li>講義をしっかりすることで学生に訴求した</li>\n  <li><a href=\"https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360\">エンジニア募集中</a></li>\n  <li>2019/8/31 builderscon のランチセッションで <a href=\"https://fukabori.fm/ajito.fm\">ajito.fm</a> の公開収録！</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "20. 技術力をいかに評価するか？インターンシップにおける採用・戦略とは？ w/ makoga",
      "itunes:episodeType": "full",
      "podcast:episode": 21
    },
    {
      "title": "19. エンジニアリング組織を取り巻く変化とは？ w/ hiroki_daichi",
      "link": "https://fukabori.fm/episode/19",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li><a href=\"https://gihyo.jp/book/2018/978-4-7741-9605-3\">エンジニアリング組織論への招待</a></li>\n  <li>エンジニアリングの定義とは？</li>\n  <li>エンジニアリングとは不確実性を減らすプロセス</li>\n  <li>間に落ちてる仕事</li>\n  <li>多くの仕事で出くわす人の多くは良い人</li>\n  <li>構造によって良い人たちが感情的な対立を起こしている</li>\n  <li>透明人間、構造の力、空気、アーキテクチャ</li>\n  <li>コードから書いた人、気持ちがわかるようになってきた</li>\n  <li>一番負債はコード変更履歴からTrackしていくのは見栄えがいい</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Cyclomatic_complexity\">Cyclomatic complexity</a></li>\n  <li>知らない、わからないという恐怖は根源的なもの</li>\n  <li>人間はハードウェアの機能として、第一に動物である</li>\n  <li>本能は漏れのある抽象化をして、理性的な面を描いている</li>\n  <li>その人のことが嫌いだよね、ってのを一般論として話す</li>\n  <li>多くの問題は学校の問題ほど難しくない</li>\n  <li>問題発見をし、明晰化する学問が弱い</li>\n  <li>バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に</li>\n  <li>思考のリファクタリングをすると外部入出力は変わるのか？</li>\n  <li>目的という抽象をもって、手段という階層をリファクタリングする</li>\n  <li>Developer ExperienceとDigital Transformationという2つのDXとは？</li>\n  <li>内製化はいままで外部に持っていた異質なものを取り込む過程である</li>\n  <li>エンジニアがビジネスのラインに自然に入り込んでいく</li>\n  <li>マーケタもSQLを書く</li>\n  <li>コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程</li>\n  <li>組織というベクトルだけで解を出せないが、別の軸から解を出せる</li>\n  <li>仕様を決めることと、ソフトウェアを書くことが同じになっていく</li>\n  <li>文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる</li>\n  <li>ハレーションを恐れすぎると何もしなくなる</li>\n  <li>エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？</li>\n  <li>1,2回転職したらいいんじゃないか</li>\n  <li>ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ</li>\n  <li>シンプルを作るのは非常に難しい</li>\n  <li>ソフトウェアに社内事情を組み込みすぎている</li>\n  <li>マーケットの原理で物事を動かせない</li>\n  <li>なぜエンジニアが流出するのか？</li>\n  <li>正当なリスペクト、周りに優秀な人がいる、透明性のある社風</li>\n  <li>価値観が違うと、甘やかすことすらできない</li>\n  <li>その人が何を求めているのか紳士に向き合う</li>\n  <li>なんで辞めた人に理由を聞かないの？</li>\n  <li>リスペクトっていう概念が理解されていない問題</li>\n  <li>尊敬しているというのは、その人に興味を持ち、理解する過程である</li>\n  <li><a href=\"https://rector.co.jp/\">rector</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/19"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhdmjfswjxfqs0cb3v.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 09 Jul 2019 16:10:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhdmjfswjxfqs0cb3v.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3996/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:04:03",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li><a href=\"https://gihyo.jp/book/2018/978-4-7741-9605-3\">エンジニアリング組織論への招待</a></li>\n  <li>エンジニアリングの定義とは？</li>\n  <li>エンジニアリングとは不確実性を減らすプロセス</li>\n  <li>間に落ちてる仕事</li>\n  <li>多くの仕事で出くわす人の多くは良い人</li>\n  <li>構造によって良い人たちが感情的な対立を起こしている</li>\n  <li>透明人間、構造の力、空気、アーキテクチャ</li>\n  <li>コードから書いた人、気持ちがわかるようになってきた</li>\n  <li>一番負債はコード変更履歴からTrackしていくのは見栄えがいい</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Cyclomatic_complexity\">Cyclomatic complexity</a></li>\n  <li>知らない、わからないという恐怖は根源的なもの</li>\n  <li>人間はハードウェアの機能として、第一に動物である</li>\n  <li>本能は漏れのある抽象化をして、理性的な面を描いている</li>\n  <li>その人のことが嫌いだよね、ってのを一般論として話す</li>\n  <li>多くの問題は学校の問題ほど難しくない</li>\n  <li>問題発見をし、明晰化する学問が弱い</li>\n  <li>バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に</li>\n  <li>思考のリファクタリングをすると外部入出力は変わるのか？</li>\n  <li>目的という抽象をもって、手段という階層をリファクタリングする</li>\n  <li>Developer ExperienceとDigital Transformationという2つのDXとは？</li>\n  <li>内製化はいままで外部に持っていた異質なものを取り込む過程である</li>\n  <li>エンジニアがビジネスのラインに自然に入り込んでいく</li>\n  <li>マーケタもSQLを書く</li>\n  <li>コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程</li>\n  <li>組織というベクトルだけで解を出せないが、別の軸から解を出せる</li>\n  <li>仕様を決めることと、ソフトウェアを書くことが同じになっていく</li>\n  <li>文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる</li>\n  <li>ハレーションを恐れすぎると何もしなくなる</li>\n  <li>エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？</li>\n  <li>1,2回転職したらいいんじゃないか</li>\n  <li>ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ</li>\n  <li>シンプルを作るのは非常に難しい</li>\n  <li>ソフトウェアに社内事情を組み込みすぎている</li>\n  <li>マーケットの原理で物事を動かせない</li>\n  <li>なぜエンジニアが流出するのか？</li>\n  <li>正当なリスペクト、周りに優秀な人がいる、透明性のある社風</li>\n  <li>価値観が違うと、甘やかすことすらできない</li>\n  <li>その人が何を求めているのか紳士に向き合う</li>\n  <li>なんで辞めた人に理由を聞かないの？</li>\n  <li>リスペクトっていう概念が理解されていない問題</li>\n  <li>尊敬しているというのは、その人に興味を持ち、理解する過程である</li>\n  <li><a href=\"https://rector.co.jp/\">rector</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://anchor.fm/em-fm\">EM.FM</a></li>\n  <li><a href=\"https://gihyo.jp/book/2018/978-4-7741-9605-3\">エンジニアリング組織論への招待</a></li>\n  <li>エンジニアリングの定義とは？</li>\n  <li>エンジニアリングとは不確実性を減らすプロセス</li>\n  <li>間に落ちてる仕事</li>\n  <li>多くの仕事で出くわす人の多くは良い人</li>\n  <li>構造によって良い人たちが感情的な対立を起こしている</li>\n  <li>透明人間、構造の力、空気、アーキテクチャ</li>\n  <li>コードから書いた人、気持ちがわかるようになってきた</li>\n  <li>一番負債はコード変更履歴からTrackしていくのは見栄えがいい</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Cyclomatic_complexity\">Cyclomatic complexity</a></li>\n  <li>知らない、わからないという恐怖は根源的なもの</li>\n  <li>人間はハードウェアの機能として、第一に動物である</li>\n  <li>本能は漏れのある抽象化をして、理性的な面を描いている</li>\n  <li>その人のことが嫌いだよね、ってのを一般論として話す</li>\n  <li>多くの問題は学校の問題ほど難しくない</li>\n  <li>問題発見をし、明晰化する学問が弱い</li>\n  <li>バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に</li>\n  <li>思考のリファクタリングをすると外部入出力は変わるのか？</li>\n  <li>目的という抽象をもって、手段という階層をリファクタリングする</li>\n  <li>Developer ExperienceとDigital Transformationという2つのDXとは？</li>\n  <li>内製化はいままで外部に持っていた異質なものを取り込む過程である</li>\n  <li>エンジニアがビジネスのラインに自然に入り込んでいく</li>\n  <li>マーケタもSQLを書く</li>\n  <li>コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程</li>\n  <li>組織というベクトルだけで解を出せないが、別の軸から解を出せる</li>\n  <li>仕様を決めることと、ソフトウェアを書くことが同じになっていく</li>\n  <li>文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる</li>\n  <li>ハレーションを恐れすぎると何もしなくなる</li>\n  <li>エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？</li>\n  <li>1,2回転職したらいいんじゃないか</li>\n  <li>ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ</li>\n  <li>シンプルを作るのは非常に難しい</li>\n  <li>ソフトウェアに社内事情を組み込みすぎている</li>\n  <li>マーケットの原理で物事を動かせない</li>\n  <li>なぜエンジニアが流出するのか？</li>\n  <li>正当なリスペクト、周りに優秀な人がいる、透明性のある社風</li>\n  <li>価値観が違うと、甘やかすことすらできない</li>\n  <li>その人が何を求めているのか紳士に向き合う</li>\n  <li>なんで辞めた人に理由を聞かないの？</li>\n  <li>リスペクトっていう概念が理解されていない問題</li>\n  <li>尊敬しているというのは、その人に興味を持ち、理解する過程である</li>\n  <li><a href=\"https://rector.co.jp/\">rector</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "19. エンジニアリング組織を取り巻く変化とは？ w/ hiroki_daichi",
      "itunes:episodeType": "full",
      "podcast:episode": 20
    },
    {
      "title": "18. どのようにDX支援・アジャイル開発・スクラムを進めているのか？ w/ sorano_tarou",
      "link": "https://fukabori.fm/episode/18",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>アジャイル開発で採用しているフレームワークは何か？</li>\n  <li>スクラム、XP、モブプロ</li>\n  <li>スプリントのタイムボックスは？</li>\n  <li>補足: <a href=\"http://e-words.jp/w/POC.html\">POCとは</a></li>\n  <li>スプリントプランニングどのぐらいの時間をかける？</li>\n  <li>なぜ、1日スプリントにしたのか？</li>\n  <li>スプリントプランニングには、SM/PO/Devの誰が参加する？</li>\n  <li>自分たちのモノ（社内のシステムなど）を作るのを並行してやる</li>\n  <li>空いている時間で新しい技術を触り続ける</li>\n  <li>デザイン思考のワークショップには、開発チームが参加する？</li>\n  <li>アイデアを本当に形にできるか、というのを重視ししている</li>\n  <li>開発時にお客様は同席する？</li>\n  <li>プロキシPOを立てることはあるか？</li>\n  <li>プロダクトバックログはいつ作っているのか？</li>\n  <li>プロダクトバックログへのアイデア貼り付けはいつやっても良い</li>\n  <li>アイデアの粒度はどの程度で書くか？</li>\n  <li>最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない</li>\n  <li>学習専用の時間はあえて確保しているのか？</li>\n  <li>アウトプットと同じぐらい、次のインプット時間が必要と考えている</li>\n  <li>モブチームはどのように取るタスクを選ぶのか？</li>\n  <li>Definition of Done、Acceptance Criteriaはどのように規定しているのか？</li>\n  <li>自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している</li>\n  <li>振り返りの手法は何を使うか？</li>\n  <li><a href=\"https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef\">Fun, Done, Learn</a></li>\n  <li>振り返りのコメントはどのようなものが出るのか？</li>\n  <li>わかりません、というのを自信を持って言いたい</li>\n  <li>各モブごとの振り返りと、全チームの振り返り</li>\n  <li>Tryを蓄積していく、TryのRefinement</li>\n  <li>インセプションデッキは作るのか？いつ作るのか？</li>\n  <li>デザイン思考のワークショップはどの程度実施するのか？</li>\n  <li>POC開発・検証後はどのように進めていくのか？</li>\n  <li>チームビルディングはどのタイミングで、何を実施するか？</li>\n  <li>オンボーディング向けに気をつけていることはあるか？</li>\n  <li>プログラミング経験ゼロの人向けの育成モブ</li>\n  <li>KDDI DIGITAL GATEでエンジニア募集中</li>\n  <li>どんなエンジニアに来て欲しいか？</li>\n  <li><a href=\"https://codebase.connpass.com/event/134947/\">アジャイル開発体験会</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/18"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhb67r8vgkh8172v6c.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 23 Jun 2019 14:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhb67r8vgkh8172v6c.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3995/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:41:28",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>アジャイル開発で採用しているフレームワークは何か？</li>\n  <li>スクラム、XP、モブプロ</li>\n  <li>スプリントのタイムボックスは？</li>\n  <li>補足: <a href=\"http://e-words.jp/w/POC.html\">POCとは</a></li>\n  <li>スプリントプランニングどのぐらいの時間をかける？</li>\n  <li>なぜ、1日スプリントにしたのか？</li>\n  <li>スプリントプランニングには、SM/PO/Devの誰が参加する？</li>\n  <li>自分たちのモノ（社内のシステムなど）を作るのを並行してやる</li>\n  <li>空いている時間で新しい技術を触り続ける</li>\n  <li>デザイン思考のワークショップには、開発チームが参加する？</li>\n  <li>アイデアを本当に形にできるか、というのを重視ししている</li>\n  <li>開発時にお客様は同席する？</li>\n  <li>プロキシPOを立てることはあるか？</li>\n  <li>プロダクトバックログはいつ作っているのか？</li>\n  <li>プロダクトバックログへのアイデア貼り付けはいつやっても良い</li>\n  <li>アイデアの粒度はどの程度で書くか？</li>\n  <li>最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない</li>\n  <li>学習専用の時間はあえて確保しているのか？</li>\n  <li>アウトプットと同じぐらい、次のインプット時間が必要と考えている</li>\n  <li>モブチームはどのように取るタスクを選ぶのか？</li>\n  <li>Definition of Done、Acceptance Criteriaはどのように規定しているのか？</li>\n  <li>自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している</li>\n  <li>振り返りの手法は何を使うか？</li>\n  <li><a href=\"https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef\">Fun, Done, Learn</a></li>\n  <li>振り返りのコメントはどのようなものが出るのか？</li>\n  <li>わかりません、というのを自信を持って言いたい</li>\n  <li>各モブごとの振り返りと、全チームの振り返り</li>\n  <li>Tryを蓄積していく、TryのRefinement</li>\n  <li>インセプションデッキは作るのか？いつ作るのか？</li>\n  <li>デザイン思考のワークショップはどの程度実施するのか？</li>\n  <li>POC開発・検証後はどのように進めていくのか？</li>\n  <li>チームビルディングはどのタイミングで、何を実施するか？</li>\n  <li>オンボーディング向けに気をつけていることはあるか？</li>\n  <li>プログラミング経験ゼロの人向けの育成モブ</li>\n  <li>KDDI DIGITAL GATEでエンジニア募集中</li>\n  <li>どんなエンジニアに来て欲しいか？</li>\n  <li><a href=\"https://codebase.connpass.com/event/134947/\">アジャイル開発体験会</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>アジャイル開発で採用しているフレームワークは何か？</li>\n  <li>スクラム、XP、モブプロ</li>\n  <li>スプリントのタイムボックスは？</li>\n  <li>補足: <a href=\"http://e-words.jp/w/POC.html\">POCとは</a></li>\n  <li>スプリントプランニングどのぐらいの時間をかける？</li>\n  <li>なぜ、1日スプリントにしたのか？</li>\n  <li>スプリントプランニングには、SM/PO/Devの誰が参加する？</li>\n  <li>自分たちのモノ（社内のシステムなど）を作るのを並行してやる</li>\n  <li>空いている時間で新しい技術を触り続ける</li>\n  <li>デザイン思考のワークショップには、開発チームが参加する？</li>\n  <li>アイデアを本当に形にできるか、というのを重視ししている</li>\n  <li>開発時にお客様は同席する？</li>\n  <li>プロキシPOを立てることはあるか？</li>\n  <li>プロダクトバックログはいつ作っているのか？</li>\n  <li>プロダクトバックログへのアイデア貼り付けはいつやっても良い</li>\n  <li>アイデアの粒度はどの程度で書くか？</li>\n  <li>最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない</li>\n  <li>学習専用の時間はあえて確保しているのか？</li>\n  <li>アウトプットと同じぐらい、次のインプット時間が必要と考えている</li>\n  <li>モブチームはどのように取るタスクを選ぶのか？</li>\n  <li>Definition of Done、Acceptance Criteriaはどのように規定しているのか？</li>\n  <li>自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している</li>\n  <li>振り返りの手法は何を使うか？</li>\n  <li><a href=\"https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef\">Fun, Done, Learn</a></li>\n  <li>振り返りのコメントはどのようなものが出るのか？</li>\n  <li>わかりません、というのを自信を持って言いたい</li>\n  <li>各モブごとの振り返りと、全チームの振り返り</li>\n  <li>Tryを蓄積していく、TryのRefinement</li>\n  <li>インセプションデッキは作るのか？いつ作るのか？</li>\n  <li>デザイン思考のワークショップはどの程度実施するのか？</li>\n  <li>POC開発・検証後はどのように進めていくのか？</li>\n  <li>チームビルディングはどのタイミングで、何を実施するか？</li>\n  <li>オンボーディング向けに気をつけていることはあるか？</li>\n  <li>プログラミング経験ゼロの人向けの育成モブ</li>\n  <li>KDDI DIGITAL GATEでエンジニア募集中</li>\n  <li>どんなエンジニアに来て欲しいか？</li>\n  <li><a href=\"https://codebase.connpass.com/event/134947/\">アジャイル開発体験会</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "18. どのようにDX支援・アジャイル開発・スクラムを進めているのか？ w/ sorano_tarou",
      "itunes:episodeType": "full",
      "podcast:episode": 19
    },
    {
      "title": "17. 本当にやれることを全部やってますか？ w/ takoratta",
      "link": "https://fukabori.fm/episode/17",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>DECって会社は何をやっていた？</li>\n  <li>IBMと7人の小人達</li>\n  <li>メインフレームに対するアンチテーゼ、ミニコンピューター</li>\n  <li>NEC PC-9801が大流行した時代</li>\n  <li>この時代の日本のIT企業は何をしていたのか？</li>\n  <li>通産省とのタッグ</li>\n  <li>富士通、日立、NEC、日本IBMで市場を分け合っていた時代</li>\n  <li>ソフトウェアはハードウェアのおまけだった</li>\n  <li>SIerという名前が生まれてきた背景</li>\n  <li>当初は何と何をインテグレーションしていたのか？</li>\n  <li>トークンリングとイーサネット</li>\n  <li>90年代の日本の技術者は、どのような開発をしていた？</li>\n  <li>ユニコードがない時代なので、国際化は大変な仕事だった</li>\n  <li>IT業界の下請け構造はどの時期から発生しはじめたのか？</li>\n  <li>Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC\">デヴィッド・カトラー</a></li>\n  <li>Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった</li>\n  <li>AppleTalkは素晴らしかった</li>\n  <li>90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった</li>\n  <li>オープンシステム流行の背景</li>\n  <li><a href=\"http://e-words.jp/w/EUC-1.html\">エンドユーザーコンピューティング</a></li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/4GL\">4GL</a></li>\n  <li>なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？</li>\n  <li>UIのちょっとしたミスが製品全体の品質の疑いにつながる</li>\n  <li>一番やってはいけないのはリコール</li>\n  <li>現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える</li>\n  <li>ITに対する捉え方の違いが、国内・国外との差を広げたのではないか</li>\n  <li>ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？</li>\n  <li>科学・製造・ビジネス</li>\n  <li>経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった</li>\n  <li>日本と米国の状況は危機的、スピード感が違う</li>\n  <li>日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない</li>\n  <li>及川さんのエンタープライズ向けのDXセミナーは娯楽</li>\n  <li><a href=\"https://type.jp/et/feature/8350\">静かに暮らしたい人たち</a></li>\n  <li>年功序列、終身雇用、企業内組合という三種の神器</li>\n  <li>安定を望む人も多いが、もうそんな場所はない</li>\n  <li>むしろ自分自身に自信を持てることが安定につながる</li>\n  <li>米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる</li>\n  <li>社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？</li>\n  <li>新しいことにチャレンジするコストよりも、転職するコストのが安い</li>\n  <li>みんな辞めればいい、そうすれば経営者は危機感を持つ</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Exit_interview\">Exit Interview</a></li>\n  <li>人は会社と心中する必要はない</li>\n  <li>本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切</li>\n  <li>いつでもやめられる、けどやめない社員がいる会社は強い</li>\n  <li>辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？</li>\n  <li>井深さんの「説得工学」</li>\n  <li>足りないのはやり切る覚悟</li>\n  <li>一番必要なのはアントレプレナーシップ、起業家精神</li>\n  <li>本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？</li>\n  <li>オーナーシップを持って進めるのが少なくなってきているのではないか</li>\n  <li>日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？</li>\n  <li>他国のをまねして上手く仕上げて、外に出せばいい</li>\n  <li>スタートアップと同じことを、大企業でなぜできないのか？</li>\n  <li><a href=\"https://diamond.jp/articles/-/203881\">アマゾンの成功から日本の部品メーカーが学ぶべき理由</a></li>\n  <li>最初のiPhoneにはSDKがなかった</li>\n  <li>まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略</li>\n  <li>どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？</li>\n  <li>リテール業界でAWSを使わなくなる傾向</li>\n  <li>IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム</li>\n  <li>Mircosoftの遡上である開発ツールのプラットフォーム化</li>\n  <li>部品メーカーも思想を変えれば、プラットフォーム化できる</li>\n  <li>nVidiaは部品メーカーからプラットフォーマーへの例</li>\n  <li>日本で足りない役割としてのBizDev、パートナー開拓</li>\n  <li>(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？</li>\n  <li>エンジニアとエンジニアじゃない人が組む社内ハッカソン</li>\n  <li>採用は一種の営業活動である</li>\n  <li>組織、環境を魅力的にして外に広報していく働きが必要</li>\n  <li>採用に本当に困ってるんだったら給料を上げればいい</li>\n  <li>エンジニアを引きつける3つの魅力</li>\n  <li>雇用条件・給与、プロダクト・ミッション、技術者としての面白さ</li>\n  <li>3つ出来なくても、1つは突き抜ければ良い</li>\n  <li>技術的に魅力的がないところには、優秀なエンジニアは来ない</li>\n  <li>エンジニアが他の職種と違うところ</li>\n  <li>高い課題設定を魅力設定として打ち出す</li>\n  <li>リファラル採用はやったほうがいい、なぜか？</li>\n  <li>本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク</li>\n  <li>「いやー僕はいいんだけど、こいつは誘えないな」というときの理由</li>\n  <li>大企業が変わらないと、日本は変わらない</li>\n  <li>エンタープライズから日本を変えていけると楽しいのではないか</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/17"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh3f2qdnzd02rs9b5d.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sat, 15 Jun 2019 13:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh3f2qdnzd02rs9b5d.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3994/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:27:02",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>DECって会社は何をやっていた？</li>\n  <li>IBMと7人の小人達</li>\n  <li>メインフレームに対するアンチテーゼ、ミニコンピューター</li>\n  <li>NEC PC-9801が大流行した時代</li>\n  <li>この時代の日本のIT企業は何をしていたのか？</li>\n  <li>通産省とのタッグ</li>\n  <li>富士通、日立、NEC、日本IBMで市場を分け合っていた時代</li>\n  <li>ソフトウェアはハードウェアのおまけだった</li>\n  <li>SIerという名前が生まれてきた背景</li>\n  <li>当初は何と何をインテグレーションしていたのか？</li>\n  <li>トークンリングとイーサネット</li>\n  <li>90年代の日本の技術者は、どのような開発をしていた？</li>\n  <li>ユニコードがない時代なので、国際化は大変な仕事だった</li>\n  <li>IT業界の下請け構造はどの時期から発生しはじめたのか？</li>\n  <li>Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC\">デヴィッド・カトラー</a></li>\n  <li>Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった</li>\n  <li>AppleTalkは素晴らしかった</li>\n  <li>90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった</li>\n  <li>オープンシステム流行の背景</li>\n  <li><a href=\"http://e-words.jp/w/EUC-1.html\">エンドユーザーコンピューティング</a></li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/4GL\">4GL</a></li>\n  <li>なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？</li>\n  <li>UIのちょっとしたミスが製品全体の品質の疑いにつながる</li>\n  <li>一番やってはいけないのはリコール</li>\n  <li>現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える</li>\n  <li>ITに対する捉え方の違いが、国内・国外との差を広げたのではないか</li>\n  <li>ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？</li>\n  <li>科学・製造・ビジネス</li>\n  <li>経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった</li>\n  <li>日本と米国の状況は危機的、スピード感が違う</li>\n  <li>日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない</li>\n  <li>及川さんのエンタープライズ向けのDXセミナーは娯楽</li>\n  <li><a href=\"https://type.jp/et/feature/8350\">静かに暮らしたい人たち</a></li>\n  <li>年功序列、終身雇用、企業内組合という三種の神器</li>\n  <li>安定を望む人も多いが、もうそんな場所はない</li>\n  <li>むしろ自分自身に自信を持てることが安定につながる</li>\n  <li>米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる</li>\n  <li>社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？</li>\n  <li>新しいことにチャレンジするコストよりも、転職するコストのが安い</li>\n  <li>みんな辞めればいい、そうすれば経営者は危機感を持つ</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Exit_interview\">Exit Interview</a></li>\n  <li>人は会社と心中する必要はない</li>\n  <li>本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切</li>\n  <li>いつでもやめられる、けどやめない社員がいる会社は強い</li>\n  <li>辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？</li>\n  <li>井深さんの「説得工学」</li>\n  <li>足りないのはやり切る覚悟</li>\n  <li>一番必要なのはアントレプレナーシップ、起業家精神</li>\n  <li>本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？</li>\n  <li>オーナーシップを持って進めるのが少なくなってきているのではないか</li>\n  <li>日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？</li>\n  <li>他国のをまねして上手く仕上げて、外に出せばいい</li>\n  <li>スタートアップと同じことを、大企業でなぜできないのか？</li>\n  <li><a href=\"https://diamond.jp/articles/-/203881\">アマゾンの成功から日本の部品メーカーが学ぶべき理由</a></li>\n  <li>最初のiPhoneにはSDKがなかった</li>\n  <li>まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略</li>\n  <li>どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？</li>\n  <li>リテール業界でAWSを使わなくなる傾向</li>\n  <li>IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム</li>\n  <li>Mircosoftの遡上である開発ツールのプラットフォーム化</li>\n  <li>部品メーカーも思想を変えれば、プラットフォーム化できる</li>\n  <li>nVidiaは部品メーカーからプラットフォーマーへの例</li>\n  <li>日本で足りない役割としてのBizDev、パートナー開拓</li>\n  <li>(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？</li>\n  <li>エンジニアとエンジニアじゃない人が組む社内ハッカソン</li>\n  <li>採用は一種の営業活動である</li>\n  <li>組織、環境を魅力的にして外に広報していく働きが必要</li>\n  <li>採用に本当に困ってるんだったら給料を上げればいい</li>\n  <li>エンジニアを引きつける3つの魅力</li>\n  <li>雇用条件・給与、プロダクト・ミッション、技術者としての面白さ</li>\n  <li>3つ出来なくても、1つは突き抜ければ良い</li>\n  <li>技術的に魅力的がないところには、優秀なエンジニアは来ない</li>\n  <li>エンジニアが他の職種と違うところ</li>\n  <li>高い課題設定を魅力設定として打ち出す</li>\n  <li>リファラル採用はやったほうがいい、なぜか？</li>\n  <li>本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク</li>\n  <li>「いやー僕はいいんだけど、こいつは誘えないな」というときの理由</li>\n  <li>大企業が変わらないと、日本は変わらない</li>\n  <li>エンタープライズから日本を変えていけると楽しいのではないか</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>DECって会社は何をやっていた？</li>\n  <li>IBMと7人の小人達</li>\n  <li>メインフレームに対するアンチテーゼ、ミニコンピューター</li>\n  <li>NEC PC-9801が大流行した時代</li>\n  <li>この時代の日本のIT企業は何をしていたのか？</li>\n  <li>通産省とのタッグ</li>\n  <li>富士通、日立、NEC、日本IBMで市場を分け合っていた時代</li>\n  <li>ソフトウェアはハードウェアのおまけだった</li>\n  <li>SIerという名前が生まれてきた背景</li>\n  <li>当初は何と何をインテグレーションしていたのか？</li>\n  <li>トークンリングとイーサネット</li>\n  <li>90年代の日本の技術者は、どのような開発をしていた？</li>\n  <li>ユニコードがない時代なので、国際化は大変な仕事だった</li>\n  <li>IT業界の下請け構造はどの時期から発生しはじめたのか？</li>\n  <li>Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC\">デヴィッド・カトラー</a></li>\n  <li>Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった</li>\n  <li>AppleTalkは素晴らしかった</li>\n  <li>90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった</li>\n  <li>オープンシステム流行の背景</li>\n  <li><a href=\"http://e-words.jp/w/EUC-1.html\">エンドユーザーコンピューティング</a></li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/4GL\">4GL</a></li>\n  <li>なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？</li>\n  <li>UIのちょっとしたミスが製品全体の品質の疑いにつながる</li>\n  <li>一番やってはいけないのはリコール</li>\n  <li>現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える</li>\n  <li>ITに対する捉え方の違いが、国内・国外との差を広げたのではないか</li>\n  <li>ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？</li>\n  <li>科学・製造・ビジネス</li>\n  <li>経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった</li>\n  <li>日本と米国の状況は危機的、スピード感が違う</li>\n  <li>日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない</li>\n  <li>及川さんのエンタープライズ向けのDXセミナーは娯楽</li>\n  <li><a href=\"https://type.jp/et/feature/8350\">静かに暮らしたい人たち</a></li>\n  <li>年功序列、終身雇用、企業内組合という三種の神器</li>\n  <li>安定を望む人も多いが、もうそんな場所はない</li>\n  <li>むしろ自分自身に自信を持てることが安定につながる</li>\n  <li>米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる</li>\n  <li>社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？</li>\n  <li>新しいことにチャレンジするコストよりも、転職するコストのが安い</li>\n  <li>みんな辞めればいい、そうすれば経営者は危機感を持つ</li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Exit_interview\">Exit Interview</a></li>\n  <li>人は会社と心中する必要はない</li>\n  <li>本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切</li>\n  <li>いつでもやめられる、けどやめない社員がいる会社は強い</li>\n  <li>辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？</li>\n  <li>井深さんの「説得工学」</li>\n  <li>足りないのはやり切る覚悟</li>\n  <li>一番必要なのはアントレプレナーシップ、起業家精神</li>\n  <li>本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？</li>\n  <li>オーナーシップを持って進めるのが少なくなってきているのではないか</li>\n  <li>日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？</li>\n  <li>他国のをまねして上手く仕上げて、外に出せばいい</li>\n  <li>スタートアップと同じことを、大企業でなぜできないのか？</li>\n  <li><a href=\"https://diamond.jp/articles/-/203881\">アマゾンの成功から日本の部品メーカーが学ぶべき理由</a></li>\n  <li>最初のiPhoneにはSDKがなかった</li>\n  <li>まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略</li>\n  <li>どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？</li>\n  <li>リテール業界でAWSを使わなくなる傾向</li>\n  <li>IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム</li>\n  <li>Mircosoftの遡上である開発ツールのプラットフォーム化</li>\n  <li>部品メーカーも思想を変えれば、プラットフォーム化できる</li>\n  <li>nVidiaは部品メーカーからプラットフォーマーへの例</li>\n  <li>日本で足りない役割としてのBizDev、パートナー開拓</li>\n  <li>(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？</li>\n  <li>エンジニアとエンジニアじゃない人が組む社内ハッカソン</li>\n  <li>採用は一種の営業活動である</li>\n  <li>組織、環境を魅力的にして外に広報していく働きが必要</li>\n  <li>採用に本当に困ってるんだったら給料を上げればいい</li>\n  <li>エンジニアを引きつける3つの魅力</li>\n  <li>雇用条件・給与、プロダクト・ミッション、技術者としての面白さ</li>\n  <li>3つ出来なくても、1つは突き抜ければ良い</li>\n  <li>技術的に魅力的がないところには、優秀なエンジニアは来ない</li>\n  <li>エンジニアが他の職種と違うところ</li>\n  <li>高い課題設定を魅力設定として打ち出す</li>\n  <li>リファラル採用はやったほうがいい、なぜか？</li>\n  <li>本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク</li>\n  <li>「いやー僕はいいんだけど、こいつは誘えないな」というときの理由</li>\n  <li>大企業が変わらないと、日本は変わらない</li>\n  <li>エンタープライズから日本を変えていけると楽しいのではないか</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "17. 本当にやれることを全部やってますか？ w/ takoratta",
      "itunes:episodeType": "full",
      "podcast:episode": 18
    },
    {
      "title": "16. [番外編] NTTComでメンバーシップ雇用を抜けてスペシャリスト雇用に転向した話とか w/ yuyarin、shinji_abe",
      "link": "https://fukabori.fm/episode/16",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"http://yuyarin.hatenablog.com/entry/2019/04/30/223004\">NTTComを退職してNTTComに入社します</a></li>\n  <li><a href=\"https://www.security-design.jp/entry/2019/05/07/082119\">NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。</a></li>\n  <li>メンバーシップ雇用とは何か？</li>\n  <li>スペシャリスト雇用とは何か？</li>\n  <li>変則ミッショングレードという制度</li>\n  <li><a href=\"https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf\">Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～</a></li>\n  <li>メンバーシップ雇用は何が良くて、何が悪いのか？</li>\n  <li>特定のスキルを持った人の報酬が定義できない</li>\n  <li>市場価値と比べて低い給料になり、入社が減少し、退職が増加する</li>\n  <li>やりたいことが曖昧な場合には効果的</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k\">Planned Happenstance Theory</a></li>\n  <li>スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる</li>\n  <li>スペシャリストである、となぜ公言しにくいのか？</li>\n  <li>役職定年、中途採用、転職に対するカウンターオファー（引き止め）</li>\n  <li>社内のエンジニアのモチベーションを上げたい</li>\n  <li>メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に</li>\n  <li>中途採用が上手くいく秘訣は何か？</li>\n  <li>自分たちの仕事が魅力的であることを発信する</li>\n  <li>採用制度を独自に作り上げる</li>\n  <li>技術試験を採用プロセスに含める</li>\n  <li>パケットキャプチャをあえて改ざんして、応募者に解析してもらう</li>\n  <li>本質的な理解をしているか、確かめる</li>\n  <li>バイナリで読めるのはBGPだけ</li>\n  <li>スペシャリストになって、何が具体的に変わったのか？</li>\n  <li>福利厚生は変化、お給料もある程度上がった</li>\n  <li>評価の仕組みが大きく変わった</li>\n  <li>評価の指標は、エンジニアリングマネージャーとすり合わせて決める</li>\n  <li>1年前の目標って古すぎないか？</li>\n  <li>給料爆上げ</li>\n  <li>隗より始めよ</li>\n  <li>働いてる環境ってどんな感じ？</li>\n  <li>Security Operation Centerでの個人環境</li>\n  <li>メモリは16GB</li>\n  <li>G Suite、Confluence、Jira、Slack</li>\n  <li>社内システムはクローズドなので、使いにくい</li>\n  <li><a href=\"https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32\">アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base</a></li>\n  <li>会社の悪いところは？</li>\n  <li>プロフェッショナルな人材が、マネージャー層より上に少ない</li>\n  <li>Executiveの中途も進むと良い</li>\n  <li>雇用制度の違いによる利害の不一致</li>\n  <li><a href=\"https://fukabori.fm/episode/15\">(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない</a></li>\n  <li><code class=\"language-plaintext highlighter-rouge\">従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まる</code>という課題にどう対処するか？</li>\n  <li>業務として、チームとして成果を出して経営へアピールすること</li>\n  <li>個人として転職活動を常日頃しておく</li>\n  <li>業界を盛り上げること</li>\n  <li>ラグビー部のおしかけってあった？</li>\n  <li>大手町の綱引き大会で優勝</li>\n  <li>ラグビー部社員はスペシャリスト</li>\n  <li>なんで、まだ会社に残っているの？</li>\n  <li>ジャパニーズ トラディッショナル ビッグ カンパニー</li>\n  <li>会社に対する愛はある</li>\n  <li>（難しい環境であっても）いかに変えていくのか、に面白みを感じる</li>\n  <li>契約と、それに基づいた評価の規定</li>\n  <li>対外発表を契約項目に含める</li>\n  <li>一定額の給与で裁量をもたせて、やらせてほしい</li>\n  <li>古くからある企業で、変わり始めてる事例を紹介するエピソード</li>\n  <li>（出演者全員）中途採用してます！</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/16"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhb0ecg3z07jpvav08.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 29 May 2019 12:55:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhb0ecg3z07jpvav08.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3993/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:47:07",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"http://yuyarin.hatenablog.com/entry/2019/04/30/223004\">NTTComを退職してNTTComに入社します</a></li>\n  <li><a href=\"https://www.security-design.jp/entry/2019/05/07/082119\">NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。</a></li>\n  <li>メンバーシップ雇用とは何か？</li>\n  <li>スペシャリスト雇用とは何か？</li>\n  <li>変則ミッショングレードという制度</li>\n  <li><a href=\"https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf\">Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～</a></li>\n  <li>メンバーシップ雇用は何が良くて、何が悪いのか？</li>\n  <li>特定のスキルを持った人の報酬が定義できない</li>\n  <li>市場価値と比べて低い給料になり、入社が減少し、退職が増加する</li>\n  <li>やりたいことが曖昧な場合には効果的</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k\">Planned Happenstance Theory</a></li>\n  <li>スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる</li>\n  <li>スペシャリストである、となぜ公言しにくいのか？</li>\n  <li>役職定年、中途採用、転職に対するカウンターオファー（引き止め）</li>\n  <li>社内のエンジニアのモチベーションを上げたい</li>\n  <li>メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に</li>\n  <li>中途採用が上手くいく秘訣は何か？</li>\n  <li>自分たちの仕事が魅力的であることを発信する</li>\n  <li>採用制度を独自に作り上げる</li>\n  <li>技術試験を採用プロセスに含める</li>\n  <li>パケットキャプチャをあえて改ざんして、応募者に解析してもらう</li>\n  <li>本質的な理解をしているか、確かめる</li>\n  <li>バイナリで読めるのはBGPだけ</li>\n  <li>スペシャリストになって、何が具体的に変わったのか？</li>\n  <li>福利厚生は変化、お給料もある程度上がった</li>\n  <li>評価の仕組みが大きく変わった</li>\n  <li>評価の指標は、エンジニアリングマネージャーとすり合わせて決める</li>\n  <li>1年前の目標って古すぎないか？</li>\n  <li>給料爆上げ</li>\n  <li>隗より始めよ</li>\n  <li>働いてる環境ってどんな感じ？</li>\n  <li>Security Operation Centerでの個人環境</li>\n  <li>メモリは16GB</li>\n  <li>G Suite、Confluence、Jira、Slack</li>\n  <li>社内システムはクローズドなので、使いにくい</li>\n  <li><a href=\"https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32\">アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base</a></li>\n  <li>会社の悪いところは？</li>\n  <li>プロフェッショナルな人材が、マネージャー層より上に少ない</li>\n  <li>Executiveの中途も進むと良い</li>\n  <li>雇用制度の違いによる利害の不一致</li>\n  <li><a href=\"https://fukabori.fm/episode/15\">(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない</a></li>\n  <li><code class=\"language-plaintext highlighter-rouge\">従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まる</code>という課題にどう対処するか？</li>\n  <li>業務として、チームとして成果を出して経営へアピールすること</li>\n  <li>個人として転職活動を常日頃しておく</li>\n  <li>業界を盛り上げること</li>\n  <li>ラグビー部のおしかけってあった？</li>\n  <li>大手町の綱引き大会で優勝</li>\n  <li>ラグビー部社員はスペシャリスト</li>\n  <li>なんで、まだ会社に残っているの？</li>\n  <li>ジャパニーズ トラディッショナル ビッグ カンパニー</li>\n  <li>会社に対する愛はある</li>\n  <li>（難しい環境であっても）いかに変えていくのか、に面白みを感じる</li>\n  <li>契約と、それに基づいた評価の規定</li>\n  <li>対外発表を契約項目に含める</li>\n  <li>一定額の給与で裁量をもたせて、やらせてほしい</li>\n  <li>古くからある企業で、変わり始めてる事例を紹介するエピソード</li>\n  <li>（出演者全員）中途採用してます！</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"http://yuyarin.hatenablog.com/entry/2019/04/30/223004\">NTTComを退職してNTTComに入社します</a></li>\n  <li><a href=\"https://www.security-design.jp/entry/2019/05/07/082119\">NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。</a></li>\n  <li>メンバーシップ雇用とは何か？</li>\n  <li>スペシャリスト雇用とは何か？</li>\n  <li>変則ミッショングレードという制度</li>\n  <li><a href=\"https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf\">Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～</a></li>\n  <li>メンバーシップ雇用は何が良くて、何が悪いのか？</li>\n  <li>特定のスキルを持った人の報酬が定義できない</li>\n  <li>市場価値と比べて低い給料になり、入社が減少し、退職が増加する</li>\n  <li>やりたいことが曖昧な場合には効果的</li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k\">Planned Happenstance Theory</a></li>\n  <li>スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる</li>\n  <li>スペシャリストである、となぜ公言しにくいのか？</li>\n  <li>役職定年、中途採用、転職に対するカウンターオファー（引き止め）</li>\n  <li>社内のエンジニアのモチベーションを上げたい</li>\n  <li>メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に</li>\n  <li>中途採用が上手くいく秘訣は何か？</li>\n  <li>自分たちの仕事が魅力的であることを発信する</li>\n  <li>採用制度を独自に作り上げる</li>\n  <li>技術試験を採用プロセスに含める</li>\n  <li>パケットキャプチャをあえて改ざんして、応募者に解析してもらう</li>\n  <li>本質的な理解をしているか、確かめる</li>\n  <li>バイナリで読めるのはBGPだけ</li>\n  <li>スペシャリストになって、何が具体的に変わったのか？</li>\n  <li>福利厚生は変化、お給料もある程度上がった</li>\n  <li>評価の仕組みが大きく変わった</li>\n  <li>評価の指標は、エンジニアリングマネージャーとすり合わせて決める</li>\n  <li>1年前の目標って古すぎないか？</li>\n  <li>給料爆上げ</li>\n  <li>隗より始めよ</li>\n  <li>働いてる環境ってどんな感じ？</li>\n  <li>Security Operation Centerでの個人環境</li>\n  <li>メモリは16GB</li>\n  <li>G Suite、Confluence、Jira、Slack</li>\n  <li>社内システムはクローズドなので、使いにくい</li>\n  <li><a href=\"https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32\">アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base</a></li>\n  <li>会社の悪いところは？</li>\n  <li>プロフェッショナルな人材が、マネージャー層より上に少ない</li>\n  <li>Executiveの中途も進むと良い</li>\n  <li>雇用制度の違いによる利害の不一致</li>\n  <li><a href=\"https://fukabori.fm/episode/15\">(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない</a></li>\n  <li><code class=\"language-plaintext highlighter-rouge\">従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まる</code>という課題にどう対処するか？</li>\n  <li>業務として、チームとして成果を出して経営へアピールすること</li>\n  <li>個人として転職活動を常日頃しておく</li>\n  <li>業界を盛り上げること</li>\n  <li>ラグビー部のおしかけってあった？</li>\n  <li>大手町の綱引き大会で優勝</li>\n  <li>ラグビー部社員はスペシャリスト</li>\n  <li>なんで、まだ会社に残っているの？</li>\n  <li>ジャパニーズ トラディッショナル ビッグ カンパニー</li>\n  <li>会社に対する愛はある</li>\n  <li>（難しい環境であっても）いかに変えていくのか、に面白みを感じる</li>\n  <li>契約と、それに基づいた評価の規定</li>\n  <li>対外発表を契約項目に含める</li>\n  <li>一定額の給与で裁量をもたせて、やらせてほしい</li>\n  <li>古くからある企業で、変わり始めてる事例を紹介するエピソード</li>\n  <li>（出演者全員）中途採用してます！</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "16. [番外編] NTTComでメンバーシップ雇用を抜けてスペシャリスト雇用に転向した話とか w/ yuyarin、shinji_abe",
      "itunes:episodeType": "full",
      "podcast:episode": 17
    },
    {
      "title": "15. 良い組織とは何か？どのように良い組織を作っていくのか？",
      "link": "https://fukabori.fm/episode/15",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian\">スタートアップ組織開発勉強会_scoutyの組織開発理論と実践</a></li>\n  <li>良い組織とは何か？</li>\n  <li>組織と複雑系とは？</li>\n  <li>複雑な仕組みと複雑系の違い</li>\n  <li>組織は複雑系である</li>\n  <li>採用だけ頑張っても、働く仕組みがイケてないと人は去っていく</li>\n  <li>HRに関わるあらゆる領域に対して総合的に取り組む</li>\n  <li>数字でしか語れない人は害悪である</li>\n  <li>VUCAに代表される時代</li>\n  <li>社会が画一的で、成長している時代ではない</li>\n  <li>ジョブ理論とは何か？</li>\n  <li>イノベーションのジレンマ</li>\n  <li>機能的側面・感情的側面・社会的側面</li>\n  <li>OKRとは何か？なぜ必要になってきたのか？</li>\n  <li>OKRは、当人がパフォーマンスを引き出すためのツール</li>\n  <li>KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない</li>\n  <li>MBOに対する誤解</li>\n  <li><a href=\"http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall\">ウォータフォール開発の論文</a>に対する誤解</li>\n  <li>言い訳のための仕事を増やしてはいけない</li>\n  <li>MVP、デザイン思考、リーン、OODAの共通点は何か？</li>\n  <li>不確実なことは必ず起きるという前提に立つ</li>\n  <li>OODAとは何か？</li>\n  <li>良い問いと学習が重要</li>\n  <li>そもそも、「良い問い」とは何か？</li>\n  <li>SEDA理論とは何か？</li>\n  <li>当たり前だったものを当たり前じゃなくするのがArt</li>\n  <li>SECIモデル</li>\n  <li>パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)</li>\n  <li>個人のモチベーションとは何か？</li>\n  <li>自己決定理論</li>\n  <li>外発的動機付けの分類とは何か？</li>\n  <li>統合的調整、同一化的調整、取り入れ的調整</li>\n  <li>モチベーションを上げるためには、どうすればいいか？</li>\n  <li>モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事</li>\n  <li>メンバーシップ採用とジョブディスクリプション採用</li>\n  <li>モチベーションを阻害するものは何か？</li>\n  <li>責任の不備とは、具体的には何か？</li>\n  <li>本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事</li>\n  <li>スキルというものは変動性が高い、アウトプットである</li>\n  <li>スキルの阻害要因とは何か？</li>\n  <li>高度なスキルほど、サポートがないとパフォーマンスが出ない</li>\n  <li>簡単な仕事は、関係性の影響が少ない</li>\n  <li>複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい</li>\n  <li>組織が掛け算である、というのが幻想である</li>\n  <li>その人の良さを下げないようにするのが、組織として大事</li>\n  <li>組織としての完成形</li>\n  <li>Total Rewardsとは何か？</li>\n  <li>自分の人生と、会社の方向が重なっているのも大事</li>\n  <li>No Ratingとは何か？</li>\n  <li>人は人を正しく評価できないのは前提</li>\n  <li>お互いの納得感を重視した評価</li>\n  <li>期末に活躍した人が高く評価される、目の前の状況に引きづられやすい</li>\n  <li>心理的安全性を根付かせるためにはどうすればいいか？</li>\n  <li>心理的安全性はやさしさではない</li>\n  <li>ティール組織とは何か？</li>\n  <li>ティール組織の3要件とは</li>\n  <li>ホラクラシーとは何か？</li>\n  <li>Role自体に権限と責任、目的を明示する</li>\n  <li>自律的に組織が変えて、世の中の変化に適合する</li>\n  <li>寄生獣の後藤</li>\n  <li>ディスコースとは何か？</li>\n  <li>社会構成主義</li>\n  <li>組織の壁をどうやって埋めていくか？</li>\n  <li>ダイアログとは何か？</li>\n  <li>お互いの一致していないものを探す場</li>\n  <li>GoogleのTGIF</li>\n  <li>日本の未来をちょっとだけ明るくしたい</li>\n  <li><a href=\"https://scout.lapras.com/\">LAPRAS</a></li>\n</ul>\n\n<p>(一部のPodcastクライアント用に再掲)\n320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/15"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhvara8hg33tmx2mhv.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Thu, 16 May 2019 12:30:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhvara8hg33tmx2mhv.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3992/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:59:37",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian\">スタートアップ組織開発勉強会_scoutyの組織開発理論と実践</a></li>\n  <li>良い組織とは何か？</li>\n  <li>組織と複雑系とは？</li>\n  <li>複雑な仕組みと複雑系の違い</li>\n  <li>組織は複雑系である</li>\n  <li>採用だけ頑張っても、働く仕組みがイケてないと人は去っていく</li>\n  <li>HRに関わるあらゆる領域に対して総合的に取り組む</li>\n  <li>数字でしか語れない人は害悪である</li>\n  <li>VUCAに代表される時代</li>\n  <li>社会が画一的で、成長している時代ではない</li>\n  <li>ジョブ理論とは何か？</li>\n  <li>イノベーションのジレンマ</li>\n  <li>機能的側面・感情的側面・社会的側面</li>\n  <li>OKRとは何か？なぜ必要になってきたのか？</li>\n  <li>OKRは、当人がパフォーマンスを引き出すためのツール</li>\n  <li>KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない</li>\n  <li>MBOに対する誤解</li>\n  <li><a href=\"http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall\">ウォータフォール開発の論文</a>に対する誤解</li>\n  <li>言い訳のための仕事を増やしてはいけない</li>\n  <li>MVP、デザイン思考、リーン、OODAの共通点は何か？</li>\n  <li>不確実なことは必ず起きるという前提に立つ</li>\n  <li>OODAとは何か？</li>\n  <li>良い問いと学習が重要</li>\n  <li>そもそも、「良い問い」とは何か？</li>\n  <li>SEDA理論とは何か？</li>\n  <li>当たり前だったものを当たり前じゃなくするのがArt</li>\n  <li>SECIモデル</li>\n  <li>パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)</li>\n  <li>個人のモチベーションとは何か？</li>\n  <li>自己決定理論</li>\n  <li>外発的動機付けの分類とは何か？</li>\n  <li>統合的調整、同一化的調整、取り入れ的調整</li>\n  <li>モチベーションを上げるためには、どうすればいいか？</li>\n  <li>モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事</li>\n  <li>メンバーシップ採用とジョブディスクリプション採用</li>\n  <li>モチベーションを阻害するものは何か？</li>\n  <li>責任の不備とは、具体的には何か？</li>\n  <li>本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事</li>\n  <li>スキルというものは変動性が高い、アウトプットである</li>\n  <li>スキルの阻害要因とは何か？</li>\n  <li>高度なスキルほど、サポートがないとパフォーマンスが出ない</li>\n  <li>簡単な仕事は、関係性の影響が少ない</li>\n  <li>複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい</li>\n  <li>組織が掛け算である、というのが幻想である</li>\n  <li>その人の良さを下げないようにするのが、組織として大事</li>\n  <li>組織としての完成形</li>\n  <li>Total Rewardsとは何か？</li>\n  <li>自分の人生と、会社の方向が重なっているのも大事</li>\n  <li>No Ratingとは何か？</li>\n  <li>人は人を正しく評価できないのは前提</li>\n  <li>お互いの納得感を重視した評価</li>\n  <li>期末に活躍した人が高く評価される、目の前の状況に引きづられやすい</li>\n  <li>心理的安全性を根付かせるためにはどうすればいいか？</li>\n  <li>心理的安全性はやさしさではない</li>\n  <li>ティール組織とは何か？</li>\n  <li>ティール組織の3要件とは</li>\n  <li>ホラクラシーとは何か？</li>\n  <li>Role自体に権限と責任、目的を明示する</li>\n  <li>自律的に組織が変えて、世の中の変化に適合する</li>\n  <li>寄生獣の後藤</li>\n  <li>ディスコースとは何か？</li>\n  <li>社会構成主義</li>\n  <li>組織の壁をどうやって埋めていくか？</li>\n  <li>ダイアログとは何か？</li>\n  <li>お互いの一致していないものを探す場</li>\n  <li>GoogleのTGIF</li>\n  <li>日本の未来をちょっとだけ明るくしたい</li>\n  <li><a href=\"https://scout.lapras.com/\">LAPRAS</a></li>\n</ul>\n\n<p>(一部のPodcastクライアント用に再掲)\n320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li><a href=\"https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian\">スタートアップ組織開発勉強会_scoutyの組織開発理論と実践</a></li>\n  <li>良い組織とは何か？</li>\n  <li>組織と複雑系とは？</li>\n  <li>複雑な仕組みと複雑系の違い</li>\n  <li>組織は複雑系である</li>\n  <li>採用だけ頑張っても、働く仕組みがイケてないと人は去っていく</li>\n  <li>HRに関わるあらゆる領域に対して総合的に取り組む</li>\n  <li>数字でしか語れない人は害悪である</li>\n  <li>VUCAに代表される時代</li>\n  <li>社会が画一的で、成長している時代ではない</li>\n  <li>ジョブ理論とは何か？</li>\n  <li>イノベーションのジレンマ</li>\n  <li>機能的側面・感情的側面・社会的側面</li>\n  <li>OKRとは何か？なぜ必要になってきたのか？</li>\n  <li>OKRは、当人がパフォーマンスを引き出すためのツール</li>\n  <li>KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない</li>\n  <li>MBOに対する誤解</li>\n  <li><a href=\"http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall\">ウォータフォール開発の論文</a>に対する誤解</li>\n  <li>言い訳のための仕事を増やしてはいけない</li>\n  <li>MVP、デザイン思考、リーン、OODAの共通点は何か？</li>\n  <li>不確実なことは必ず起きるという前提に立つ</li>\n  <li>OODAとは何か？</li>\n  <li>良い問いと学習が重要</li>\n  <li>そもそも、「良い問い」とは何か？</li>\n  <li>SEDA理論とは何か？</li>\n  <li>当たり前だったものを当たり前じゃなくするのがArt</li>\n  <li>SECIモデル</li>\n  <li>パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)</li>\n  <li>個人のモチベーションとは何か？</li>\n  <li>自己決定理論</li>\n  <li>外発的動機付けの分類とは何か？</li>\n  <li>統合的調整、同一化的調整、取り入れ的調整</li>\n  <li>モチベーションを上げるためには、どうすればいいか？</li>\n  <li>モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事</li>\n  <li>メンバーシップ採用とジョブディスクリプション採用</li>\n  <li>モチベーションを阻害するものは何か？</li>\n  <li>責任の不備とは、具体的には何か？</li>\n  <li>本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事</li>\n  <li>スキルというものは変動性が高い、アウトプットである</li>\n  <li>スキルの阻害要因とは何か？</li>\n  <li>高度なスキルほど、サポートがないとパフォーマンスが出ない</li>\n  <li>簡単な仕事は、関係性の影響が少ない</li>\n  <li>複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい</li>\n  <li>組織が掛け算である、というのが幻想である</li>\n  <li>その人の良さを下げないようにするのが、組織として大事</li>\n  <li>組織としての完成形</li>\n  <li>Total Rewardsとは何か？</li>\n  <li>自分の人生と、会社の方向が重なっているのも大事</li>\n  <li>No Ratingとは何か？</li>\n  <li>人は人を正しく評価できないのは前提</li>\n  <li>お互いの納得感を重視した評価</li>\n  <li>期末に活躍した人が高く評価される、目の前の状況に引きづられやすい</li>\n  <li>心理的安全性を根付かせるためにはどうすればいいか？</li>\n  <li>心理的安全性はやさしさではない</li>\n  <li>ティール組織とは何か？</li>\n  <li>ティール組織の3要件とは</li>\n  <li>ホラクラシーとは何か？</li>\n  <li>Role自体に権限と責任、目的を明示する</li>\n  <li>自律的に組織が変えて、世の中の変化に適合する</li>\n  <li>寄生獣の後藤</li>\n  <li>ディスコースとは何か？</li>\n  <li>社会構成主義</li>\n  <li>組織の壁をどうやって埋めていくか？</li>\n  <li>ダイアログとは何か？</li>\n  <li>お互いの一致していないものを探す場</li>\n  <li>GoogleのTGIF</li>\n  <li>日本の未来をちょっとだけ明るくしたい</li>\n  <li><a href=\"https://scout.lapras.com/\">LAPRAS</a></li>\n</ul>\n\n<p>(一部のPodcastクライアント用に再掲)\n320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "15. 良い組織とは何か？どのように良い組織を作っていくのか？",
      "itunes:episodeType": "full",
      "podcast:episode": 16
    },
    {
      "title": "14. なぜ、エンタープライズ業界でアジャイル・リーンは普及しないのか？",
      "link": "https://fukabori.fm/episode/14",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>なぜ、<a href=\"http://jbpress.ismedia.jp/articles/-/51448\">企画と開発が責任を押し付け合う会社の前途は暗い</a>のか？</li>\n  <li>計画が悪い vs 実装が悪い、というどっちが悪い論</li>\n  <li>問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる</li>\n  <li>市場、世界は悠長に回っていない</li>\n  <li>将棋でのメタファーとRTSでのメタファー</li>\n  <li>上手くいかないのは全体という前提をどこまで作れるか？</li>\n  <li>仕様が固まってから開発の後半で発生する変更を怖がる</li>\n  <li>あたかも世界の時間が止まっているように振る舞う</li>\n  <li>オーシャンズ11</li>\n  <li>その場の状況にあった計画を立て直していく、情報を得続ける</li>\n  <li>現代の戦争は火力戦・物量戦から変わってきている</li>\n  <li>企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない</li>\n  <li>ピラミッド構造は例外処理が役割の1つ</li>\n  <li>手順書はQ&amp;Aに答えてくれない</li>\n  <li>Q&amp;Aに答えられる人が現場にいない</li>\n  <li>リーンスタートアップやアジャイルなやり方が出てきた背景は？</li>\n  <li>ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟</li>\n  <li><a href=\"https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409\">Organizational Patterns of Agile Software Development </a></li>\n  <li><a href=\"http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf\">Quattro Pro</a></li>\n  <li>いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者</li>\n  <li>開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化</li>\n  <li>オブジェクト指向の成熟</li>\n  <li>顧客開発と製品開発にあった別のループを統合した</li>\n  <li>未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか</li>\n  <li>クラウドやRails</li>\n  <li>売れてもいないのに、最大アクセスの条件で試算する</li>\n  <li><a href=\"http://jbpress.ismedia.jp/articles/-/52025\">ビジネスに追いつけない日本のシステム開発の構造欠陥</a>とは？</li>\n  <li>プライムをとれないSIをやると辛いことがある</li>\n  <li>「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる</li>\n  <li>ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる</li>\n  <li>本来であれば仕様書は動くもの</li>\n  <li>SIの調達モデルとは</li>\n  <li>イノベーションは調達できるの？って話</li>\n  <li>ソフトウェアは材料として変わっている</li>\n  <li>鉄鋼は産業の米</li>\n  <li>鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった</li>\n  <li>ソフトウェアも同様に考え、各会社がシステム子会社を作った</li>\n  <li>その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている</li>\n  <li>ソフトウェアは材料ではなく、垂直のビジネス構造と設計している</li>\n  <li>とくに業務システムでは、ビジネスとソフトウェアは切り分けられない</li>\n  <li>ソフトウェアの事業の中核である</li>\n  <li>ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも</li>\n  <li>作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう</li>\n  <li>対立するのではなく、協調することによって得られる価値に向かう時代</li>\n  <li>なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？</li>\n  <li>考え方の普及と、ビジネス構造の変革速度に差がある</li>\n  <li>ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している</li>\n  <li>就職で入りたいランキングにおいて、SIerは上位</li>\n  <li>20代の時期を何に投資するか？</li>\n  <li><a href=\"http://jbpress.ismedia.jp/articles/-/52264\">企業内イノベーションの実現に向けた7つの提言</a></li>\n  <li>“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？</li>\n  <li>経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう</li>\n  <li>イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要</li>\n  <li>“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？</li>\n  <li>大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変</li>\n  <li>小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない</li>\n  <li>離れている時間が長い、成果が出ない場合は役員が意味を伝える</li>\n  <li>“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？</li>\n  <li>年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない</li>\n  <li>できないもんはできない</li>\n  <li>どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える</li>\n  <li>上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断</li>\n  <li>仕事をした気になって疲れる</li>\n  <li>お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか</li>\n  <li>“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？</li>\n  <li>本を読んでもアジャイルにできない</li>\n  <li>本を読んでも自転車に乗れない、暗黙知伝達の最たるところ</li>\n  <li>アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす</li>\n  <li>“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？</li>\n  <li>効率良くやるためには、形式的知識伝達もやる</li>\n  <li>全体的な体系をわかった上で実践に入る</li>\n  <li>“技術力のあるエンジニアを招集すること”</li>\n  <li>結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ</li>\n  <li>技術力のない人がものづくりをするのはおかしい</li>\n  <li>パワポという黒魔術にひっかからない</li>\n  <li>エンジニアの召集という言葉の意味</li>\n  <li>“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”</li>\n  <li>熱を受け取る場面</li>\n  <li>この人と出会った、この人の話を聞いて人生が変わったという転機</li>\n  <li>会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき</li>\n  <li>（イベント参加の）報告書は別にいらない、その人の中に溜まる</li>\n  <li><a href=\"https://slide.meguro.ryuzee.com/slides/50\">ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼</a></li>\n  <li>会社は度量を持つ</li>\n  <li>会社からの退職者数の傾きを見る</li>\n  <li>古くからいるマネージャーの役割はどうなっていくのか？</li>\n  <li>得意なことで、変化の中心になっている人を支援する</li>\n  <li>上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか</li>\n  <li>取締役からのメッセージも重要</li>\n  <li>バリューを出せる人は、どうやってもバリューを出せる</li>\n  <li><a href=\"https://www.asf.esm.co.jp/\">アジャイルスタジオ福井</a>で見学募集中</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/14"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh4qss24a2e2scw5s3.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 06 Mar 2019 12:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh4qss24a2e2scw5s3.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3991/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:42:17",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>なぜ、<a href=\"http://jbpress.ismedia.jp/articles/-/51448\">企画と開発が責任を押し付け合う会社の前途は暗い</a>のか？</li>\n  <li>計画が悪い vs 実装が悪い、というどっちが悪い論</li>\n  <li>問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる</li>\n  <li>市場、世界は悠長に回っていない</li>\n  <li>将棋でのメタファーとRTSでのメタファー</li>\n  <li>上手くいかないのは全体という前提をどこまで作れるか？</li>\n  <li>仕様が固まってから開発の後半で発生する変更を怖がる</li>\n  <li>あたかも世界の時間が止まっているように振る舞う</li>\n  <li>オーシャンズ11</li>\n  <li>その場の状況にあった計画を立て直していく、情報を得続ける</li>\n  <li>現代の戦争は火力戦・物量戦から変わってきている</li>\n  <li>企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない</li>\n  <li>ピラミッド構造は例外処理が役割の1つ</li>\n  <li>手順書はQ&amp;Aに答えてくれない</li>\n  <li>Q&amp;Aに答えられる人が現場にいない</li>\n  <li>リーンスタートアップやアジャイルなやり方が出てきた背景は？</li>\n  <li>ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟</li>\n  <li><a href=\"https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409\">Organizational Patterns of Agile Software Development </a></li>\n  <li><a href=\"http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf\">Quattro Pro</a></li>\n  <li>いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者</li>\n  <li>開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化</li>\n  <li>オブジェクト指向の成熟</li>\n  <li>顧客開発と製品開発にあった別のループを統合した</li>\n  <li>未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか</li>\n  <li>クラウドやRails</li>\n  <li>売れてもいないのに、最大アクセスの条件で試算する</li>\n  <li><a href=\"http://jbpress.ismedia.jp/articles/-/52025\">ビジネスに追いつけない日本のシステム開発の構造欠陥</a>とは？</li>\n  <li>プライムをとれないSIをやると辛いことがある</li>\n  <li>「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる</li>\n  <li>ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる</li>\n  <li>本来であれば仕様書は動くもの</li>\n  <li>SIの調達モデルとは</li>\n  <li>イノベーションは調達できるの？って話</li>\n  <li>ソフトウェアは材料として変わっている</li>\n  <li>鉄鋼は産業の米</li>\n  <li>鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった</li>\n  <li>ソフトウェアも同様に考え、各会社がシステム子会社を作った</li>\n  <li>その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている</li>\n  <li>ソフトウェアは材料ではなく、垂直のビジネス構造と設計している</li>\n  <li>とくに業務システムでは、ビジネスとソフトウェアは切り分けられない</li>\n  <li>ソフトウェアの事業の中核である</li>\n  <li>ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも</li>\n  <li>作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう</li>\n  <li>対立するのではなく、協調することによって得られる価値に向かう時代</li>\n  <li>なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？</li>\n  <li>考え方の普及と、ビジネス構造の変革速度に差がある</li>\n  <li>ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している</li>\n  <li>就職で入りたいランキングにおいて、SIerは上位</li>\n  <li>20代の時期を何に投資するか？</li>\n  <li><a href=\"http://jbpress.ismedia.jp/articles/-/52264\">企業内イノベーションの実現に向けた7つの提言</a></li>\n  <li>“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？</li>\n  <li>経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう</li>\n  <li>イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要</li>\n  <li>“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？</li>\n  <li>大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変</li>\n  <li>小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない</li>\n  <li>離れている時間が長い、成果が出ない場合は役員が意味を伝える</li>\n  <li>“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？</li>\n  <li>年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない</li>\n  <li>できないもんはできない</li>\n  <li>どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える</li>\n  <li>上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断</li>\n  <li>仕事をした気になって疲れる</li>\n  <li>お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか</li>\n  <li>“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？</li>\n  <li>本を読んでもアジャイルにできない</li>\n  <li>本を読んでも自転車に乗れない、暗黙知伝達の最たるところ</li>\n  <li>アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす</li>\n  <li>“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？</li>\n  <li>効率良くやるためには、形式的知識伝達もやる</li>\n  <li>全体的な体系をわかった上で実践に入る</li>\n  <li>“技術力のあるエンジニアを招集すること”</li>\n  <li>結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ</li>\n  <li>技術力のない人がものづくりをするのはおかしい</li>\n  <li>パワポという黒魔術にひっかからない</li>\n  <li>エンジニアの召集という言葉の意味</li>\n  <li>“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”</li>\n  <li>熱を受け取る場面</li>\n  <li>この人と出会った、この人の話を聞いて人生が変わったという転機</li>\n  <li>会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき</li>\n  <li>（イベント参加の）報告書は別にいらない、その人の中に溜まる</li>\n  <li><a href=\"https://slide.meguro.ryuzee.com/slides/50\">ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼</a></li>\n  <li>会社は度量を持つ</li>\n  <li>会社からの退職者数の傾きを見る</li>\n  <li>古くからいるマネージャーの役割はどうなっていくのか？</li>\n  <li>得意なことで、変化の中心になっている人を支援する</li>\n  <li>上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか</li>\n  <li>取締役からのメッセージも重要</li>\n  <li>バリューを出せる人は、どうやってもバリューを出せる</li>\n  <li><a href=\"https://www.asf.esm.co.jp/\">アジャイルスタジオ福井</a>で見学募集中</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>なぜ、<a href=\"http://jbpress.ismedia.jp/articles/-/51448\">企画と開発が責任を押し付け合う会社の前途は暗い</a>のか？</li>\n  <li>計画が悪い vs 実装が悪い、というどっちが悪い論</li>\n  <li>問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる</li>\n  <li>市場、世界は悠長に回っていない</li>\n  <li>将棋でのメタファーとRTSでのメタファー</li>\n  <li>上手くいかないのは全体という前提をどこまで作れるか？</li>\n  <li>仕様が固まってから開発の後半で発生する変更を怖がる</li>\n  <li>あたかも世界の時間が止まっているように振る舞う</li>\n  <li>オーシャンズ11</li>\n  <li>その場の状況にあった計画を立て直していく、情報を得続ける</li>\n  <li>現代の戦争は火力戦・物量戦から変わってきている</li>\n  <li>企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない</li>\n  <li>ピラミッド構造は例外処理が役割の1つ</li>\n  <li>手順書はQ&amp;Aに答えてくれない</li>\n  <li>Q&amp;Aに答えられる人が現場にいない</li>\n  <li>リーンスタートアップやアジャイルなやり方が出てきた背景は？</li>\n  <li>ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟</li>\n  <li><a href=\"https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409\">Organizational Patterns of Agile Software Development </a></li>\n  <li><a href=\"http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf\">Quattro Pro</a></li>\n  <li>いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者</li>\n  <li>開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化</li>\n  <li>オブジェクト指向の成熟</li>\n  <li>顧客開発と製品開発にあった別のループを統合した</li>\n  <li>未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか</li>\n  <li>クラウドやRails</li>\n  <li>売れてもいないのに、最大アクセスの条件で試算する</li>\n  <li><a href=\"http://jbpress.ismedia.jp/articles/-/52025\">ビジネスに追いつけない日本のシステム開発の構造欠陥</a>とは？</li>\n  <li>プライムをとれないSIをやると辛いことがある</li>\n  <li>「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる</li>\n  <li>ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる</li>\n  <li>本来であれば仕様書は動くもの</li>\n  <li>SIの調達モデルとは</li>\n  <li>イノベーションは調達できるの？って話</li>\n  <li>ソフトウェアは材料として変わっている</li>\n  <li>鉄鋼は産業の米</li>\n  <li>鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった</li>\n  <li>ソフトウェアも同様に考え、各会社がシステム子会社を作った</li>\n  <li>その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている</li>\n  <li>ソフトウェアは材料ではなく、垂直のビジネス構造と設計している</li>\n  <li>とくに業務システムでは、ビジネスとソフトウェアは切り分けられない</li>\n  <li>ソフトウェアの事業の中核である</li>\n  <li>ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも</li>\n  <li>作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう</li>\n  <li>対立するのではなく、協調することによって得られる価値に向かう時代</li>\n  <li>なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？</li>\n  <li>考え方の普及と、ビジネス構造の変革速度に差がある</li>\n  <li>ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している</li>\n  <li>就職で入りたいランキングにおいて、SIerは上位</li>\n  <li>20代の時期を何に投資するか？</li>\n  <li><a href=\"http://jbpress.ismedia.jp/articles/-/52264\">企業内イノベーションの実現に向けた7つの提言</a></li>\n  <li>“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？</li>\n  <li>経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう</li>\n  <li>イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要</li>\n  <li>“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？</li>\n  <li>大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変</li>\n  <li>小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない</li>\n  <li>離れている時間が長い、成果が出ない場合は役員が意味を伝える</li>\n  <li>“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？</li>\n  <li>年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない</li>\n  <li>できないもんはできない</li>\n  <li>どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える</li>\n  <li>上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断</li>\n  <li>仕事をした気になって疲れる</li>\n  <li>お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか</li>\n  <li>“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？</li>\n  <li>本を読んでもアジャイルにできない</li>\n  <li>本を読んでも自転車に乗れない、暗黙知伝達の最たるところ</li>\n  <li>アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす</li>\n  <li>“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？</li>\n  <li>効率良くやるためには、形式的知識伝達もやる</li>\n  <li>全体的な体系をわかった上で実践に入る</li>\n  <li>“技術力のあるエンジニアを招集すること”</li>\n  <li>結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ</li>\n  <li>技術力のない人がものづくりをするのはおかしい</li>\n  <li>パワポという黒魔術にひっかからない</li>\n  <li>エンジニアの召集という言葉の意味</li>\n  <li>“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”</li>\n  <li>熱を受け取る場面</li>\n  <li>この人と出会った、この人の話を聞いて人生が変わったという転機</li>\n  <li>会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき</li>\n  <li>（イベント参加の）報告書は別にいらない、その人の中に溜まる</li>\n  <li><a href=\"https://slide.meguro.ryuzee.com/slides/50\">ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼</a></li>\n  <li>会社は度量を持つ</li>\n  <li>会社からの退職者数の傾きを見る</li>\n  <li>古くからいるマネージャーの役割はどうなっていくのか？</li>\n  <li>得意なことで、変化の中心になっている人を支援する</li>\n  <li>上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか</li>\n  <li>取締役からのメッセージも重要</li>\n  <li>バリューを出せる人は、どうやってもバリューを出せる</li>\n  <li><a href=\"https://www.asf.esm.co.jp/\">アジャイルスタジオ福井</a>で見学募集中</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "14. なぜ、エンタープライズ業界でアジャイル・リーンは普及しないのか？",
      "itunes:episodeType": "full",
      "podcast:episode": 15
    },
    {
      "title": "13. ペアプロやテストの疑問とか、ソフトウェアエンジニアの育成とか",
      "link": "https://fukabori.fm/episode/13",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて</li>\n  <li>ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）</li>\n  <li>ベテランとベテランは、一番効果を発揮するペアである</li>\n  <li>意思決定をライブでできる重要性</li>\n  <li>設計上の妥協点をその場で合意できる</li>\n  <li>ビギナーとベテランで、ビギナーはナビゲーターをするのか？</li>\n  <li>コードを書いてるところを見てもらうのは大事なプラクティス</li>\n  <li>ベテランもプレッシャーを持ってコードを書ける</li>\n  <li>見られているだけでコードの質は高まる</li>\n  <li>リアルタイムでないコードレビューがあるだけで、コードの質は高まる</li>\n  <li>コードレビューのインフラに投資する</li>\n  <li>流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？</li>\n  <li>一番の学びは教えることから発生する</li>\n  <li>相手から、相手自身の学びを引き出す</li>\n  <li>チームの暗黙知を、暗黙知のまま伝える、強化していく</li>\n  <li>テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？</li>\n  <li>ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う</li>\n  <li>プライベート関数はテストするのか？</li>\n  <li>技術的には、プライベート関数のテストはパブリック関数からテストできる</li>\n  <li>プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち</li>\n  <li>フロントエンドのテストはどこまで書けばいいのか？</li>\n  <li>書くけど、書きすぎない</li>\n  <li>画面の構造が変わっても、影響にされにくいものをテストする</li>\n  <li>ビジュアルリグレッションテスト</li>\n  <li>魑魅魍魎のUIの世界</li>\n  <li>テストのカバレッジ、どの程度まで書けばいいのか？</li>\n  <li>ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい</li>\n  <li>カバレッジは何らかの管理の道具にすると、うまく回らない</li>\n  <li>不具合は思い違いから発生する</li>\n  <li>カバレッジ100%は誤った安心感を与えがち</li>\n  <li>カバレッジツールは自分達の見落とし・過信を見つけるために使う</li>\n  <li>カバレッジを絶対値ではなく傾きでみる</li>\n  <li>CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る</li>\n  <li>バグ収束曲線は、現代の開発ではFitしないことのが多い</li>\n  <li>品質指標の形骸化</li>\n  <li>外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？</li>\n  <li>内製にシフトするなら、技術者のhiringも必須</li>\n  <li>小さく始めて、大きく育てて勝つパターンを積み上げる</li>\n  <li>段階的に内製開発にシフトしていく</li>\n  <li>社内の特区、信頼貯金を使って展開していく</li>\n  <li>内製を全然していない会社が、内製にシフトするためには4-5年かかる</li>\n  <li>新人を育てるためにはどうしたらいいか？</li>\n  <li>配属ガチャ</li>\n  <li>技術力の高いエンジニア新人を孤立させない</li>\n  <li>事業部内に閉じた情報流通</li>\n  <li>全社Slackがないのはよくあるサイロ化</li>\n  <li>技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る</li>\n  <li>内製を始めるモードになったエンプラ企業はイメージ付けが必要</li>\n  <li>技術者が社名を背負ってアウトプット</li>\n  <li>大企業Hack</li>\n  <li>意思決定層にこれからのソフトウェア開発に認識を改めてもらう</li>\n  <li>組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？</li>\n  <li>再現可能にするのが大事</li>\n  <li>前提が違う、変動する中でソフトウェア企業としての強さを保つ</li>\n  <li>公開し検索可能にすることが大事</li>\n  <li>URL重要</li>\n  <li>心理的安全性の重要性</li>\n  <li>価値観から行動原則、品質基準を考えていく</li>\n  <li>経験していない場面にチェックリストは効かない</li>\n  <li>誤っていたこと、失敗は良いチャレンジとして評価されるように</li>\n  <li>社内でアンチパターンを共有できる組織は強い</li>\n  <li>社内FailCon</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/13"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhaam36r2w7tmjcj6n.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 27 Feb 2019 14:45:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nhaam36r2w7tmjcj6n.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3990/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:56:17",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて</li>\n  <li>ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）</li>\n  <li>ベテランとベテランは、一番効果を発揮するペアである</li>\n  <li>意思決定をライブでできる重要性</li>\n  <li>設計上の妥協点をその場で合意できる</li>\n  <li>ビギナーとベテランで、ビギナーはナビゲーターをするのか？</li>\n  <li>コードを書いてるところを見てもらうのは大事なプラクティス</li>\n  <li>ベテランもプレッシャーを持ってコードを書ける</li>\n  <li>見られているだけでコードの質は高まる</li>\n  <li>リアルタイムでないコードレビューがあるだけで、コードの質は高まる</li>\n  <li>コードレビューのインフラに投資する</li>\n  <li>流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？</li>\n  <li>一番の学びは教えることから発生する</li>\n  <li>相手から、相手自身の学びを引き出す</li>\n  <li>チームの暗黙知を、暗黙知のまま伝える、強化していく</li>\n  <li>テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？</li>\n  <li>ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う</li>\n  <li>プライベート関数はテストするのか？</li>\n  <li>技術的には、プライベート関数のテストはパブリック関数からテストできる</li>\n  <li>プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち</li>\n  <li>フロントエンドのテストはどこまで書けばいいのか？</li>\n  <li>書くけど、書きすぎない</li>\n  <li>画面の構造が変わっても、影響にされにくいものをテストする</li>\n  <li>ビジュアルリグレッションテスト</li>\n  <li>魑魅魍魎のUIの世界</li>\n  <li>テストのカバレッジ、どの程度まで書けばいいのか？</li>\n  <li>ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい</li>\n  <li>カバレッジは何らかの管理の道具にすると、うまく回らない</li>\n  <li>不具合は思い違いから発生する</li>\n  <li>カバレッジ100%は誤った安心感を与えがち</li>\n  <li>カバレッジツールは自分達の見落とし・過信を見つけるために使う</li>\n  <li>カバレッジを絶対値ではなく傾きでみる</li>\n  <li>CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る</li>\n  <li>バグ収束曲線は、現代の開発ではFitしないことのが多い</li>\n  <li>品質指標の形骸化</li>\n  <li>外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？</li>\n  <li>内製にシフトするなら、技術者のhiringも必須</li>\n  <li>小さく始めて、大きく育てて勝つパターンを積み上げる</li>\n  <li>段階的に内製開発にシフトしていく</li>\n  <li>社内の特区、信頼貯金を使って展開していく</li>\n  <li>内製を全然していない会社が、内製にシフトするためには4-5年かかる</li>\n  <li>新人を育てるためにはどうしたらいいか？</li>\n  <li>配属ガチャ</li>\n  <li>技術力の高いエンジニア新人を孤立させない</li>\n  <li>事業部内に閉じた情報流通</li>\n  <li>全社Slackがないのはよくあるサイロ化</li>\n  <li>技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る</li>\n  <li>内製を始めるモードになったエンプラ企業はイメージ付けが必要</li>\n  <li>技術者が社名を背負ってアウトプット</li>\n  <li>大企業Hack</li>\n  <li>意思決定層にこれからのソフトウェア開発に認識を改めてもらう</li>\n  <li>組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？</li>\n  <li>再現可能にするのが大事</li>\n  <li>前提が違う、変動する中でソフトウェア企業としての強さを保つ</li>\n  <li>公開し検索可能にすることが大事</li>\n  <li>URL重要</li>\n  <li>心理的安全性の重要性</li>\n  <li>価値観から行動原則、品質基準を考えていく</li>\n  <li>経験していない場面にチェックリストは効かない</li>\n  <li>誤っていたこと、失敗は良いチャレンジとして評価されるように</li>\n  <li>社内でアンチパターンを共有できる組織は強い</li>\n  <li>社内FailCon</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて</li>\n  <li>ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）</li>\n  <li>ベテランとベテランは、一番効果を発揮するペアである</li>\n  <li>意思決定をライブでできる重要性</li>\n  <li>設計上の妥協点をその場で合意できる</li>\n  <li>ビギナーとベテランで、ビギナーはナビゲーターをするのか？</li>\n  <li>コードを書いてるところを見てもらうのは大事なプラクティス</li>\n  <li>ベテランもプレッシャーを持ってコードを書ける</li>\n  <li>見られているだけでコードの質は高まる</li>\n  <li>リアルタイムでないコードレビューがあるだけで、コードの質は高まる</li>\n  <li>コードレビューのインフラに投資する</li>\n  <li>流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？</li>\n  <li>一番の学びは教えることから発生する</li>\n  <li>相手から、相手自身の学びを引き出す</li>\n  <li>チームの暗黙知を、暗黙知のまま伝える、強化していく</li>\n  <li>テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？</li>\n  <li>ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う</li>\n  <li>プライベート関数はテストするのか？</li>\n  <li>技術的には、プライベート関数のテストはパブリック関数からテストできる</li>\n  <li>プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち</li>\n  <li>フロントエンドのテストはどこまで書けばいいのか？</li>\n  <li>書くけど、書きすぎない</li>\n  <li>画面の構造が変わっても、影響にされにくいものをテストする</li>\n  <li>ビジュアルリグレッションテスト</li>\n  <li>魑魅魍魎のUIの世界</li>\n  <li>テストのカバレッジ、どの程度まで書けばいいのか？</li>\n  <li>ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい</li>\n  <li>カバレッジは何らかの管理の道具にすると、うまく回らない</li>\n  <li>不具合は思い違いから発生する</li>\n  <li>カバレッジ100%は誤った安心感を与えがち</li>\n  <li>カバレッジツールは自分達の見落とし・過信を見つけるために使う</li>\n  <li>カバレッジを絶対値ではなく傾きでみる</li>\n  <li>CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る</li>\n  <li>バグ収束曲線は、現代の開発ではFitしないことのが多い</li>\n  <li>品質指標の形骸化</li>\n  <li>外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？</li>\n  <li>内製にシフトするなら、技術者のhiringも必須</li>\n  <li>小さく始めて、大きく育てて勝つパターンを積み上げる</li>\n  <li>段階的に内製開発にシフトしていく</li>\n  <li>社内の特区、信頼貯金を使って展開していく</li>\n  <li>内製を全然していない会社が、内製にシフトするためには4-5年かかる</li>\n  <li>新人を育てるためにはどうしたらいいか？</li>\n  <li>配属ガチャ</li>\n  <li>技術力の高いエンジニア新人を孤立させない</li>\n  <li>事業部内に閉じた情報流通</li>\n  <li>全社Slackがないのはよくあるサイロ化</li>\n  <li>技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る</li>\n  <li>内製を始めるモードになったエンプラ企業はイメージ付けが必要</li>\n  <li>技術者が社名を背負ってアウトプット</li>\n  <li>大企業Hack</li>\n  <li>意思決定層にこれからのソフトウェア開発に認識を改めてもらう</li>\n  <li>組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？</li>\n  <li>再現可能にするのが大事</li>\n  <li>前提が違う、変動する中でソフトウェア企業としての強さを保つ</li>\n  <li>公開し検索可能にすることが大事</li>\n  <li>URL重要</li>\n  <li>心理的安全性の重要性</li>\n  <li>価値観から行動原則、品質基準を考えていく</li>\n  <li>経験していない場面にチェックリストは効かない</li>\n  <li>誤っていたこと、失敗は良いチャレンジとして評価されるように</li>\n  <li>社内でアンチパターンを共有できる組織は強い</li>\n  <li>社内FailCon</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "13. ペアプロやテストの疑問とか、ソフトウェアエンジニアの育成とか",
      "itunes:episodeType": "full",
      "podcast:episode": 14
    },
    {
      "title": "12. エンプラ向けの組織改革とか、スクラムでのチーム作り・人事評価とか",
      "link": "https://fukabori.fm/episode/12",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？</li>\n  <li>現場だけで変えられる範囲には限界がある</li>\n  <li>組織改革を若手がやるのは厳しい</li>\n  <li>ボトムアップでやるには気の遠くなる話が多すぎる</li>\n  <li>ミドルマネージャーや意思決定の権限を持つ</li>\n  <li>改革の範囲を全社ではなく、自分の部だけにする</li>\n  <li>徐々に広げていくのは、ボトムアップでは鉄板</li>\n  <li>トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい</li>\n  <li>全社ルール・ガイドラインと、どう付き合っていけば良いのか？</li>\n  <li>複数のガイドライン/オプションを用意しておく</li>\n  <li>ガイドラインをかならず守らなきゃいけないのは思い込みなこともある</li>\n  <li>緩い、自由があるガイドラインだと進めやすい</li>\n  <li>権限委譲が非常に難しいのではないか？</li>\n  <li>権限のないプロダクトオーナー問題</li>\n  <li>プロジェクト開始の時点で、決められる範囲の線引き</li>\n  <li>大きな会社になればなるほど、スクラムマスターが重要</li>\n  <li>スクラムマスターの役割は半端じゃなく大変</li>\n  <li>大きな会社だとチームの外側に課題がある</li>\n  <li>スクラムマスターは大きな会社のプロパーがやるべき</li>\n  <li>プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる</li>\n  <li>プロダクトが目に見える成果を出してないケース</li>\n  <li>プロダクトを売らずに、組織改革ばっかりしてもしょうがない</li>\n  <li>綺麗事ばっかり言ってるのはダメ</li>\n  <li>失敗することは是である</li>\n  <li>傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である</li>\n  <li>弾をたくさん投げるのが良いこと</li>\n  <li>出島とは？</li>\n  <li>全員同席、外部から雑音をシャットアウトする</li>\n  <li>エンドポイントを一箇所に絞る</li>\n  <li>治外法権</li>\n  <li>人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？</li>\n  <li>お金を稼いでるけど、不人気な部門の問題</li>\n  <li>辞めるにしてもいい関係で辞めてもらう</li>\n  <li>給与テーブルが自由に設定できない問題</li>\n  <li>やりたいことができるように、また仕事しやすい環境を与える</li>\n  <li>周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？</li>\n  <li>バックオフィスは、プロジェクト開始時に巻き込んでおく</li>\n  <li>たとえば品質管理部門の人に入ってもらって、完成の定義を考える</li>\n  <li>AWSでShip判断</li>\n  <li>us-east1から他リージョンへのロールアウト</li>\n  <li>開発チームはどの程度、顧客の声を知る必要があるのか？</li>\n  <li>チームが無関心なのは一番辛い</li>\n  <li>サポートエンジニアを一緒にやるプラクティス</li>\n  <li>開発と運用のチームは結局どうしていけばいいのか？</li>\n  <li>基本的には1チームが良く、部門が別れているならバーチャルチームで1つに</li>\n  <li>少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する</li>\n  <li>必ずしも新規技術を使う必要はない</li>\n  <li>チームの力量・状況にあわせて、技術や言語を選んでいく</li>\n  <li>1week sprintの振り返りだと、長期的な課題がでにくい？</li>\n  <li>ベロシティを1.5倍、2倍にするためには何したらいいの？</li>\n  <li>KPTは断面を切る振り返りであり、時間軸があまりない</li>\n  <li>振り返りは適度に変えていく</li>\n  <li><a href=\"https://www.ryuzee.com/contents/blog/7138\">闇鍋</a>という振り返りプラクティス</li>\n  <li>ドット投票における問題</li>\n  <li>給与査定という観点での人事評価はどうやればいいか？</li>\n  <li>プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？</li>\n  <li>チーム一律評価 + 360度評価 を組み合わせるのが落とし所</li>\n  <li>新サービスを出したばっかりのPOはどう評価するか？</li>\n  <li>人事部とエンジニアの採用プロセスの関わり？</li>\n  <li><a href=\"https://www.attractor.co.jp/contact/\">アトラクタでお仕事募集中</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/12"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh5ca2cwnsqf3pxw70.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 30 Jan 2019 14:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh5ca2cwnsqf3pxw70.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3989/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:50:44",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？</li>\n  <li>現場だけで変えられる範囲には限界がある</li>\n  <li>組織改革を若手がやるのは厳しい</li>\n  <li>ボトムアップでやるには気の遠くなる話が多すぎる</li>\n  <li>ミドルマネージャーや意思決定の権限を持つ</li>\n  <li>改革の範囲を全社ではなく、自分の部だけにする</li>\n  <li>徐々に広げていくのは、ボトムアップでは鉄板</li>\n  <li>トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい</li>\n  <li>全社ルール・ガイドラインと、どう付き合っていけば良いのか？</li>\n  <li>複数のガイドライン/オプションを用意しておく</li>\n  <li>ガイドラインをかならず守らなきゃいけないのは思い込みなこともある</li>\n  <li>緩い、自由があるガイドラインだと進めやすい</li>\n  <li>権限委譲が非常に難しいのではないか？</li>\n  <li>権限のないプロダクトオーナー問題</li>\n  <li>プロジェクト開始の時点で、決められる範囲の線引き</li>\n  <li>大きな会社になればなるほど、スクラムマスターが重要</li>\n  <li>スクラムマスターの役割は半端じゃなく大変</li>\n  <li>大きな会社だとチームの外側に課題がある</li>\n  <li>スクラムマスターは大きな会社のプロパーがやるべき</li>\n  <li>プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる</li>\n  <li>プロダクトが目に見える成果を出してないケース</li>\n  <li>プロダクトを売らずに、組織改革ばっかりしてもしょうがない</li>\n  <li>綺麗事ばっかり言ってるのはダメ</li>\n  <li>失敗することは是である</li>\n  <li>傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である</li>\n  <li>弾をたくさん投げるのが良いこと</li>\n  <li>出島とは？</li>\n  <li>全員同席、外部から雑音をシャットアウトする</li>\n  <li>エンドポイントを一箇所に絞る</li>\n  <li>治外法権</li>\n  <li>人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？</li>\n  <li>お金を稼いでるけど、不人気な部門の問題</li>\n  <li>辞めるにしてもいい関係で辞めてもらう</li>\n  <li>給与テーブルが自由に設定できない問題</li>\n  <li>やりたいことができるように、また仕事しやすい環境を与える</li>\n  <li>周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？</li>\n  <li>バックオフィスは、プロジェクト開始時に巻き込んでおく</li>\n  <li>たとえば品質管理部門の人に入ってもらって、完成の定義を考える</li>\n  <li>AWSでShip判断</li>\n  <li>us-east1から他リージョンへのロールアウト</li>\n  <li>開発チームはどの程度、顧客の声を知る必要があるのか？</li>\n  <li>チームが無関心なのは一番辛い</li>\n  <li>サポートエンジニアを一緒にやるプラクティス</li>\n  <li>開発と運用のチームは結局どうしていけばいいのか？</li>\n  <li>基本的には1チームが良く、部門が別れているならバーチャルチームで1つに</li>\n  <li>少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する</li>\n  <li>必ずしも新規技術を使う必要はない</li>\n  <li>チームの力量・状況にあわせて、技術や言語を選んでいく</li>\n  <li>1week sprintの振り返りだと、長期的な課題がでにくい？</li>\n  <li>ベロシティを1.5倍、2倍にするためには何したらいいの？</li>\n  <li>KPTは断面を切る振り返りであり、時間軸があまりない</li>\n  <li>振り返りは適度に変えていく</li>\n  <li><a href=\"https://www.ryuzee.com/contents/blog/7138\">闇鍋</a>という振り返りプラクティス</li>\n  <li>ドット投票における問題</li>\n  <li>給与査定という観点での人事評価はどうやればいいか？</li>\n  <li>プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？</li>\n  <li>チーム一律評価 + 360度評価 を組み合わせるのが落とし所</li>\n  <li>新サービスを出したばっかりのPOはどう評価するか？</li>\n  <li>人事部とエンジニアの採用プロセスの関わり？</li>\n  <li><a href=\"https://www.attractor.co.jp/contact/\">アトラクタでお仕事募集中</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？</li>\n  <li>現場だけで変えられる範囲には限界がある</li>\n  <li>組織改革を若手がやるのは厳しい</li>\n  <li>ボトムアップでやるには気の遠くなる話が多すぎる</li>\n  <li>ミドルマネージャーや意思決定の権限を持つ</li>\n  <li>改革の範囲を全社ではなく、自分の部だけにする</li>\n  <li>徐々に広げていくのは、ボトムアップでは鉄板</li>\n  <li>トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい</li>\n  <li>全社ルール・ガイドラインと、どう付き合っていけば良いのか？</li>\n  <li>複数のガイドライン/オプションを用意しておく</li>\n  <li>ガイドラインをかならず守らなきゃいけないのは思い込みなこともある</li>\n  <li>緩い、自由があるガイドラインだと進めやすい</li>\n  <li>権限委譲が非常に難しいのではないか？</li>\n  <li>権限のないプロダクトオーナー問題</li>\n  <li>プロジェクト開始の時点で、決められる範囲の線引き</li>\n  <li>大きな会社になればなるほど、スクラムマスターが重要</li>\n  <li>スクラムマスターの役割は半端じゃなく大変</li>\n  <li>大きな会社だとチームの外側に課題がある</li>\n  <li>スクラムマスターは大きな会社のプロパーがやるべき</li>\n  <li>プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる</li>\n  <li>プロダクトが目に見える成果を出してないケース</li>\n  <li>プロダクトを売らずに、組織改革ばっかりしてもしょうがない</li>\n  <li>綺麗事ばっかり言ってるのはダメ</li>\n  <li>失敗することは是である</li>\n  <li>傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である</li>\n  <li>弾をたくさん投げるのが良いこと</li>\n  <li>出島とは？</li>\n  <li>全員同席、外部から雑音をシャットアウトする</li>\n  <li>エンドポイントを一箇所に絞る</li>\n  <li>治外法権</li>\n  <li>人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？</li>\n  <li>お金を稼いでるけど、不人気な部門の問題</li>\n  <li>辞めるにしてもいい関係で辞めてもらう</li>\n  <li>給与テーブルが自由に設定できない問題</li>\n  <li>やりたいことができるように、また仕事しやすい環境を与える</li>\n  <li>周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？</li>\n  <li>バックオフィスは、プロジェクト開始時に巻き込んでおく</li>\n  <li>たとえば品質管理部門の人に入ってもらって、完成の定義を考える</li>\n  <li>AWSでShip判断</li>\n  <li>us-east1から他リージョンへのロールアウト</li>\n  <li>開発チームはどの程度、顧客の声を知る必要があるのか？</li>\n  <li>チームが無関心なのは一番辛い</li>\n  <li>サポートエンジニアを一緒にやるプラクティス</li>\n  <li>開発と運用のチームは結局どうしていけばいいのか？</li>\n  <li>基本的には1チームが良く、部門が別れているならバーチャルチームで1つに</li>\n  <li>少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する</li>\n  <li>必ずしも新規技術を使う必要はない</li>\n  <li>チームの力量・状況にあわせて、技術や言語を選んでいく</li>\n  <li>1week sprintの振り返りだと、長期的な課題がでにくい？</li>\n  <li>ベロシティを1.5倍、2倍にするためには何したらいいの？</li>\n  <li>KPTは断面を切る振り返りであり、時間軸があまりない</li>\n  <li>振り返りは適度に変えていく</li>\n  <li><a href=\"https://www.ryuzee.com/contents/blog/7138\">闇鍋</a>という振り返りプラクティス</li>\n  <li>ドット投票における問題</li>\n  <li>給与査定という観点での人事評価はどうやればいいか？</li>\n  <li>プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？</li>\n  <li>チーム一律評価 + 360度評価 を組み合わせるのが落とし所</li>\n  <li>新サービスを出したばっかりのPOはどう評価するか？</li>\n  <li>人事部とエンジニアの採用プロセスの関わり？</li>\n  <li><a href=\"https://www.attractor.co.jp/contact/\">アトラクタでお仕事募集中</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "12. エンプラ向けの組織改革とか、スクラムでのチーム作り・人事評価とか",
      "itunes:episodeType": "full",
      "podcast:episode": 13
    },
    {
      "title": "11. dockerネットワーキングとか、kubernetesネットワーキングとか",
      "link": "https://fukabori.fm/episode/11",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>dockerを立ち上げたときに、ネットワークに何が起こるのか？</li>\n  <li>iptablesでは何が起こるのか？</li>\n  <li>dockerのbridgeとは何なのか？</li>\n  <li>libnetworkとは何か？</li>\n  <li>docker network pluginを作るためには、何を書くのか？</li>\n  <li>dockerを使うと出てくるvethとは何なのか？</li>\n  <li>dockerコンテナのIPを誰が振っているのか？</li>\n  <li>IPAMとは？</li>\n  <li>dockerから出ていくとき、どういう要素を通って外に出ていくのか？</li>\n  <li>–network host の Host とは？</li>\n  <li>Overlayとは何か？</li>\n  <li>VXLANとは？</li>\n  <li>BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題</li>\n  <li>ARPプロキシ</li>\n  <li>ARPの情報をどうやって、あらかじめ知っておくのか？</li>\n  <li>VXLANはVLANの拡張か？</li>\n  <li>VXLANではどうやってカプセリングするか？</li>\n  <li>VXLANのオーバヘッドはどうなのか？</li>\n  <li>VXLANのオーバヘッドの解決策</li>\n  <li>CNMとCNIとはそれぞれ何か？</li>\n  <li>CNMとlibnetworkの関連性は？</li>\n  <li>kubernetesのネットワーク思想は？</li>\n  <li>CNIの代表的なものは？</li>\n  <li>flannelとCalico</li>\n  <li>flannelの特徴は？</li>\n  <li>Calicoの特徴は？</li>\n  <li>L3 Fabricとは？</li>\n  <li>CLOSネットワークについて</li>\n  <li>なぜBGPを使うのか？</li>\n  <li>kubernetes Serviceとはそもそも何か？</li>\n  <li>Cluster IPとは何か？</li>\n  <li><a href=\"https://twitter.com/rafiror/status/1069217131495976960\">収録後補足</a>: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）</li>\n  <li>kube-proxyとは何か？何をしているのか？</li>\n  <li>iptablesを使ったkube-proxyのオーバーヘッド</li>\n  <li>IPVSとは何か？</li>\n  <li>IPVSを指定した場合に何が起きているのか？</li>\n  <li>IPVSはサイドカーで置かれるのか？</li>\n  <li>NodePortとは何か？</li>\n  <li>NodePortを実際のサービスで使うときは？</li>\n  <li>k8sのLoad Balancerとは？</li>\n  <li>ingressとは何か？</li>\n  <li>k8sにおける名前解決とは？</li>\n  <li>IPアドレスを意識して通信しない</li>\n  <li>iptablesの沼</li>\n  <li>ネットワーク屋さんがiptableを見なくてよくなる世界線はない</li>\n  <li>Network Policyとは？</li>\n  <li>OpenStackのネットワークと、k8sのネットワークの下回りは同じ</li>\n  <li>Linux namespacesとは？</li>\n  <li><a href=\"https://containerdays.jp/\">JapanContainerDays v18.12</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/11"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh2bfa2cpv108z4hvq.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sat, 01 Dec 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh2bfa2cpv108z4hvq.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3988/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:56:24",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>dockerを立ち上げたときに、ネットワークに何が起こるのか？</li>\n  <li>iptablesでは何が起こるのか？</li>\n  <li>dockerのbridgeとは何なのか？</li>\n  <li>libnetworkとは何か？</li>\n  <li>docker network pluginを作るためには、何を書くのか？</li>\n  <li>dockerを使うと出てくるvethとは何なのか？</li>\n  <li>dockerコンテナのIPを誰が振っているのか？</li>\n  <li>IPAMとは？</li>\n  <li>dockerから出ていくとき、どういう要素を通って外に出ていくのか？</li>\n  <li>–network host の Host とは？</li>\n  <li>Overlayとは何か？</li>\n  <li>VXLANとは？</li>\n  <li>BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題</li>\n  <li>ARPプロキシ</li>\n  <li>ARPの情報をどうやって、あらかじめ知っておくのか？</li>\n  <li>VXLANはVLANの拡張か？</li>\n  <li>VXLANではどうやってカプセリングするか？</li>\n  <li>VXLANのオーバヘッドはどうなのか？</li>\n  <li>VXLANのオーバヘッドの解決策</li>\n  <li>CNMとCNIとはそれぞれ何か？</li>\n  <li>CNMとlibnetworkの関連性は？</li>\n  <li>kubernetesのネットワーク思想は？</li>\n  <li>CNIの代表的なものは？</li>\n  <li>flannelとCalico</li>\n  <li>flannelの特徴は？</li>\n  <li>Calicoの特徴は？</li>\n  <li>L3 Fabricとは？</li>\n  <li>CLOSネットワークについて</li>\n  <li>なぜBGPを使うのか？</li>\n  <li>kubernetes Serviceとはそもそも何か？</li>\n  <li>Cluster IPとは何か？</li>\n  <li><a href=\"https://twitter.com/rafiror/status/1069217131495976960\">収録後補足</a>: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）</li>\n  <li>kube-proxyとは何か？何をしているのか？</li>\n  <li>iptablesを使ったkube-proxyのオーバーヘッド</li>\n  <li>IPVSとは何か？</li>\n  <li>IPVSを指定した場合に何が起きているのか？</li>\n  <li>IPVSはサイドカーで置かれるのか？</li>\n  <li>NodePortとは何か？</li>\n  <li>NodePortを実際のサービスで使うときは？</li>\n  <li>k8sのLoad Balancerとは？</li>\n  <li>ingressとは何か？</li>\n  <li>k8sにおける名前解決とは？</li>\n  <li>IPアドレスを意識して通信しない</li>\n  <li>iptablesの沼</li>\n  <li>ネットワーク屋さんがiptableを見なくてよくなる世界線はない</li>\n  <li>Network Policyとは？</li>\n  <li>OpenStackのネットワークと、k8sのネットワークの下回りは同じ</li>\n  <li>Linux namespacesとは？</li>\n  <li><a href=\"https://containerdays.jp/\">JapanContainerDays v18.12</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>dockerを立ち上げたときに、ネットワークに何が起こるのか？</li>\n  <li>iptablesでは何が起こるのか？</li>\n  <li>dockerのbridgeとは何なのか？</li>\n  <li>libnetworkとは何か？</li>\n  <li>docker network pluginを作るためには、何を書くのか？</li>\n  <li>dockerを使うと出てくるvethとは何なのか？</li>\n  <li>dockerコンテナのIPを誰が振っているのか？</li>\n  <li>IPAMとは？</li>\n  <li>dockerから出ていくとき、どういう要素を通って外に出ていくのか？</li>\n  <li>–network host の Host とは？</li>\n  <li>Overlayとは何か？</li>\n  <li>VXLANとは？</li>\n  <li>BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題</li>\n  <li>ARPプロキシ</li>\n  <li>ARPの情報をどうやって、あらかじめ知っておくのか？</li>\n  <li>VXLANはVLANの拡張か？</li>\n  <li>VXLANではどうやってカプセリングするか？</li>\n  <li>VXLANのオーバヘッドはどうなのか？</li>\n  <li>VXLANのオーバヘッドの解決策</li>\n  <li>CNMとCNIとはそれぞれ何か？</li>\n  <li>CNMとlibnetworkの関連性は？</li>\n  <li>kubernetesのネットワーク思想は？</li>\n  <li>CNIの代表的なものは？</li>\n  <li>flannelとCalico</li>\n  <li>flannelの特徴は？</li>\n  <li>Calicoの特徴は？</li>\n  <li>L3 Fabricとは？</li>\n  <li>CLOSネットワークについて</li>\n  <li>なぜBGPを使うのか？</li>\n  <li>kubernetes Serviceとはそもそも何か？</li>\n  <li>Cluster IPとは何か？</li>\n  <li><a href=\"https://twitter.com/rafiror/status/1069217131495976960\">収録後補足</a>: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）</li>\n  <li>kube-proxyとは何か？何をしているのか？</li>\n  <li>iptablesを使ったkube-proxyのオーバーヘッド</li>\n  <li>IPVSとは何か？</li>\n  <li>IPVSを指定した場合に何が起きているのか？</li>\n  <li>IPVSはサイドカーで置かれるのか？</li>\n  <li>NodePortとは何か？</li>\n  <li>NodePortを実際のサービスで使うときは？</li>\n  <li>k8sのLoad Balancerとは？</li>\n  <li>ingressとは何か？</li>\n  <li>k8sにおける名前解決とは？</li>\n  <li>IPアドレスを意識して通信しない</li>\n  <li>iptablesの沼</li>\n  <li>ネットワーク屋さんがiptableを見なくてよくなる世界線はない</li>\n  <li>Network Policyとは？</li>\n  <li>OpenStackのネットワークと、k8sのネットワークの下回りは同じ</li>\n  <li>Linux namespacesとは？</li>\n  <li><a href=\"https://containerdays.jp/\">JapanContainerDays v18.12</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "11. dockerネットワーキングとか、kubernetesネットワーキングとか",
      "itunes:episodeType": "full",
      "podcast:episode": 12
    },
    {
      "title": "10. 大企業HACKS! - 大企業で実現するイマドキのサービス開発",
      "link": "https://fukabori.fm/episode/10",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>WebRTCとは？SkyWayとは？</li>\n  <li><a href=\"https://www.slideshare.net/rotsuya/hacks-56126883\">大企業HACKS! 大企業で実現するイマドキのサービス開発</a>とは何か？その定義は？</li>\n  <li>大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く</li>\n  <li>大企業で何がやばいか？</li>\n  <li>世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い</li>\n  <li>なぜ、変化を恐れる人が多いのか？</li>\n  <li>守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから</li>\n  <li>制約条件がある中で、どう上手くいっていくのか？</li>\n  <li>守りと攻めを意識して分けていく</li>\n  <li>変態ミドル</li>\n  <li>理想的なチームとは何か？</li>\n  <li>相互作用がプラスに働いている状態</li>\n  <li>アジャイルマニフェストにある自己組織化するチームを目指すこと</li>\n  <li>勝手にチームが進化していく状態を目指す</li>\n  <li>オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと</li>\n  <li>目的・意義を示すこと</li>\n  <li>心理的安全性を拡大するための具体的な行動として何をしているか？</li>\n  <li><a href=\"https://anchor.fm/em-fm/\">EM.FM</a></li>\n  <li>ミッション・ステートメントは、なぜ必要なのか？</li>\n  <li>内発的動機づけの3要素にある目的</li>\n  <li>ミッション・ステートメントは、誰がどう定義するのか？</li>\n  <li>ビジョンとミッション・ステートメントの違いは？</li>\n  <li>ビジョンは理想の状態を言語化したものである</li>\n  <li>言葉にするのは、夢を実行可能に行為である</li>\n  <li>いきなり若者にビジョンを考えろ、というのはアンチパターン</li>\n  <li>ビジョンを考えるのはむちゃくちゃ大変</li>\n  <li>飲み会や懇親会のビジョン</li>\n  <li>マネージャーがビジョンを考えないのはサボり</li>\n  <li>なぜ、若手に責任と権限を与えるのか？</li>\n  <li>Think Globally Act Locally はどういう意味で使っている？</li>\n  <li>会社を一生懸命変えるのは非常に時間がかかる</li>\n  <li>大企業をトップダウンで変化させるためのプラクティスは何があるか？</li>\n  <li>社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る</li>\n  <li>エンジニアの言語と経営者の言語の両方で話す</li>\n  <li>大企業で戦ってみたときの強みは？</li>\n  <li>経営者に情熱をぶつけるという方法</li>\n  <li>経験の学校、良い経験がしやすい</li>\n  <li>採用するに当たって、何か気をつけている・頑張っていることはあるか？</li>\n  <li>1人の人事と、多くの現場の社員が協力する</li>\n  <li>会議を上手くやるために、気をつけていることはあるか？</li>\n  <li>パワポはなぜダメなのか？</li>\n  <li>上から来る兼務の指示に対して、どう部下を守るのか？</li>\n  <li>共通業務・年貢からはできる限り部下を守る</li>\n  <li>なぜ内製しないといけないのか？</li>\n  <li>ソフトウェアの開発力が、企業の競争力の源泉である</li>\n  <li>R&amp;D、プロダクト部門でキャズムを乗り越えるには？</li>\n  <li>大企業で製品を出すために、何が大変なのか？</li>\n  <li>社内には実証実験、外にはベータ版というHack</li>\n  <li>R&amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる</li>\n  <li>チームビルディング合宿はなぜやるのか？</li>\n  <li>チームの中で意見のぶつかり合いが増えてきた</li>\n  <li>根本的な価値観が違うときに、表面的に話してもダメ</li>\n  <li>性格診断と価値観アンケートを使って全員でレビューしていく</li>\n  <li>アンカンファレンスで議論する</li>\n  <li>チームビルディング合宿の教科書は無く、自分たちで考える</li>\n  <li>日本の大企業はどうやって、この先生きのこっていくべきか？</li>\n  <li>R&amp;Dと事業部門のいいとこ取りの組織を作る</li>\n  <li>失敗するのが苦手、認めない文化</li>\n  <li><a href=\"https://note.mu/rotsuya\">note.mu</a>での記事</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/10"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh207mffnqacreaxrj.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 06 Nov 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nh207mffnqacreaxrj.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3987/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:51:21",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>WebRTCとは？SkyWayとは？</li>\n  <li><a href=\"https://www.slideshare.net/rotsuya/hacks-56126883\">大企業HACKS! 大企業で実現するイマドキのサービス開発</a>とは何か？その定義は？</li>\n  <li>大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く</li>\n  <li>大企業で何がやばいか？</li>\n  <li>世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い</li>\n  <li>なぜ、変化を恐れる人が多いのか？</li>\n  <li>守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから</li>\n  <li>制約条件がある中で、どう上手くいっていくのか？</li>\n  <li>守りと攻めを意識して分けていく</li>\n  <li>変態ミドル</li>\n  <li>理想的なチームとは何か？</li>\n  <li>相互作用がプラスに働いている状態</li>\n  <li>アジャイルマニフェストにある自己組織化するチームを目指すこと</li>\n  <li>勝手にチームが進化していく状態を目指す</li>\n  <li>オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと</li>\n  <li>目的・意義を示すこと</li>\n  <li>心理的安全性を拡大するための具体的な行動として何をしているか？</li>\n  <li><a href=\"https://anchor.fm/em-fm/\">EM.FM</a></li>\n  <li>ミッション・ステートメントは、なぜ必要なのか？</li>\n  <li>内発的動機づけの3要素にある目的</li>\n  <li>ミッション・ステートメントは、誰がどう定義するのか？</li>\n  <li>ビジョンとミッション・ステートメントの違いは？</li>\n  <li>ビジョンは理想の状態を言語化したものである</li>\n  <li>言葉にするのは、夢を実行可能に行為である</li>\n  <li>いきなり若者にビジョンを考えろ、というのはアンチパターン</li>\n  <li>ビジョンを考えるのはむちゃくちゃ大変</li>\n  <li>飲み会や懇親会のビジョン</li>\n  <li>マネージャーがビジョンを考えないのはサボり</li>\n  <li>なぜ、若手に責任と権限を与えるのか？</li>\n  <li>Think Globally Act Locally はどういう意味で使っている？</li>\n  <li>会社を一生懸命変えるのは非常に時間がかかる</li>\n  <li>大企業をトップダウンで変化させるためのプラクティスは何があるか？</li>\n  <li>社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る</li>\n  <li>エンジニアの言語と経営者の言語の両方で話す</li>\n  <li>大企業で戦ってみたときの強みは？</li>\n  <li>経営者に情熱をぶつけるという方法</li>\n  <li>経験の学校、良い経験がしやすい</li>\n  <li>採用するに当たって、何か気をつけている・頑張っていることはあるか？</li>\n  <li>1人の人事と、多くの現場の社員が協力する</li>\n  <li>会議を上手くやるために、気をつけていることはあるか？</li>\n  <li>パワポはなぜダメなのか？</li>\n  <li>上から来る兼務の指示に対して、どう部下を守るのか？</li>\n  <li>共通業務・年貢からはできる限り部下を守る</li>\n  <li>なぜ内製しないといけないのか？</li>\n  <li>ソフトウェアの開発力が、企業の競争力の源泉である</li>\n  <li>R&amp;D、プロダクト部門でキャズムを乗り越えるには？</li>\n  <li>大企業で製品を出すために、何が大変なのか？</li>\n  <li>社内には実証実験、外にはベータ版というHack</li>\n  <li>R&amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる</li>\n  <li>チームビルディング合宿はなぜやるのか？</li>\n  <li>チームの中で意見のぶつかり合いが増えてきた</li>\n  <li>根本的な価値観が違うときに、表面的に話してもダメ</li>\n  <li>性格診断と価値観アンケートを使って全員でレビューしていく</li>\n  <li>アンカンファレンスで議論する</li>\n  <li>チームビルディング合宿の教科書は無く、自分たちで考える</li>\n  <li>日本の大企業はどうやって、この先生きのこっていくべきか？</li>\n  <li>R&amp;Dと事業部門のいいとこ取りの組織を作る</li>\n  <li>失敗するのが苦手、認めない文化</li>\n  <li><a href=\"https://note.mu/rotsuya\">note.mu</a>での記事</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>WebRTCとは？SkyWayとは？</li>\n  <li><a href=\"https://www.slideshare.net/rotsuya/hacks-56126883\">大企業HACKS! 大企業で実現するイマドキのサービス開発</a>とは何か？その定義は？</li>\n  <li>大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く</li>\n  <li>大企業で何がやばいか？</li>\n  <li>世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い</li>\n  <li>なぜ、変化を恐れる人が多いのか？</li>\n  <li>守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから</li>\n  <li>制約条件がある中で、どう上手くいっていくのか？</li>\n  <li>守りと攻めを意識して分けていく</li>\n  <li>変態ミドル</li>\n  <li>理想的なチームとは何か？</li>\n  <li>相互作用がプラスに働いている状態</li>\n  <li>アジャイルマニフェストにある自己組織化するチームを目指すこと</li>\n  <li>勝手にチームが進化していく状態を目指す</li>\n  <li>オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと</li>\n  <li>目的・意義を示すこと</li>\n  <li>心理的安全性を拡大するための具体的な行動として何をしているか？</li>\n  <li><a href=\"https://anchor.fm/em-fm/\">EM.FM</a></li>\n  <li>ミッション・ステートメントは、なぜ必要なのか？</li>\n  <li>内発的動機づけの3要素にある目的</li>\n  <li>ミッション・ステートメントは、誰がどう定義するのか？</li>\n  <li>ビジョンとミッション・ステートメントの違いは？</li>\n  <li>ビジョンは理想の状態を言語化したものである</li>\n  <li>言葉にするのは、夢を実行可能に行為である</li>\n  <li>いきなり若者にビジョンを考えろ、というのはアンチパターン</li>\n  <li>ビジョンを考えるのはむちゃくちゃ大変</li>\n  <li>飲み会や懇親会のビジョン</li>\n  <li>マネージャーがビジョンを考えないのはサボり</li>\n  <li>なぜ、若手に責任と権限を与えるのか？</li>\n  <li>Think Globally Act Locally はどういう意味で使っている？</li>\n  <li>会社を一生懸命変えるのは非常に時間がかかる</li>\n  <li>大企業をトップダウンで変化させるためのプラクティスは何があるか？</li>\n  <li>社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る</li>\n  <li>エンジニアの言語と経営者の言語の両方で話す</li>\n  <li>大企業で戦ってみたときの強みは？</li>\n  <li>経営者に情熱をぶつけるという方法</li>\n  <li>経験の学校、良い経験がしやすい</li>\n  <li>採用するに当たって、何か気をつけている・頑張っていることはあるか？</li>\n  <li>1人の人事と、多くの現場の社員が協力する</li>\n  <li>会議を上手くやるために、気をつけていることはあるか？</li>\n  <li>パワポはなぜダメなのか？</li>\n  <li>上から来る兼務の指示に対して、どう部下を守るのか？</li>\n  <li>共通業務・年貢からはできる限り部下を守る</li>\n  <li>なぜ内製しないといけないのか？</li>\n  <li>ソフトウェアの開発力が、企業の競争力の源泉である</li>\n  <li>R&amp;D、プロダクト部門でキャズムを乗り越えるには？</li>\n  <li>大企業で製品を出すために、何が大変なのか？</li>\n  <li>社内には実証実験、外にはベータ版というHack</li>\n  <li>R&amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる</li>\n  <li>チームビルディング合宿はなぜやるのか？</li>\n  <li>チームの中で意見のぶつかり合いが増えてきた</li>\n  <li>根本的な価値観が違うときに、表面的に話してもダメ</li>\n  <li>性格診断と価値観アンケートを使って全員でレビューしていく</li>\n  <li>アンカンファレンスで議論する</li>\n  <li>チームビルディング合宿の教科書は無く、自分たちで考える</li>\n  <li>日本の大企業はどうやって、この先生きのこっていくべきか？</li>\n  <li>R&amp;Dと事業部門のいいとこ取りの組織を作る</li>\n  <li>失敗するのが苦手、認めない文化</li>\n  <li><a href=\"https://note.mu/rotsuya\">note.mu</a>での記事</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "10. 大企業HACKS! - 大企業で実現するイマドキのサービス開発",
      "itunes:episodeType": "full",
      "podcast:episode": 11
    },
    {
      "title": "9. エンプラ業界でアジャイルになるためのプラクティスとか、社内/社外勉強会とか",
      "link": "https://fukabori.fm/episode/9",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>エンプラでアジャイルをやろうとすると何が大変なのか？</li>\n  <li>内製開発がデファクトじゃない</li>\n  <li>なぜ内製はデファクトではなかったのか？</li>\n  <li>エンプラ業界で内製が増えてきたきっかけは何だろう？</li>\n  <li>通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？</li>\n  <li>アジャイル開発センターって何？</li>\n  <li>その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？</li>\n  <li>小さく成功を作って広げていく</li>\n  <li>既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？</li>\n  <li>意思決定をアジャイル開発センターに集めていく</li>\n  <li>アジャイル開発センターの隔離</li>\n  <li>Cynefin Framework</li>\n  <li>アジャイル開発センターをどう設立していったのか？</li>\n  <li>アジャイル開発センターって名前はかっこよくないけど、実は意味がある</li>\n  <li>ニュースリリースの見出しにのる名前を狙う</li>\n  <li>(新しいもの入れる場合に)社外から社内を攻める</li>\n  <li>(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす</li>\n  <li>彼らのわかる言葉で説明する</li>\n  <li>エンプラはしがらみが多い</li>\n  <li>特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る</li>\n  <li>聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？</li>\n  <li>グレーです、と宣言して進める</li>\n  <li>謎のチェックリストが生まれる</li>\n  <li>失敗すると後続が死んでしまう</li>\n  <li>アジャイル開発センターの場のデザインはどうしている？</li>\n  <li>うなぎの寝床みたいなチームスペース</li>\n  <li>Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？</li>\n  <li>運用の要件・要求によってOpsのスタイルを分ける</li>\n  <li>エンプラは標準化しようとする</li>\n  <li>標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる</li>\n  <li>大量のガイドライン・チェックリストとアジャイルの付き合い方</li>\n  <li>ガイドラインのHowをWhyに戻して考える</li>\n  <li>会社のルールを変えず、現代のやり方を適用する</li>\n  <li>障害が起きるとルールが増える</li>\n  <li>ルールを増やしても守れない</li>\n  <li>ルールを増やしてもシャドーが増えるだけで意味がない</li>\n  <li>半端じゃない数のチェックリスト</li>\n  <li>誰かが始めないと変わらない</li>\n  <li>運用へ渡すときに自動化しすぎない</li>\n  <li>承認フローをあえて挟む</li>\n  <li>内製をしていなかった企業で、内製エンジニアをどう集めるのか？</li>\n  <li>デベロッパーを集めたいなら、デベロッパーコミュニティに行く</li>\n  <li>Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？</li>\n  <li>前例があると突破できる</li>\n  <li>前例を知るために社内勉強会ネットワーキング</li>\n  <li>社内勉強会を実際に始めるとすごいパワーがある</li>\n  <li>会社に熱を持っている人は見えてない範囲にいる、隠れている</li>\n  <li>どうやって社内勉強会に巻き込んでいったのか？</li>\n  <li>会社の命令で参加させるのはダメ</li>\n  <li>影響力ある人から集める</li>\n  <li>ちゃんとした人は、ちゃんとした人を呼んでくる</li>\n  <li>ルール化しましょう、というアンチパターン</li>\n  <li>せっかく燃えていた火を消化させない</li>\n  <li>70回以上、続けているTechLunchという社内勉強会</li>\n  <li>運営側が燃え尽きない</li>\n  <li>社内勉強会をオープンな場所でやる</li>\n  <li>自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン</li>\n  <li>デベロッパーリレーションズを、なぜエンプラでやるのか？</li>\n  <li>社外勉強会で外のモノサシを知る</li>\n  <li>社外で話す、コミュニティ活動をどう社内で評価するのか？</li>\n  <li>エンプラだけど、使ってるツールや言語は普通にエッジなもの</li>\n  <li>メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？</li>\n  <li>お客様に価値を届けられる人間が対価を得るべき</li>\n  <li><a href=\"https://techplay.jp/event/699906\">2018/11/12 Tech-on Meet Up #03</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/9"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngkhpx0fdxzvga8e85.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Thu, 01 Nov 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngkhpx0fdxzvga8e85.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3986/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:59:20",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>エンプラでアジャイルをやろうとすると何が大変なのか？</li>\n  <li>内製開発がデファクトじゃない</li>\n  <li>なぜ内製はデファクトではなかったのか？</li>\n  <li>エンプラ業界で内製が増えてきたきっかけは何だろう？</li>\n  <li>通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？</li>\n  <li>アジャイル開発センターって何？</li>\n  <li>その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？</li>\n  <li>小さく成功を作って広げていく</li>\n  <li>既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？</li>\n  <li>意思決定をアジャイル開発センターに集めていく</li>\n  <li>アジャイル開発センターの隔離</li>\n  <li>Cynefin Framework</li>\n  <li>アジャイル開発センターをどう設立していったのか？</li>\n  <li>アジャイル開発センターって名前はかっこよくないけど、実は意味がある</li>\n  <li>ニュースリリースの見出しにのる名前を狙う</li>\n  <li>(新しいもの入れる場合に)社外から社内を攻める</li>\n  <li>(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす</li>\n  <li>彼らのわかる言葉で説明する</li>\n  <li>エンプラはしがらみが多い</li>\n  <li>特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る</li>\n  <li>聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？</li>\n  <li>グレーです、と宣言して進める</li>\n  <li>謎のチェックリストが生まれる</li>\n  <li>失敗すると後続が死んでしまう</li>\n  <li>アジャイル開発センターの場のデザインはどうしている？</li>\n  <li>うなぎの寝床みたいなチームスペース</li>\n  <li>Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？</li>\n  <li>運用の要件・要求によってOpsのスタイルを分ける</li>\n  <li>エンプラは標準化しようとする</li>\n  <li>標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる</li>\n  <li>大量のガイドライン・チェックリストとアジャイルの付き合い方</li>\n  <li>ガイドラインのHowをWhyに戻して考える</li>\n  <li>会社のルールを変えず、現代のやり方を適用する</li>\n  <li>障害が起きるとルールが増える</li>\n  <li>ルールを増やしても守れない</li>\n  <li>ルールを増やしてもシャドーが増えるだけで意味がない</li>\n  <li>半端じゃない数のチェックリスト</li>\n  <li>誰かが始めないと変わらない</li>\n  <li>運用へ渡すときに自動化しすぎない</li>\n  <li>承認フローをあえて挟む</li>\n  <li>内製をしていなかった企業で、内製エンジニアをどう集めるのか？</li>\n  <li>デベロッパーを集めたいなら、デベロッパーコミュニティに行く</li>\n  <li>Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？</li>\n  <li>前例があると突破できる</li>\n  <li>前例を知るために社内勉強会ネットワーキング</li>\n  <li>社内勉強会を実際に始めるとすごいパワーがある</li>\n  <li>会社に熱を持っている人は見えてない範囲にいる、隠れている</li>\n  <li>どうやって社内勉強会に巻き込んでいったのか？</li>\n  <li>会社の命令で参加させるのはダメ</li>\n  <li>影響力ある人から集める</li>\n  <li>ちゃんとした人は、ちゃんとした人を呼んでくる</li>\n  <li>ルール化しましょう、というアンチパターン</li>\n  <li>せっかく燃えていた火を消化させない</li>\n  <li>70回以上、続けているTechLunchという社内勉強会</li>\n  <li>運営側が燃え尽きない</li>\n  <li>社内勉強会をオープンな場所でやる</li>\n  <li>自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン</li>\n  <li>デベロッパーリレーションズを、なぜエンプラでやるのか？</li>\n  <li>社外勉強会で外のモノサシを知る</li>\n  <li>社外で話す、コミュニティ活動をどう社内で評価するのか？</li>\n  <li>エンプラだけど、使ってるツールや言語は普通にエッジなもの</li>\n  <li>メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？</li>\n  <li>お客様に価値を届けられる人間が対価を得るべき</li>\n  <li><a href=\"https://techplay.jp/event/699906\">2018/11/12 Tech-on Meet Up #03</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>エンプラでアジャイルをやろうとすると何が大変なのか？</li>\n  <li>内製開発がデファクトじゃない</li>\n  <li>なぜ内製はデファクトではなかったのか？</li>\n  <li>エンプラ業界で内製が増えてきたきっかけは何だろう？</li>\n  <li>通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？</li>\n  <li>アジャイル開発センターって何？</li>\n  <li>その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？</li>\n  <li>小さく成功を作って広げていく</li>\n  <li>既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？</li>\n  <li>意思決定をアジャイル開発センターに集めていく</li>\n  <li>アジャイル開発センターの隔離</li>\n  <li>Cynefin Framework</li>\n  <li>アジャイル開発センターをどう設立していったのか？</li>\n  <li>アジャイル開発センターって名前はかっこよくないけど、実は意味がある</li>\n  <li>ニュースリリースの見出しにのる名前を狙う</li>\n  <li>(新しいもの入れる場合に)社外から社内を攻める</li>\n  <li>(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす</li>\n  <li>彼らのわかる言葉で説明する</li>\n  <li>エンプラはしがらみが多い</li>\n  <li>特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る</li>\n  <li>聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？</li>\n  <li>グレーです、と宣言して進める</li>\n  <li>謎のチェックリストが生まれる</li>\n  <li>失敗すると後続が死んでしまう</li>\n  <li>アジャイル開発センターの場のデザインはどうしている？</li>\n  <li>うなぎの寝床みたいなチームスペース</li>\n  <li>Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？</li>\n  <li>運用の要件・要求によってOpsのスタイルを分ける</li>\n  <li>エンプラは標準化しようとする</li>\n  <li>標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる</li>\n  <li>大量のガイドライン・チェックリストとアジャイルの付き合い方</li>\n  <li>ガイドラインのHowをWhyに戻して考える</li>\n  <li>会社のルールを変えず、現代のやり方を適用する</li>\n  <li>障害が起きるとルールが増える</li>\n  <li>ルールを増やしても守れない</li>\n  <li>ルールを増やしてもシャドーが増えるだけで意味がない</li>\n  <li>半端じゃない数のチェックリスト</li>\n  <li>誰かが始めないと変わらない</li>\n  <li>運用へ渡すときに自動化しすぎない</li>\n  <li>承認フローをあえて挟む</li>\n  <li>内製をしていなかった企業で、内製エンジニアをどう集めるのか？</li>\n  <li>デベロッパーを集めたいなら、デベロッパーコミュニティに行く</li>\n  <li>Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？</li>\n  <li>前例があると突破できる</li>\n  <li>前例を知るために社内勉強会ネットワーキング</li>\n  <li>社内勉強会を実際に始めるとすごいパワーがある</li>\n  <li>会社に熱を持っている人は見えてない範囲にいる、隠れている</li>\n  <li>どうやって社内勉強会に巻き込んでいったのか？</li>\n  <li>会社の命令で参加させるのはダメ</li>\n  <li>影響力ある人から集める</li>\n  <li>ちゃんとした人は、ちゃんとした人を呼んでくる</li>\n  <li>ルール化しましょう、というアンチパターン</li>\n  <li>せっかく燃えていた火を消化させない</li>\n  <li>70回以上、続けているTechLunchという社内勉強会</li>\n  <li>運営側が燃え尽きない</li>\n  <li>社内勉強会をオープンな場所でやる</li>\n  <li>自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン</li>\n  <li>デベロッパーリレーションズを、なぜエンプラでやるのか？</li>\n  <li>社外勉強会で外のモノサシを知る</li>\n  <li>社外で話す、コミュニティ活動をどう社内で評価するのか？</li>\n  <li>エンプラだけど、使ってるツールや言語は普通にエッジなもの</li>\n  <li>メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？</li>\n  <li>お客様に価値を届けられる人間が対価を得るべき</li>\n  <li><a href=\"https://techplay.jp/event/699906\">2018/11/12 Tech-on Meet Up #03</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "9. エンプラ業界でアジャイルになるためのプラクティスとか、社内/社外勉強会とか",
      "itunes:episodeType": "full",
      "podcast:episode": 10
    },
    {
      "title": "8. AWS Aurora、GCP Spannerへ辿り着くまでのDBの進化",
      "link": "https://fukabori.fm/episode/8",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>山喜旅館でたまたま会って急遽収録</li>\n  <li>これまでデータベースがぶつかってきた問題について</li>\n  <li>メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく</li>\n  <li>HDDはシーケンシャルアクセスならランダムアクセスより早い</li>\n  <li>IBMのInformation Management System(IMS)</li>\n  <li>CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？</li>\n  <li>バッファプールをHDDに対するキャッシュとして使う</li>\n  <li><a href=\"https://qiita.com/kumagi/items/14b6593a2e8ae0c56546\">IBM ARIES</a>の公開</li>\n  <li>WAL / Write Ahead Logging</li>\n  <li>ログの中にundo/redoの両方が必要</li>\n  <li>ログシーケンスナンバによるリカバリ</li>\n  <li>バッファプールを食わせるデータ量を増やすのが最適化の一歩</li>\n  <li>マルチコア時代への突入、メモリのビット単価の低下</li>\n  <li>インメモリDBの問題</li>\n  <li>論文ジェネレータとは？</li>\n  <li>データベースは研究のトレンドとしては人気がなかった</li>\n  <li>Writeが増えたときのトランザクション性能が伸びない問題</li>\n  <li>垂直分散、水平分散でアプリケーションレイヤが辛くなる話</li>\n  <li>AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える</li>\n  <li>AuroraはUndoの情報をログに含めず、Redoを含める</li>\n  <li>Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド</li>\n  <li>ページの一貫性を担保する責任をクラウドへ押し付けた</li>\n  <li>メモリをディスクへ書き戻す必要がなくなる</li>\n  <li>Redoログ一辺倒になったのでチェックポイントがいらなくなった</li>\n  <li>データベースのチェックポイントについて</li>\n  <li>Auroraはマルチマスタ化？</li>\n  <li>Auroraのそもそもの思想はシングルマスタ</li>\n  <li>悲観的に巨大にロックを取る</li>\n  <li>SpannerはRDBではなく、分散KVSに近い</li>\n  <li>Spanサーバの役割</li>\n  <li>Spannerを支えるPaxosとは？</li>\n  <li>分散合意の難しさ</li>\n  <li>Cockroach DBはAuroraよりベンチマークで1000倍速い？</li>\n  <li>TPCCのレギュレーションについて</li>\n  <li>SpannerとAuroraの使い分けは？</li>\n  <li>今後のデータベース界隈の展望は？</li>\n  <li>クラウドのDBはOracleの牙城を崩しに行く</li>\n</ul>\n\n<p>(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/8"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngjz8t3kp1zcaya7gy.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Fri, 26 Oct 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngjz8t3kp1zcaya7gy.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3985/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:33:57",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>山喜旅館でたまたま会って急遽収録</li>\n  <li>これまでデータベースがぶつかってきた問題について</li>\n  <li>メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく</li>\n  <li>HDDはシーケンシャルアクセスならランダムアクセスより早い</li>\n  <li>IBMのInformation Management System(IMS)</li>\n  <li>CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？</li>\n  <li>バッファプールをHDDに対するキャッシュとして使う</li>\n  <li><a href=\"https://qiita.com/kumagi/items/14b6593a2e8ae0c56546\">IBM ARIES</a>の公開</li>\n  <li>WAL / Write Ahead Logging</li>\n  <li>ログの中にundo/redoの両方が必要</li>\n  <li>ログシーケンスナンバによるリカバリ</li>\n  <li>バッファプールを食わせるデータ量を増やすのが最適化の一歩</li>\n  <li>マルチコア時代への突入、メモリのビット単価の低下</li>\n  <li>インメモリDBの問題</li>\n  <li>論文ジェネレータとは？</li>\n  <li>データベースは研究のトレンドとしては人気がなかった</li>\n  <li>Writeが増えたときのトランザクション性能が伸びない問題</li>\n  <li>垂直分散、水平分散でアプリケーションレイヤが辛くなる話</li>\n  <li>AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える</li>\n  <li>AuroraはUndoの情報をログに含めず、Redoを含める</li>\n  <li>Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド</li>\n  <li>ページの一貫性を担保する責任をクラウドへ押し付けた</li>\n  <li>メモリをディスクへ書き戻す必要がなくなる</li>\n  <li>Redoログ一辺倒になったのでチェックポイントがいらなくなった</li>\n  <li>データベースのチェックポイントについて</li>\n  <li>Auroraはマルチマスタ化？</li>\n  <li>Auroraのそもそもの思想はシングルマスタ</li>\n  <li>悲観的に巨大にロックを取る</li>\n  <li>SpannerはRDBではなく、分散KVSに近い</li>\n  <li>Spanサーバの役割</li>\n  <li>Spannerを支えるPaxosとは？</li>\n  <li>分散合意の難しさ</li>\n  <li>Cockroach DBはAuroraよりベンチマークで1000倍速い？</li>\n  <li>TPCCのレギュレーションについて</li>\n  <li>SpannerとAuroraの使い分けは？</li>\n  <li>今後のデータベース界隈の展望は？</li>\n  <li>クラウドのDBはOracleの牙城を崩しに行く</li>\n</ul>\n\n<p>(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>山喜旅館でたまたま会って急遽収録</li>\n  <li>これまでデータベースがぶつかってきた問題について</li>\n  <li>メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく</li>\n  <li>HDDはシーケンシャルアクセスならランダムアクセスより早い</li>\n  <li>IBMのInformation Management System(IMS)</li>\n  <li>CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？</li>\n  <li>バッファプールをHDDに対するキャッシュとして使う</li>\n  <li><a href=\"https://qiita.com/kumagi/items/14b6593a2e8ae0c56546\">IBM ARIES</a>の公開</li>\n  <li>WAL / Write Ahead Logging</li>\n  <li>ログの中にundo/redoの両方が必要</li>\n  <li>ログシーケンスナンバによるリカバリ</li>\n  <li>バッファプールを食わせるデータ量を増やすのが最適化の一歩</li>\n  <li>マルチコア時代への突入、メモリのビット単価の低下</li>\n  <li>インメモリDBの問題</li>\n  <li>論文ジェネレータとは？</li>\n  <li>データベースは研究のトレンドとしては人気がなかった</li>\n  <li>Writeが増えたときのトランザクション性能が伸びない問題</li>\n  <li>垂直分散、水平分散でアプリケーションレイヤが辛くなる話</li>\n  <li>AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える</li>\n  <li>AuroraはUndoの情報をログに含めず、Redoを含める</li>\n  <li>Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド</li>\n  <li>ページの一貫性を担保する責任をクラウドへ押し付けた</li>\n  <li>メモリをディスクへ書き戻す必要がなくなる</li>\n  <li>Redoログ一辺倒になったのでチェックポイントがいらなくなった</li>\n  <li>データベースのチェックポイントについて</li>\n  <li>Auroraはマルチマスタ化？</li>\n  <li>Auroraのそもそもの思想はシングルマスタ</li>\n  <li>悲観的に巨大にロックを取る</li>\n  <li>SpannerはRDBではなく、分散KVSに近い</li>\n  <li>Spanサーバの役割</li>\n  <li>Spannerを支えるPaxosとは？</li>\n  <li>分散合意の難しさ</li>\n  <li>Cockroach DBはAuroraよりベンチマークで1000倍速い？</li>\n  <li>TPCCのレギュレーションについて</li>\n  <li>SpannerとAuroraの使い分けは？</li>\n  <li>今後のデータベース界隈の展望は？</li>\n  <li>クラウドのDBはOracleの牙城を崩しに行く</li>\n</ul>\n\n<p>(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "8. AWS Aurora、GCP Spannerへ辿り着くまでのDBの進化",
      "itunes:episodeType": "full",
      "podcast:episode": 9
    },
    {
      "title": "7. CI/CDとか、CircleCI自体の設計・開発プロセスとか",
      "link": "https://fukabori.fm/episode/7",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li>継続的インテグレーション(CI)とは何か？</li>\n  <li>継続的デリバリ(CD)とは何か？</li>\n  <li>おかんにCIを例えで説明する</li>\n  <li>CIをしていない場合、どこから始めればいいのか？</li>\n  <li>たくさんのテストがないとCIを使う意味がない、というよくある誤解</li>\n  <li>最初からクライマックス</li>\n  <li>継続的デリバリと継続的デプロイの定義と差異</li>\n  <li>CI/CDの真の力</li>\n  <li>CircleCI 2.0とは？</li>\n  <li>LXCベースからDockerへの置き換え</li>\n  <li>CircleCIアーキテクチャの刷新について</li>\n  <li>CircleCI 2.0以外の名前の候補</li>\n  <li>CircleCI 2.0は爆速</li>\n  <li>gRPCを使いつつ非同期に</li>\n  <li>CircleCIはJenkinsと違って何が嬉しいのか？</li>\n  <li>Jenkinsのプラグイン運用辛い</li>\n  <li>野良Jenkins問題</li>\n  <li>CircleCIに限らずSaaS版のCI/CDで出来なくなることは？</li>\n  <li>GPUビルド</li>\n  <li>セキュリティおじさんに対する回答</li>\n  <li><a href=\"https://circleci.com/enterprise/\">CircleCI Enterprise</a></li>\n  <li>コード自体がシークレットになってはいけない</li>\n  <li><a href=\"https://www.replicated.com/\">Reprecated</a></li>\n  <li>CircleCI EnterpriseのKubernetesへの移行について</li>\n  <li>CircleCI の内部設計とは？</li>\n  <li>自作スケジューラから<a href=\"https://www.nomadproject.io/\">Hashicorp Nomad</a></li>\n  <li>Nomadはバッチ処理に向いている</li>\n  <li>CircleCIのQueueとして使われるRabbitMQ</li>\n  <li>RabbitMQの運用で困ったこと・苦労したことは？</li>\n  <li>CircleCIの内部で使われる言語はClojureについて</li>\n  <li>CircleCIも最初はRuby on Railsだった</li>\n  <li>CircleCIの開発運用で使うCI/CDはCircleCI</li>\n  <li>自分で自分の足を踏む</li>\n  <li>電動キックボードにハマっている</li>\n  <li>電動キックボードの原付き化</li>\n  <li>電動キックボードを日本で買うといくら？</li>\n  <li>CircleCIの開発はどうやっている？アジャイル？</li>\n  <li>プロダクトチームが、どういう機能が求められているか吸い上げる</li>\n  <li>Jiraを使った管理</li>\n  <li>CircleCIリリース時に承認は必要なのか？</li>\n  <li>Ship!Ship!Ship!</li>\n  <li>本番環境でテストする</li>\n  <li>継続的デプロイができれば、ロールバック(Revert)も簡単</li>\n  <li>品質管理おじさんが作りたがるチェックリストはある？</li>\n  <li>動いてるんだから良しとする、何かあればFixする</li>\n  <li>継続的デプロイは組織自体も変革する力がある</li>\n  <li>コンウェイの法則</li>\n  <li>CircleCIにおけるコードレビューはどうやっているのか？</li>\n  <li>CircleCIにおけるペアプロ</li>\n  <li>paring is caring</li>\n  <li>全世界に分散した開発</li>\n  <li>Remote Firstという文化</li>\n  <li>お互いに助け合うという文化</li>\n  <li>CTOが乱入するお客様対応</li>\n  <li>「今忙しいからできない」とは言わない</li>\n  <li>SlackよりZoomを使う</li>\n  <li>100の言葉よりも、1分のZoom</li>\n  <li>CircleCIにおけるチームビルディング、All Hands</li>\n  <li><a href=\"https://twitter.com/circlecijapan\">Twitter CircleCIJapan</a></li>\n  <li><a href=\"https://www.wantedly.com/companies/circleci\">We’re hiring at CircleCI</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/7"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngfsfwrm39d4pj3zw5.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 09 Oct 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngfsfwrm39d4pj3zw5.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3984/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:51:53",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li>継続的インテグレーション(CI)とは何か？</li>\n  <li>継続的デリバリ(CD)とは何か？</li>\n  <li>おかんにCIを例えで説明する</li>\n  <li>CIをしていない場合、どこから始めればいいのか？</li>\n  <li>たくさんのテストがないとCIを使う意味がない、というよくある誤解</li>\n  <li>最初からクライマックス</li>\n  <li>継続的デリバリと継続的デプロイの定義と差異</li>\n  <li>CI/CDの真の力</li>\n  <li>CircleCI 2.0とは？</li>\n  <li>LXCベースからDockerへの置き換え</li>\n  <li>CircleCIアーキテクチャの刷新について</li>\n  <li>CircleCI 2.0以外の名前の候補</li>\n  <li>CircleCI 2.0は爆速</li>\n  <li>gRPCを使いつつ非同期に</li>\n  <li>CircleCIはJenkinsと違って何が嬉しいのか？</li>\n  <li>Jenkinsのプラグイン運用辛い</li>\n  <li>野良Jenkins問題</li>\n  <li>CircleCIに限らずSaaS版のCI/CDで出来なくなることは？</li>\n  <li>GPUビルド</li>\n  <li>セキュリティおじさんに対する回答</li>\n  <li><a href=\"https://circleci.com/enterprise/\">CircleCI Enterprise</a></li>\n  <li>コード自体がシークレットになってはいけない</li>\n  <li><a href=\"https://www.replicated.com/\">Reprecated</a></li>\n  <li>CircleCI EnterpriseのKubernetesへの移行について</li>\n  <li>CircleCI の内部設計とは？</li>\n  <li>自作スケジューラから<a href=\"https://www.nomadproject.io/\">Hashicorp Nomad</a></li>\n  <li>Nomadはバッチ処理に向いている</li>\n  <li>CircleCIのQueueとして使われるRabbitMQ</li>\n  <li>RabbitMQの運用で困ったこと・苦労したことは？</li>\n  <li>CircleCIの内部で使われる言語はClojureについて</li>\n  <li>CircleCIも最初はRuby on Railsだった</li>\n  <li>CircleCIの開発運用で使うCI/CDはCircleCI</li>\n  <li>自分で自分の足を踏む</li>\n  <li>電動キックボードにハマっている</li>\n  <li>電動キックボードの原付き化</li>\n  <li>電動キックボードを日本で買うといくら？</li>\n  <li>CircleCIの開発はどうやっている？アジャイル？</li>\n  <li>プロダクトチームが、どういう機能が求められているか吸い上げる</li>\n  <li>Jiraを使った管理</li>\n  <li>CircleCIリリース時に承認は必要なのか？</li>\n  <li>Ship!Ship!Ship!</li>\n  <li>本番環境でテストする</li>\n  <li>継続的デプロイができれば、ロールバック(Revert)も簡単</li>\n  <li>品質管理おじさんが作りたがるチェックリストはある？</li>\n  <li>動いてるんだから良しとする、何かあればFixする</li>\n  <li>継続的デプロイは組織自体も変革する力がある</li>\n  <li>コンウェイの法則</li>\n  <li>CircleCIにおけるコードレビューはどうやっているのか？</li>\n  <li>CircleCIにおけるペアプロ</li>\n  <li>paring is caring</li>\n  <li>全世界に分散した開発</li>\n  <li>Remote Firstという文化</li>\n  <li>お互いに助け合うという文化</li>\n  <li>CTOが乱入するお客様対応</li>\n  <li>「今忙しいからできない」とは言わない</li>\n  <li>SlackよりZoomを使う</li>\n  <li>100の言葉よりも、1分のZoom</li>\n  <li>CircleCIにおけるチームビルディング、All Hands</li>\n  <li><a href=\"https://twitter.com/circlecijapan\">Twitter CircleCIJapan</a></li>\n  <li><a href=\"https://www.wantedly.com/companies/circleci\">We’re hiring at CircleCI</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li>継続的インテグレーション(CI)とは何か？</li>\n  <li>継続的デリバリ(CD)とは何か？</li>\n  <li>おかんにCIを例えで説明する</li>\n  <li>CIをしていない場合、どこから始めればいいのか？</li>\n  <li>たくさんのテストがないとCIを使う意味がない、というよくある誤解</li>\n  <li>最初からクライマックス</li>\n  <li>継続的デリバリと継続的デプロイの定義と差異</li>\n  <li>CI/CDの真の力</li>\n  <li>CircleCI 2.0とは？</li>\n  <li>LXCベースからDockerへの置き換え</li>\n  <li>CircleCIアーキテクチャの刷新について</li>\n  <li>CircleCI 2.0以外の名前の候補</li>\n  <li>CircleCI 2.0は爆速</li>\n  <li>gRPCを使いつつ非同期に</li>\n  <li>CircleCIはJenkinsと違って何が嬉しいのか？</li>\n  <li>Jenkinsのプラグイン運用辛い</li>\n  <li>野良Jenkins問題</li>\n  <li>CircleCIに限らずSaaS版のCI/CDで出来なくなることは？</li>\n  <li>GPUビルド</li>\n  <li>セキュリティおじさんに対する回答</li>\n  <li><a href=\"https://circleci.com/enterprise/\">CircleCI Enterprise</a></li>\n  <li>コード自体がシークレットになってはいけない</li>\n  <li><a href=\"https://www.replicated.com/\">Reprecated</a></li>\n  <li>CircleCI EnterpriseのKubernetesへの移行について</li>\n  <li>CircleCI の内部設計とは？</li>\n  <li>自作スケジューラから<a href=\"https://www.nomadproject.io/\">Hashicorp Nomad</a></li>\n  <li>Nomadはバッチ処理に向いている</li>\n  <li>CircleCIのQueueとして使われるRabbitMQ</li>\n  <li>RabbitMQの運用で困ったこと・苦労したことは？</li>\n  <li>CircleCIの内部で使われる言語はClojureについて</li>\n  <li>CircleCIも最初はRuby on Railsだった</li>\n  <li>CircleCIの開発運用で使うCI/CDはCircleCI</li>\n  <li>自分で自分の足を踏む</li>\n  <li>電動キックボードにハマっている</li>\n  <li>電動キックボードの原付き化</li>\n  <li>電動キックボードを日本で買うといくら？</li>\n  <li>CircleCIの開発はどうやっている？アジャイル？</li>\n  <li>プロダクトチームが、どういう機能が求められているか吸い上げる</li>\n  <li>Jiraを使った管理</li>\n  <li>CircleCIリリース時に承認は必要なのか？</li>\n  <li>Ship!Ship!Ship!</li>\n  <li>本番環境でテストする</li>\n  <li>継続的デプロイができれば、ロールバック(Revert)も簡単</li>\n  <li>品質管理おじさんが作りたがるチェックリストはある？</li>\n  <li>動いてるんだから良しとする、何かあればFixする</li>\n  <li>継続的デプロイは組織自体も変革する力がある</li>\n  <li>コンウェイの法則</li>\n  <li>CircleCIにおけるコードレビューはどうやっているのか？</li>\n  <li>CircleCIにおけるペアプロ</li>\n  <li>paring is caring</li>\n  <li>全世界に分散した開発</li>\n  <li>Remote Firstという文化</li>\n  <li>お互いに助け合うという文化</li>\n  <li>CTOが乱入するお客様対応</li>\n  <li>「今忙しいからできない」とは言わない</li>\n  <li>SlackよりZoomを使う</li>\n  <li>100の言葉よりも、1分のZoom</li>\n  <li>CircleCIにおけるチームビルディング、All Hands</li>\n  <li><a href=\"https://twitter.com/circlecijapan\">Twitter CircleCIJapan</a></li>\n  <li><a href=\"https://www.wantedly.com/companies/circleci\">We’re hiring at CircleCI</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "7. CI/CDとか、CircleCI自体の設計・開発プロセスとか",
      "itunes:episodeType": "full",
      "podcast:episode": 8
    },
    {
      "title": "6. モブプログラミング 60分間1本勝負",
      "link": "https://fukabori.fm/episode/6",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"http://www.agileteam.jp/\">一般社団法人 アジャイルチームを支える会</a></li>\n  <li>モブプログラミングとは？</li>\n  <li>1台のマシンを使うのは重要？</li>\n  <li>複数マシンのコードの同期はどうする？</li>\n  <li>各々のマシンの環境が微妙に違う問題をどう対応する？</li>\n  <li>ペアプログラミングとモブプログラミングの差分は？</li>\n  <li>Whole Team Approach</li>\n  <li>情報同期がキーポイント</li>\n  <li>新規メンバーのJoinやLeaveにどう対処する？</li>\n  <li>情報の足りないメンバーがドライバーをやる</li>\n  <li>ドライバーは仕事を止める権利をもっている</li>\n  <li>「わからない」と平気で言えるのが重要</li>\n  <li>「わからない」って言っても良いチームは素敵</li>\n  <li>モブプログラミングにオススメの環境は？</li>\n  <li>「うるさいな」って言う人は羨ましい</li>\n  <li>楽しそうに仕事をしているチームは会社全体に影響がある</li>\n  <li>名前をあげて、人を褒めるということ</li>\n  <li>チームでよく飛び交うワード</li>\n  <li>モブプログラミングはリモートで、できるのか？</li>\n  <li>コミュニケーションの不平等さ</li>\n  <li>あえて全員リモートで入る</li>\n  <li>ナビゲーターとドライバー間でスキル差がある場合はどうするのか？</li>\n  <li>知識の差がある場合にどう対応するか？</li>\n  <li>コミュニケーションの多寡の問題</li>\n  <li>チームのコミットメントを高めるきっかけとしてのモブプロによる可視化</li>\n  <li>モブプログラミングは問題を見えやすくするアプローチ</li>\n  <li>マネージャーに入って欲しいかどうか</li>\n  <li>モブプログラミングの生産性？</li>\n  <li>生産性を妨げる行動って何なのだろうか？</li>\n  <li>よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング</li>\n  <li>兼務も生産性を妨げる</li>\n  <li>モブプログラミングで向き不向きがあるタスク</li>\n  <li>結果の見通しが良いものはモブプログラミングでやる必要はない</li>\n  <li>一方で大体の仕事は問題解決であり、モブプログラミングに向いている</li>\n  <li>チームの状態、作業の質をみてモブプログラミングを使い分ける</li>\n  <li>分担するよりも一緒にやったほうが良い、という気付き</li>\n  <li>分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある</li>\n  <li>ドライバーとナビゲーターは、どういうタイミングで交代するのか？</li>\n  <li>我が家方式による交代</li>\n  <li>ドライバーってどれぐらい喋れば良いのか？</li>\n  <li>モブプロ、めっちゃ疲れる問題</li>\n  <li>どのように休憩(ブレイク)を入れるのが効果的か？</li>\n  <li>休憩の入れ方はチームのセンスが問われる</li>\n  <li>ポモドーロと組み合わせた休憩テクニック</li>\n  <li>モブコーヒー</li>\n  <li>どうやってサボるかを、真剣に考える</li>\n  <li>Deepで集中する、Deepで休憩する、Deepでサボる</li>\n  <li>モブプログラミングにて、振り返りをどの程度していくか？</li>\n  <li>手を止めて、仕事を俯瞰する振り返り</li>\n  <li>スクラムとモブプログラミングの組み合わせはどうやったらいいか？</li>\n  <li>モブプログラミングとスクラムは相性が良い</li>\n  <li>1Day Sprintというアプローチ</li>\n  <li>プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い</li>\n  <li>お客様から直接Feedbackをもらうことに価値がある</li>\n  <li>モブプログラミングの中に、お客様に入ってもらう</li>\n  <li>全員プロダクトオーナー</li>\n  <li>管理職・マネージャーをどう説得するか？説得する必要があるのか？</li>\n  <li>モブプログラミング実施について説得する必要はない</li>\n  <li>より良い仕事をするためにモブプログラミングをしている</li>\n  <li>マネージャーはチームが上手く働けるようにサポートすること</li>\n  <li>チームの理想をWhatで提示、Howは権限委譲する</li>\n  <li>Howに興味があるのは子供扱いしている状態と同じ</li>\n  <li>1on1で上司をメンタリング</li>\n  <li>受け入れてくれるマネージャーは多い</li>\n  <li>双方向メンタリング</li>\n  <li>よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応</li>\n  <li><a href=\"https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro\">モブプログラミング スタートアップマニュアル</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/6"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngfvqg5q2sjpqdhszj.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 25 Sep 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngfvqg5q2sjpqdhszj.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3983/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:58:37",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"http://www.agileteam.jp/\">一般社団法人 アジャイルチームを支える会</a></li>\n  <li>モブプログラミングとは？</li>\n  <li>1台のマシンを使うのは重要？</li>\n  <li>複数マシンのコードの同期はどうする？</li>\n  <li>各々のマシンの環境が微妙に違う問題をどう対応する？</li>\n  <li>ペアプログラミングとモブプログラミングの差分は？</li>\n  <li>Whole Team Approach</li>\n  <li>情報同期がキーポイント</li>\n  <li>新規メンバーのJoinやLeaveにどう対処する？</li>\n  <li>情報の足りないメンバーがドライバーをやる</li>\n  <li>ドライバーは仕事を止める権利をもっている</li>\n  <li>「わからない」と平気で言えるのが重要</li>\n  <li>「わからない」って言っても良いチームは素敵</li>\n  <li>モブプログラミングにオススメの環境は？</li>\n  <li>「うるさいな」って言う人は羨ましい</li>\n  <li>楽しそうに仕事をしているチームは会社全体に影響がある</li>\n  <li>名前をあげて、人を褒めるということ</li>\n  <li>チームでよく飛び交うワード</li>\n  <li>モブプログラミングはリモートで、できるのか？</li>\n  <li>コミュニケーションの不平等さ</li>\n  <li>あえて全員リモートで入る</li>\n  <li>ナビゲーターとドライバー間でスキル差がある場合はどうするのか？</li>\n  <li>知識の差がある場合にどう対応するか？</li>\n  <li>コミュニケーションの多寡の問題</li>\n  <li>チームのコミットメントを高めるきっかけとしてのモブプロによる可視化</li>\n  <li>モブプログラミングは問題を見えやすくするアプローチ</li>\n  <li>マネージャーに入って欲しいかどうか</li>\n  <li>モブプログラミングの生産性？</li>\n  <li>生産性を妨げる行動って何なのだろうか？</li>\n  <li>よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング</li>\n  <li>兼務も生産性を妨げる</li>\n  <li>モブプログラミングで向き不向きがあるタスク</li>\n  <li>結果の見通しが良いものはモブプログラミングでやる必要はない</li>\n  <li>一方で大体の仕事は問題解決であり、モブプログラミングに向いている</li>\n  <li>チームの状態、作業の質をみてモブプログラミングを使い分ける</li>\n  <li>分担するよりも一緒にやったほうが良い、という気付き</li>\n  <li>分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある</li>\n  <li>ドライバーとナビゲーターは、どういうタイミングで交代するのか？</li>\n  <li>我が家方式による交代</li>\n  <li>ドライバーってどれぐらい喋れば良いのか？</li>\n  <li>モブプロ、めっちゃ疲れる問題</li>\n  <li>どのように休憩(ブレイク)を入れるのが効果的か？</li>\n  <li>休憩の入れ方はチームのセンスが問われる</li>\n  <li>ポモドーロと組み合わせた休憩テクニック</li>\n  <li>モブコーヒー</li>\n  <li>どうやってサボるかを、真剣に考える</li>\n  <li>Deepで集中する、Deepで休憩する、Deepでサボる</li>\n  <li>モブプログラミングにて、振り返りをどの程度していくか？</li>\n  <li>手を止めて、仕事を俯瞰する振り返り</li>\n  <li>スクラムとモブプログラミングの組み合わせはどうやったらいいか？</li>\n  <li>モブプログラミングとスクラムは相性が良い</li>\n  <li>1Day Sprintというアプローチ</li>\n  <li>プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い</li>\n  <li>お客様から直接Feedbackをもらうことに価値がある</li>\n  <li>モブプログラミングの中に、お客様に入ってもらう</li>\n  <li>全員プロダクトオーナー</li>\n  <li>管理職・マネージャーをどう説得するか？説得する必要があるのか？</li>\n  <li>モブプログラミング実施について説得する必要はない</li>\n  <li>より良い仕事をするためにモブプログラミングをしている</li>\n  <li>マネージャーはチームが上手く働けるようにサポートすること</li>\n  <li>チームの理想をWhatで提示、Howは権限委譲する</li>\n  <li>Howに興味があるのは子供扱いしている状態と同じ</li>\n  <li>1on1で上司をメンタリング</li>\n  <li>受け入れてくれるマネージャーは多い</li>\n  <li>双方向メンタリング</li>\n  <li>よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応</li>\n  <li><a href=\"https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro\">モブプログラミング スタートアップマニュアル</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"http://www.agileteam.jp/\">一般社団法人 アジャイルチームを支える会</a></li>\n  <li>モブプログラミングとは？</li>\n  <li>1台のマシンを使うのは重要？</li>\n  <li>複数マシンのコードの同期はどうする？</li>\n  <li>各々のマシンの環境が微妙に違う問題をどう対応する？</li>\n  <li>ペアプログラミングとモブプログラミングの差分は？</li>\n  <li>Whole Team Approach</li>\n  <li>情報同期がキーポイント</li>\n  <li>新規メンバーのJoinやLeaveにどう対処する？</li>\n  <li>情報の足りないメンバーがドライバーをやる</li>\n  <li>ドライバーは仕事を止める権利をもっている</li>\n  <li>「わからない」と平気で言えるのが重要</li>\n  <li>「わからない」って言っても良いチームは素敵</li>\n  <li>モブプログラミングにオススメの環境は？</li>\n  <li>「うるさいな」って言う人は羨ましい</li>\n  <li>楽しそうに仕事をしているチームは会社全体に影響がある</li>\n  <li>名前をあげて、人を褒めるということ</li>\n  <li>チームでよく飛び交うワード</li>\n  <li>モブプログラミングはリモートで、できるのか？</li>\n  <li>コミュニケーションの不平等さ</li>\n  <li>あえて全員リモートで入る</li>\n  <li>ナビゲーターとドライバー間でスキル差がある場合はどうするのか？</li>\n  <li>知識の差がある場合にどう対応するか？</li>\n  <li>コミュニケーションの多寡の問題</li>\n  <li>チームのコミットメントを高めるきっかけとしてのモブプロによる可視化</li>\n  <li>モブプログラミングは問題を見えやすくするアプローチ</li>\n  <li>マネージャーに入って欲しいかどうか</li>\n  <li>モブプログラミングの生産性？</li>\n  <li>生産性を妨げる行動って何なのだろうか？</li>\n  <li>よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング</li>\n  <li>兼務も生産性を妨げる</li>\n  <li>モブプログラミングで向き不向きがあるタスク</li>\n  <li>結果の見通しが良いものはモブプログラミングでやる必要はない</li>\n  <li>一方で大体の仕事は問題解決であり、モブプログラミングに向いている</li>\n  <li>チームの状態、作業の質をみてモブプログラミングを使い分ける</li>\n  <li>分担するよりも一緒にやったほうが良い、という気付き</li>\n  <li>分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある</li>\n  <li>ドライバーとナビゲーターは、どういうタイミングで交代するのか？</li>\n  <li>我が家方式による交代</li>\n  <li>ドライバーってどれぐらい喋れば良いのか？</li>\n  <li>モブプロ、めっちゃ疲れる問題</li>\n  <li>どのように休憩(ブレイク)を入れるのが効果的か？</li>\n  <li>休憩の入れ方はチームのセンスが問われる</li>\n  <li>ポモドーロと組み合わせた休憩テクニック</li>\n  <li>モブコーヒー</li>\n  <li>どうやってサボるかを、真剣に考える</li>\n  <li>Deepで集中する、Deepで休憩する、Deepでサボる</li>\n  <li>モブプログラミングにて、振り返りをどの程度していくか？</li>\n  <li>手を止めて、仕事を俯瞰する振り返り</li>\n  <li>スクラムとモブプログラミングの組み合わせはどうやったらいいか？</li>\n  <li>モブプログラミングとスクラムは相性が良い</li>\n  <li>1Day Sprintというアプローチ</li>\n  <li>プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い</li>\n  <li>お客様から直接Feedbackをもらうことに価値がある</li>\n  <li>モブプログラミングの中に、お客様に入ってもらう</li>\n  <li>全員プロダクトオーナー</li>\n  <li>管理職・マネージャーをどう説得するか？説得する必要があるのか？</li>\n  <li>モブプログラミング実施について説得する必要はない</li>\n  <li>より良い仕事をするためにモブプログラミングをしている</li>\n  <li>マネージャーはチームが上手く働けるようにサポートすること</li>\n  <li>チームの理想をWhatで提示、Howは権限委譲する</li>\n  <li>Howに興味があるのは子供扱いしている状態と同じ</li>\n  <li>1on1で上司をメンタリング</li>\n  <li>受け入れてくれるマネージャーは多い</li>\n  <li>双方向メンタリング</li>\n  <li>よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応</li>\n  <li><a href=\"https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro\">モブプログラミング スタートアップマニュアル</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "6. モブプログラミング 60分間1本勝負",
      "itunes:episodeType": "full",
      "podcast:episode": 7
    },
    {
      "title": "5. アジャイルコーチ、リーン・アジャイルの考え方、心理的安全性とか",
      "link": "https://fukabori.fm/episode/5",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"https://lean-agile.fm/\">omoiyari.fm</a></li>\n  <li>アジャイルコーチという職種って何やってるの？</li>\n  <li>会社に対するオーナーシップ</li>\n  <li>プロダクトオーナーシップが全員必須というわけではない</li>\n  <li>プロダクトオーナーシップはあると何が嬉しいのか？</li>\n  <li>1on1におけるフレーミング</li>\n  <li>1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？</li>\n  <li>リーン、アジャイルとはそもそも何なのか？その関連は？</li>\n  <li>スクラムと開発速度の考え方</li>\n  <li>効果と効率</li>\n  <li>モブプログラミングは意外とベロシティが出る</li>\n  <li>モブプロで浮き彫りになるコミュニケーションの質</li>\n  <li>スクラムの何が好き？</li>\n  <li>omoiyari.fmのFearlessChangeネタは？</li>\n  <li>ykmc09の好きなFearlessChangeのパターン3つ</li>\n  <li>Face to Faceで話すことの効果</li>\n  <li>心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？</li>\n  <li>“雑”ということの重要性</li>\n  <li>大企業/組織における心理的安全性を高めるための社内Podcast</li>\n  <li>いつかSIerに戻ってみたい理由</li>\n  <li>生涯でやり遂げたいことはある？</li>\n  <li>アジャイル、モブプロにおける人事評価</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/5"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngrz79b9qynh0xn5vm.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 26 Aug 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngrz79b9qynh0xn5vm.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3982/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:58:38",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"https://lean-agile.fm/\">omoiyari.fm</a></li>\n  <li>アジャイルコーチという職種って何やってるの？</li>\n  <li>会社に対するオーナーシップ</li>\n  <li>プロダクトオーナーシップが全員必須というわけではない</li>\n  <li>プロダクトオーナーシップはあると何が嬉しいのか？</li>\n  <li>1on1におけるフレーミング</li>\n  <li>1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？</li>\n  <li>リーン、アジャイルとはそもそも何なのか？その関連は？</li>\n  <li>スクラムと開発速度の考え方</li>\n  <li>効果と効率</li>\n  <li>モブプログラミングは意外とベロシティが出る</li>\n  <li>モブプロで浮き彫りになるコミュニケーションの質</li>\n  <li>スクラムの何が好き？</li>\n  <li>omoiyari.fmのFearlessChangeネタは？</li>\n  <li>ykmc09の好きなFearlessChangeのパターン3つ</li>\n  <li>Face to Faceで話すことの効果</li>\n  <li>心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？</li>\n  <li>“雑”ということの重要性</li>\n  <li>大企業/組織における心理的安全性を高めるための社内Podcast</li>\n  <li>いつかSIerに戻ってみたい理由</li>\n  <li>生涯でやり遂げたいことはある？</li>\n  <li>アジャイル、モブプロにおける人事評価</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"https://lean-agile.fm/\">omoiyari.fm</a></li>\n  <li>アジャイルコーチという職種って何やってるの？</li>\n  <li>会社に対するオーナーシップ</li>\n  <li>プロダクトオーナーシップが全員必須というわけではない</li>\n  <li>プロダクトオーナーシップはあると何が嬉しいのか？</li>\n  <li>1on1におけるフレーミング</li>\n  <li>1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？</li>\n  <li>リーン、アジャイルとはそもそも何なのか？その関連は？</li>\n  <li>スクラムと開発速度の考え方</li>\n  <li>効果と効率</li>\n  <li>モブプログラミングは意外とベロシティが出る</li>\n  <li>モブプロで浮き彫りになるコミュニケーションの質</li>\n  <li>スクラムの何が好き？</li>\n  <li>omoiyari.fmのFearlessChangeネタは？</li>\n  <li>ykmc09の好きなFearlessChangeのパターン3つ</li>\n  <li>Face to Faceで話すことの効果</li>\n  <li>心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？</li>\n  <li>“雑”ということの重要性</li>\n  <li>大企業/組織における心理的安全性を高めるための社内Podcast</li>\n  <li>いつかSIerに戻ってみたい理由</li>\n  <li>生涯でやり遂げたいことはある？</li>\n  <li>アジャイル、モブプロにおける人事評価</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "5. アジャイルコーチ、リーン・アジャイルの考え方、心理的安全性とか",
      "itunes:episodeType": "full",
      "podcast:episode": 6
    },
    {
      "title": "4. Kamueeとか、Cuisharkとか",
      "link": "https://fukabori.fm/episode/4",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html\">Kamuee</a>とは</li>\n  <li>NFV</li>\n  <li>ソフトウェアルータのメリット</li>\n  <li>Kamueeを作るモチベーション</li>\n  <li>既存のソフトウェアルータの限界、問題点</li>\n  <li>DPDKとは</li>\n  <li>Trieとは</li>\n  <li>ラストレベルキャッシュ</li>\n  <li><a href=\"https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html\">PopTrie</a>とは</li>\n  <li>Kamueeが他に実装しているもの</li>\n  <li>InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話</li>\n  <li><a href=\"https://ntt-developers.github.io/ntt-tech-conference/03/\">NTT Tech Conference #3</a></li>\n  <li><a href=\"https://github.com/cuishark/cuishark\">Cuishark</a></li>\n  <li>Cuisharkを作るモチベーション</li>\n  <li>Cuisharkの実装</li>\n  <li>Cursesを生で使うのは大変</li>\n  <li>未踏とは？</li>\n  <li>DPDKを使うのは大変</li>\n  <li>未踏2017テーマ<a href=\"https://github.com/susanow\">環境に対して自動最適化する高性能通信基盤の開発</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/4"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngpxp7s2gahmh2cc25.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Tue, 14 Aug 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngpxp7s2gahmh2cc25.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3981/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:51:54",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html\">Kamuee</a>とは</li>\n  <li>NFV</li>\n  <li>ソフトウェアルータのメリット</li>\n  <li>Kamueeを作るモチベーション</li>\n  <li>既存のソフトウェアルータの限界、問題点</li>\n  <li>DPDKとは</li>\n  <li>Trieとは</li>\n  <li>ラストレベルキャッシュ</li>\n  <li><a href=\"https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html\">PopTrie</a>とは</li>\n  <li>Kamueeが他に実装しているもの</li>\n  <li>InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話</li>\n  <li><a href=\"https://ntt-developers.github.io/ntt-tech-conference/03/\">NTT Tech Conference #3</a></li>\n  <li><a href=\"https://github.com/cuishark/cuishark\">Cuishark</a></li>\n  <li>Cuisharkを作るモチベーション</li>\n  <li>Cuisharkの実装</li>\n  <li>Cursesを生で使うのは大変</li>\n  <li>未踏とは？</li>\n  <li>DPDKを使うのは大変</li>\n  <li>未踏2017テーマ<a href=\"https://github.com/susanow\">環境に対して自動最適化する高性能通信基盤の開発</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n<ul>\n  <li><a href=\"https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html\">Kamuee</a>とは</li>\n  <li>NFV</li>\n  <li>ソフトウェアルータのメリット</li>\n  <li>Kamueeを作るモチベーション</li>\n  <li>既存のソフトウェアルータの限界、問題点</li>\n  <li>DPDKとは</li>\n  <li>Trieとは</li>\n  <li>ラストレベルキャッシュ</li>\n  <li><a href=\"https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html\">PopTrie</a>とは</li>\n  <li>Kamueeが他に実装しているもの</li>\n  <li>InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話</li>\n  <li><a href=\"https://ntt-developers.github.io/ntt-tech-conference/03/\">NTT Tech Conference #3</a></li>\n  <li><a href=\"https://github.com/cuishark/cuishark\">Cuishark</a></li>\n  <li>Cuisharkを作るモチベーション</li>\n  <li>Cuisharkの実装</li>\n  <li>Cursesを生で使うのは大変</li>\n  <li>未踏とは？</li>\n  <li>DPDKを使うのは大変</li>\n  <li>未踏2017テーマ<a href=\"https://github.com/susanow\">環境に対して自動最適化する高性能通信基盤の開発</a></li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "4. Kamueeとか、Cuisharkとか",
      "itunes:episodeType": "full",
      "podcast:episode": 5
    },
    {
      "title": "3. botnetとか、CTFとか",
      "link": "https://fukabori.fm/episode/3",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>botnetとは？</li>\n  <li>Herderとは？</li>\n  <li>どうやって感染するのか？</li>\n  <li>どうやってbot化していることを発見するのか？</li>\n  <li>リスニングポストとは？</li>\n  <li>botnetって買えるの？</li>\n  <li>イスラエル軍が凄い</li>\n  <li>DDoSを使う動機？</li>\n  <li>DDoSってどうやって対策していくのか？</li>\n  <li>セキュリティの勉強ってどうやるの？</li>\n  <li>CTFとは？</li>\n  <li>CTFtime (エピソード中のCTFTimesは誤りです)</li>\n  <li>通信事業者ってbotnet対策に何かしているの？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/3"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngyfgz3m3g5wj0jd1m.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sat, 21 Jul 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7ngyfgz3m3g5wj0jd1m.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3980/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:49:12",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>botnetとは？</li>\n  <li>Herderとは？</li>\n  <li>どうやって感染するのか？</li>\n  <li>どうやってbot化していることを発見するのか？</li>\n  <li>リスニングポストとは？</li>\n  <li>botnetって買えるの？</li>\n  <li>イスラエル軍が凄い</li>\n  <li>DDoSを使う動機？</li>\n  <li>DDoSってどうやって対策していくのか？</li>\n  <li>セキュリティの勉強ってどうやるの？</li>\n  <li>CTFとは？</li>\n  <li>CTFtime (エピソード中のCTFTimesは誤りです)</li>\n  <li>通信事業者ってbotnet対策に何かしているの？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>botnetとは？</li>\n  <li>Herderとは？</li>\n  <li>どうやって感染するのか？</li>\n  <li>どうやってbot化していることを発見するのか？</li>\n  <li>リスニングポストとは？</li>\n  <li>botnetって買えるの？</li>\n  <li>イスラエル軍が凄い</li>\n  <li>DDoSを使う動機？</li>\n  <li>DDoSってどうやって対策していくのか？</li>\n  <li>セキュリティの勉強ってどうやるの？</li>\n  <li>CTFとは？</li>\n  <li>CTFtime (エピソード中のCTFTimesは誤りです)</li>\n  <li>通信事業者ってbotnet対策に何かしているの？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "3. botnetとか、CTFとか",
      "itunes:episodeType": "full",
      "podcast:episode": 4
    },
    {
      "title": "2. 仕事よりブログが大事、ブログは自分の子供",
      "link": "https://fukabori.fm/episode/2",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>なぜブログを書くのか？</li>\n  <li>食欲、睡眠欲、ブログ欲</li>\n  <li>3大ブログ書けない理由とは</li>\n  <li>ブログメンタリング</li>\n  <li>相互メンタリング</li>\n  <li>1日24時間しかな事実は知られていない</li>\n  <li>プログラミング講師</li>\n  <li>初心者にRailsを教えるコツ</li>\n  <li>知の高速道路を突き抜けるスピードを加速する</li>\n  <li>モブプログラミング</li>\n  <li>モブプログラミングに向いているお題</li>\n  <li>雑談をしましょう</li>\n  <li>オートクラインとは</li>\n  <li>トランザクティブメモリーとは</li>\n  <li>スウォーミングとは</li>\n  <li>チームビルディング</li>\n  <li>結局リーダは笑顔でいる</li>\n  <li>kakakakkuさんの再現性</li>\n  <li>仕事よりブログが大事</li>\n  <li>ブログも自分の子供</li>\n</ul>\n\n<p>訂正: ダックタイピング -&gt; ラバーダッキング</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/2"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nfmvca2jhmbz2nejkj.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Thu, 12 Jul 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nfmvca2jhmbz2nejkj.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3979/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "01:00:38",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>なぜブログを書くのか？</li>\n  <li>食欲、睡眠欲、ブログ欲</li>\n  <li>3大ブログ書けない理由とは</li>\n  <li>ブログメンタリング</li>\n  <li>相互メンタリング</li>\n  <li>1日24時間しかな事実は知られていない</li>\n  <li>プログラミング講師</li>\n  <li>初心者にRailsを教えるコツ</li>\n  <li>知の高速道路を突き抜けるスピードを加速する</li>\n  <li>モブプログラミング</li>\n  <li>モブプログラミングに向いているお題</li>\n  <li>雑談をしましょう</li>\n  <li>オートクラインとは</li>\n  <li>トランザクティブメモリーとは</li>\n  <li>スウォーミングとは</li>\n  <li>チームビルディング</li>\n  <li>結局リーダは笑顔でいる</li>\n  <li>kakakakkuさんの再現性</li>\n  <li>仕事よりブログが大事</li>\n  <li>ブログも自分の子供</li>\n</ul>\n\n<p>訂正: ダックタイピング -&gt; ラバーダッキング</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>なぜブログを書くのか？</li>\n  <li>食欲、睡眠欲、ブログ欲</li>\n  <li>3大ブログ書けない理由とは</li>\n  <li>ブログメンタリング</li>\n  <li>相互メンタリング</li>\n  <li>1日24時間しかな事実は知られていない</li>\n  <li>プログラミング講師</li>\n  <li>初心者にRailsを教えるコツ</li>\n  <li>知の高速道路を突き抜けるスピードを加速する</li>\n  <li>モブプログラミング</li>\n  <li>モブプログラミングに向いているお題</li>\n  <li>雑談をしましょう</li>\n  <li>オートクラインとは</li>\n  <li>トランザクティブメモリーとは</li>\n  <li>スウォーミングとは</li>\n  <li>チームビルディング</li>\n  <li>結局リーダは笑顔でいる</li>\n  <li>kakakakkuさんの再現性</li>\n  <li>仕事よりブログが大事</li>\n  <li>ブログも自分の子供</li>\n</ul>\n\n<p>訂正: ダックタイピング -&gt; ラバーダッキング</p><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "2. 仕事よりブログが大事、ブログは自分の子供",
      "itunes:episodeType": "full",
      "podcast:episode": 3
    },
    {
      "title": "1. IETFとか、QUICとか",
      "link": "https://fukabori.fm/episode/1",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>IETFって何？どんなところ？</li>\n  <li>RFCとは？</li>\n  <li>ハミングによるコンセンサス</li>\n  <li>IETFに参加するのはどんな人たちがいる？</li>\n  <li>個人で参加するには？</li>\n  <li>IETFでの雑談、ロビーイングの重要性</li>\n  <li>QUICって何？なぜ生まれたの？</li>\n  <li>Google QUICとIETF QUIC</li>\n  <li>HoL とは？</li>\n  <li>なぜQUICは、ユーザランドで実装しているのか？</li>\n  <li>TCP既存プロトコル vs QUIC(UDP)プロトコル</li>\n  <li>QUICが効果的に効くところ</li>\n  <li>通信事業者のミドルボックスの負荷、コネクション残存</li>\n  <li>通信事業者はQUICをどう見る？</li>\n  <li>ネットワークの硬直化(Ossification)</li>\n  <li>QUICの折り合いの付け所</li>\n  <li>QUICの将来の展望</li>\n  <li>QUICを追っかけるにはどうすればいい？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/1"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nftzp7cxjvxs5ex73w.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Wed, 23 May 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nftzp7cxjvxs5ex73w.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3978/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:55:48",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>IETFって何？どんなところ？</li>\n  <li>RFCとは？</li>\n  <li>ハミングによるコンセンサス</li>\n  <li>IETFに参加するのはどんな人たちがいる？</li>\n  <li>個人で参加するには？</li>\n  <li>IETFでの雑談、ロビーイングの重要性</li>\n  <li>QUICって何？なぜ生まれたの？</li>\n  <li>Google QUICとIETF QUIC</li>\n  <li>HoL とは？</li>\n  <li>なぜQUICは、ユーザランドで実装しているのか？</li>\n  <li>TCP既存プロトコル vs QUIC(UDP)プロトコル</li>\n  <li>QUICが効果的に効くところ</li>\n  <li>通信事業者のミドルボックスの負荷、コネクション残存</li>\n  <li>通信事業者はQUICをどう見る？</li>\n  <li>ネットワークの硬直化(Ossification)</li>\n  <li>QUICの折り合いの付け所</li>\n  <li>QUICの将来の展望</li>\n  <li>QUICを追っかけるにはどうすればいい？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>IETFって何？どんなところ？</li>\n  <li>RFCとは？</li>\n  <li>ハミングによるコンセンサス</li>\n  <li>IETFに参加するのはどんな人たちがいる？</li>\n  <li>個人で参加するには？</li>\n  <li>IETFでの雑談、ロビーイングの重要性</li>\n  <li>QUICって何？なぜ生まれたの？</li>\n  <li>Google QUICとIETF QUIC</li>\n  <li>HoL とは？</li>\n  <li>なぜQUICは、ユーザランドで実装しているのか？</li>\n  <li>TCP既存プロトコル vs QUIC(UDP)プロトコル</li>\n  <li>QUICが効果的に効くところ</li>\n  <li>通信事業者のミドルボックスの負荷、コネクション残存</li>\n  <li>通信事業者はQUICをどう見る？</li>\n  <li>ネットワークの硬直化(Ossification)</li>\n  <li>QUICの折り合いの付け所</li>\n  <li>QUICの将来の展望</li>\n  <li>QUICを追っかけるにはどうすればいい？</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "1. IETFとか、QUICとか",
      "itunes:episodeType": "full",
      "podcast:episode": 2
    },
    {
      "title": "0. Fukabori.fmについて",
      "link": "https://fukabori.fm/episode/0",
      "description": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>自己紹介</li>\n  <li>Podcastで今後話していくコンテンツについて</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "guid": {
        "@isPermaLink": false,
        "#text": "https://fukabori.fm/episode/0"
      },
      "enclosure": {
        "@url": "https://r.pitpa.jp/episodes/01fhj2t7nfkw0k83446hwrna70.mp3",
        "@length": 0,
        "@type": "audio/mpeg",
        "#text": null
      },
      "pubDate": "Sun, 13 May 2018 15:00:00 +0900",
      "media:content": [
        {
          "@url": "https://r.pitpa.jp/episodes/01fhj2t7nfkw0k83446hwrna70.mp3",
          "@type": "audio/mpeg",
          "media:player": {
            "@url": "https://pitpa.jp/player/fukabori/episodes/3977/embedded",
            "#text": null
          }
        },
        {
          "@url": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
          "@type": "image/png",
          "#text": null
        }
      ],
      "itunes:author": "iwashi",
      "itunes:image": {
        "@href": "https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png",
        "#text": null
      },
      "itunes:duration": "00:01:30",
      "itunes:explicit": "no",
      "itunes:subtitle": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>自己紹介</li>\n  <li>Podcastで今後話していくコンテンツについて</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:summary": "<h2 id=\"話したネタ\">話したネタ</h2>\n\n<ul>\n  <li>自己紹介</li>\n  <li>Podcastで今後話していくコンテンツについて</li>\n</ul><h3>番組のスポンサー</h3><ul><li><a href=https://pitpa.cc/3TQjBT5>転職するなら【Green】 - IT/インターネット業界に強い転職サイト</a></li></ul>",
      "itunes:title": "0. Fukabori.fmについて",
      "itunes:episodeType": "full",
      "podcast:episode": 1
    }
  ]
}