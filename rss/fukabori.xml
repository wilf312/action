<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:media="http://search.yahoo.com/mrss/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podcast="https://podcastindex.org/namespace/1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>fukabori.fm</title>
    <link>https://fukabori.fm/</link>
    <description>技術・組織・マネジメントなどを深掘りして楽しむPodcastです。</description>
    <copyright>fukabori.fm</copyright>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>PitPaStudio</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 06 Sep 2022 13:01:13 +0000</lastBuildDate>
    <itunes:author>iwashi</itunes:author>
    <itunes:category text="Technology"/>
    <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
    <itunes:explicit>no</itunes:explicit>
    <itunes:new-feed-url>https://pitpa.jp/rss/fukabori</itunes:new-feed-url>
    <itunes:owner>
      <itunes:name>iwashi</itunes:name>
      <itunes:email>fukabori.fm@gmail.com</itunes:email>
    </itunes:owner>
    <itunes:summary>技術・組織・マネジメントなどを深掘りして楽しむPodcastです。</itunes:summary>
    <itunes:type>episodic</itunes:type>
    <item>
      <title>79. BigQuery と D.Node w/ g_suzutatsu</title>
      <description>&lt;p&gt;D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BigQueryとは？&lt;/li&gt;
&lt;li&gt;データウェアハウス(DWH)とは？&lt;/li&gt;
&lt;li&gt;データウェアハウスとRDBとの違いは？&lt;/li&gt;
&lt;li&gt;BigQueryの利用フロー・方法&lt;/li&gt;
&lt;li&gt;RDBの変更をBigQueryに反映するユースケース&lt;/li&gt;
&lt;li&gt;BigQueryと併用されるBIツール&lt;/li&gt;
&lt;li&gt;Tableau&lt;/li&gt;
&lt;li&gt;Google データポータル&lt;/li&gt;
&lt;li&gt;BigQuery の内部アーキテクチャは？&lt;/li&gt;
&lt;li&gt;Compute と Storage&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system"&gt;Colossus&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64"&gt;Dremel&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;Slot というCPUとメモリを抽象化した単位&lt;/li&gt;
&lt;li&gt;分散メモリとは？&lt;/li&gt;
&lt;li&gt;分割統治法&lt;/li&gt;
&lt;li&gt;最近の BiqQuery の進化で面白いところは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja"&gt;BigQuery の マテリアライズドビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？&lt;/li&gt;
&lt;li&gt;マテリアライズドビュー利用時の注意点とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;D.Node&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;suzutatsuさんのお仕事内容&lt;/li&gt;
&lt;li&gt;社内にはどんな人が多い？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;D.Node 採用ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;デロイト トーマツ ノード合同会社(D.Node)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/080_qEHby.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01gc5ek16gxtk98sq4w00dx7zs.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 05 Sep 2022 08:50:18 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01gc5ek16gxtk98sq4w00dx7zs.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/11213/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:39:21</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BigQueryとは？&lt;/li&gt;
&lt;li&gt;データウェアハウス(DWH)とは？&lt;/li&gt;
&lt;li&gt;データウェアハウスとRDBとの違いは？&lt;/li&gt;
&lt;li&gt;BigQueryの利用フロー・方法&lt;/li&gt;
&lt;li&gt;RDBの変更をBigQueryに反映するユースケース&lt;/li&gt;
&lt;li&gt;BigQueryと併用されるBIツール&lt;/li&gt;
&lt;li&gt;Tableau&lt;/li&gt;
&lt;li&gt;Google データポータル&lt;/li&gt;
&lt;li&gt;BigQuery の内部アーキテクチャは？&lt;/li&gt;
&lt;li&gt;Compute と Storage&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system"&gt;Colossus&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64"&gt;Dremel&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;Slot というCPUとメモリを抽象化した単位&lt;/li&gt;
&lt;li&gt;分散メモリとは？&lt;/li&gt;
&lt;li&gt;分割統治法&lt;/li&gt;
&lt;li&gt;最近の BiqQuery の進化で面白いところは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja"&gt;BigQuery の マテリアライズドビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？&lt;/li&gt;
&lt;li&gt;マテリアライズドビュー利用時の注意点とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;D.Node&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;suzutatsuさんのお仕事内容&lt;/li&gt;
&lt;li&gt;社内にはどんな人が多い？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;D.Node 採用ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;デロイト トーマツ ノード合同会社(D.Node)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BigQueryとは？&lt;/li&gt;
&lt;li&gt;データウェアハウス(DWH)とは？&lt;/li&gt;
&lt;li&gt;データウェアハウスとRDBとの違いは？&lt;/li&gt;
&lt;li&gt;BigQueryの利用フロー・方法&lt;/li&gt;
&lt;li&gt;RDBの変更をBigQueryに反映するユースケース&lt;/li&gt;
&lt;li&gt;BigQueryと併用されるBIツール&lt;/li&gt;
&lt;li&gt;Tableau&lt;/li&gt;
&lt;li&gt;Google データポータル&lt;/li&gt;
&lt;li&gt;BigQuery の内部アーキテクチャは？&lt;/li&gt;
&lt;li&gt;Compute と Storage&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system"&gt;Colossus&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64"&gt;Dremel&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;Slot というCPUとメモリを抽象化した単位&lt;/li&gt;
&lt;li&gt;分散メモリとは？&lt;/li&gt;
&lt;li&gt;分割統治法&lt;/li&gt;
&lt;li&gt;最近の BiqQuery の進化で面白いところは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja"&gt;BigQuery の マテリアライズドビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？&lt;/li&gt;
&lt;li&gt;マテリアライズドビュー利用時の注意点とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;D.Node&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;suzutatsuさんのお仕事内容&lt;/li&gt;
&lt;li&gt;社内にはどんな人が多い？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;D.Node 採用ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join"&gt;デロイト トーマツ ノード合同会社(D.Node)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>79. BigQuery と D.Node w/ g_suzutatsu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>80</podcast:episode>
    </item>
    <item>
      <title>78. プロジェクトスプリント（後編）w/ motoi, kedamatti</title>
      <description>&lt;p&gt;プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.projectsprint.org/"&gt;プロジェクトスプリント&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントの作成経緯&lt;/li&gt;
&lt;li&gt;プロジェクトが上手く進んでいる兆候が定例会議にあった&lt;/li&gt;
&lt;li&gt;ホラクラシーとスクラム&lt;/li&gt;
&lt;li&gt;ホラクラシーとは？&lt;/li&gt;
&lt;li&gt;役割（ロール）と違和感（テンション）&lt;/li&gt;
&lt;li&gt;タクティカルミーティングとは&lt;/li&gt;
&lt;li&gt;役職（権限）と役割は関係がある？&lt;/li&gt;
&lt;li&gt;ホラクラシーとスクラムとの共通点は？&lt;/li&gt;
&lt;li&gt;自律的な行動を生まれやすくする仕組みを作る&lt;/li&gt;
&lt;li&gt;変化し続けるものを切り取ることで改善しやすくする&lt;/li&gt;
&lt;li&gt;上手くいっている定例会議とは何か？&lt;/li&gt;
&lt;li&gt;チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。&lt;/li&gt;
&lt;li&gt;会議の分類（4目的 x 人数)&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3e2eUWi"&gt;会議の進め方 / 高橋 誠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある&lt;/li&gt;
&lt;li&gt;プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？&lt;/li&gt;
&lt;li&gt;関係性によって「共有」のやり方を変える&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3CGf7bR"&gt;センスメーキング イン オーガニゼーションズ / カール.E.ワイク&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントを具体的にどう進めていくのか？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3QUvaHu"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;会議体をAPIとして捉える&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/"&gt;COPILOT BLOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RPC: Remote Procedure Call&lt;/li&gt;
&lt;li&gt;会議の伴走方法は？&lt;/li&gt;
&lt;li&gt;会議体の変更めんどくさい問題&lt;/li&gt;
&lt;li&gt;会議体を見直す変更タイミングはいつ？&lt;/li&gt;
&lt;li&gt;テンショントリアージ&lt;/li&gt;
&lt;li&gt;「お尻が痛い」&lt;/li&gt;
&lt;li&gt;「何が必要ですか？」 / What do you need?”&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントは &lt;a href="https://github.com/copilot-jp/project-sprint"&gt;OSS公開中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copilot.jp/recruit/"&gt;採用 株式会社コパイロツト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://supergoodmeetings.com/"&gt;SuperGoodMeetings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uniba.jp/join.html"&gt;採用 ユニバ株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/079_YNwya.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01gbh8ybes4zkn8jt27z838d7g.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 28 Aug 2022 13:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01gbh8ybes4zkn8jt27z838d7g.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/11052/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:39:30</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.projectsprint.org/"&gt;プロジェクトスプリント&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントの作成経緯&lt;/li&gt;
&lt;li&gt;プロジェクトが上手く進んでいる兆候が定例会議にあった&lt;/li&gt;
&lt;li&gt;ホラクラシーとスクラム&lt;/li&gt;
&lt;li&gt;ホラクラシーとは？&lt;/li&gt;
&lt;li&gt;役割（ロール）と違和感（テンション）&lt;/li&gt;
&lt;li&gt;タクティカルミーティングとは&lt;/li&gt;
&lt;li&gt;役職（権限）と役割は関係がある？&lt;/li&gt;
&lt;li&gt;ホラクラシーとスクラムとの共通点は？&lt;/li&gt;
&lt;li&gt;自律的な行動を生まれやすくする仕組みを作る&lt;/li&gt;
&lt;li&gt;変化し続けるものを切り取ることで改善しやすくする&lt;/li&gt;
&lt;li&gt;上手くいっている定例会議とは何か？&lt;/li&gt;
&lt;li&gt;チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。&lt;/li&gt;
&lt;li&gt;会議の分類（4目的 x 人数)&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3e2eUWi"&gt;会議の進め方 / 高橋 誠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある&lt;/li&gt;
&lt;li&gt;プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？&lt;/li&gt;
&lt;li&gt;関係性によって「共有」のやり方を変える&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3CGf7bR"&gt;センスメーキング イン オーガニゼーションズ / カール.E.ワイク&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントを具体的にどう進めていくのか？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3QUvaHu"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;会議体をAPIとして捉える&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/"&gt;COPILOT BLOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RPC: Remote Procedure Call&lt;/li&gt;
&lt;li&gt;会議の伴走方法は？&lt;/li&gt;
&lt;li&gt;会議体の変更めんどくさい問題&lt;/li&gt;
&lt;li&gt;会議体を見直す変更タイミングはいつ？&lt;/li&gt;
&lt;li&gt;テンショントリアージ&lt;/li&gt;
&lt;li&gt;「お尻が痛い」&lt;/li&gt;
&lt;li&gt;「何が必要ですか？」 / What do you need?”&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントは &lt;a href="https://github.com/copilot-jp/project-sprint"&gt;OSS公開中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copilot.jp/recruit/"&gt;採用 株式会社コパイロツト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://supergoodmeetings.com/"&gt;SuperGoodMeetings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uniba.jp/join.html"&gt;採用 ユニバ株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.projectsprint.org/"&gt;プロジェクトスプリント&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントの作成経緯&lt;/li&gt;
&lt;li&gt;プロジェクトが上手く進んでいる兆候が定例会議にあった&lt;/li&gt;
&lt;li&gt;ホラクラシーとスクラム&lt;/li&gt;
&lt;li&gt;ホラクラシーとは？&lt;/li&gt;
&lt;li&gt;役割（ロール）と違和感（テンション）&lt;/li&gt;
&lt;li&gt;タクティカルミーティングとは&lt;/li&gt;
&lt;li&gt;役職（権限）と役割は関係がある？&lt;/li&gt;
&lt;li&gt;ホラクラシーとスクラムとの共通点は？&lt;/li&gt;
&lt;li&gt;自律的な行動を生まれやすくする仕組みを作る&lt;/li&gt;
&lt;li&gt;変化し続けるものを切り取ることで改善しやすくする&lt;/li&gt;
&lt;li&gt;上手くいっている定例会議とは何か？&lt;/li&gt;
&lt;li&gt;チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。&lt;/li&gt;
&lt;li&gt;会議の分類（4目的 x 人数)&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3e2eUWi"&gt;会議の進め方 / 高橋 誠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある&lt;/li&gt;
&lt;li&gt;プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？&lt;/li&gt;
&lt;li&gt;関係性によって「共有」のやり方を変える&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3CGf7bR"&gt;センスメーキング イン オーガニゼーションズ / カール.E.ワイク&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントを具体的にどう進めていくのか？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3QUvaHu"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;会議体をAPIとして捉える&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/"&gt;COPILOT BLOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RPC: Remote Procedure Call&lt;/li&gt;
&lt;li&gt;会議の伴走方法は？&lt;/li&gt;
&lt;li&gt;会議体の変更めんどくさい問題&lt;/li&gt;
&lt;li&gt;会議体を見直す変更タイミングはいつ？&lt;/li&gt;
&lt;li&gt;テンショントリアージ&lt;/li&gt;
&lt;li&gt;「お尻が痛い」&lt;/li&gt;
&lt;li&gt;「何が必要ですか？」 / What do you need?”&lt;/li&gt;
&lt;li&gt;プロジェクトスプリントは &lt;a href="https://github.com/copilot-jp/project-sprint"&gt;OSS公開中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copilot.jp/recruit/"&gt;採用 株式会社コパイロツト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://supergoodmeetings.com/"&gt;SuperGoodMeetings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uniba.jp/join.html"&gt;採用 ユニバ株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>78. プロジェクトスプリント（後編）w/ motoi, kedamatti</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>79</podcast:episode>
    </item>
    <item>
      <title>77. リモートワークにおけるファシリテーション（前編）</title>
      <description>&lt;p&gt;リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12"&gt;リモートワークにおけるファシリテーションの方法論&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/entry/remote-facilitation"&gt;リモートワークにおけるファシリテーションの方法論を公開します！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;リモートファシリテーションのスライドを作ったきっかけは？&lt;/li&gt;
&lt;li&gt;ファシリテーションとは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3Ay6EWR"&gt;ファシリテーション入門〈第2版〉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コンテントとプロセス&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/yuki_anzai/n/n1cd936d56c51"&gt;組織開発の氷山モデルが言及される記事&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;なぜ全員でファシリテーターをする必要があるのか？&lt;/li&gt;
&lt;li&gt;リモートワークのファシリテーションで、特に何を意識するといいのか？&lt;/li&gt;
&lt;li&gt;地域における合意形成の難しさ&lt;/li&gt;
&lt;li&gt;なぜ合意形成はこんなに難しいのか？&lt;/li&gt;
&lt;li&gt;自分の理解、自分自身の考えをどうやって把握すればいいのか？&lt;/li&gt;
&lt;li&gt;点ではなく、範囲で考えるのが大事&lt;/li&gt;
&lt;li&gt;発話することによって初めて認識する&lt;/li&gt;
&lt;li&gt;オートクライン効果&lt;/li&gt;
&lt;li&gt;口頭で読み上げるとロジックの破綻に気づく&lt;/li&gt;
&lt;li&gt;（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）&lt;/li&gt;
&lt;li&gt;TOC(制約理論)が説明される書籍: &lt;a href="https://amzn.to/3R4a8pd"&gt;ザ・ゴール２&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;言語化することによって、客観的に見れる状態になる&lt;/li&gt;
&lt;li&gt;なぜ、参加人数を絞るべきなのか？&lt;/li&gt;
&lt;li&gt;短時間で複数のミーティングを開催したほうが良い理由は何か？&lt;/li&gt;
&lt;li&gt;メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける&lt;/li&gt;
&lt;li&gt;環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる&lt;/li&gt;
&lt;li&gt;環境が固定していない、変化しているとは具体的には？&lt;/li&gt;
&lt;li&gt;チャットでの書きづらさは、どこからやってくるのか？&lt;/li&gt;
&lt;li&gt;個人ワーク重要説&lt;/li&gt;
&lt;li&gt;ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？&lt;/li&gt;
&lt;li&gt;最低限、何を事前に準備すればよいのか？&lt;/li&gt;
&lt;li&gt;Doneの定義&lt;/li&gt;
&lt;li&gt;ミーティングで共有する時間をとるべきなのか？&lt;/li&gt;
&lt;li&gt;getting on the same page &lt;/li&gt;
&lt;li&gt;発散・収束・共有の順序性は？&lt;/li&gt;
&lt;li&gt;収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？&lt;/li&gt;
&lt;li&gt;合意形成のレベル・ラインを確認する・下げる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/66"&gt;ep.66から&amp;quot;アイデアの決め方を事前に合意しておく&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「あれば言ってください」というのは難しい。どうやって対応するか？&lt;/li&gt;
&lt;li&gt;画面に注目してもらいやすくなった&lt;/li&gt;
&lt;li&gt;議事録は、どうやって作っていけばいいのか？&lt;/li&gt;
&lt;li&gt;議事録をみんなで書くためのコツは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copilot.jp/recruit/"&gt;採用 | 株式会社コパイロツト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/"&gt;COPILOT BLOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/078_SgumA.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01gaw9vqkhqs87g7vafkkj77zx.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sat, 20 Aug 2022 09:18:47 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01gaw9vqkhqs87g7vafkkj77zx.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/10855/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:49:02</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12"&gt;リモートワークにおけるファシリテーションの方法論&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/entry/remote-facilitation"&gt;リモートワークにおけるファシリテーションの方法論を公開します！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;リモートファシリテーションのスライドを作ったきっかけは？&lt;/li&gt;
&lt;li&gt;ファシリテーションとは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3Ay6EWR"&gt;ファシリテーション入門〈第2版〉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コンテントとプロセス&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/yuki_anzai/n/n1cd936d56c51"&gt;組織開発の氷山モデルが言及される記事&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;なぜ全員でファシリテーターをする必要があるのか？&lt;/li&gt;
&lt;li&gt;リモートワークのファシリテーションで、特に何を意識するといいのか？&lt;/li&gt;
&lt;li&gt;地域における合意形成の難しさ&lt;/li&gt;
&lt;li&gt;なぜ合意形成はこんなに難しいのか？&lt;/li&gt;
&lt;li&gt;自分の理解、自分自身の考えをどうやって把握すればいいのか？&lt;/li&gt;
&lt;li&gt;点ではなく、範囲で考えるのが大事&lt;/li&gt;
&lt;li&gt;発話することによって初めて認識する&lt;/li&gt;
&lt;li&gt;オートクライン効果&lt;/li&gt;
&lt;li&gt;口頭で読み上げるとロジックの破綻に気づく&lt;/li&gt;
&lt;li&gt;（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）&lt;/li&gt;
&lt;li&gt;TOC(制約理論)が説明される書籍: &lt;a href="https://amzn.to/3R4a8pd"&gt;ザ・ゴール２&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;言語化することによって、客観的に見れる状態になる&lt;/li&gt;
&lt;li&gt;なぜ、参加人数を絞るべきなのか？&lt;/li&gt;
&lt;li&gt;短時間で複数のミーティングを開催したほうが良い理由は何か？&lt;/li&gt;
&lt;li&gt;メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける&lt;/li&gt;
&lt;li&gt;環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる&lt;/li&gt;
&lt;li&gt;環境が固定していない、変化しているとは具体的には？&lt;/li&gt;
&lt;li&gt;チャットでの書きづらさは、どこからやってくるのか？&lt;/li&gt;
&lt;li&gt;個人ワーク重要説&lt;/li&gt;
&lt;li&gt;ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？&lt;/li&gt;
&lt;li&gt;最低限、何を事前に準備すればよいのか？&lt;/li&gt;
&lt;li&gt;Doneの定義&lt;/li&gt;
&lt;li&gt;ミーティングで共有する時間をとるべきなのか？&lt;/li&gt;
&lt;li&gt;getting on the same page &lt;/li&gt;
&lt;li&gt;発散・収束・共有の順序性は？&lt;/li&gt;
&lt;li&gt;収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？&lt;/li&gt;
&lt;li&gt;合意形成のレベル・ラインを確認する・下げる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/66"&gt;ep.66から&amp;quot;アイデアの決め方を事前に合意しておく&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「あれば言ってください」というのは難しい。どうやって対応するか？&lt;/li&gt;
&lt;li&gt;画面に注目してもらいやすくなった&lt;/li&gt;
&lt;li&gt;議事録は、どうやって作っていけばいいのか？&lt;/li&gt;
&lt;li&gt;議事録をみんなで書くためのコツは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copilot.jp/recruit/"&gt;採用 | 株式会社コパイロツト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/"&gt;COPILOT BLOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12"&gt;リモートワークにおけるファシリテーションの方法論&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/entry/remote-facilitation"&gt;リモートワークにおけるファシリテーションの方法論を公開します！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;リモートファシリテーションのスライドを作ったきっかけは？&lt;/li&gt;
&lt;li&gt;ファシリテーションとは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3Ay6EWR"&gt;ファシリテーション入門〈第2版〉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コンテントとプロセス&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/yuki_anzai/n/n1cd936d56c51"&gt;組織開発の氷山モデルが言及される記事&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;なぜ全員でファシリテーターをする必要があるのか？&lt;/li&gt;
&lt;li&gt;リモートワークのファシリテーションで、特に何を意識するといいのか？&lt;/li&gt;
&lt;li&gt;地域における合意形成の難しさ&lt;/li&gt;
&lt;li&gt;なぜ合意形成はこんなに難しいのか？&lt;/li&gt;
&lt;li&gt;自分の理解、自分自身の考えをどうやって把握すればいいのか？&lt;/li&gt;
&lt;li&gt;点ではなく、範囲で考えるのが大事&lt;/li&gt;
&lt;li&gt;発話することによって初めて認識する&lt;/li&gt;
&lt;li&gt;オートクライン効果&lt;/li&gt;
&lt;li&gt;口頭で読み上げるとロジックの破綻に気づく&lt;/li&gt;
&lt;li&gt;（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）&lt;/li&gt;
&lt;li&gt;TOC(制約理論)が説明される書籍: &lt;a href="https://amzn.to/3R4a8pd"&gt;ザ・ゴール２&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;言語化することによって、客観的に見れる状態になる&lt;/li&gt;
&lt;li&gt;なぜ、参加人数を絞るべきなのか？&lt;/li&gt;
&lt;li&gt;短時間で複数のミーティングを開催したほうが良い理由は何か？&lt;/li&gt;
&lt;li&gt;メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける&lt;/li&gt;
&lt;li&gt;環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる&lt;/li&gt;
&lt;li&gt;環境が固定していない、変化しているとは具体的には？&lt;/li&gt;
&lt;li&gt;チャットでの書きづらさは、どこからやってくるのか？&lt;/li&gt;
&lt;li&gt;個人ワーク重要説&lt;/li&gt;
&lt;li&gt;ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？&lt;/li&gt;
&lt;li&gt;最低限、何を事前に準備すればよいのか？&lt;/li&gt;
&lt;li&gt;Doneの定義&lt;/li&gt;
&lt;li&gt;ミーティングで共有する時間をとるべきなのか？&lt;/li&gt;
&lt;li&gt;getting on the same page &lt;/li&gt;
&lt;li&gt;発散・収束・共有の順序性は？&lt;/li&gt;
&lt;li&gt;収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？&lt;/li&gt;
&lt;li&gt;合意形成のレベル・ラインを確認する・下げる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/66"&gt;ep.66から&amp;quot;アイデアの決め方を事前に合意しておく&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「あれば言ってください」というのは難しい。どうやって対応するか？&lt;/li&gt;
&lt;li&gt;画面に注目してもらいやすくなった&lt;/li&gt;
&lt;li&gt;議事録は、どうやって作っていけばいいのか？&lt;/li&gt;
&lt;li&gt;議事録をみんなで書くためのコツは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copilot.jp/recruit/"&gt;採用 | 株式会社コパイロツト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/"&gt;COPILOT BLOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>77. リモートワークにおけるファシリテーション（前編）</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>78</podcast:episode>
    </item>
    <item>
      <title>76. モダンウェブフロントエンド(2022)に至る歴史 - React Server Component、SSR Streaming w/ morishin127</title>
      <description>&lt;p&gt;2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/2022/06/21/130736"&gt;モダンウェブフロントエンド勉強会を開催しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもWebページのダウンロードって、どう始まった？&lt;/li&gt;
&lt;li&gt;JavaScriptがマウスカーソルをキラキラさせていた時代&lt;/li&gt;
&lt;li&gt;Ajaxの登場や、jQuery&lt;/li&gt;
&lt;li&gt;フロントエンドMVC、Backbone.js、Knockout.js&lt;/li&gt;
&lt;li&gt;Reactは何が革命的だったのか？&lt;/li&gt;
&lt;li&gt;手続き型の実装は何が辛かったのか？&lt;/li&gt;
&lt;li&gt;SPA(Single Page Application)&lt;/li&gt;
&lt;li&gt;MPA(Multi Page Application)&lt;/li&gt;
&lt;li&gt;CSR(Client Side Rendering)&lt;/li&gt;
&lt;li&gt;サーバーサイドがJSONを返す時代へ&lt;/li&gt;
&lt;li&gt;History API&lt;/li&gt;
&lt;li&gt;SPAが抱える課題は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/dynamic-og-image"&gt;レシピページのOGP画像を動的に生成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSR(Server Side Rendering) と Next.js&lt;/li&gt;
&lt;li&gt;Hydrate は何を意味する？&lt;/li&gt;
&lt;li&gt;SSG(Static Site Generation) とは？&lt;/li&gt;
&lt;li&gt;Jekyll と Hugo&lt;/li&gt;
&lt;li&gt;ISR(Incremental Static Regeneration) とは？&lt;/li&gt;
&lt;li&gt;Vercel へのデプロイ&lt;/li&gt;
&lt;li&gt;SSR が抱える課題は？&lt;/li&gt;
&lt;li&gt;SSR Streaming とは？&lt;/li&gt;
&lt;li&gt;Streaming HTML と Selective Hydration&lt;/li&gt;
&lt;li&gt;Suspense Component&lt;/li&gt;
&lt;li&gt;&lt;a href="https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/"&gt;algebraic effects&lt;/a&gt; とは&lt;/li&gt;
&lt;li&gt;React Hooks とは？&lt;/li&gt;
&lt;li&gt;Class Component の課題は何だったのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morishin.hatenablog.com/entry/impressions-of-react-hooks"&gt;React Hooks のモチベーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;React Server Component とは何か？&lt;/li&gt;
&lt;li&gt;今Webアプリを作るならどんな構成にするか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/IqkoOYweMjDq"&gt;Meety&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/077_sPtgl.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01g77jtb3fey1x2j7g0p9yxm62.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 06 Jul 2022 01:24:11 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01g77jtb3fey1x2j7g0p9yxm62.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/9657/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:38:44</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/2022/06/21/130736"&gt;モダンウェブフロントエンド勉強会を開催しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもWebページのダウンロードって、どう始まった？&lt;/li&gt;
&lt;li&gt;JavaScriptがマウスカーソルをキラキラさせていた時代&lt;/li&gt;
&lt;li&gt;Ajaxの登場や、jQuery&lt;/li&gt;
&lt;li&gt;フロントエンドMVC、Backbone.js、Knockout.js&lt;/li&gt;
&lt;li&gt;Reactは何が革命的だったのか？&lt;/li&gt;
&lt;li&gt;手続き型の実装は何が辛かったのか？&lt;/li&gt;
&lt;li&gt;SPA(Single Page Application)&lt;/li&gt;
&lt;li&gt;MPA(Multi Page Application)&lt;/li&gt;
&lt;li&gt;CSR(Client Side Rendering)&lt;/li&gt;
&lt;li&gt;サーバーサイドがJSONを返す時代へ&lt;/li&gt;
&lt;li&gt;History API&lt;/li&gt;
&lt;li&gt;SPAが抱える課題は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/dynamic-og-image"&gt;レシピページのOGP画像を動的に生成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSR(Server Side Rendering) と Next.js&lt;/li&gt;
&lt;li&gt;Hydrate は何を意味する？&lt;/li&gt;
&lt;li&gt;SSG(Static Site Generation) とは？&lt;/li&gt;
&lt;li&gt;Jekyll と Hugo&lt;/li&gt;
&lt;li&gt;ISR(Incremental Static Regeneration) とは？&lt;/li&gt;
&lt;li&gt;Vercel へのデプロイ&lt;/li&gt;
&lt;li&gt;SSR が抱える課題は？&lt;/li&gt;
&lt;li&gt;SSR Streaming とは？&lt;/li&gt;
&lt;li&gt;Streaming HTML と Selective Hydration&lt;/li&gt;
&lt;li&gt;Suspense Component&lt;/li&gt;
&lt;li&gt;&lt;a href="https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/"&gt;algebraic effects&lt;/a&gt; とは&lt;/li&gt;
&lt;li&gt;React Hooks とは？&lt;/li&gt;
&lt;li&gt;Class Component の課題は何だったのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morishin.hatenablog.com/entry/impressions-of-react-hooks"&gt;React Hooks のモチベーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;React Server Component とは何か？&lt;/li&gt;
&lt;li&gt;今Webアプリを作るならどんな構成にするか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/IqkoOYweMjDq"&gt;Meety&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/2022/06/21/130736"&gt;モダンウェブフロントエンド勉強会を開催しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもWebページのダウンロードって、どう始まった？&lt;/li&gt;
&lt;li&gt;JavaScriptがマウスカーソルをキラキラさせていた時代&lt;/li&gt;
&lt;li&gt;Ajaxの登場や、jQuery&lt;/li&gt;
&lt;li&gt;フロントエンドMVC、Backbone.js、Knockout.js&lt;/li&gt;
&lt;li&gt;Reactは何が革命的だったのか？&lt;/li&gt;
&lt;li&gt;手続き型の実装は何が辛かったのか？&lt;/li&gt;
&lt;li&gt;SPA(Single Page Application)&lt;/li&gt;
&lt;li&gt;MPA(Multi Page Application)&lt;/li&gt;
&lt;li&gt;CSR(Client Side Rendering)&lt;/li&gt;
&lt;li&gt;サーバーサイドがJSONを返す時代へ&lt;/li&gt;
&lt;li&gt;History API&lt;/li&gt;
&lt;li&gt;SPAが抱える課題は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/dynamic-og-image"&gt;レシピページのOGP画像を動的に生成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSR(Server Side Rendering) と Next.js&lt;/li&gt;
&lt;li&gt;Hydrate は何を意味する？&lt;/li&gt;
&lt;li&gt;SSG(Static Site Generation) とは？&lt;/li&gt;
&lt;li&gt;Jekyll と Hugo&lt;/li&gt;
&lt;li&gt;ISR(Incremental Static Regeneration) とは？&lt;/li&gt;
&lt;li&gt;Vercel へのデプロイ&lt;/li&gt;
&lt;li&gt;SSR が抱える課題は？&lt;/li&gt;
&lt;li&gt;SSR Streaming とは？&lt;/li&gt;
&lt;li&gt;Streaming HTML と Selective Hydration&lt;/li&gt;
&lt;li&gt;Suspense Component&lt;/li&gt;
&lt;li&gt;&lt;a href="https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/"&gt;algebraic effects&lt;/a&gt; とは&lt;/li&gt;
&lt;li&gt;React Hooks とは？&lt;/li&gt;
&lt;li&gt;Class Component の課題は何だったのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morishin.hatenablog.com/entry/impressions-of-react-hooks"&gt;React Hooks のモチベーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;React Server Component とは何か？&lt;/li&gt;
&lt;li&gt;今Webアプリを作るならどんな構成にするか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/IqkoOYweMjDq"&gt;Meety&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>76. モダンウェブフロントエンド(2022)に至る歴史 - React Server Component、SSR Streaming w/ morishin127</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>77</podcast:episode>
    </item>
    <item>
      <title>75. GitHub Copilotの裏側 と 難解なテーマをわかりやすく説明する方法 w/ AIcia_Solid</title>
      <description>&lt;p&gt;GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured"&gt;AIcia Solid Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/features/copilot/"&gt;GitHub Copilot&lt;/a&gt; とは？(補足: 本ep公開時点でGA)&lt;/li&gt;
&lt;li&gt;GitHub Copilot の裏側で何が動いているのか？&lt;/li&gt;
&lt;li&gt;GPT(Generative Pre-trained Transformer) とは何か？&lt;/li&gt;
&lt;li&gt;言語モデルのパラメータとは？&lt;/li&gt;
&lt;li&gt;パラメータって GPT では、どのぐらいの数があるのか？&lt;/li&gt;
&lt;li&gt;パラメータとは数が多ければいいもの？&lt;/li&gt;
&lt;li&gt;Youtube: &lt;a href="https://www.youtube.com/watch?v=n1QYofU3_hY"&gt;【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;論文: &lt;a href="https://arxiv.org/abs/2001.08361"&gt;Scaling Laws for Neural Language Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学習の計算量と時間量&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openai.com/dall-e-2/"&gt;DALL·E 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Transformer は並列が得意、とあるがもともとはできなかった？&lt;/li&gt;
&lt;li&gt;LSTM(Long Short Term Memory)&lt;/li&gt;
&lt;li&gt;Multi-head Attention とは？&lt;/li&gt;
&lt;li&gt;GPT -&amp;gt; GPT-2 -&amp;gt; GPT-3 と進化するときに何が変わった？&lt;/li&gt;
&lt;li&gt;GPT-3 の弱点は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/"&gt;The Google engineer who thinks the company’s AI has come to life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GPT-3 を使う側は何をすればいい？&lt;/li&gt;
&lt;li&gt;Fine Tuning と &lt;a href="https://huggingface.co/"&gt;Hugging Face&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;YouTube: &lt;a href="https://www.youtube.com/watch?v=hMQG-oF9pgw"&gt;【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Few-Shot、 One-Shot、 Zero-Shot&lt;/li&gt;
&lt;li&gt;動画でわかりやすく説明するために何を意識している？&lt;/li&gt;
&lt;li&gt;数式にこもっている魂を抜き出して説明する&lt;/li&gt;
&lt;li&gt;非専門領域の人にわかりやすく伝える方法&lt;/li&gt;
&lt;li&gt;なぜこの活動(AIcia Solid Project)を続けられている？&lt;/li&gt;
&lt;li&gt;(収録で間に合わなかった重大告知) 2022/7/26に書籍 &lt;a href="https://amzn.to/3yhE4YI"&gt;分析モデル入門&lt;/a&gt; が発売開始！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;訂正&lt;/h2&gt;
&lt;p&gt;冒頭で &amp;quot;fukabori.fm の76回です&amp;quot; と言っていますが &amp;quot;75回&amp;quot; の間違いです。&lt;/p&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/076_uKSat.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01g6btfqvyvh4cv43xzzmrat9q.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sat, 25 Jun 2022 06:39:28 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01g6btfqvyvh4cv43xzzmrat9q.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/9431/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/077ilwai.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/077ilwai.png"/>
      <itunes:duration>00:40:29</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured"&gt;AIcia Solid Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/features/copilot/"&gt;GitHub Copilot&lt;/a&gt; とは？(補足: 本ep公開時点でGA)&lt;/li&gt;
&lt;li&gt;GitHub Copilot の裏側で何が動いているのか？&lt;/li&gt;
&lt;li&gt;GPT(Generative Pre-trained Transformer) とは何か？&lt;/li&gt;
&lt;li&gt;言語モデルのパラメータとは？&lt;/li&gt;
&lt;li&gt;パラメータって GPT では、どのぐらいの数があるのか？&lt;/li&gt;
&lt;li&gt;パラメータとは数が多ければいいもの？&lt;/li&gt;
&lt;li&gt;Youtube: &lt;a href="https://www.youtube.com/watch?v=n1QYofU3_hY"&gt;【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;論文: &lt;a href="https://arxiv.org/abs/2001.08361"&gt;Scaling Laws for Neural Language Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学習の計算量と時間量&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openai.com/dall-e-2/"&gt;DALL·E 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Transformer は並列が得意、とあるがもともとはできなかった？&lt;/li&gt;
&lt;li&gt;LSTM(Long Short Term Memory)&lt;/li&gt;
&lt;li&gt;Multi-head Attention とは？&lt;/li&gt;
&lt;li&gt;GPT -&amp;gt; GPT-2 -&amp;gt; GPT-3 と進化するときに何が変わった？&lt;/li&gt;
&lt;li&gt;GPT-3 の弱点は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/"&gt;The Google engineer who thinks the company’s AI has come to life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GPT-3 を使う側は何をすればいい？&lt;/li&gt;
&lt;li&gt;Fine Tuning と &lt;a href="https://huggingface.co/"&gt;Hugging Face&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;YouTube: &lt;a href="https://www.youtube.com/watch?v=hMQG-oF9pgw"&gt;【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Few-Shot、 One-Shot、 Zero-Shot&lt;/li&gt;
&lt;li&gt;動画でわかりやすく説明するために何を意識している？&lt;/li&gt;
&lt;li&gt;数式にこもっている魂を抜き出して説明する&lt;/li&gt;
&lt;li&gt;非専門領域の人にわかりやすく伝える方法&lt;/li&gt;
&lt;li&gt;なぜこの活動(AIcia Solid Project)を続けられている？&lt;/li&gt;
&lt;li&gt;(収録で間に合わなかった重大告知) 2022/7/26に書籍 &lt;a href="https://amzn.to/3yhE4YI"&gt;分析モデル入門&lt;/a&gt; が発売開始！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;訂正&lt;/h2&gt;
&lt;p&gt;冒頭で &amp;quot;fukabori.fm の76回です&amp;quot; と言っていますが &amp;quot;75回&amp;quot; の間違いです。&lt;/p&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured"&gt;AIcia Solid Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/features/copilot/"&gt;GitHub Copilot&lt;/a&gt; とは？(補足: 本ep公開時点でGA)&lt;/li&gt;
&lt;li&gt;GitHub Copilot の裏側で何が動いているのか？&lt;/li&gt;
&lt;li&gt;GPT(Generative Pre-trained Transformer) とは何か？&lt;/li&gt;
&lt;li&gt;言語モデルのパラメータとは？&lt;/li&gt;
&lt;li&gt;パラメータって GPT では、どのぐらいの数があるのか？&lt;/li&gt;
&lt;li&gt;パラメータとは数が多ければいいもの？&lt;/li&gt;
&lt;li&gt;Youtube: &lt;a href="https://www.youtube.com/watch?v=n1QYofU3_hY"&gt;【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;論文: &lt;a href="https://arxiv.org/abs/2001.08361"&gt;Scaling Laws for Neural Language Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学習の計算量と時間量&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openai.com/dall-e-2/"&gt;DALL·E 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Transformer は並列が得意、とあるがもともとはできなかった？&lt;/li&gt;
&lt;li&gt;LSTM(Long Short Term Memory)&lt;/li&gt;
&lt;li&gt;Multi-head Attention とは？&lt;/li&gt;
&lt;li&gt;GPT -&amp;gt; GPT-2 -&amp;gt; GPT-3 と進化するときに何が変わった？&lt;/li&gt;
&lt;li&gt;GPT-3 の弱点は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/"&gt;The Google engineer who thinks the company’s AI has come to life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GPT-3 を使う側は何をすればいい？&lt;/li&gt;
&lt;li&gt;Fine Tuning と &lt;a href="https://huggingface.co/"&gt;Hugging Face&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;YouTube: &lt;a href="https://www.youtube.com/watch?v=hMQG-oF9pgw"&gt;【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Few-Shot、 One-Shot、 Zero-Shot&lt;/li&gt;
&lt;li&gt;動画でわかりやすく説明するために何を意識している？&lt;/li&gt;
&lt;li&gt;数式にこもっている魂を抜き出して説明する&lt;/li&gt;
&lt;li&gt;非専門領域の人にわかりやすく伝える方法&lt;/li&gt;
&lt;li&gt;なぜこの活動(AIcia Solid Project)を続けられている？&lt;/li&gt;
&lt;li&gt;(収録で間に合わなかった重大告知) 2022/7/26に書籍 &lt;a href="https://amzn.to/3yhE4YI"&gt;分析モデル入門&lt;/a&gt; が発売開始！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;訂正&lt;/h2&gt;
&lt;p&gt;冒頭で &amp;quot;fukabori.fm の76回です&amp;quot; と言っていますが &amp;quot;75回&amp;quot; の間違いです。&lt;/p&gt;
</itunes:summary>
      <itunes:title>75. GitHub Copilotの裏側 と 難解なテーマをわかりやすく説明する方法 w/ AIcia_Solid</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>76</podcast:episode>
    </item>
    <item>
      <title>74. PMFしているスタートアップがスケールする上での組織課題と解法 w/ kameike</title>
      <link>https://fukabori.fm/episode/74</link>
      <description>&lt;p&gt;タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイミーのプロダクトとは&lt;/li&gt;
&lt;li&gt;スタートアップがスケールするにあたっての組織課題とは？&lt;/li&gt;
&lt;li&gt;プロダクトの優先順位を決める上で意識していることは？&lt;/li&gt;
&lt;li&gt;プロダクトバックログの優先順位の判断はどのようにしている？&lt;/li&gt;
&lt;li&gt;CTOとしてのビジョン、未来の組織とは？&lt;/li&gt;
&lt;li&gt;専門性を分化させて、プロセスを高速化させる&lt;/li&gt;
&lt;li&gt;採用は答え合わせ&lt;/li&gt;
&lt;li&gt;Engineering Manager の責務と Tech Lead の責務&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/"&gt;Google re:Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクトHRとは何をしている？&lt;/li&gt;
&lt;li&gt;セールスの採用とエンジニアの採用との違いは？&lt;/li&gt;
&lt;li&gt;タイミーにおけるエンジニアの目標設計・評価とは？&lt;/li&gt;
&lt;li&gt;キャリアラダーの上げ下げは、誰が・どのように判断している？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uJL3M7R8MLc"&gt;チームトポロジーを成功させる実践方法の探求 - Team Topologies Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;タイミーにおける採用戦略とは？&lt;/li&gt;
&lt;li&gt;採用で必要な人数はどのように決定している？&lt;/li&gt;
&lt;li&gt;タイミーにおけるコミュニケーション設計とは？&lt;/li&gt;
&lt;li&gt;コミュニケーションで上手くいかなかったこと・上手くいったこと&lt;/li&gt;
&lt;li&gt;伝わらないと透明性は出ない&lt;/li&gt;
&lt;li&gt;組織としてドキュメントを書く力をどのようにつけていくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/TimeeDev"&gt;タイミーエンジニア公式Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kameike"&gt;kameikeさんのTwitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/AXfZQZhoWeBe"&gt;fukabori用のmeety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1"&gt;エントランスブック&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://timee.co.jp/"&gt;株式会社タイミー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/075_eFUfv.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01g5hhyqdzhmgty68g4t0dgpsc.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 15 Jun 2022 01:50:06 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01g5hhyqdzhmgty68g4t0dgpsc.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/9068/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:52:47</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイミーのプロダクトとは&lt;/li&gt;
&lt;li&gt;スタートアップがスケールするにあたっての組織課題とは？&lt;/li&gt;
&lt;li&gt;プロダクトの優先順位を決める上で意識していることは？&lt;/li&gt;
&lt;li&gt;プロダクトバックログの優先順位の判断はどのようにしている？&lt;/li&gt;
&lt;li&gt;CTOとしてのビジョン、未来の組織とは？&lt;/li&gt;
&lt;li&gt;専門性を分化させて、プロセスを高速化させる&lt;/li&gt;
&lt;li&gt;採用は答え合わせ&lt;/li&gt;
&lt;li&gt;Engineering Manager の責務と Tech Lead の責務&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/"&gt;Google re:Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクトHRとは何をしている？&lt;/li&gt;
&lt;li&gt;セールスの採用とエンジニアの採用との違いは？&lt;/li&gt;
&lt;li&gt;タイミーにおけるエンジニアの目標設計・評価とは？&lt;/li&gt;
&lt;li&gt;キャリアラダーの上げ下げは、誰が・どのように判断している？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uJL3M7R8MLc"&gt;チームトポロジーを成功させる実践方法の探求 - Team Topologies Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;タイミーにおける採用戦略とは？&lt;/li&gt;
&lt;li&gt;採用で必要な人数はどのように決定している？&lt;/li&gt;
&lt;li&gt;タイミーにおけるコミュニケーション設計とは？&lt;/li&gt;
&lt;li&gt;コミュニケーションで上手くいかなかったこと・上手くいったこと&lt;/li&gt;
&lt;li&gt;伝わらないと透明性は出ない&lt;/li&gt;
&lt;li&gt;組織としてドキュメントを書く力をどのようにつけていくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/TimeeDev"&gt;タイミーエンジニア公式Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kameike"&gt;kameikeさんのTwitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/AXfZQZhoWeBe"&gt;fukabori用のmeety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1"&gt;エントランスブック&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://timee.co.jp/"&gt;株式会社タイミー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイミーのプロダクトとは&lt;/li&gt;
&lt;li&gt;スタートアップがスケールするにあたっての組織課題とは？&lt;/li&gt;
&lt;li&gt;プロダクトの優先順位を決める上で意識していることは？&lt;/li&gt;
&lt;li&gt;プロダクトバックログの優先順位の判断はどのようにしている？&lt;/li&gt;
&lt;li&gt;CTOとしてのビジョン、未来の組織とは？&lt;/li&gt;
&lt;li&gt;専門性を分化させて、プロセスを高速化させる&lt;/li&gt;
&lt;li&gt;採用は答え合わせ&lt;/li&gt;
&lt;li&gt;Engineering Manager の責務と Tech Lead の責務&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/"&gt;Google re:Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクトHRとは何をしている？&lt;/li&gt;
&lt;li&gt;セールスの採用とエンジニアの採用との違いは？&lt;/li&gt;
&lt;li&gt;タイミーにおけるエンジニアの目標設計・評価とは？&lt;/li&gt;
&lt;li&gt;キャリアラダーの上げ下げは、誰が・どのように判断している？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uJL3M7R8MLc"&gt;チームトポロジーを成功させる実践方法の探求 - Team Topologies Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;タイミーにおける採用戦略とは？&lt;/li&gt;
&lt;li&gt;採用で必要な人数はどのように決定している？&lt;/li&gt;
&lt;li&gt;タイミーにおけるコミュニケーション設計とは？&lt;/li&gt;
&lt;li&gt;コミュニケーションで上手くいかなかったこと・上手くいったこと&lt;/li&gt;
&lt;li&gt;伝わらないと透明性は出ない&lt;/li&gt;
&lt;li&gt;組織としてドキュメントを書く力をどのようにつけていくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/TimeeDev"&gt;タイミーエンジニア公式Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kameike"&gt;kameikeさんのTwitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/AXfZQZhoWeBe"&gt;fukabori用のmeety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1"&gt;エントランスブック&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://timee.co.jp/"&gt;株式会社タイミー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>74. PMFしているスタートアップがスケールする上での組織課題と解法 w/ kameike</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>75</podcast:episode>
    </item>
    <item>
      <title>73. Value Object w/ kumagi</title>
      <link>https://fukabori.fm/episode/73</link>
      <description>&lt;p&gt;kumagi さんをゲストに、Value Object について語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kumagi.hatenablog.com/entry/value-object"&gt;Value Objectについて整理しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object とは何か？&lt;/li&gt;
&lt;li&gt;Value Object で複数の値をくるむcompoundの具体例は？&lt;/li&gt;
&lt;li&gt;Value Object のメリット・デメリットは？&lt;/li&gt;
&lt;li&gt;別名参照問題&lt;/li&gt;
&lt;li&gt;Value Object は何でないか？&lt;/li&gt;
&lt;li&gt;YAGNI原則&lt;/li&gt;
&lt;li&gt;不変オブジェクト (Immutable Object)&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3a3AlnV"&gt;リファクタリング 既存のコードを安全に改善する（第2版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/bliki/ValueObject.html"&gt;マーチン・ファウラー氏のblog記事 - ValueObject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object Obsession と Primitive Obsession&lt;/li&gt;
&lt;li&gt;Primitive Obsession のメリットは？&lt;/li&gt;
&lt;li&gt;Value Objectの言説はどこから生まれてきたのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/"&gt;「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3sE2vw5"&gt;Effective C++ 第3版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wflbod"&gt;Effective Java 第3版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/38uNc1Y"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wspQlu"&gt;CODE COMPLETE 第2版 下 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/074_joNbx.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01g348akn5e7as01tjqj3jc6yp.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 16 May 2022 01:20:19 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01g348akn5e7as01tjqj3jc6yp.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/7913/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:26:38</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;kumagi さんをゲストに、Value Object について語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kumagi.hatenablog.com/entry/value-object"&gt;Value Objectについて整理しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object とは何か？&lt;/li&gt;
&lt;li&gt;Value Object で複数の値をくるむcompoundの具体例は？&lt;/li&gt;
&lt;li&gt;Value Object のメリット・デメリットは？&lt;/li&gt;
&lt;li&gt;別名参照問題&lt;/li&gt;
&lt;li&gt;Value Object は何でないか？&lt;/li&gt;
&lt;li&gt;YAGNI原則&lt;/li&gt;
&lt;li&gt;不変オブジェクト (Immutable Object)&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3a3AlnV"&gt;リファクタリング 既存のコードを安全に改善する（第2版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/bliki/ValueObject.html"&gt;マーチン・ファウラー氏のblog記事 - ValueObject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object Obsession と Primitive Obsession&lt;/li&gt;
&lt;li&gt;Primitive Obsession のメリットは？&lt;/li&gt;
&lt;li&gt;Value Objectの言説はどこから生まれてきたのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/"&gt;「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3sE2vw5"&gt;Effective C++ 第3版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wflbod"&gt;Effective Java 第3版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/38uNc1Y"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wspQlu"&gt;CODE COMPLETE 第2版 下 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;kumagi さんをゲストに、Value Object について語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kumagi.hatenablog.com/entry/value-object"&gt;Value Objectについて整理しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object とは何か？&lt;/li&gt;
&lt;li&gt;Value Object で複数の値をくるむcompoundの具体例は？&lt;/li&gt;
&lt;li&gt;Value Object のメリット・デメリットは？&lt;/li&gt;
&lt;li&gt;別名参照問題&lt;/li&gt;
&lt;li&gt;Value Object は何でないか？&lt;/li&gt;
&lt;li&gt;YAGNI原則&lt;/li&gt;
&lt;li&gt;不変オブジェクト (Immutable Object)&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3a3AlnV"&gt;リファクタリング 既存のコードを安全に改善する（第2版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/bliki/ValueObject.html"&gt;マーチン・ファウラー氏のblog記事 - ValueObject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object Obsession と Primitive Obsession&lt;/li&gt;
&lt;li&gt;Primitive Obsession のメリットは？&lt;/li&gt;
&lt;li&gt;Value Objectの言説はどこから生まれてきたのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/"&gt;「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3sE2vw5"&gt;Effective C++ 第3版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wflbod"&gt;Effective Java 第3版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/38uNc1Y"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wspQlu"&gt;CODE COMPLETE 第2版 下 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>73. Value Object w/ kumagi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>74</podcast:episode>
    </item>
    <item>
      <title>72. 2022年のフロントエンド開発、特にCSS事情 w/ tsukkee</title>
      <description>&lt;p&gt;tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最近のフロントエンド開発ってどんな感じ？&lt;/li&gt;
&lt;li&gt;なぜ、 transpile などの変換が必要なのか？&lt;/li&gt;
&lt;li&gt;CSS Grid とは？ 何が良いのか？&lt;/li&gt;
&lt;li&gt;もともと昔はどうやってレイアウトしていた？&lt;/li&gt;
&lt;li&gt;Table から Float へ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://abehiroshi.la.coocan.jp/"&gt;阿部 寛のホームページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flexbox とは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/XUL"&gt;XUL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Grid と Flexbox の違いは？&lt;/li&gt;
&lt;li&gt;HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？&lt;/li&gt;
&lt;li&gt;CSSで変数利用って、どう進化してきた？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sass-lang.com/"&gt;Sass&lt;/a&gt; や SCSS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties"&gt;Custom Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Custom Properties のメリットとは？&lt;/li&gt;
&lt;li&gt;Web Component との関連&lt;/li&gt;
&lt;li&gt;この先、SassやSCSSはこの先どうなっていく？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/css-nesting-1/"&gt;CSS Nesting Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS Animation / Transition の進化&lt;/li&gt;
&lt;li&gt;JSでアニメーション実装をすると、何が難しいのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/design/human-interface-guidelines/"&gt;Apple Interface Guideline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アニメーションの使い時はいつか？&lt;/li&gt;
&lt;li&gt;アニメーション習いたてで使いたくなっちゃう問題&lt;/li&gt;
&lt;li&gt;Animation と SVG との組み合わせが便利&lt;/li&gt;
&lt;li&gt;CSS の仕様を、どうやって追っかけているか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/"&gt;web.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームでフロントエンド情報をどうやって学習しているか？&lt;/li&gt;
&lt;li&gt;CSS設計をどうやって決めている？&lt;/li&gt;
&lt;li&gt;Shadow DOM と スコープ&lt;/li&gt;
&lt;li&gt;実際のプロダクト開発では何を使っている？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/@layer"&gt;CSS Layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/:has"&gt;:has() 疑似クラス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/Guide/Houdini"&gt;CSS Houdini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide"&gt;Painting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md"&gt;Layout API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用: &lt;a href="https://herp.careers/v1/stockmark"&gt;ストックマーク社 エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/073_aysdL.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01g22m71nygyj0x1nqpm5qwvy4.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 02 May 2022 23:53:54 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01g22m71nygyj0x1nqpm5qwvy4.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/7724/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:45:49</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最近のフロントエンド開発ってどんな感じ？&lt;/li&gt;
&lt;li&gt;なぜ、 transpile などの変換が必要なのか？&lt;/li&gt;
&lt;li&gt;CSS Grid とは？ 何が良いのか？&lt;/li&gt;
&lt;li&gt;もともと昔はどうやってレイアウトしていた？&lt;/li&gt;
&lt;li&gt;Table から Float へ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://abehiroshi.la.coocan.jp/"&gt;阿部 寛のホームページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flexbox とは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/XUL"&gt;XUL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Grid と Flexbox の違いは？&lt;/li&gt;
&lt;li&gt;HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？&lt;/li&gt;
&lt;li&gt;CSSで変数利用って、どう進化してきた？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sass-lang.com/"&gt;Sass&lt;/a&gt; や SCSS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties"&gt;Custom Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Custom Properties のメリットとは？&lt;/li&gt;
&lt;li&gt;Web Component との関連&lt;/li&gt;
&lt;li&gt;この先、SassやSCSSはこの先どうなっていく？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/css-nesting-1/"&gt;CSS Nesting Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS Animation / Transition の進化&lt;/li&gt;
&lt;li&gt;JSでアニメーション実装をすると、何が難しいのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/design/human-interface-guidelines/"&gt;Apple Interface Guideline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アニメーションの使い時はいつか？&lt;/li&gt;
&lt;li&gt;アニメーション習いたてで使いたくなっちゃう問題&lt;/li&gt;
&lt;li&gt;Animation と SVG との組み合わせが便利&lt;/li&gt;
&lt;li&gt;CSS の仕様を、どうやって追っかけているか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/"&gt;web.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームでフロントエンド情報をどうやって学習しているか？&lt;/li&gt;
&lt;li&gt;CSS設計をどうやって決めている？&lt;/li&gt;
&lt;li&gt;Shadow DOM と スコープ&lt;/li&gt;
&lt;li&gt;実際のプロダクト開発では何を使っている？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/@layer"&gt;CSS Layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/:has"&gt;:has() 疑似クラス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/Guide/Houdini"&gt;CSS Houdini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide"&gt;Painting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md"&gt;Layout API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用: &lt;a href="https://herp.careers/v1/stockmark"&gt;ストックマーク社 エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;最近のフロントエンド開発ってどんな感じ？&lt;/li&gt;
&lt;li&gt;なぜ、 transpile などの変換が必要なのか？&lt;/li&gt;
&lt;li&gt;CSS Grid とは？ 何が良いのか？&lt;/li&gt;
&lt;li&gt;もともと昔はどうやってレイアウトしていた？&lt;/li&gt;
&lt;li&gt;Table から Float へ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://abehiroshi.la.coocan.jp/"&gt;阿部 寛のホームページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flexbox とは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/XUL"&gt;XUL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Grid と Flexbox の違いは？&lt;/li&gt;
&lt;li&gt;HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？&lt;/li&gt;
&lt;li&gt;CSSで変数利用って、どう進化してきた？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sass-lang.com/"&gt;Sass&lt;/a&gt; や SCSS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties"&gt;Custom Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Custom Properties のメリットとは？&lt;/li&gt;
&lt;li&gt;Web Component との関連&lt;/li&gt;
&lt;li&gt;この先、SassやSCSSはこの先どうなっていく？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/css-nesting-1/"&gt;CSS Nesting Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS Animation / Transition の進化&lt;/li&gt;
&lt;li&gt;JSでアニメーション実装をすると、何が難しいのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/design/human-interface-guidelines/"&gt;Apple Interface Guideline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アニメーションの使い時はいつか？&lt;/li&gt;
&lt;li&gt;アニメーション習いたてで使いたくなっちゃう問題&lt;/li&gt;
&lt;li&gt;Animation と SVG との組み合わせが便利&lt;/li&gt;
&lt;li&gt;CSS の仕様を、どうやって追っかけているか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/"&gt;web.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームでフロントエンド情報をどうやって学習しているか？&lt;/li&gt;
&lt;li&gt;CSS設計をどうやって決めている？&lt;/li&gt;
&lt;li&gt;Shadow DOM と スコープ&lt;/li&gt;
&lt;li&gt;実際のプロダクト開発では何を使っている？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/@layer"&gt;CSS Layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/:has"&gt;:has() 疑似クラス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/Guide/Houdini"&gt;CSS Houdini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide"&gt;Painting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md"&gt;Layout API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用: &lt;a href="https://herp.careers/v1/stockmark"&gt;ストックマーク社 エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>72. 2022年のフロントエンド開発、特にCSS事情 w/ tsukkee</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>73</podcast:episode>
    </item>
    <item>
      <title>71. アジャイルソフトウェア開発と統計的品質管理 w/ sakata_akinori</title>
      <link>https://fukabori.fm/episode/71</link>
      <description>&lt;p&gt;sakata_akinori さんに &amp;quot;アジャイル開発は品質が悪い&amp;quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/sakataakinori/jasst-tokyo-2022"&gt;JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3uKDSzf"&gt;エクストリームプログラミング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「アジャイル開発は品質が悪い？」という風評・言説&lt;/li&gt;
&lt;li&gt;この言説はどこからやってきたのか？なぜ生まれたのか？&lt;/li&gt;
&lt;li&gt;ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール&lt;/li&gt;
&lt;li&gt;コードの複雑性をマネジメントできない状態&lt;/li&gt;
&lt;li&gt;マネジメントプロセスの原因はどこにあるのか？&lt;/li&gt;
&lt;li&gt;絶対イヤだ or 偉くなる&lt;/li&gt;
&lt;li&gt;バグ密度曲線などの指標は、どこからきて、何がしたかったのか？&lt;/li&gt;
&lt;li&gt;品質指標は、いつもと同じかどうかを見ていただけ&lt;/li&gt;
&lt;li&gt;メインフレーム や COBOL&lt;/li&gt;
&lt;li&gt;いつもと同じかどうか、を見るのは過去において意味があったのではないか&lt;/li&gt;
&lt;li&gt;ウォーターフォールのメトリクスはコストに由来しているのではないか&lt;/li&gt;
&lt;li&gt;2022年において、いつもと同じかどうかを見る手法は意味があるのか？&lt;/li&gt;
&lt;li&gt;統計的品質管理の考え方自体は現代でも有効&lt;/li&gt;
&lt;li&gt;アジャイル開発では、何を指標として追えばいいのか？&lt;/li&gt;
&lt;li&gt;スピードに着目したメトリクス&lt;/li&gt;
&lt;li&gt;リードタイム、サイクルタイム&lt;/li&gt;
&lt;li&gt;審議プロセスにおける納得感とは？&lt;/li&gt;
&lt;li&gt;そもそもリスクを小さくしている、ということで納得する&lt;/li&gt;
&lt;li&gt;常に上限値におさまるというのは統計的にありえない&lt;/li&gt;
&lt;li&gt;代用特性とは？ と 温度計での例&lt;/li&gt;
&lt;li&gt;ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB"&gt;狩野モデル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;品質は誰かにとっての価値である&amp;quot; / ワインバーグ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.juse.or.jp/sqip/squbok/index.html"&gt;SQuBOK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93"&gt;ホーソン実験&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;魅了的品質をどう高めていくか？&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/072_XpTik.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01g0v7hn4hm9fgxtb1h0j8jt7w.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 17 Apr 2022 17:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01g0v7hn4hm9fgxtb1h0j8jt7w.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/7295/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:46:12</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;sakata_akinori さんに &amp;quot;アジャイル開発は品質が悪い&amp;quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/sakataakinori/jasst-tokyo-2022"&gt;JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3uKDSzf"&gt;エクストリームプログラミング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「アジャイル開発は品質が悪い？」という風評・言説&lt;/li&gt;
&lt;li&gt;この言説はどこからやってきたのか？なぜ生まれたのか？&lt;/li&gt;
&lt;li&gt;ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール&lt;/li&gt;
&lt;li&gt;コードの複雑性をマネジメントできない状態&lt;/li&gt;
&lt;li&gt;マネジメントプロセスの原因はどこにあるのか？&lt;/li&gt;
&lt;li&gt;絶対イヤだ or 偉くなる&lt;/li&gt;
&lt;li&gt;バグ密度曲線などの指標は、どこからきて、何がしたかったのか？&lt;/li&gt;
&lt;li&gt;品質指標は、いつもと同じかどうかを見ていただけ&lt;/li&gt;
&lt;li&gt;メインフレーム や COBOL&lt;/li&gt;
&lt;li&gt;いつもと同じかどうか、を見るのは過去において意味があったのではないか&lt;/li&gt;
&lt;li&gt;ウォーターフォールのメトリクスはコストに由来しているのではないか&lt;/li&gt;
&lt;li&gt;2022年において、いつもと同じかどうかを見る手法は意味があるのか？&lt;/li&gt;
&lt;li&gt;統計的品質管理の考え方自体は現代でも有効&lt;/li&gt;
&lt;li&gt;アジャイル開発では、何を指標として追えばいいのか？&lt;/li&gt;
&lt;li&gt;スピードに着目したメトリクス&lt;/li&gt;
&lt;li&gt;リードタイム、サイクルタイム&lt;/li&gt;
&lt;li&gt;審議プロセスにおける納得感とは？&lt;/li&gt;
&lt;li&gt;そもそもリスクを小さくしている、ということで納得する&lt;/li&gt;
&lt;li&gt;常に上限値におさまるというのは統計的にありえない&lt;/li&gt;
&lt;li&gt;代用特性とは？ と 温度計での例&lt;/li&gt;
&lt;li&gt;ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB"&gt;狩野モデル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;品質は誰かにとっての価値である&amp;quot; / ワインバーグ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.juse.or.jp/sqip/squbok/index.html"&gt;SQuBOK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93"&gt;ホーソン実験&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;魅了的品質をどう高めていくか？&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;sakata_akinori さんに &amp;quot;アジャイル開発は品質が悪い&amp;quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/sakataakinori/jasst-tokyo-2022"&gt;JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3uKDSzf"&gt;エクストリームプログラミング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「アジャイル開発は品質が悪い？」という風評・言説&lt;/li&gt;
&lt;li&gt;この言説はどこからやってきたのか？なぜ生まれたのか？&lt;/li&gt;
&lt;li&gt;ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール&lt;/li&gt;
&lt;li&gt;コードの複雑性をマネジメントできない状態&lt;/li&gt;
&lt;li&gt;マネジメントプロセスの原因はどこにあるのか？&lt;/li&gt;
&lt;li&gt;絶対イヤだ or 偉くなる&lt;/li&gt;
&lt;li&gt;バグ密度曲線などの指標は、どこからきて、何がしたかったのか？&lt;/li&gt;
&lt;li&gt;品質指標は、いつもと同じかどうかを見ていただけ&lt;/li&gt;
&lt;li&gt;メインフレーム や COBOL&lt;/li&gt;
&lt;li&gt;いつもと同じかどうか、を見るのは過去において意味があったのではないか&lt;/li&gt;
&lt;li&gt;ウォーターフォールのメトリクスはコストに由来しているのではないか&lt;/li&gt;
&lt;li&gt;2022年において、いつもと同じかどうかを見る手法は意味があるのか？&lt;/li&gt;
&lt;li&gt;統計的品質管理の考え方自体は現代でも有効&lt;/li&gt;
&lt;li&gt;アジャイル開発では、何を指標として追えばいいのか？&lt;/li&gt;
&lt;li&gt;スピードに着目したメトリクス&lt;/li&gt;
&lt;li&gt;リードタイム、サイクルタイム&lt;/li&gt;
&lt;li&gt;審議プロセスにおける納得感とは？&lt;/li&gt;
&lt;li&gt;そもそもリスクを小さくしている、ということで納得する&lt;/li&gt;
&lt;li&gt;常に上限値におさまるというのは統計的にありえない&lt;/li&gt;
&lt;li&gt;代用特性とは？ と 温度計での例&lt;/li&gt;
&lt;li&gt;ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB"&gt;狩野モデル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;品質は誰かにとっての価値である&amp;quot; / ワインバーグ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.juse.or.jp/sqip/squbok/index.html"&gt;SQuBOK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93"&gt;ホーソン実験&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;魅了的品質をどう高めていくか？&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>71. アジャイルソフトウェア開発と統計的品質管理 w/ sakata_akinori</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>72</podcast:episode>
    </item>
    <item>
      <title>70. チームトポロジー(後編) w/ miholovesq</title>
      <link>https://fukabori.fm/episode/70</link>
      <description>&lt;p&gt;書籍&amp;quot;チームトポロジー&amp;quot; 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チーム間のインタラクションの3モードについて&lt;/li&gt;
&lt;li&gt;コラボレーションモードとは？&lt;/li&gt;
&lt;li&gt;XaaSモードとは？&lt;/li&gt;
&lt;li&gt;ファシリテーションモードとは？&lt;/li&gt;
&lt;li&gt;認知負荷を下げるのが重要&lt;/li&gt;
&lt;li&gt;サービス境界をどう設定するかがポイント&lt;/li&gt;
&lt;li&gt;組織設計をするためにエンジニアリング能力が必要&lt;/li&gt;
&lt;li&gt;認知負荷(cognitive load)とは何か？&lt;/li&gt;
&lt;li&gt;チームサイズを認知負荷に合わせて設計する&lt;/li&gt;
&lt;li&gt;ダンバー数&lt;/li&gt;
&lt;li&gt;設計は人を驚かせるべきじゃない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3wbEGOX"&gt;Clean Code　アジャイルソフトウェア達人の技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事&lt;/li&gt;
&lt;li&gt;モブプログラミング・モブワーク&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3I9Luip"&gt;Amazon audible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍翻訳の裏話&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;リスナーの皆様へのお願い&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/071_XlkUu.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fy91hzxje6pmfybhb77yyrrp.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 16 Mar 2022 18:39:44 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fy91hzxje6pmfybhb77yyrrp.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/6258/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:19:30</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;書籍&amp;quot;チームトポロジー&amp;quot; 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チーム間のインタラクションの3モードについて&lt;/li&gt;
&lt;li&gt;コラボレーションモードとは？&lt;/li&gt;
&lt;li&gt;XaaSモードとは？&lt;/li&gt;
&lt;li&gt;ファシリテーションモードとは？&lt;/li&gt;
&lt;li&gt;認知負荷を下げるのが重要&lt;/li&gt;
&lt;li&gt;サービス境界をどう設定するかがポイント&lt;/li&gt;
&lt;li&gt;組織設計をするためにエンジニアリング能力が必要&lt;/li&gt;
&lt;li&gt;認知負荷(cognitive load)とは何か？&lt;/li&gt;
&lt;li&gt;チームサイズを認知負荷に合わせて設計する&lt;/li&gt;
&lt;li&gt;ダンバー数&lt;/li&gt;
&lt;li&gt;設計は人を驚かせるべきじゃない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3wbEGOX"&gt;Clean Code　アジャイルソフトウェア達人の技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事&lt;/li&gt;
&lt;li&gt;モブプログラミング・モブワーク&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3I9Luip"&gt;Amazon audible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍翻訳の裏話&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;リスナーの皆様へのお願い&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;書籍&amp;quot;チームトポロジー&amp;quot; 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チーム間のインタラクションの3モードについて&lt;/li&gt;
&lt;li&gt;コラボレーションモードとは？&lt;/li&gt;
&lt;li&gt;XaaSモードとは？&lt;/li&gt;
&lt;li&gt;ファシリテーションモードとは？&lt;/li&gt;
&lt;li&gt;認知負荷を下げるのが重要&lt;/li&gt;
&lt;li&gt;サービス境界をどう設定するかがポイント&lt;/li&gt;
&lt;li&gt;組織設計をするためにエンジニアリング能力が必要&lt;/li&gt;
&lt;li&gt;認知負荷(cognitive load)とは何か？&lt;/li&gt;
&lt;li&gt;チームサイズを認知負荷に合わせて設計する&lt;/li&gt;
&lt;li&gt;ダンバー数&lt;/li&gt;
&lt;li&gt;設計は人を驚かせるべきじゃない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3wbEGOX"&gt;Clean Code　アジャイルソフトウェア達人の技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事&lt;/li&gt;
&lt;li&gt;モブプログラミング・モブワーク&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3I9Luip"&gt;Amazon audible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍翻訳の裏話&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;リスナーの皆様へのお願い&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;
</itunes:summary>
      <itunes:title>70. チームトポロジー(後編) w/ miholovesq</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>71</podcast:episode>
    </item>
    <item>
      <title>69. チームトポロジー(前編) w/ miholovesq</title>
      <link>https://fukabori.fm/episode/69</link>
      <description>&lt;p&gt;書籍 &amp;quot;チームトポロジー&amp;quot; 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/35WSi5y"&gt;SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームトポロジーという書籍の概要&lt;/li&gt;
&lt;li&gt;コンウェイの法則とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Conway%27s_law"&gt;wikipedia: Conway&amp;#39;s law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;逆コンウェイ戦略とは？&lt;/li&gt;
&lt;li&gt;ソフトウェアを設計するように組織を設計する&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム とは？&lt;/li&gt;
&lt;li&gt;プラットフォームチーム とは？&lt;/li&gt;
&lt;li&gt;イネイブリングチーム とは？&lt;/li&gt;
&lt;li&gt;コンプリケイテッドサブシステムチーム とは？&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム と プロダクトチームとの違いは？&lt;/li&gt;
&lt;li&gt;アジャイル開発とチームトポロジーとの関連は？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3hPVh25"&gt;LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;現代型マネジメントと人間関係論&lt;/li&gt;
&lt;li&gt;マインドセットがなくてもアジリティを出せるのではないか&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agilepbl.org/"&gt;Agile PBL祭り 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confengine.com/conferences/agile-pbl-2022/sponsor"&gt;Agile PBL祭り 2022 スポンサー募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Agile PBL祭り での最大のアンラーニングとは？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;リスナーの皆様へのお願い&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/070_piSrY.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fxhbx2521ymxdyy9qt0n5vv4.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 07 Mar 2022 17:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fxhbx2521ymxdyy9qt0n5vv4.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/5934/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:40:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;書籍 &amp;quot;チームトポロジー&amp;quot; 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/35WSi5y"&gt;SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームトポロジーという書籍の概要&lt;/li&gt;
&lt;li&gt;コンウェイの法則とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Conway%27s_law"&gt;wikipedia: Conway&amp;#39;s law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;逆コンウェイ戦略とは？&lt;/li&gt;
&lt;li&gt;ソフトウェアを設計するように組織を設計する&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム とは？&lt;/li&gt;
&lt;li&gt;プラットフォームチーム とは？&lt;/li&gt;
&lt;li&gt;イネイブリングチーム とは？&lt;/li&gt;
&lt;li&gt;コンプリケイテッドサブシステムチーム とは？&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム と プロダクトチームとの違いは？&lt;/li&gt;
&lt;li&gt;アジャイル開発とチームトポロジーとの関連は？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3hPVh25"&gt;LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;現代型マネジメントと人間関係論&lt;/li&gt;
&lt;li&gt;マインドセットがなくてもアジリティを出せるのではないか&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agilepbl.org/"&gt;Agile PBL祭り 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confengine.com/conferences/agile-pbl-2022/sponsor"&gt;Agile PBL祭り 2022 スポンサー募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Agile PBL祭り での最大のアンラーニングとは？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;リスナーの皆様へのお願い&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;</itunes:subtitle>
      <itunes:summary>&lt;p&gt;書籍 &amp;quot;チームトポロジー&amp;quot; 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/35WSi5y"&gt;SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームトポロジーという書籍の概要&lt;/li&gt;
&lt;li&gt;コンウェイの法則とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Conway%27s_law"&gt;wikipedia: Conway&amp;#39;s law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;逆コンウェイ戦略とは？&lt;/li&gt;
&lt;li&gt;ソフトウェアを設計するように組織を設計する&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム とは？&lt;/li&gt;
&lt;li&gt;プラットフォームチーム とは？&lt;/li&gt;
&lt;li&gt;イネイブリングチーム とは？&lt;/li&gt;
&lt;li&gt;コンプリケイテッドサブシステムチーム とは？&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム と プロダクトチームとの違いは？&lt;/li&gt;
&lt;li&gt;アジャイル開発とチームトポロジーとの関連は？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3hPVh25"&gt;LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;現代型マネジメントと人間関係論&lt;/li&gt;
&lt;li&gt;マインドセットがなくてもアジリティを出せるのではないか&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agilepbl.org/"&gt;Agile PBL祭り 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confengine.com/conferences/agile-pbl-2022/sponsor"&gt;Agile PBL祭り 2022 スポンサー募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Agile PBL祭り での最大のアンラーニングとは？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;リスナーの皆様へのお願い&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;</itunes:summary>
      <itunes:title>69. チームトポロジー(前編) w/ miholovesq</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>70</podcast:episode>
    </item>
    <item>
      <title>68. エンジニアリング組織に溶け込むHRBP w/ yamamuteking</title>
      <link>https://fukabori.fm/episode/68</link>
      <description>&lt;p&gt;エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HRBP(Human Resource Business Partner)とは何か？&lt;/li&gt;
&lt;li&gt;HRBPの登場背景とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3vvLd6O"&gt;ハーバード･ビジネス･レビュー21年12月号 これからの人事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト開発組織におけるHRBP&lt;/li&gt;
&lt;li&gt;プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成&lt;/li&gt;
&lt;li&gt;人事がプロダクトチームになぜ入る必要があるのか？&lt;/li&gt;
&lt;li&gt;役割1. 採用の加速&lt;/li&gt;
&lt;li&gt;候補者体験を最大化するためのルート整備&lt;/li&gt;
&lt;li&gt;社内のエンジニアに対する深い理解&lt;/li&gt;
&lt;li&gt;役割2. リテンション&lt;/li&gt;
&lt;li&gt;エンジニアでは見落としがちな課題を早めに拾う&lt;/li&gt;
&lt;li&gt;人事がエンジニアの朝会に入って課題設定する&lt;/li&gt;
&lt;li&gt;スクラムマスターに近い振る舞い&lt;/li&gt;
&lt;li&gt;エンジニア オンボーディングでの期待値調整&lt;/li&gt;
&lt;li&gt;役割3. チャレンジマネジメント&lt;/li&gt;
&lt;li&gt;HRBPが深く入るチームの優先度付けは？ &lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.talentio.com/r/1/c/m3-inc/pages/57566"&gt;m3 HRBP募集ページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(退職を検知する)人事的センサーとは？&lt;/li&gt;
&lt;li&gt;多様性がチームを強くする&lt;/li&gt;
&lt;li&gt;どうやってHRBPをスケールさせるか？&lt;/li&gt;
&lt;li&gt;スタートアップでHRBPを置くならいつが良いか？&lt;/li&gt;
&lt;li&gt;エンジニアリングマネジメントを「ちゃんと」やる？とは&lt;/li&gt;
&lt;li&gt;エンジニアリングの成果 と 経営 を接続する&lt;/li&gt;
&lt;li&gt;&lt;a href="https://corporate.m3.com/recruit/"&gt;m3 採用情報ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！&lt;/a&gt;&lt;/p&gt;</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/069_gAVbY.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fx3ykazqdc801pzygcn2k6sh.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 02 Mar 2022 09:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fx3ykazqdc801pzygcn2k6sh.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/5809/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:39:32</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HRBP(Human Resource Business Partner)とは何か？&lt;/li&gt;
&lt;li&gt;HRBPの登場背景とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3vvLd6O"&gt;ハーバード･ビジネス･レビュー21年12月号 これからの人事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト開発組織におけるHRBP&lt;/li&gt;
&lt;li&gt;プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成&lt;/li&gt;
&lt;li&gt;人事がプロダクトチームになぜ入る必要があるのか？&lt;/li&gt;
&lt;li&gt;役割1. 採用の加速&lt;/li&gt;
&lt;li&gt;候補者体験を最大化するためのルート整備&lt;/li&gt;
&lt;li&gt;社内のエンジニアに対する深い理解&lt;/li&gt;
&lt;li&gt;役割2. リテンション&lt;/li&gt;
&lt;li&gt;エンジニアでは見落としがちな課題を早めに拾う&lt;/li&gt;
&lt;li&gt;人事がエンジニアの朝会に入って課題設定する&lt;/li&gt;
&lt;li&gt;スクラムマスターに近い振る舞い&lt;/li&gt;
&lt;li&gt;エンジニア オンボーディングでの期待値調整&lt;/li&gt;
&lt;li&gt;役割3. チャレンジマネジメント&lt;/li&gt;
&lt;li&gt;HRBPが深く入るチームの優先度付けは？ &lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.talentio.com/r/1/c/m3-inc/pages/57566"&gt;m3 HRBP募集ページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(退職を検知する)人事的センサーとは？&lt;/li&gt;
&lt;li&gt;多様性がチームを強くする&lt;/li&gt;
&lt;li&gt;どうやってHRBPをスケールさせるか？&lt;/li&gt;
&lt;li&gt;スタートアップでHRBPを置くならいつが良いか？&lt;/li&gt;
&lt;li&gt;エンジニアリングマネジメントを「ちゃんと」やる？とは&lt;/li&gt;
&lt;li&gt;エンジニアリングの成果 と 経営 を接続する&lt;/li&gt;
&lt;li&gt;&lt;a href="https://corporate.m3.com/recruit/"&gt;m3 採用情報ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！&lt;/a&gt;&lt;/p&gt;</itunes:subtitle>
      <itunes:summary>&lt;p&gt;エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HRBP(Human Resource Business Partner)とは何か？&lt;/li&gt;
&lt;li&gt;HRBPの登場背景とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3vvLd6O"&gt;ハーバード･ビジネス･レビュー21年12月号 これからの人事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト開発組織におけるHRBP&lt;/li&gt;
&lt;li&gt;プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成&lt;/li&gt;
&lt;li&gt;人事がプロダクトチームになぜ入る必要があるのか？&lt;/li&gt;
&lt;li&gt;役割1. 採用の加速&lt;/li&gt;
&lt;li&gt;候補者体験を最大化するためのルート整備&lt;/li&gt;
&lt;li&gt;社内のエンジニアに対する深い理解&lt;/li&gt;
&lt;li&gt;役割2. リテンション&lt;/li&gt;
&lt;li&gt;エンジニアでは見落としがちな課題を早めに拾う&lt;/li&gt;
&lt;li&gt;人事がエンジニアの朝会に入って課題設定する&lt;/li&gt;
&lt;li&gt;スクラムマスターに近い振る舞い&lt;/li&gt;
&lt;li&gt;エンジニア オンボーディングでの期待値調整&lt;/li&gt;
&lt;li&gt;役割3. チャレンジマネジメント&lt;/li&gt;
&lt;li&gt;HRBPが深く入るチームの優先度付けは？ &lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.talentio.com/r/1/c/m3-inc/pages/57566"&gt;m3 HRBP募集ページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(退職を検知する)人事的センサーとは？&lt;/li&gt;
&lt;li&gt;多様性がチームを強くする&lt;/li&gt;
&lt;li&gt;どうやってHRBPをスケールさせるか？&lt;/li&gt;
&lt;li&gt;スタートアップでHRBPを置くならいつが良いか？&lt;/li&gt;
&lt;li&gt;エンジニアリングマネジメントを「ちゃんと」やる？とは&lt;/li&gt;
&lt;li&gt;エンジニアリングの成果 と 経営 を接続する&lt;/li&gt;
&lt;li&gt;&lt;a href="https://corporate.m3.com/recruit/"&gt;m3 採用情報ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB"&gt;fukabori.fm リスナーアンケートを実施中です！&lt;/a&gt;&lt;/p&gt;</itunes:summary>
      <itunes:title>68. エンジニアリング組織に溶け込むHRBP w/ yamamuteking</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>69</podcast:episode>
    </item>
    <item>
      <title>67. 命名規則 と heyのエンジニア組織 w/ ffu_</title>
      <link>https://fukabori.fm/episode/67</link>
      <description>&lt;p&gt;hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;プログラミングにおける命名規則になぜこだわるのか？&lt;/li&gt;
&lt;li&gt;名前のないプログラミング言語&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3gaeuLm"&gt;WEB+DB PRESS Vol.110&lt;/a&gt; もしくは &lt;a href="https://amzn.to/3Gew23g"&gt;WEB+DB PRESS総集編[Vol.1~120] &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/fujimura/ru-men-ming-qian"&gt;入門 名前&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;命名規則における「良い」とは何か？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3AGEA1Y"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;名前の意味と挙動が一致していること&lt;/li&gt;
&lt;li&gt;parse という関数命名における例&lt;/li&gt;
&lt;li&gt;primary と primal&lt;/li&gt;
&lt;li&gt;全体の名前のルーツになる命名は丁寧につける&lt;/li&gt;
&lt;li&gt;日本語を、命名規則に使うのはどうか？&lt;/li&gt;
&lt;li&gt;関数・変数名を短くすべきか？長くすべきか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names"&gt;Clarity over brevity in variable and method names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Haskell での命名&lt;/li&gt;
&lt;li&gt;紛らわしい動詞をやめる、例: check()&lt;/li&gt;
&lt;li&gt;値を返すのか、副作用があるのか分からない&lt;/li&gt;
&lt;li&gt;Ruby の predicate メソッド&lt;/li&gt;
&lt;li&gt;hey のプロダクト開発組織デザインとは？&lt;/li&gt;
&lt;li&gt;横断チームとプロダクトチームを作り分ける判断基準は？&lt;/li&gt;
&lt;li&gt;チーム・組織が遠くなると、話にいくハードルが上がらないか？&lt;/li&gt;
&lt;li&gt;オンラインで話しかけやすいようにするための工夫は？&lt;/li&gt;
&lt;li&gt;全社ミーティングでの愛のあるいじり&lt;/li&gt;
&lt;li&gt;CTO本部って何をしている？どの課題を解こうとしている？&lt;/li&gt;
&lt;li&gt;エンジニア組織のマネジメントをチームで進める&lt;/li&gt;
&lt;li&gt;得意な人・知見がある人がファイナルアンサーを持っている&lt;/li&gt;
&lt;li&gt;権限委譲をどのように進めているか？&lt;/li&gt;
&lt;li&gt;8象限 と &lt;a href="https://ja.wikipedia.org/wiki/RACI%E5%9B%B3"&gt;RACI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuworks.jp/ja/product/del-poker/"&gt;デリゲーションポーカー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;heyの評価制度は？&lt;/li&gt;
&lt;li&gt;heyのエンジニア採用戦略は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0"&gt;ABM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用でやらないと決めていることは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/33R7S1X"&gt;採用サイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/3AH6ElW"&gt;hey BOOK for Engineers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.hey.jp/company"&gt;ヘイ株式会社&lt;/a&gt;&lt;/p&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/068_fZPbk.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01ftm6mdzbpm6ykzbvk1whn7p9.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 31 Jan 2022 06:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01ftm6mdzbpm6ykzbvk1whn7p9.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/5208/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:43:35</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;プログラミングにおける命名規則になぜこだわるのか？&lt;/li&gt;
&lt;li&gt;名前のないプログラミング言語&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3gaeuLm"&gt;WEB+DB PRESS Vol.110&lt;/a&gt; もしくは &lt;a href="https://amzn.to/3Gew23g"&gt;WEB+DB PRESS総集編[Vol.1~120] &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/fujimura/ru-men-ming-qian"&gt;入門 名前&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;命名規則における「良い」とは何か？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3AGEA1Y"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;名前の意味と挙動が一致していること&lt;/li&gt;
&lt;li&gt;parse という関数命名における例&lt;/li&gt;
&lt;li&gt;primary と primal&lt;/li&gt;
&lt;li&gt;全体の名前のルーツになる命名は丁寧につける&lt;/li&gt;
&lt;li&gt;日本語を、命名規則に使うのはどうか？&lt;/li&gt;
&lt;li&gt;関数・変数名を短くすべきか？長くすべきか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names"&gt;Clarity over brevity in variable and method names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Haskell での命名&lt;/li&gt;
&lt;li&gt;紛らわしい動詞をやめる、例: check()&lt;/li&gt;
&lt;li&gt;値を返すのか、副作用があるのか分からない&lt;/li&gt;
&lt;li&gt;Ruby の predicate メソッド&lt;/li&gt;
&lt;li&gt;hey のプロダクト開発組織デザインとは？&lt;/li&gt;
&lt;li&gt;横断チームとプロダクトチームを作り分ける判断基準は？&lt;/li&gt;
&lt;li&gt;チーム・組織が遠くなると、話にいくハードルが上がらないか？&lt;/li&gt;
&lt;li&gt;オンラインで話しかけやすいようにするための工夫は？&lt;/li&gt;
&lt;li&gt;全社ミーティングでの愛のあるいじり&lt;/li&gt;
&lt;li&gt;CTO本部って何をしている？どの課題を解こうとしている？&lt;/li&gt;
&lt;li&gt;エンジニア組織のマネジメントをチームで進める&lt;/li&gt;
&lt;li&gt;得意な人・知見がある人がファイナルアンサーを持っている&lt;/li&gt;
&lt;li&gt;権限委譲をどのように進めているか？&lt;/li&gt;
&lt;li&gt;8象限 と &lt;a href="https://ja.wikipedia.org/wiki/RACI%E5%9B%B3"&gt;RACI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuworks.jp/ja/product/del-poker/"&gt;デリゲーションポーカー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;heyの評価制度は？&lt;/li&gt;
&lt;li&gt;heyのエンジニア採用戦略は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0"&gt;ABM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用でやらないと決めていることは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/33R7S1X"&gt;採用サイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/3AH6ElW"&gt;hey BOOK for Engineers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.hey.jp/company"&gt;ヘイ株式会社&lt;/a&gt;&lt;/p&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;プログラミングにおける命名規則になぜこだわるのか？&lt;/li&gt;
&lt;li&gt;名前のないプログラミング言語&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3gaeuLm"&gt;WEB+DB PRESS Vol.110&lt;/a&gt; もしくは &lt;a href="https://amzn.to/3Gew23g"&gt;WEB+DB PRESS総集編[Vol.1~120] &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/fujimura/ru-men-ming-qian"&gt;入門 名前&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;命名規則における「良い」とは何か？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3AGEA1Y"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;名前の意味と挙動が一致していること&lt;/li&gt;
&lt;li&gt;parse という関数命名における例&lt;/li&gt;
&lt;li&gt;primary と primal&lt;/li&gt;
&lt;li&gt;全体の名前のルーツになる命名は丁寧につける&lt;/li&gt;
&lt;li&gt;日本語を、命名規則に使うのはどうか？&lt;/li&gt;
&lt;li&gt;関数・変数名を短くすべきか？長くすべきか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names"&gt;Clarity over brevity in variable and method names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Haskell での命名&lt;/li&gt;
&lt;li&gt;紛らわしい動詞をやめる、例: check()&lt;/li&gt;
&lt;li&gt;値を返すのか、副作用があるのか分からない&lt;/li&gt;
&lt;li&gt;Ruby の predicate メソッド&lt;/li&gt;
&lt;li&gt;hey のプロダクト開発組織デザインとは？&lt;/li&gt;
&lt;li&gt;横断チームとプロダクトチームを作り分ける判断基準は？&lt;/li&gt;
&lt;li&gt;チーム・組織が遠くなると、話にいくハードルが上がらないか？&lt;/li&gt;
&lt;li&gt;オンラインで話しかけやすいようにするための工夫は？&lt;/li&gt;
&lt;li&gt;全社ミーティングでの愛のあるいじり&lt;/li&gt;
&lt;li&gt;CTO本部って何をしている？どの課題を解こうとしている？&lt;/li&gt;
&lt;li&gt;エンジニア組織のマネジメントをチームで進める&lt;/li&gt;
&lt;li&gt;得意な人・知見がある人がファイナルアンサーを持っている&lt;/li&gt;
&lt;li&gt;権限委譲をどのように進めているか？&lt;/li&gt;
&lt;li&gt;8象限 と &lt;a href="https://ja.wikipedia.org/wiki/RACI%E5%9B%B3"&gt;RACI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuworks.jp/ja/product/del-poker/"&gt;デリゲーションポーカー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;heyの評価制度は？&lt;/li&gt;
&lt;li&gt;heyのエンジニア採用戦略は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0"&gt;ABM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用でやらないと決めていることは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/33R7S1X"&gt;採用サイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/3AH6ElW"&gt;hey BOOK for Engineers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-"&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.hey.jp/company"&gt;ヘイ株式会社&lt;/a&gt;&lt;/p&gt;
</itunes:summary>
      <itunes:title>67. 命名規則 と heyのエンジニア組織 w/ ffu_</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>68</podcast:episode>
    </item>
    <item>
      <title>66. 問いかけの作法(後編) w/ YukiAnzai</title>
      <link>https://fukabori.fm/episode/66</link>
      <description>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;問いを引き出す基本定石とは？&lt;/li&gt;
&lt;li&gt;上司が至らなさに光を当ててしまう&lt;/li&gt;
&lt;li&gt;問いかけは相手の意見・個性を引き出すために使う&lt;/li&gt;
&lt;li&gt;いたらなさになぜ、スポットライトをあててしまうのか？&lt;/li&gt;
&lt;li&gt;「何か良いアイデアはありますか？なんでもよいので」&lt;/li&gt;
&lt;li&gt;「これまでのボツネタのなかでもったいない、と思うものはありましたか？」&lt;/li&gt;
&lt;li&gt;質問のスポットライトの良い角度をどのように探すか？&lt;/li&gt;
&lt;li&gt;同じものをみているふりして違う意味で使っている&lt;/li&gt;
&lt;li&gt;定義されていない言葉は とらわれ の可能性が高い&lt;/li&gt;
&lt;li&gt;理念を良い意味で各現場が解釈していく&lt;/li&gt;
&lt;li&gt;現場の理念のすれ違いをどうやって、すり合わせしていくのか？&lt;/li&gt;
&lt;li&gt;パラフレーズという問いかけのパターン&lt;/li&gt;
&lt;li&gt;ブレストのアイデアをどのように収束させるか？&lt;/li&gt;
&lt;li&gt;アイデアの決め方を事前に合意しておく&lt;/li&gt;
&lt;li&gt;多数決と多様決&lt;/li&gt;
&lt;li&gt;組織の創造性を引き出すエンジニアリングとは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/067_HVpBI.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fseqen7wbxn7778066ry8f22.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 17 Jan 2022 06:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fseqen7wbxn7778066ry8f22.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/5049/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:19:39</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;問いを引き出す基本定石とは？&lt;/li&gt;
&lt;li&gt;上司が至らなさに光を当ててしまう&lt;/li&gt;
&lt;li&gt;問いかけは相手の意見・個性を引き出すために使う&lt;/li&gt;
&lt;li&gt;いたらなさになぜ、スポットライトをあててしまうのか？&lt;/li&gt;
&lt;li&gt;「何か良いアイデアはありますか？なんでもよいので」&lt;/li&gt;
&lt;li&gt;「これまでのボツネタのなかでもったいない、と思うものはありましたか？」&lt;/li&gt;
&lt;li&gt;質問のスポットライトの良い角度をどのように探すか？&lt;/li&gt;
&lt;li&gt;同じものをみているふりして違う意味で使っている&lt;/li&gt;
&lt;li&gt;定義されていない言葉は とらわれ の可能性が高い&lt;/li&gt;
&lt;li&gt;理念を良い意味で各現場が解釈していく&lt;/li&gt;
&lt;li&gt;現場の理念のすれ違いをどうやって、すり合わせしていくのか？&lt;/li&gt;
&lt;li&gt;パラフレーズという問いかけのパターン&lt;/li&gt;
&lt;li&gt;ブレストのアイデアをどのように収束させるか？&lt;/li&gt;
&lt;li&gt;アイデアの決め方を事前に合意しておく&lt;/li&gt;
&lt;li&gt;多数決と多様決&lt;/li&gt;
&lt;li&gt;組織の創造性を引き出すエンジニアリングとは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;問いを引き出す基本定石とは？&lt;/li&gt;
&lt;li&gt;上司が至らなさに光を当ててしまう&lt;/li&gt;
&lt;li&gt;問いかけは相手の意見・個性を引き出すために使う&lt;/li&gt;
&lt;li&gt;いたらなさになぜ、スポットライトをあててしまうのか？&lt;/li&gt;
&lt;li&gt;「何か良いアイデアはありますか？なんでもよいので」&lt;/li&gt;
&lt;li&gt;「これまでのボツネタのなかでもったいない、と思うものはありましたか？」&lt;/li&gt;
&lt;li&gt;質問のスポットライトの良い角度をどのように探すか？&lt;/li&gt;
&lt;li&gt;同じものをみているふりして違う意味で使っている&lt;/li&gt;
&lt;li&gt;定義されていない言葉は とらわれ の可能性が高い&lt;/li&gt;
&lt;li&gt;理念を良い意味で各現場が解釈していく&lt;/li&gt;
&lt;li&gt;現場の理念のすれ違いをどうやって、すり合わせしていくのか？&lt;/li&gt;
&lt;li&gt;パラフレーズという問いかけのパターン&lt;/li&gt;
&lt;li&gt;ブレストのアイデアをどのように収束させるか？&lt;/li&gt;
&lt;li&gt;アイデアの決め方を事前に合意しておく&lt;/li&gt;
&lt;li&gt;多数決と多様決&lt;/li&gt;
&lt;li&gt;組織の創造性を引き出すエンジニアリングとは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>66. 問いかけの作法(後編) w/ YukiAnzai</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>67</podcast:episode>
    </item>
    <item>
      <title>65. 問いかけの作法(前編) w/ YukiAnzai</title>
      <link>https://fukabori.fm/episode/65</link>
      <description>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、&amp;quot;問いかけの作法&amp;quot;の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;問いかけの作法&amp;quot; の概要について&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3t9e6o5"&gt;問いのデザイン: 創造的対話のファシリテーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3zQ9u7G"&gt;リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？&lt;/li&gt;
&lt;li&gt;両利きの経営とサクセストラップ&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環 とは？&lt;/li&gt;
&lt;li&gt;誰も意見を言ってくれないお通夜のようなミーティング&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環は、どのような起点で生まれてくる？&lt;/li&gt;
&lt;li&gt;学校の先生にファシリテーションの方法を伝えると、教育効果が悪い&lt;/li&gt;
&lt;li&gt;ファシリテーションで、介入するタイミングは？&lt;/li&gt;
&lt;li&gt;相手の思考のステータスを観察する・見立てる&lt;/li&gt;
&lt;li&gt;オンラインで観察するコツ・工夫は？&lt;/li&gt;
&lt;li&gt;コミュニケーションのチャネルを複数にしておく&lt;/li&gt;
&lt;li&gt;ハードルが低い方から段階的にアウトプットしてもらう&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html"&gt;【エッセイ】どうして日本人は質問しなくなるのか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;意見・質問を出せる環境を作っていくのが大事&lt;/li&gt;
&lt;li&gt;「問いかけの作法」で言及される4つの現代病とは？&lt;/li&gt;
&lt;li&gt;認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化&lt;/li&gt;
&lt;li&gt;関係性が固定されている状況では、非常に意見が言いにくい&lt;/li&gt;
&lt;li&gt;のび太がこんなに優秀なはずがない&lt;/li&gt;
&lt;li&gt;3人のレンガ職人のメタファーにおける1人目の凄さ&lt;/li&gt;
&lt;li&gt;現代病に対して、我々はどう振る舞っていくべきなのか？&lt;/li&gt;
&lt;li&gt;「うちの会社って、伝統があるのでリセットできないんですよ」&lt;/li&gt;
&lt;li&gt;固定観念は、昨日までの強力な武器である&lt;/li&gt;
&lt;li&gt;こだわりと、とらわれの二項対立を往復する&lt;/li&gt;
&lt;li&gt;知の探索と知の深化との両方をやり続ける大変さ&lt;/li&gt;
&lt;li&gt;構造的に分担するアプローチ と 文脈的両利きのアプローチ&lt;/li&gt;
&lt;li&gt;個人で探索と深化のループを回すにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;評価制度と連動させるのが重要&lt;/li&gt;
&lt;li&gt;MIMIGURIにおける制度での連動例&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/066_TlYxi.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fs28mw8cyv2kh4bvrnar79wg.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 11 Jan 2022 06:21:38 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fs28mw8cyv2kh4bvrnar79wg.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4992/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:44:25</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、&amp;quot;問いかけの作法&amp;quot;の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;問いかけの作法&amp;quot; の概要について&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3t9e6o5"&gt;問いのデザイン: 創造的対話のファシリテーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3zQ9u7G"&gt;リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？&lt;/li&gt;
&lt;li&gt;両利きの経営とサクセストラップ&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環 とは？&lt;/li&gt;
&lt;li&gt;誰も意見を言ってくれないお通夜のようなミーティング&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環は、どのような起点で生まれてくる？&lt;/li&gt;
&lt;li&gt;学校の先生にファシリテーションの方法を伝えると、教育効果が悪い&lt;/li&gt;
&lt;li&gt;ファシリテーションで、介入するタイミングは？&lt;/li&gt;
&lt;li&gt;相手の思考のステータスを観察する・見立てる&lt;/li&gt;
&lt;li&gt;オンラインで観察するコツ・工夫は？&lt;/li&gt;
&lt;li&gt;コミュニケーションのチャネルを複数にしておく&lt;/li&gt;
&lt;li&gt;ハードルが低い方から段階的にアウトプットしてもらう&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html"&gt;【エッセイ】どうして日本人は質問しなくなるのか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;意見・質問を出せる環境を作っていくのが大事&lt;/li&gt;
&lt;li&gt;「問いかけの作法」で言及される4つの現代病とは？&lt;/li&gt;
&lt;li&gt;認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化&lt;/li&gt;
&lt;li&gt;関係性が固定されている状況では、非常に意見が言いにくい&lt;/li&gt;
&lt;li&gt;のび太がこんなに優秀なはずがない&lt;/li&gt;
&lt;li&gt;3人のレンガ職人のメタファーにおける1人目の凄さ&lt;/li&gt;
&lt;li&gt;現代病に対して、我々はどう振る舞っていくべきなのか？&lt;/li&gt;
&lt;li&gt;「うちの会社って、伝統があるのでリセットできないんですよ」&lt;/li&gt;
&lt;li&gt;固定観念は、昨日までの強力な武器である&lt;/li&gt;
&lt;li&gt;こだわりと、とらわれの二項対立を往復する&lt;/li&gt;
&lt;li&gt;知の探索と知の深化との両方をやり続ける大変さ&lt;/li&gt;
&lt;li&gt;構造的に分担するアプローチ と 文脈的両利きのアプローチ&lt;/li&gt;
&lt;li&gt;個人で探索と深化のループを回すにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;評価制度と連動させるのが重要&lt;/li&gt;
&lt;li&gt;MIMIGURIにおける制度での連動例&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、&amp;quot;問いかけの作法&amp;quot;の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;問いかけの作法&amp;quot; の概要について&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3t9e6o5"&gt;問いのデザイン: 創造的対話のファシリテーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3zQ9u7G"&gt;リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？&lt;/li&gt;
&lt;li&gt;両利きの経営とサクセストラップ&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環 とは？&lt;/li&gt;
&lt;li&gt;誰も意見を言ってくれないお通夜のようなミーティング&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環は、どのような起点で生まれてくる？&lt;/li&gt;
&lt;li&gt;学校の先生にファシリテーションの方法を伝えると、教育効果が悪い&lt;/li&gt;
&lt;li&gt;ファシリテーションで、介入するタイミングは？&lt;/li&gt;
&lt;li&gt;相手の思考のステータスを観察する・見立てる&lt;/li&gt;
&lt;li&gt;オンラインで観察するコツ・工夫は？&lt;/li&gt;
&lt;li&gt;コミュニケーションのチャネルを複数にしておく&lt;/li&gt;
&lt;li&gt;ハードルが低い方から段階的にアウトプットしてもらう&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html"&gt;【エッセイ】どうして日本人は質問しなくなるのか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;意見・質問を出せる環境を作っていくのが大事&lt;/li&gt;
&lt;li&gt;「問いかけの作法」で言及される4つの現代病とは？&lt;/li&gt;
&lt;li&gt;認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化&lt;/li&gt;
&lt;li&gt;関係性が固定されている状況では、非常に意見が言いにくい&lt;/li&gt;
&lt;li&gt;のび太がこんなに優秀なはずがない&lt;/li&gt;
&lt;li&gt;3人のレンガ職人のメタファーにおける1人目の凄さ&lt;/li&gt;
&lt;li&gt;現代病に対して、我々はどう振る舞っていくべきなのか？&lt;/li&gt;
&lt;li&gt;「うちの会社って、伝統があるのでリセットできないんですよ」&lt;/li&gt;
&lt;li&gt;固定観念は、昨日までの強力な武器である&lt;/li&gt;
&lt;li&gt;こだわりと、とらわれの二項対立を往復する&lt;/li&gt;
&lt;li&gt;知の探索と知の深化との両方をやり続ける大変さ&lt;/li&gt;
&lt;li&gt;構造的に分担するアプローチ と 文脈的両利きのアプローチ&lt;/li&gt;
&lt;li&gt;個人で探索と深化のループを回すにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;評価制度と連動させるのが重要&lt;/li&gt;
&lt;li&gt;MIMIGURIにおける制度での連動例&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>65. 問いかけの作法(前編) w/ YukiAnzai</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>66</podcast:episode>
    </item>
    <item>
      <title>64. ロボット x スキル w/ nakakura, kmat</title>
      <link>https://fukabori.fm/episode/64</link>
      <description>&lt;p&gt;前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ROSとは何か？&lt;/li&gt;
&lt;li&gt;ロボット x スキル&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing"&gt;AIが判断してロボットを動かしている動画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ロボットの身体構造におけるネックとは&lt;/li&gt;
&lt;li&gt;ロボット業界における車輪の再発明&lt;/li&gt;
&lt;li&gt;強化学習とニューラルネットの応用&lt;/li&gt;
&lt;li&gt;ROS上で動作するロボットが持つ身体構造情報の活用&lt;/li&gt;
&lt;li&gt;ロボットの動作を作り込むときの苦労とは？何が大変なのか？&lt;/li&gt;
&lt;li&gt;最も大変なのは、ロボット周辺の環境が変化すること&lt;/li&gt;
&lt;li&gt;シーケンス的作業の実装&lt;/li&gt;
&lt;li&gt;ドアを開ける場合の実装例&lt;/li&gt;
&lt;li&gt;ロボットプログラミングに対するテストはめちゃめちゃ大変？&lt;/li&gt;
&lt;li&gt;テストのフィードバックサイクル&lt;/li&gt;
&lt;li&gt;物理シミュレータの利用&lt;/li&gt;
&lt;li&gt;ハードウェアの劣化・故障&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ntt.com/about-us/recruit/event/event01.html"&gt;インターンシップ募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0011314"&gt;中途採用も募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームを一言で表現すると？&lt;/li&gt;
&lt;li&gt;プロフェッショナル集団&lt;/li&gt;
&lt;li&gt;攻殻機動隊 - Stand Alone Complex&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener"&gt;第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/065_KPHCL.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01frgwwv9p48pwhqa8q70cb7aw.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 04 Jan 2022 06:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01frgwwv9p48pwhqa8q70cb7aw.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4929/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:20:39</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;p&gt;前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ROSとは何か？&lt;/li&gt;
&lt;li&gt;ロボット x スキル&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing"&gt;AIが判断してロボットを動かしている動画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ロボットの身体構造におけるネックとは&lt;/li&gt;
&lt;li&gt;ロボット業界における車輪の再発明&lt;/li&gt;
&lt;li&gt;強化学習とニューラルネットの応用&lt;/li&gt;
&lt;li&gt;ROS上で動作するロボットが持つ身体構造情報の活用&lt;/li&gt;
&lt;li&gt;ロボットの動作を作り込むときの苦労とは？何が大変なのか？&lt;/li&gt;
&lt;li&gt;最も大変なのは、ロボット周辺の環境が変化すること&lt;/li&gt;
&lt;li&gt;シーケンス的作業の実装&lt;/li&gt;
&lt;li&gt;ドアを開ける場合の実装例&lt;/li&gt;
&lt;li&gt;ロボットプログラミングに対するテストはめちゃめちゃ大変？&lt;/li&gt;
&lt;li&gt;テストのフィードバックサイクル&lt;/li&gt;
&lt;li&gt;物理シミュレータの利用&lt;/li&gt;
&lt;li&gt;ハードウェアの劣化・故障&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ntt.com/about-us/recruit/event/event01.html"&gt;インターンシップ募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0011314"&gt;中途採用も募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームを一言で表現すると？&lt;/li&gt;
&lt;li&gt;プロフェッショナル集団&lt;/li&gt;
&lt;li&gt;攻殻機動隊 - Stand Alone Complex&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener"&gt;第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;p&gt;前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ROSとは何か？&lt;/li&gt;
&lt;li&gt;ロボット x スキル&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing"&gt;AIが判断してロボットを動かしている動画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ロボットの身体構造におけるネックとは&lt;/li&gt;
&lt;li&gt;ロボット業界における車輪の再発明&lt;/li&gt;
&lt;li&gt;強化学習とニューラルネットの応用&lt;/li&gt;
&lt;li&gt;ROS上で動作するロボットが持つ身体構造情報の活用&lt;/li&gt;
&lt;li&gt;ロボットの動作を作り込むときの苦労とは？何が大変なのか？&lt;/li&gt;
&lt;li&gt;最も大変なのは、ロボット周辺の環境が変化すること&lt;/li&gt;
&lt;li&gt;シーケンス的作業の実装&lt;/li&gt;
&lt;li&gt;ドアを開ける場合の実装例&lt;/li&gt;
&lt;li&gt;ロボットプログラミングに対するテストはめちゃめちゃ大変？&lt;/li&gt;
&lt;li&gt;テストのフィードバックサイクル&lt;/li&gt;
&lt;li&gt;物理シミュレータの利用&lt;/li&gt;
&lt;li&gt;ハードウェアの劣化・故障&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ntt.com/about-us/recruit/event/event01.html"&gt;インターンシップ募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0011314"&gt;中途採用も募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームを一言で表現すると？&lt;/li&gt;
&lt;li&gt;プロフェッショナル集団&lt;/li&gt;
&lt;li&gt;攻殻機動隊 - Stand Alone Complex&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener"&gt;第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>64. ロボット x スキル w/ nakakura, kmat</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>65</podcast:episode>
    </item>
    <item>
      <title>63. テレプレゼンス・ロボット・最後にRust w/ nakakura, kmat</title>
      <link>https://fukabori.fm/episode/63</link>
      <description>&lt;ul&gt;
&lt;li&gt;テレプレゼンスとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view"&gt;参考: テレプレゼンスのイメージがわかる動画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;攻殻機動隊の義体&lt;/li&gt;
&lt;li&gt;学術的にはいつから？&lt;/li&gt;
&lt;li&gt;何回かあるVR元年&lt;/li&gt;
&lt;li&gt;テレプレゼンスが解決しようとしている課題とは？&lt;/li&gt;
&lt;li&gt;VR酔い&lt;/li&gt;
&lt;li&gt;HMD(Head Mounted Display)&lt;/li&gt;
&lt;li&gt;テレプレゼンスとメタバースとの関連は？&lt;/li&gt;
&lt;li&gt;メタバースが現実を侵食する&lt;/li&gt;
&lt;li&gt;現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス&lt;/li&gt;
&lt;li&gt;テレプレゼンスにおける技術的課題とビジネス的課題&lt;/li&gt;
&lt;li&gt;ロボット費に比べて人件費が安すぎる問題&lt;/li&gt;
&lt;li&gt;データセンターにおけるロボット利用のユースケース&lt;/li&gt;
&lt;li&gt;ヒューマノイドはなぜ人型である必要があるのか？&lt;/li&gt;
&lt;li&gt;脳に直結したときには、人間に近い形じゃないと動かせない&lt;/li&gt;
&lt;li&gt;ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？&lt;/li&gt;
&lt;li&gt;遅延、パケットロス、ジッター(jitter)&lt;/li&gt;
&lt;li&gt;Zoom飲みで友達の猫を触りたい&lt;/li&gt;
&lt;li&gt;触原色&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/wiki/TPAC/2021"&gt;W3C TPAC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;テレプレゼンスビジネスの活性に必要な通信エンジンの開発&lt;/li&gt;
&lt;li&gt;WebRTCを拡張した通信エンジン提供&lt;/li&gt;
&lt;li&gt;&lt;a href="https://janus.conf.meetecho.com/"&gt;Janus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rustはロボット開発でメリットがある&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ntt.com/about-us/recruit/event/event01.html"&gt;インターンシップ募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0011314"&gt;中途採用も募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考動画&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing"&gt;XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing"&gt;遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/064_reshT.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fqw8ptggfc4rhwhp3k1jhe0q.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 27 Dec 2021 10:01:24 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fqw8ptggfc4rhwhp3k1jhe0q.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4871/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:37:59</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;ul&gt;
&lt;li&gt;テレプレゼンスとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view"&gt;参考: テレプレゼンスのイメージがわかる動画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;攻殻機動隊の義体&lt;/li&gt;
&lt;li&gt;学術的にはいつから？&lt;/li&gt;
&lt;li&gt;何回かあるVR元年&lt;/li&gt;
&lt;li&gt;テレプレゼンスが解決しようとしている課題とは？&lt;/li&gt;
&lt;li&gt;VR酔い&lt;/li&gt;
&lt;li&gt;HMD(Head Mounted Display)&lt;/li&gt;
&lt;li&gt;テレプレゼンスとメタバースとの関連は？&lt;/li&gt;
&lt;li&gt;メタバースが現実を侵食する&lt;/li&gt;
&lt;li&gt;現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス&lt;/li&gt;
&lt;li&gt;テレプレゼンスにおける技術的課題とビジネス的課題&lt;/li&gt;
&lt;li&gt;ロボット費に比べて人件費が安すぎる問題&lt;/li&gt;
&lt;li&gt;データセンターにおけるロボット利用のユースケース&lt;/li&gt;
&lt;li&gt;ヒューマノイドはなぜ人型である必要があるのか？&lt;/li&gt;
&lt;li&gt;脳に直結したときには、人間に近い形じゃないと動かせない&lt;/li&gt;
&lt;li&gt;ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？&lt;/li&gt;
&lt;li&gt;遅延、パケットロス、ジッター(jitter)&lt;/li&gt;
&lt;li&gt;Zoom飲みで友達の猫を触りたい&lt;/li&gt;
&lt;li&gt;触原色&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/wiki/TPAC/2021"&gt;W3C TPAC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;テレプレゼンスビジネスの活性に必要な通信エンジンの開発&lt;/li&gt;
&lt;li&gt;WebRTCを拡張した通信エンジン提供&lt;/li&gt;
&lt;li&gt;&lt;a href="https://janus.conf.meetecho.com/"&gt;Janus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rustはロボット開発でメリットがある&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ntt.com/about-us/recruit/event/event01.html"&gt;インターンシップ募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0011314"&gt;中途採用も募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考動画&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing"&gt;XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing"&gt;遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;ul&gt;
&lt;li&gt;テレプレゼンスとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view"&gt;参考: テレプレゼンスのイメージがわかる動画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;攻殻機動隊の義体&lt;/li&gt;
&lt;li&gt;学術的にはいつから？&lt;/li&gt;
&lt;li&gt;何回かあるVR元年&lt;/li&gt;
&lt;li&gt;テレプレゼンスが解決しようとしている課題とは？&lt;/li&gt;
&lt;li&gt;VR酔い&lt;/li&gt;
&lt;li&gt;HMD(Head Mounted Display)&lt;/li&gt;
&lt;li&gt;テレプレゼンスとメタバースとの関連は？&lt;/li&gt;
&lt;li&gt;メタバースが現実を侵食する&lt;/li&gt;
&lt;li&gt;現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス&lt;/li&gt;
&lt;li&gt;テレプレゼンスにおける技術的課題とビジネス的課題&lt;/li&gt;
&lt;li&gt;ロボット費に比べて人件費が安すぎる問題&lt;/li&gt;
&lt;li&gt;データセンターにおけるロボット利用のユースケース&lt;/li&gt;
&lt;li&gt;ヒューマノイドはなぜ人型である必要があるのか？&lt;/li&gt;
&lt;li&gt;脳に直結したときには、人間に近い形じゃないと動かせない&lt;/li&gt;
&lt;li&gt;ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？&lt;/li&gt;
&lt;li&gt;遅延、パケットロス、ジッター(jitter)&lt;/li&gt;
&lt;li&gt;Zoom飲みで友達の猫を触りたい&lt;/li&gt;
&lt;li&gt;触原色&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/wiki/TPAC/2021"&gt;W3C TPAC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;テレプレゼンスビジネスの活性に必要な通信エンジンの開発&lt;/li&gt;
&lt;li&gt;WebRTCを拡張した通信エンジン提供&lt;/li&gt;
&lt;li&gt;&lt;a href="https://janus.conf.meetecho.com/"&gt;Janus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rustはロボット開発でメリットがある&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ntt.com/about-us/recruit/event/event01.html"&gt;インターンシップ募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0011314"&gt;中途採用も募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考動画&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing"&gt;XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing"&gt;遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>63. テレプレゼンス・ロボット・最後にRust w/ nakakura, kmat</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>64</podcast:episode>
    </item>
    <item>
      <title> 62. プロダクト・レッド・オーガニゼーション w/ ykmc09</title>
      <link>https://fukabori.fm/episode/62</link>
      <description>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3yF5juO"&gt;プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3p9qvWs"&gt;PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト自体がプロダクトを売るためにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;書籍Part1/2/3でどのようなコンテンツがあるか？&lt;/li&gt;
&lt;li&gt;データ インフォームド とは？&lt;/li&gt;
&lt;li&gt;定量データと定性データをどのように組み合わせて使えばいいのか？&lt;/li&gt;
&lt;li&gt;参考: &lt;a href="https://note.com/hiroko_nozawa/n/n96fc42d4370f"&gt;UXリサーチャーのための「Mixed Methods」読書会を開催しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;最悪なのは、フィードバックを求めておきながら、それを無視することだ&amp;quot;&lt;/li&gt;
&lt;li&gt;コミュニケーションを決着させる&lt;/li&gt;
&lt;li&gt;遅行指標と先行指標&lt;/li&gt;
&lt;li&gt;ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？&lt;/li&gt;
&lt;li&gt;ProductOpsとは何か？&lt;/li&gt;
&lt;li&gt;&amp;quot;プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。&amp;quot;&lt;/li&gt;
&lt;li&gt;ykmc09さんにとって、良いプロダクトマネージャとは何か？&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/063_GqKBR.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fqa53jnxcc9twq6sw7hz3svy.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 20 Dec 2021 05:11:06 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fqa53jnxcc9twq6sw7hz3svy.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4797/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:42:51</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3yF5juO"&gt;プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3p9qvWs"&gt;PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト自体がプロダクトを売るためにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;書籍Part1/2/3でどのようなコンテンツがあるか？&lt;/li&gt;
&lt;li&gt;データ インフォームド とは？&lt;/li&gt;
&lt;li&gt;定量データと定性データをどのように組み合わせて使えばいいのか？&lt;/li&gt;
&lt;li&gt;参考: &lt;a href="https://note.com/hiroko_nozawa/n/n96fc42d4370f"&gt;UXリサーチャーのための「Mixed Methods」読書会を開催しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;最悪なのは、フィードバックを求めておきながら、それを無視することだ&amp;quot;&lt;/li&gt;
&lt;li&gt;コミュニケーションを決着させる&lt;/li&gt;
&lt;li&gt;遅行指標と先行指標&lt;/li&gt;
&lt;li&gt;ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？&lt;/li&gt;
&lt;li&gt;ProductOpsとは何か？&lt;/li&gt;
&lt;li&gt;&amp;quot;プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。&amp;quot;&lt;/li&gt;
&lt;li&gt;ykmc09さんにとって、良いプロダクトマネージャとは何か？&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3yF5juO"&gt;プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3p9qvWs"&gt;PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト自体がプロダクトを売るためにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;書籍Part1/2/3でどのようなコンテンツがあるか？&lt;/li&gt;
&lt;li&gt;データ インフォームド とは？&lt;/li&gt;
&lt;li&gt;定量データと定性データをどのように組み合わせて使えばいいのか？&lt;/li&gt;
&lt;li&gt;参考: &lt;a href="https://note.com/hiroko_nozawa/n/n96fc42d4370f"&gt;UXリサーチャーのための「Mixed Methods」読書会を開催しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;最悪なのは、フィードバックを求めておきながら、それを無視することだ&amp;quot;&lt;/li&gt;
&lt;li&gt;コミュニケーションを決着させる&lt;/li&gt;
&lt;li&gt;遅行指標と先行指標&lt;/li&gt;
&lt;li&gt;ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？&lt;/li&gt;
&lt;li&gt;ProductOpsとは何か？&lt;/li&gt;
&lt;li&gt;&amp;quot;プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。&amp;quot;&lt;/li&gt;
&lt;li&gt;ykmc09さんにとって、良いプロダクトマネージャとは何か？&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title> 62. プロダクト・レッド・オーガニゼーション w/ ykmc09</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>63</podcast:episode>
    </item>
    <item>
      <title>61. 電動マイクロモビリティのプロダクト開発 w/ 7omich, t-kurimura</title>
      <link>https://fukabori.fm/episode/61</link>
      <description>&lt;h2&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;LUUPのプロダクトって？&lt;/li&gt;
  &lt;li&gt;電動キックボードへのソフトウェアによる速度制限&lt;/li&gt;
  &lt;li&gt;Over The Air Update&lt;/li&gt;
  &lt;li&gt;ハードとソフトウェア混合のシステムアーキテクチャとは？&lt;/li&gt;
  &lt;li&gt;IoTデバイスとIoTサーバの通信内容&lt;/li&gt;
  &lt;li&gt;MQTT と接続が切れたら？&lt;/li&gt;
  &lt;li&gt;電動マイクロモビリティデバイスのポートをどうやって決めているか？&lt;/li&gt;
  &lt;li&gt;屋外の置かれるIoTデバイスにおきる障害とは？&lt;/li&gt;
  &lt;li&gt;IoTデバイスの車体はどのように調達している？設計から自社？&lt;/li&gt;
  &lt;li&gt;中国のODM先はどのように発見する？&lt;/li&gt;
  &lt;li&gt;IoTサービスのエラー設計とは？&lt;/li&gt;
  &lt;li&gt;キックボードの技師がいまはほとんどいない&lt;/li&gt;
  &lt;li&gt;LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？&lt;/li&gt;
  &lt;li&gt;実際にユーザ意見を反映して開発した例は？&lt;/li&gt;
  &lt;li&gt;Twitterからのユーザーの声を収集&lt;/li&gt;
  &lt;li&gt;開発機能の優先度付けの順序をどのように決めるか？&lt;/li&gt;
  &lt;li&gt;課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける&lt;/li&gt;
  &lt;li&gt;どのようにして情報の透明性を高めているか？&lt;/li&gt;
  &lt;li&gt;バックログを、何で管理しているか？&lt;/li&gt;
  &lt;li&gt;経営陣の経営方針をどのように現場に伝えていくか？&lt;/li&gt;
  &lt;li&gt;高頻度な1on1&lt;/li&gt;
  &lt;li&gt;開発チームの文化は？&lt;/li&gt;
  &lt;li&gt;技術者の採用プロセス&lt;/li&gt;
  &lt;li&gt;技術的に面白いチャレンジには何がある？&lt;/li&gt;
  &lt;li&gt;今後のプロダクトの方向性をどうしていく？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3ozy7RI"&gt;株式会社Luup&lt;/a&gt;&amp;nbsp;&lt;/p&gt;</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/062_IAino.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fpr5xp61a7jwv8b3ch1fgjbv.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 13 Dec 2021 12:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fpr5xp61a7jwv8b3ch1fgjbv.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4720/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:41:10</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;LUUPのプロダクトって？&lt;/li&gt;
  &lt;li&gt;電動キックボードへのソフトウェアによる速度制限&lt;/li&gt;
  &lt;li&gt;Over The Air Update&lt;/li&gt;
  &lt;li&gt;ハードとソフトウェア混合のシステムアーキテクチャとは？&lt;/li&gt;
  &lt;li&gt;IoTデバイスとIoTサーバの通信内容&lt;/li&gt;
  &lt;li&gt;MQTT と接続が切れたら？&lt;/li&gt;
  &lt;li&gt;電動マイクロモビリティデバイスのポートをどうやって決めているか？&lt;/li&gt;
  &lt;li&gt;屋外の置かれるIoTデバイスにおきる障害とは？&lt;/li&gt;
  &lt;li&gt;IoTデバイスの車体はどのように調達している？設計から自社？&lt;/li&gt;
  &lt;li&gt;中国のODM先はどのように発見する？&lt;/li&gt;
  &lt;li&gt;IoTサービスのエラー設計とは？&lt;/li&gt;
  &lt;li&gt;キックボードの技師がいまはほとんどいない&lt;/li&gt;
  &lt;li&gt;LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？&lt;/li&gt;
  &lt;li&gt;実際にユーザ意見を反映して開発した例は？&lt;/li&gt;
  &lt;li&gt;Twitterからのユーザーの声を収集&lt;/li&gt;
  &lt;li&gt;開発機能の優先度付けの順序をどのように決めるか？&lt;/li&gt;
  &lt;li&gt;課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける&lt;/li&gt;
  &lt;li&gt;どのようにして情報の透明性を高めているか？&lt;/li&gt;
  &lt;li&gt;バックログを、何で管理しているか？&lt;/li&gt;
  &lt;li&gt;経営陣の経営方針をどのように現場に伝えていくか？&lt;/li&gt;
  &lt;li&gt;高頻度な1on1&lt;/li&gt;
  &lt;li&gt;開発チームの文化は？&lt;/li&gt;
  &lt;li&gt;技術者の採用プロセス&lt;/li&gt;
  &lt;li&gt;技術的に面白いチャレンジには何がある？&lt;/li&gt;
  &lt;li&gt;今後のプロダクトの方向性をどうしていく？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3ozy7RI"&gt;株式会社Luup&lt;/a&gt;&amp;nbsp;&lt;/p&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;LUUPのプロダクトって？&lt;/li&gt;
  &lt;li&gt;電動キックボードへのソフトウェアによる速度制限&lt;/li&gt;
  &lt;li&gt;Over The Air Update&lt;/li&gt;
  &lt;li&gt;ハードとソフトウェア混合のシステムアーキテクチャとは？&lt;/li&gt;
  &lt;li&gt;IoTデバイスとIoTサーバの通信内容&lt;/li&gt;
  &lt;li&gt;MQTT と接続が切れたら？&lt;/li&gt;
  &lt;li&gt;電動マイクロモビリティデバイスのポートをどうやって決めているか？&lt;/li&gt;
  &lt;li&gt;屋外の置かれるIoTデバイスにおきる障害とは？&lt;/li&gt;
  &lt;li&gt;IoTデバイスの車体はどのように調達している？設計から自社？&lt;/li&gt;
  &lt;li&gt;中国のODM先はどのように発見する？&lt;/li&gt;
  &lt;li&gt;IoTサービスのエラー設計とは？&lt;/li&gt;
  &lt;li&gt;キックボードの技師がいまはほとんどいない&lt;/li&gt;
  &lt;li&gt;LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？&lt;/li&gt;
  &lt;li&gt;実際にユーザ意見を反映して開発した例は？&lt;/li&gt;
  &lt;li&gt;Twitterからのユーザーの声を収集&lt;/li&gt;
  &lt;li&gt;開発機能の優先度付けの順序をどのように決めるか？&lt;/li&gt;
  &lt;li&gt;課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける&lt;/li&gt;
  &lt;li&gt;どのようにして情報の透明性を高めているか？&lt;/li&gt;
  &lt;li&gt;バックログを、何で管理しているか？&lt;/li&gt;
  &lt;li&gt;経営陣の経営方針をどのように現場に伝えていくか？&lt;/li&gt;
  &lt;li&gt;高頻度な1on1&lt;/li&gt;
  &lt;li&gt;開発チームの文化は？&lt;/li&gt;
  &lt;li&gt;技術者の採用プロセス&lt;/li&gt;
  &lt;li&gt;技術的に面白いチャレンジには何がある？&lt;/li&gt;
  &lt;li&gt;今後のプロダクトの方向性をどうしていく？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;エピソード提供スポンサー&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3ozy7RI"&gt;株式会社Luup&lt;/a&gt;&amp;nbsp;&lt;/p&gt;</itunes:summary>
      <itunes:title>61. 電動マイクロモビリティのプロダクト開発 w/ 7omich, t-kurimura</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>62</podcast:episode>
    </item>
    <item>
      <title>60. エムスリーにおけるエンジニアリングマネジメント・リーダーの役割・1on1 w/ yamamuteking</title>
      <link>https://fukabori.fm/episode/60</link>
      <description>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんがエムスリーで実施した、最大の組織変更は？&lt;/li&gt;
&lt;li&gt;小さいチーム・数多くのリーダー&lt;/li&gt;
&lt;li&gt;マネジメントチームが見る範囲は？&lt;/li&gt;
&lt;li&gt;マネジメントチームに所属するHRBPの役割は？&lt;/li&gt;
&lt;li&gt;エンジニアのチャレンジをどのように管理しているか？&lt;/li&gt;
&lt;li&gt;チームのチャレンジとは、具体的にどのようなものか？&lt;/li&gt;
&lt;li&gt;どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？&lt;/li&gt;
&lt;li&gt;オンボーディングで何を選ぶかが重要&lt;/li&gt;
&lt;li&gt;オンボーディングで3連発の成功を目指す&lt;/li&gt;
&lt;li&gt;エムスリーにおける、エンジニアリングリーダーに求められるものは？&lt;/li&gt;
&lt;li&gt;目標設定・評価・採用への貢献&lt;/li&gt;
&lt;li&gt;山崎さんであれば、どのように目標設定をするか？&lt;/li&gt;
&lt;li&gt;「正しく」評価するために何を気をつけているか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 とは？&lt;/li&gt;
&lt;li&gt;評価に直接関与しないグループリーダーとの新入社員との1on1&lt;/li&gt;
&lt;li&gt;Cross 1on1 は、社員から申請して実施するのか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 の実施頻度は？&lt;/li&gt;
&lt;li&gt;エムスリーにおける1on1の目的は？&lt;/li&gt;
&lt;li&gt;山崎さんの1on1スタイルは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/m3_engineering"&gt;M3 エンジニア公式 Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/"&gt;M3 Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ"&gt;エムスリー公式テックチャンネル 【M3 Tech Channel】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/062_yvfSc.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fmb8w4sjqekgfg86aqq1x6qf.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 15 Nov 2021 08:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fmb8w4sjqekgfg86aqq1x6qf.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4377/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:30:07</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんがエムスリーで実施した、最大の組織変更は？&lt;/li&gt;
&lt;li&gt;小さいチーム・数多くのリーダー&lt;/li&gt;
&lt;li&gt;マネジメントチームが見る範囲は？&lt;/li&gt;
&lt;li&gt;マネジメントチームに所属するHRBPの役割は？&lt;/li&gt;
&lt;li&gt;エンジニアのチャレンジをどのように管理しているか？&lt;/li&gt;
&lt;li&gt;チームのチャレンジとは、具体的にどのようなものか？&lt;/li&gt;
&lt;li&gt;どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？&lt;/li&gt;
&lt;li&gt;オンボーディングで何を選ぶかが重要&lt;/li&gt;
&lt;li&gt;オンボーディングで3連発の成功を目指す&lt;/li&gt;
&lt;li&gt;エムスリーにおける、エンジニアリングリーダーに求められるものは？&lt;/li&gt;
&lt;li&gt;目標設定・評価・採用への貢献&lt;/li&gt;
&lt;li&gt;山崎さんであれば、どのように目標設定をするか？&lt;/li&gt;
&lt;li&gt;「正しく」評価するために何を気をつけているか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 とは？&lt;/li&gt;
&lt;li&gt;評価に直接関与しないグループリーダーとの新入社員との1on1&lt;/li&gt;
&lt;li&gt;Cross 1on1 は、社員から申請して実施するのか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 の実施頻度は？&lt;/li&gt;
&lt;li&gt;エムスリーにおける1on1の目的は？&lt;/li&gt;
&lt;li&gt;山崎さんの1on1スタイルは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/m3_engineering"&gt;M3 エンジニア公式 Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/"&gt;M3 Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ"&gt;エムスリー公式テックチャンネル 【M3 Tech Channel】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:subtitle>
      <itunes:summary>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんがエムスリーで実施した、最大の組織変更は？&lt;/li&gt;
&lt;li&gt;小さいチーム・数多くのリーダー&lt;/li&gt;
&lt;li&gt;マネジメントチームが見る範囲は？&lt;/li&gt;
&lt;li&gt;マネジメントチームに所属するHRBPの役割は？&lt;/li&gt;
&lt;li&gt;エンジニアのチャレンジをどのように管理しているか？&lt;/li&gt;
&lt;li&gt;チームのチャレンジとは、具体的にどのようなものか？&lt;/li&gt;
&lt;li&gt;どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？&lt;/li&gt;
&lt;li&gt;オンボーディングで何を選ぶかが重要&lt;/li&gt;
&lt;li&gt;オンボーディングで3連発の成功を目指す&lt;/li&gt;
&lt;li&gt;エムスリーにおける、エンジニアリングリーダーに求められるものは？&lt;/li&gt;
&lt;li&gt;目標設定・評価・採用への貢献&lt;/li&gt;
&lt;li&gt;山崎さんであれば、どのように目標設定をするか？&lt;/li&gt;
&lt;li&gt;「正しく」評価するために何を気をつけているか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 とは？&lt;/li&gt;
&lt;li&gt;評価に直接関与しないグループリーダーとの新入社員との1on1&lt;/li&gt;
&lt;li&gt;Cross 1on1 は、社員から申請して実施するのか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 の実施頻度は？&lt;/li&gt;
&lt;li&gt;エムスリーにおける1on1の目的は？&lt;/li&gt;
&lt;li&gt;山崎さんの1on1スタイルは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/m3_engineering"&gt;M3 エンジニア公式 Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/"&gt;M3 Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ"&gt;エムスリー公式テックチャンネル 【M3 Tech Channel】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</itunes:summary>
      <itunes:title>60. エムスリーにおけるエンジニアリングマネジメント・リーダーの役割・1on1 w/ yamamuteking</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>61</podcast:episode>
    </item>
    <item>
      <title>59. エムスリーにおけるVPoEの役割・エンジニア採用について w/ yamamuteking</title>
      <description>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんの考えるVPoEとは？&lt;/li&gt;
&lt;li&gt;m3にてVPoEを配置するきっかけは何だったか？&lt;/li&gt;
&lt;li&gt;50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？&lt;/li&gt;
&lt;li&gt;もともとオープンソースの文化が強い&lt;/li&gt;
&lt;li&gt;外部委託での失敗経験から、エンジニアリングの内製化へ&lt;/li&gt;
&lt;li&gt;要所要所で技術的に良い判断をしてきた&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3mUVmFo"&gt;Release It！ 本番用ソフトウェア製品の設計とデプロイのために&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3odv14S"&gt;不格好経営&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？&lt;/li&gt;
&lt;li&gt;採用基準を限界まで引き上げる&lt;/li&gt;
&lt;li&gt;CTOレベルという定義、およびなぜCTOレベルに着目したのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m3.recruitment.jp/business/philosophy/"&gt;くしゃみ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTOレベルをどのように判断していくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3GYYWWW"&gt;最難関のリーダーシップ ― 変革をやり遂げる意志とスキル&lt;/a&gt; をどのように活用してきたか？&lt;/li&gt;
&lt;li&gt;ハイフェッツの技術的問題と適応課題&lt;/li&gt;
&lt;li&gt;採用をテコ入れするときに、後ろのプロセスから改善していった&lt;/li&gt;
&lt;li&gt;内定承諾率100%を目指す&lt;/li&gt;
&lt;li&gt;自分たちが変わらない限り解決が難しい問題&lt;/li&gt;
&lt;li&gt;内定承諾率をあげるために、何をしていったか？&lt;/li&gt;
&lt;li&gt;改善をすすめるときに、何が有効かをどう判断していったか？&lt;/li&gt;
&lt;li&gt;オファー面談より手前のプロセスで、何を改善したか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup"&gt;エンジニアを採用する技術 VPofEngineering Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。&lt;/p&gt;
&lt;h2 id="-"&gt;エピソードスポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forkwell.com/"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/060_gTMto.mp3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fkysw27a44ypphhw90ecdtx4.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 08 Nov 2021 18:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fkysw27a44ypphhw90ecdtx4.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4324/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:31:53</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんの考えるVPoEとは？&lt;/li&gt;
&lt;li&gt;m3にてVPoEを配置するきっかけは何だったか？&lt;/li&gt;
&lt;li&gt;50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？&lt;/li&gt;
&lt;li&gt;もともとオープンソースの文化が強い&lt;/li&gt;
&lt;li&gt;外部委託での失敗経験から、エンジニアリングの内製化へ&lt;/li&gt;
&lt;li&gt;要所要所で技術的に良い判断をしてきた&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3mUVmFo"&gt;Release It！ 本番用ソフトウェア製品の設計とデプロイのために&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3odv14S"&gt;不格好経営&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？&lt;/li&gt;
&lt;li&gt;採用基準を限界まで引き上げる&lt;/li&gt;
&lt;li&gt;CTOレベルという定義、およびなぜCTOレベルに着目したのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m3.recruitment.jp/business/philosophy/"&gt;くしゃみ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTOレベルをどのように判断していくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3GYYWWW"&gt;最難関のリーダーシップ ― 変革をやり遂げる意志とスキル&lt;/a&gt; をどのように活用してきたか？&lt;/li&gt;
&lt;li&gt;ハイフェッツの技術的問題と適応課題&lt;/li&gt;
&lt;li&gt;採用をテコ入れするときに、後ろのプロセスから改善していった&lt;/li&gt;
&lt;li&gt;内定承諾率100%を目指す&lt;/li&gt;
&lt;li&gt;自分たちが変わらない限り解決が難しい問題&lt;/li&gt;
&lt;li&gt;内定承諾率をあげるために、何をしていったか？&lt;/li&gt;
&lt;li&gt;改善をすすめるときに、何が有効かをどう判断していったか？&lt;/li&gt;
&lt;li&gt;オファー面談より手前のプロセスで、何を改善したか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup"&gt;エンジニアを採用する技術 VPofEngineering Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。&lt;/p&gt;
&lt;h2 id="-"&gt;エピソードスポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forkwell.com/"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="-"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんの考えるVPoEとは？&lt;/li&gt;
&lt;li&gt;m3にてVPoEを配置するきっかけは何だったか？&lt;/li&gt;
&lt;li&gt;50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？&lt;/li&gt;
&lt;li&gt;もともとオープンソースの文化が強い&lt;/li&gt;
&lt;li&gt;外部委託での失敗経験から、エンジニアリングの内製化へ&lt;/li&gt;
&lt;li&gt;要所要所で技術的に良い判断をしてきた&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3mUVmFo"&gt;Release It！ 本番用ソフトウェア製品の設計とデプロイのために&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3odv14S"&gt;不格好経営&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？&lt;/li&gt;
&lt;li&gt;採用基準を限界まで引き上げる&lt;/li&gt;
&lt;li&gt;CTOレベルという定義、およびなぜCTOレベルに着目したのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m3.recruitment.jp/business/philosophy/"&gt;くしゃみ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTOレベルをどのように判断していくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3GYYWWW"&gt;最難関のリーダーシップ ― 変革をやり遂げる意志とスキル&lt;/a&gt; をどのように活用してきたか？&lt;/li&gt;
&lt;li&gt;ハイフェッツの技術的問題と適応課題&lt;/li&gt;
&lt;li&gt;採用をテコ入れするときに、後ろのプロセスから改善していった&lt;/li&gt;
&lt;li&gt;内定承諾率100%を目指す&lt;/li&gt;
&lt;li&gt;自分たちが変わらない限り解決が難しい問題&lt;/li&gt;
&lt;li&gt;内定承諾率をあげるために、何をしていったか？&lt;/li&gt;
&lt;li&gt;改善をすすめるときに、何が有効かをどう判断していったか？&lt;/li&gt;
&lt;li&gt;オファー面談より手前のプロセスで、何を改善したか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup"&gt;エンジニアを採用する技術 VPofEngineering Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。&lt;/p&gt;
&lt;h2 id="-"&gt;エピソードスポンサー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forkwell.com/"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>59. エムスリーにおけるVPoEの役割・エンジニア採用について w/ yamamuteking</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>60</podcast:episode>
    </item>
    <item>
      <title>58. プロダクトマネージャーカンファレンス 2021 w/ Nunerm</title>
      <link>https://fukabori.fm/episode/58</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://2021.pmconf.jp/"&gt;プロダクトマネージャーカンファレンス 2021&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;プロダクトマネジメントとは改めて何か？&lt;/li&gt;
  &lt;li&gt;顧客に価値を提供しビジネスとして利益を出すこと&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーがセールス活動も、ときにはする？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーカンファレンスとは？&lt;/li&gt;
  &lt;li&gt;どのような講演があるのか？&lt;/li&gt;
  &lt;li&gt;過去のプロダクトマネージャーカンファレンス講演で面白かったものは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2017.pmconf.jp/sessions/2017/09/14/whypm/"&gt;齊藤 満さん(2017)：95% of PM Work is Disgusting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;やりたいことというより、やらなきゃいけないことをやる&lt;/li&gt;
  &lt;li&gt;過去のプロダクトマネージャー経験で辛かったことは？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーとして最高に楽しかったことは？&lt;/li&gt;
  &lt;li&gt;仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？&lt;/li&gt;
  &lt;li&gt;プロダクトチームで共通理解を得る方法とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2018.pmconf.jp/sessions/2018/10/07/session0711/"&gt;Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;強いニーズさえ解決できれば価値になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YDezR5VTKhw"&gt;顧客のBurning Needsを解決し、PMFを達成する&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.pmconf.jp/sessions/83VXZiqj"&gt;川崎さん(2020)：お手本のような仮説・価値検証アプローチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;今年のpmconfのキーメッセージは？&lt;/li&gt;
  &lt;li&gt;イベントのテーマを決めるときの対話・プロセスは？&lt;/li&gt;
  &lt;li&gt;優先順位を決める判断基準はあったか？&lt;/li&gt;
  &lt;li&gt;抽象的な話を収束させるときに使う方法は？&lt;/li&gt;
  &lt;li&gt;pmconf 2021 の注目トピックは？&lt;/li&gt;
  &lt;li&gt;Miro のプロダクトマネージャーの方の登壇、行政の方の登壇&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャカンファレンスを最大限に活用する方法は？&lt;/li&gt;
  &lt;li&gt;参加前、参加中、参加後のアプローチ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://productmanager55.hatenablog.com/entry/2020/01/12/222825"&gt;RSGT2020に行ってないけどレポートをする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pmconf 2021は今年無料&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://forkwell.com/"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/58</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nrwmg5scxx2py1nm6n.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Thu, 07 Oct 2021 17:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nrwmg5scxx2py1nm6n.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4035/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:49:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://2021.pmconf.jp/"&gt;プロダクトマネージャーカンファレンス 2021&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;プロダクトマネジメントとは改めて何か？&lt;/li&gt;
  &lt;li&gt;顧客に価値を提供しビジネスとして利益を出すこと&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーがセールス活動も、ときにはする？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーカンファレンスとは？&lt;/li&gt;
  &lt;li&gt;どのような講演があるのか？&lt;/li&gt;
  &lt;li&gt;過去のプロダクトマネージャーカンファレンス講演で面白かったものは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2017.pmconf.jp/sessions/2017/09/14/whypm/"&gt;齊藤 満さん(2017)：95% of PM Work is Disgusting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;やりたいことというより、やらなきゃいけないことをやる&lt;/li&gt;
  &lt;li&gt;過去のプロダクトマネージャー経験で辛かったことは？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーとして最高に楽しかったことは？&lt;/li&gt;
  &lt;li&gt;仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？&lt;/li&gt;
  &lt;li&gt;プロダクトチームで共通理解を得る方法とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2018.pmconf.jp/sessions/2018/10/07/session0711/"&gt;Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;強いニーズさえ解決できれば価値になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YDezR5VTKhw"&gt;顧客のBurning Needsを解決し、PMFを達成する&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.pmconf.jp/sessions/83VXZiqj"&gt;川崎さん(2020)：お手本のような仮説・価値検証アプローチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;今年のpmconfのキーメッセージは？&lt;/li&gt;
  &lt;li&gt;イベントのテーマを決めるときの対話・プロセスは？&lt;/li&gt;
  &lt;li&gt;優先順位を決める判断基準はあったか？&lt;/li&gt;
  &lt;li&gt;抽象的な話を収束させるときに使う方法は？&lt;/li&gt;
  &lt;li&gt;pmconf 2021 の注目トピックは？&lt;/li&gt;
  &lt;li&gt;Miro のプロダクトマネージャーの方の登壇、行政の方の登壇&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャカンファレンスを最大限に活用する方法は？&lt;/li&gt;
  &lt;li&gt;参加前、参加中、参加後のアプローチ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://productmanager55.hatenablog.com/entry/2020/01/12/222825"&gt;RSGT2020に行ってないけどレポートをする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pmconf 2021は今年無料&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://forkwell.com/"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://2021.pmconf.jp/"&gt;プロダクトマネージャーカンファレンス 2021&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;プロダクトマネジメントとは改めて何か？&lt;/li&gt;
  &lt;li&gt;顧客に価値を提供しビジネスとして利益を出すこと&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーがセールス活動も、ときにはする？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーカンファレンスとは？&lt;/li&gt;
  &lt;li&gt;どのような講演があるのか？&lt;/li&gt;
  &lt;li&gt;過去のプロダクトマネージャーカンファレンス講演で面白かったものは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2017.pmconf.jp/sessions/2017/09/14/whypm/"&gt;齊藤 満さん(2017)：95% of PM Work is Disgusting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;やりたいことというより、やらなきゃいけないことをやる&lt;/li&gt;
  &lt;li&gt;過去のプロダクトマネージャー経験で辛かったことは？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーとして最高に楽しかったことは？&lt;/li&gt;
  &lt;li&gt;仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？&lt;/li&gt;
  &lt;li&gt;プロダクトチームで共通理解を得る方法とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2018.pmconf.jp/sessions/2018/10/07/session0711/"&gt;Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;強いニーズさえ解決できれば価値になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YDezR5VTKhw"&gt;顧客のBurning Needsを解決し、PMFを達成する&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.pmconf.jp/sessions/83VXZiqj"&gt;川崎さん(2020)：お手本のような仮説・価値検証アプローチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;今年のpmconfのキーメッセージは？&lt;/li&gt;
  &lt;li&gt;イベントのテーマを決めるときの対話・プロセスは？&lt;/li&gt;
  &lt;li&gt;優先順位を決める判断基準はあったか？&lt;/li&gt;
  &lt;li&gt;抽象的な話を収束させるときに使う方法は？&lt;/li&gt;
  &lt;li&gt;pmconf 2021 の注目トピックは？&lt;/li&gt;
  &lt;li&gt;Miro のプロダクトマネージャーの方の登壇、行政の方の登壇&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャカンファレンスを最大限に活用する方法は？&lt;/li&gt;
  &lt;li&gt;参加前、参加中、参加後のアプローチ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://productmanager55.hatenablog.com/entry/2020/01/12/222825"&gt;RSGT2020に行ってないけどレポートをする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pmconf 2021は今年無料&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://forkwell.com/"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>58. プロダクトマネージャーカンファレンス 2021 w/ Nunerm</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>59</podcast:episode>
    </item>
    <item>
      <title>57. クリエーションライン社の軌跡 w/ yasudatadahiro</title>
      <link>https://fukabori.fm/episode/57</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020"&gt;JoyInc Journey ScrumFestSapporo 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492"&gt;日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社が大変だった時期はどのような様子だったのか？&lt;/li&gt;
  &lt;li&gt;悪い状態になってしまった要因は何だったのか？&lt;/li&gt;
  &lt;li&gt;組織の成功循環モデルと失敗モデル&lt;/li&gt;
  &lt;li&gt;どうやって会社・組織を立ち直らせていったのか？&lt;/li&gt;
  &lt;li&gt;TGIFを持ち込んだときの失敗&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GA8z7f7a2Pk"&gt;Sasquatch music festival 2009 - Guy starts dance party&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;フォロワーシップ&lt;/li&gt;
  &lt;li&gt;自分が一番最初に踊ってオープンにする&lt;/li&gt;
  &lt;li&gt;何をオープンにしているのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2XAohUO"&gt;社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/"&gt;ヴァル研究所の写真例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社員をどのようにモチベートしていったのか？&lt;/li&gt;
  &lt;li&gt;社長の目指す姿を共有できていたのが良かった&lt;/li&gt;
  &lt;li&gt;ミッション・ビジョンは上手く使えていたか？&lt;/li&gt;
  &lt;li&gt;魂のないビジョンと、あるビジョン&lt;/li&gt;
  &lt;li&gt;どのように理念浸透させていったのか？&lt;/li&gt;
  &lt;li&gt;ビジョンをベースにしたワークショップの実施&lt;/li&gt;
  &lt;li&gt;ビジョンが意識できていると、どのような行動が起きるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CBhKIz"&gt;ジョイ・インク 役職も部署もない全員主役のマネジメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンゲージメントスコアの可視化&lt;/li&gt;
  &lt;li&gt;社員全員と社長との1:1の対話&lt;/li&gt;
  &lt;li&gt;雑談を意識的に取り入れる&lt;/li&gt;
  &lt;li&gt;雑談を決める相手はどのように決めていた？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nttcom.github.io/onboarding-handbook/"&gt;オンボーディング ハンドブック&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オンボーディングハンドブックの作成経緯&lt;/li&gt;
  &lt;li&gt;チーム全員との1on1(mixin)&lt;/li&gt;
  &lt;li&gt;オンボーディング用のテンプレート&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.creationline.com/recruit"&gt;採用情報 - クリエーションライン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CyTBCB"&gt;Team Geek ―Googleのギークたちはいかにしてチームを作るのか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/57</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nr6g492xrh73rzdr3z.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 21 Sep 2021 23:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nr6g492xrh73rzdr3z.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4034/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:53:48</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020"&gt;JoyInc Journey ScrumFestSapporo 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492"&gt;日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社が大変だった時期はどのような様子だったのか？&lt;/li&gt;
  &lt;li&gt;悪い状態になってしまった要因は何だったのか？&lt;/li&gt;
  &lt;li&gt;組織の成功循環モデルと失敗モデル&lt;/li&gt;
  &lt;li&gt;どうやって会社・組織を立ち直らせていったのか？&lt;/li&gt;
  &lt;li&gt;TGIFを持ち込んだときの失敗&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GA8z7f7a2Pk"&gt;Sasquatch music festival 2009 - Guy starts dance party&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;フォロワーシップ&lt;/li&gt;
  &lt;li&gt;自分が一番最初に踊ってオープンにする&lt;/li&gt;
  &lt;li&gt;何をオープンにしているのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2XAohUO"&gt;社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/"&gt;ヴァル研究所の写真例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社員をどのようにモチベートしていったのか？&lt;/li&gt;
  &lt;li&gt;社長の目指す姿を共有できていたのが良かった&lt;/li&gt;
  &lt;li&gt;ミッション・ビジョンは上手く使えていたか？&lt;/li&gt;
  &lt;li&gt;魂のないビジョンと、あるビジョン&lt;/li&gt;
  &lt;li&gt;どのように理念浸透させていったのか？&lt;/li&gt;
  &lt;li&gt;ビジョンをベースにしたワークショップの実施&lt;/li&gt;
  &lt;li&gt;ビジョンが意識できていると、どのような行動が起きるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CBhKIz"&gt;ジョイ・インク 役職も部署もない全員主役のマネジメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンゲージメントスコアの可視化&lt;/li&gt;
  &lt;li&gt;社員全員と社長との1:1の対話&lt;/li&gt;
  &lt;li&gt;雑談を意識的に取り入れる&lt;/li&gt;
  &lt;li&gt;雑談を決める相手はどのように決めていた？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nttcom.github.io/onboarding-handbook/"&gt;オンボーディング ハンドブック&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オンボーディングハンドブックの作成経緯&lt;/li&gt;
  &lt;li&gt;チーム全員との1on1(mixin)&lt;/li&gt;
  &lt;li&gt;オンボーディング用のテンプレート&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.creationline.com/recruit"&gt;採用情報 - クリエーションライン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CyTBCB"&gt;Team Geek ―Googleのギークたちはいかにしてチームを作るのか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020"&gt;JoyInc Journey ScrumFestSapporo 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492"&gt;日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社が大変だった時期はどのような様子だったのか？&lt;/li&gt;
  &lt;li&gt;悪い状態になってしまった要因は何だったのか？&lt;/li&gt;
  &lt;li&gt;組織の成功循環モデルと失敗モデル&lt;/li&gt;
  &lt;li&gt;どうやって会社・組織を立ち直らせていったのか？&lt;/li&gt;
  &lt;li&gt;TGIFを持ち込んだときの失敗&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GA8z7f7a2Pk"&gt;Sasquatch music festival 2009 - Guy starts dance party&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;フォロワーシップ&lt;/li&gt;
  &lt;li&gt;自分が一番最初に踊ってオープンにする&lt;/li&gt;
  &lt;li&gt;何をオープンにしているのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2XAohUO"&gt;社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/"&gt;ヴァル研究所の写真例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社員をどのようにモチベートしていったのか？&lt;/li&gt;
  &lt;li&gt;社長の目指す姿を共有できていたのが良かった&lt;/li&gt;
  &lt;li&gt;ミッション・ビジョンは上手く使えていたか？&lt;/li&gt;
  &lt;li&gt;魂のないビジョンと、あるビジョン&lt;/li&gt;
  &lt;li&gt;どのように理念浸透させていったのか？&lt;/li&gt;
  &lt;li&gt;ビジョンをベースにしたワークショップの実施&lt;/li&gt;
  &lt;li&gt;ビジョンが意識できていると、どのような行動が起きるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CBhKIz"&gt;ジョイ・インク 役職も部署もない全員主役のマネジメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンゲージメントスコアの可視化&lt;/li&gt;
  &lt;li&gt;社員全員と社長との1:1の対話&lt;/li&gt;
  &lt;li&gt;雑談を意識的に取り入れる&lt;/li&gt;
  &lt;li&gt;雑談を決める相手はどのように決めていた？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nttcom.github.io/onboarding-handbook/"&gt;オンボーディング ハンドブック&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オンボーディングハンドブックの作成経緯&lt;/li&gt;
  &lt;li&gt;チーム全員との1on1(mixin)&lt;/li&gt;
  &lt;li&gt;オンボーディング用のテンプレート&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.creationline.com/recruit"&gt;採用情報 - クリエーションライン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CyTBCB"&gt;Team Geek ―Googleのギークたちはいかにしてチームを作るのか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>57. クリエーションライン社の軌跡 w/ yasudatadahiro</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>58</podcast:episode>
    </item>
    <item>
      <title>56. 自然言語処理(NLP)の歴史、BERT w/ Takahiro Omi</title>
      <link>https://fukabori.fm/episode/56</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3jTBEIr"&gt;BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;自然言語処理とは？&lt;/li&gt;
  &lt;li&gt;自然言語処理の応用範囲は？&lt;/li&gt;
  &lt;li&gt;機械翻訳、メールフィルタ、チャットボット&lt;/li&gt;
  &lt;li&gt;自然言語処理はどのように発展してきたのか？&lt;/li&gt;
  &lt;li&gt;NN (ニューラルネットワーク) とは何か？&lt;/li&gt;
  &lt;li&gt;NN における大きなブレイクスルー&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/AlexNet"&gt;AlexNet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンドツーエンド処理&lt;/li&gt;
  &lt;li&gt;Deep NN におけるディープとは？&lt;/li&gt;
  &lt;li&gt;学習とは具体的にはどのような処理？&lt;/li&gt;
  &lt;li&gt;RNN (Recurrent Neural Network) とは？&lt;/li&gt;
  &lt;li&gt;RNN で解きたかった課題は何か？&lt;/li&gt;
  &lt;li&gt;RNN における処理イメージ&lt;/li&gt;
  &lt;li&gt;RNN の課題&lt;/li&gt;
  &lt;li&gt;LSTM (Long Short Term Memory)&lt;/li&gt;
  &lt;li&gt;LSTM の特徴、文脈考慮&lt;/li&gt;
  &lt;li&gt;NN への文章はどのように入力するのか？&lt;/li&gt;
  &lt;li&gt;単語をベクトルで表現する&lt;/li&gt;
  &lt;li&gt;ELMo と LSTM との関連性は？&lt;/li&gt;
  &lt;li&gt;なぜ双方向の情報を使うのが効果的なのか？&lt;/li&gt;
  &lt;li&gt;セサミストリート&lt;/li&gt;
  &lt;li&gt;Transformers の登場&lt;/li&gt;
  &lt;li&gt;Self-Attention とは？&lt;/li&gt;
  &lt;li&gt;Self-Attention の計算効率利点&lt;/li&gt;
  &lt;li&gt;Attention と Transformer との関連性は？&lt;/li&gt;
  &lt;li&gt;BERT(Bidirectional Encoder Representations from Transformers) とは？&lt;/li&gt;
  &lt;li&gt;エンコーダとデコーダとは？&lt;/li&gt;
  &lt;li&gt;BERT の特徴とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/"&gt;BERTによるニュース記事の構造化：企業名抽出&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;自然言語処理界隈はどのように進化していくのか？&lt;/li&gt;
  &lt;li&gt;GitHub Copilot&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://stockmark.co.jp/recruit"&gt;Recruit、ストックマーク株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/56</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nqqj5pe2007e2emd62.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 08 Sep 2021 23:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nqqj5pe2007e2emd62.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4033/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:38:45</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3jTBEIr"&gt;BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;自然言語処理とは？&lt;/li&gt;
  &lt;li&gt;自然言語処理の応用範囲は？&lt;/li&gt;
  &lt;li&gt;機械翻訳、メールフィルタ、チャットボット&lt;/li&gt;
  &lt;li&gt;自然言語処理はどのように発展してきたのか？&lt;/li&gt;
  &lt;li&gt;NN (ニューラルネットワーク) とは何か？&lt;/li&gt;
  &lt;li&gt;NN における大きなブレイクスルー&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/AlexNet"&gt;AlexNet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンドツーエンド処理&lt;/li&gt;
  &lt;li&gt;Deep NN におけるディープとは？&lt;/li&gt;
  &lt;li&gt;学習とは具体的にはどのような処理？&lt;/li&gt;
  &lt;li&gt;RNN (Recurrent Neural Network) とは？&lt;/li&gt;
  &lt;li&gt;RNN で解きたかった課題は何か？&lt;/li&gt;
  &lt;li&gt;RNN における処理イメージ&lt;/li&gt;
  &lt;li&gt;RNN の課題&lt;/li&gt;
  &lt;li&gt;LSTM (Long Short Term Memory)&lt;/li&gt;
  &lt;li&gt;LSTM の特徴、文脈考慮&lt;/li&gt;
  &lt;li&gt;NN への文章はどのように入力するのか？&lt;/li&gt;
  &lt;li&gt;単語をベクトルで表現する&lt;/li&gt;
  &lt;li&gt;ELMo と LSTM との関連性は？&lt;/li&gt;
  &lt;li&gt;なぜ双方向の情報を使うのが効果的なのか？&lt;/li&gt;
  &lt;li&gt;セサミストリート&lt;/li&gt;
  &lt;li&gt;Transformers の登場&lt;/li&gt;
  &lt;li&gt;Self-Attention とは？&lt;/li&gt;
  &lt;li&gt;Self-Attention の計算効率利点&lt;/li&gt;
  &lt;li&gt;Attention と Transformer との関連性は？&lt;/li&gt;
  &lt;li&gt;BERT(Bidirectional Encoder Representations from Transformers) とは？&lt;/li&gt;
  &lt;li&gt;エンコーダとデコーダとは？&lt;/li&gt;
  &lt;li&gt;BERT の特徴とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/"&gt;BERTによるニュース記事の構造化：企業名抽出&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;自然言語処理界隈はどのように進化していくのか？&lt;/li&gt;
  &lt;li&gt;GitHub Copilot&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://stockmark.co.jp/recruit"&gt;Recruit、ストックマーク株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3jTBEIr"&gt;BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;自然言語処理とは？&lt;/li&gt;
  &lt;li&gt;自然言語処理の応用範囲は？&lt;/li&gt;
  &lt;li&gt;機械翻訳、メールフィルタ、チャットボット&lt;/li&gt;
  &lt;li&gt;自然言語処理はどのように発展してきたのか？&lt;/li&gt;
  &lt;li&gt;NN (ニューラルネットワーク) とは何か？&lt;/li&gt;
  &lt;li&gt;NN における大きなブレイクスルー&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/AlexNet"&gt;AlexNet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンドツーエンド処理&lt;/li&gt;
  &lt;li&gt;Deep NN におけるディープとは？&lt;/li&gt;
  &lt;li&gt;学習とは具体的にはどのような処理？&lt;/li&gt;
  &lt;li&gt;RNN (Recurrent Neural Network) とは？&lt;/li&gt;
  &lt;li&gt;RNN で解きたかった課題は何か？&lt;/li&gt;
  &lt;li&gt;RNN における処理イメージ&lt;/li&gt;
  &lt;li&gt;RNN の課題&lt;/li&gt;
  &lt;li&gt;LSTM (Long Short Term Memory)&lt;/li&gt;
  &lt;li&gt;LSTM の特徴、文脈考慮&lt;/li&gt;
  &lt;li&gt;NN への文章はどのように入力するのか？&lt;/li&gt;
  &lt;li&gt;単語をベクトルで表現する&lt;/li&gt;
  &lt;li&gt;ELMo と LSTM との関連性は？&lt;/li&gt;
  &lt;li&gt;なぜ双方向の情報を使うのが効果的なのか？&lt;/li&gt;
  &lt;li&gt;セサミストリート&lt;/li&gt;
  &lt;li&gt;Transformers の登場&lt;/li&gt;
  &lt;li&gt;Self-Attention とは？&lt;/li&gt;
  &lt;li&gt;Self-Attention の計算効率利点&lt;/li&gt;
  &lt;li&gt;Attention と Transformer との関連性は？&lt;/li&gt;
  &lt;li&gt;BERT(Bidirectional Encoder Representations from Transformers) とは？&lt;/li&gt;
  &lt;li&gt;エンコーダとデコーダとは？&lt;/li&gt;
  &lt;li&gt;BERT の特徴とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/"&gt;BERTによるニュース記事の構造化：企業名抽出&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;自然言語処理界隈はどのように進化していくのか？&lt;/li&gt;
  &lt;li&gt;GitHub Copilot&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://stockmark.co.jp/recruit"&gt;Recruit、ストックマーク株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>56. 自然言語処理(NLP)の歴史、BERT w/ Takahiro Omi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>57</podcast:episode>
    </item>
    <item>
      <title>55. コンテナランタイム(後編) w/ TokunagaKohei</title>
      <link>https://fukabori.fm/episode/55</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;高レベルランタイムとは何か？&lt;/li&gt;
  &lt;li&gt;デスクトップなどで使われる高レベルランタイム実装には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://containerd.io/"&gt;containerd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;docker が containerd を活用するまでの流れ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://podman.io/"&gt;podman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;podman の特徴は?&lt;/li&gt;
  &lt;li&gt;補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の &lt;a href="https://www.slideshare.net/AkihiroSuda/dockerpodman"&gt;DockerとPodmanの比較(Container Runtime Meetup #3発表資料)&lt;/a&gt;に分かりやすくまとめられています&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containers/conmon"&gt;conmon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containerd/nerdctl"&gt;nerdctl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;nerdctl を利用するメリットは何か？&lt;/li&gt;
  &lt;li&gt;kubernetes から叩かれるCRIには何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.cncf.io/"&gt;CNCF(Cloud Native Computing Foundation)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/moby/buildkit"&gt;BuildKit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/cri-o/cri-o"&gt;CRI-O&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CRI-O は containerd と比べた場合の特徴は何か？&lt;/li&gt;
  &lt;li&gt;OCIランタイムの実装には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runc/releases/tag/v1.0.0"&gt;runc の v1.0.0 リリース&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCIランタイムの実装はできるもの？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containers/youki"&gt;youki: A container runtime in Rust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://zenn.dev/utam0k/articles/74d08c9f556534"&gt;2021年に今更コンテナ入門した僕の最初の一歩&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;セキュアなコンテナランタイム&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://katacontainers.io/"&gt;Kata Containers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Kata Containers の特徴とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/google/gvisor"&gt;gVisor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;gVisor の特徴とは？&lt;/li&gt;
  &lt;li&gt;C言語による実装 &lt;a href="https://github.com/containers/crun"&gt;crun&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;言語実装に差異はどの辺りにあるか？&lt;/li&gt;
  &lt;li&gt;パフォーマンスとコミュニティ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://opencontainers.org/"&gt;Open Container Initiative&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI で規定される仕様には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;OCI Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/image-spec"&gt;OCI Image Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;この先、コンテナ関連の仕様・実装はどのように発展していくか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/55</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nqdqraq4x18c446yjt.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nqdqraq4x18c446yjt.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4032/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:37:42</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;高レベルランタイムとは何か？&lt;/li&gt;
  &lt;li&gt;デスクトップなどで使われる高レベルランタイム実装には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://containerd.io/"&gt;containerd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;docker が containerd を活用するまでの流れ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://podman.io/"&gt;podman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;podman の特徴は?&lt;/li&gt;
  &lt;li&gt;補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の &lt;a href="https://www.slideshare.net/AkihiroSuda/dockerpodman"&gt;DockerとPodmanの比較(Container Runtime Meetup #3発表資料)&lt;/a&gt;に分かりやすくまとめられています&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containers/conmon"&gt;conmon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containerd/nerdctl"&gt;nerdctl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;nerdctl を利用するメリットは何か？&lt;/li&gt;
  &lt;li&gt;kubernetes から叩かれるCRIには何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.cncf.io/"&gt;CNCF(Cloud Native Computing Foundation)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/moby/buildkit"&gt;BuildKit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/cri-o/cri-o"&gt;CRI-O&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CRI-O は containerd と比べた場合の特徴は何か？&lt;/li&gt;
  &lt;li&gt;OCIランタイムの実装には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runc/releases/tag/v1.0.0"&gt;runc の v1.0.0 リリース&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCIランタイムの実装はできるもの？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containers/youki"&gt;youki: A container runtime in Rust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://zenn.dev/utam0k/articles/74d08c9f556534"&gt;2021年に今更コンテナ入門した僕の最初の一歩&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;セキュアなコンテナランタイム&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://katacontainers.io/"&gt;Kata Containers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Kata Containers の特徴とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/google/gvisor"&gt;gVisor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;gVisor の特徴とは？&lt;/li&gt;
  &lt;li&gt;C言語による実装 &lt;a href="https://github.com/containers/crun"&gt;crun&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;言語実装に差異はどの辺りにあるか？&lt;/li&gt;
  &lt;li&gt;パフォーマンスとコミュニティ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://opencontainers.org/"&gt;Open Container Initiative&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI で規定される仕様には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;OCI Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/image-spec"&gt;OCI Image Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;この先、コンテナ関連の仕様・実装はどのように発展していくか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;高レベルランタイムとは何か？&lt;/li&gt;
  &lt;li&gt;デスクトップなどで使われる高レベルランタイム実装には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://containerd.io/"&gt;containerd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;docker が containerd を活用するまでの流れ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://podman.io/"&gt;podman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;podman の特徴は?&lt;/li&gt;
  &lt;li&gt;補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の &lt;a href="https://www.slideshare.net/AkihiroSuda/dockerpodman"&gt;DockerとPodmanの比較(Container Runtime Meetup #3発表資料)&lt;/a&gt;に分かりやすくまとめられています&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containers/conmon"&gt;conmon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containerd/nerdctl"&gt;nerdctl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;nerdctl を利用するメリットは何か？&lt;/li&gt;
  &lt;li&gt;kubernetes から叩かれるCRIには何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.cncf.io/"&gt;CNCF(Cloud Native Computing Foundation)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/moby/buildkit"&gt;BuildKit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/cri-o/cri-o"&gt;CRI-O&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CRI-O は containerd と比べた場合の特徴は何か？&lt;/li&gt;
  &lt;li&gt;OCIランタイムの実装には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runc/releases/tag/v1.0.0"&gt;runc の v1.0.0 リリース&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCIランタイムの実装はできるもの？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/containers/youki"&gt;youki: A container runtime in Rust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://zenn.dev/utam0k/articles/74d08c9f556534"&gt;2021年に今更コンテナ入門した僕の最初の一歩&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;セキュアなコンテナランタイム&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://katacontainers.io/"&gt;Kata Containers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Kata Containers の特徴とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/google/gvisor"&gt;gVisor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;gVisor の特徴とは？&lt;/li&gt;
  &lt;li&gt;C言語による実装 &lt;a href="https://github.com/containers/crun"&gt;crun&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;言語実装に差異はどの辺りにあるか？&lt;/li&gt;
  &lt;li&gt;パフォーマンスとコミュニティ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://opencontainers.org/"&gt;Open Container Initiative&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI で規定される仕様には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;OCI Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/image-spec"&gt;OCI Image Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;この先、コンテナ関連の仕様・実装はどのように発展していくか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>55. コンテナランタイム(後編) w/ TokunagaKohei</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>56</podcast:episode>
    </item>
    <item>
      <title>54. コンテナランタイム(前編) w/ TokunagaKohei</title>
      <link>https://fukabori.fm/episode/54</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142"&gt;DockerとKubernetesをかけめぐる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コンテナとは何か？&lt;/li&gt;
  &lt;li&gt;docker の大きな貢献って何だった？&lt;/li&gt;
  &lt;li&gt;コンテナランタイムとは何か？&lt;/li&gt;
  &lt;li&gt;コンテナの隔離とは、具体的にどのように実現するのか？&lt;/li&gt;
  &lt;li&gt;cgroups は実際に何をしているのか？&lt;/li&gt;
  &lt;li&gt;runc での実装例&lt;/li&gt;
  &lt;li&gt;他の隔離方法の概要&lt;/li&gt;
  &lt;li&gt;OCI とは何か？ OCI と runc の関係性は？&lt;/li&gt;
  &lt;li&gt;docker と OCIランタイム の関係&lt;/li&gt;
  &lt;li&gt;CRI ランタイムとは？&lt;/li&gt;
  &lt;li&gt;docker run 実行後の流れ&lt;/li&gt;
  &lt;li&gt;16:09 - 16:30 の「runc run」についての補足:
    &lt;ul&gt;
      &lt;li&gt;実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。&lt;/li&gt;
      &lt;li&gt;参考
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations"&gt;OCI Runtime Specificationで定められるOCIランタイムへ可能な操作&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="https://medium.com/nttlabs/runc-overview-263b83164c98"&gt;runc runの実行とコードリーディング&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;高レベルランタイムとは？&lt;/li&gt;
  &lt;li&gt;docker以外のCLIランタイム実装&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI Runtime Specification には何が規定されているのか？&lt;/li&gt;
  &lt;li&gt;コンテナの材料には何が含まれているのか？&lt;/li&gt;
  &lt;li&gt;docker 登場以後の歴史&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/rkt/rkt"&gt;rkt - the pod-native container engine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;kubernetes 利用時のコンテナ実行までの流れとは？&lt;/li&gt;
  &lt;li&gt;kubelet の役割&lt;/li&gt;
  &lt;li&gt;kubelet からの CRIランタイム への指示に使うプロトコル&lt;/li&gt;
  &lt;li&gt;dockershim が deprecated になったときに発生した誤解&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/54</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nqtvafe14ez5a9cz8z.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 10 Aug 2021 14:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nqtvafe14ez5a9cz8z.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4031/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:38:01</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142"&gt;DockerとKubernetesをかけめぐる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コンテナとは何か？&lt;/li&gt;
  &lt;li&gt;docker の大きな貢献って何だった？&lt;/li&gt;
  &lt;li&gt;コンテナランタイムとは何か？&lt;/li&gt;
  &lt;li&gt;コンテナの隔離とは、具体的にどのように実現するのか？&lt;/li&gt;
  &lt;li&gt;cgroups は実際に何をしているのか？&lt;/li&gt;
  &lt;li&gt;runc での実装例&lt;/li&gt;
  &lt;li&gt;他の隔離方法の概要&lt;/li&gt;
  &lt;li&gt;OCI とは何か？ OCI と runc の関係性は？&lt;/li&gt;
  &lt;li&gt;docker と OCIランタイム の関係&lt;/li&gt;
  &lt;li&gt;CRI ランタイムとは？&lt;/li&gt;
  &lt;li&gt;docker run 実行後の流れ&lt;/li&gt;
  &lt;li&gt;16:09 - 16:30 の「runc run」についての補足:
    &lt;ul&gt;
      &lt;li&gt;実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。&lt;/li&gt;
      &lt;li&gt;参考
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations"&gt;OCI Runtime Specificationで定められるOCIランタイムへ可能な操作&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="https://medium.com/nttlabs/runc-overview-263b83164c98"&gt;runc runの実行とコードリーディング&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;高レベルランタイムとは？&lt;/li&gt;
  &lt;li&gt;docker以外のCLIランタイム実装&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI Runtime Specification には何が規定されているのか？&lt;/li&gt;
  &lt;li&gt;コンテナの材料には何が含まれているのか？&lt;/li&gt;
  &lt;li&gt;docker 登場以後の歴史&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/rkt/rkt"&gt;rkt - the pod-native container engine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;kubernetes 利用時のコンテナ実行までの流れとは？&lt;/li&gt;
  &lt;li&gt;kubelet の役割&lt;/li&gt;
  &lt;li&gt;kubelet からの CRIランタイム への指示に使うプロトコル&lt;/li&gt;
  &lt;li&gt;dockershim が deprecated になったときに発生した誤解&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142"&gt;DockerとKubernetesをかけめぐる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コンテナとは何か？&lt;/li&gt;
  &lt;li&gt;docker の大きな貢献って何だった？&lt;/li&gt;
  &lt;li&gt;コンテナランタイムとは何か？&lt;/li&gt;
  &lt;li&gt;コンテナの隔離とは、具体的にどのように実現するのか？&lt;/li&gt;
  &lt;li&gt;cgroups は実際に何をしているのか？&lt;/li&gt;
  &lt;li&gt;runc での実装例&lt;/li&gt;
  &lt;li&gt;他の隔離方法の概要&lt;/li&gt;
  &lt;li&gt;OCI とは何か？ OCI と runc の関係性は？&lt;/li&gt;
  &lt;li&gt;docker と OCIランタイム の関係&lt;/li&gt;
  &lt;li&gt;CRI ランタイムとは？&lt;/li&gt;
  &lt;li&gt;docker run 実行後の流れ&lt;/li&gt;
  &lt;li&gt;16:09 - 16:30 の「runc run」についての補足:
    &lt;ul&gt;
      &lt;li&gt;実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。&lt;/li&gt;
      &lt;li&gt;参考
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations"&gt;OCI Runtime Specificationで定められるOCIランタイムへ可能な操作&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="https://medium.com/nttlabs/runc-overview-263b83164c98"&gt;runc runの実行とコードリーディング&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;高レベルランタイムとは？&lt;/li&gt;
  &lt;li&gt;docker以外のCLIランタイム実装&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI Runtime Specification には何が規定されているのか？&lt;/li&gt;
  &lt;li&gt;コンテナの材料には何が含まれているのか？&lt;/li&gt;
  &lt;li&gt;docker 登場以後の歴史&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/rkt/rkt"&gt;rkt - the pod-native container engine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;kubernetes 利用時のコンテナ実行までの流れとは？&lt;/li&gt;
  &lt;li&gt;kubelet の役割&lt;/li&gt;
  &lt;li&gt;kubelet からの CRIランタイム への指示に使うプロトコル&lt;/li&gt;
  &lt;li&gt;dockershim が deprecated になったときに発生した誤解&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>54. コンテナランタイム(前編) w/ TokunagaKohei</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>55</podcast:episode>
    </item>
    <item>
      <title>53. 時系列データベースエンジン w/ nakabonne</title>
      <link>https://fukabori.fm/episode/53</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://zenn.dev/nakabonne/articles/d300838a1500c7"&gt;ゼロから作る時系列データベースエンジン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;時系列データとは何か？&lt;/li&gt;
  &lt;li&gt;RDBで時系列データを扱う場合の課題とは？&lt;/li&gt;
  &lt;li&gt;時系列データの特徴とは？&lt;/li&gt;
  &lt;li&gt;イミュータブルなデータとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.influxdata.com/"&gt;influxDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.timescale.com/"&gt;Timescale DB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics"&gt;VictoriaMetrics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://m3db.io/"&gt;M3DB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;時系列DBにおけるカーディナリティの高さとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/tstorage"&gt;tstorage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ時系列DBを自分で実装したのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/ali"&gt;ali&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/gosivy"&gt;gosivy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;tstorageの設計概要は？&lt;/li&gt;
  &lt;li&gt;パーティショニングのメリットとは？&lt;/li&gt;
  &lt;li&gt;Write Amplificatonとは？&lt;/li&gt;
  &lt;li&gt;Bloom Filter&lt;/li&gt;
  &lt;li&gt;LSM Treeとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/34"&gt;34. NewSQLとは w/ tzkb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メモリパーティションの特徴とは？&lt;/li&gt;
  &lt;li&gt;時系列データをソート済みにする工夫&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://questdb.io/"&gt;QuestDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;パーティションをフラッシュするタイミングは？&lt;/li&gt;
  &lt;li&gt;Write Ahead Log&lt;/li&gt;
  &lt;li&gt;データ量を削減する工夫は？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.vldb.org/pvldb/vol8/p1816-teller.pdf"&gt;Gorilla: A Fast, Scalable, In-Memory Time Series Database&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;タイムスタンプとデータを分けて符号化する&lt;/li&gt;
  &lt;li&gt;delta encoding と delta-of-delta encoding&lt;/li&gt;
  &lt;li&gt;データ側はXORで符号化する&lt;/li&gt;
  &lt;li&gt;tstorageのdisadvantageは？&lt;/li&gt;
  &lt;li&gt;tstorageの今後の開発方針&lt;/li&gt;
  &lt;li&gt;YAGNI原則&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/cyberagent-group/jobs/0000694"&gt;【メディア事業部】サーバーサイドエンジニア（基盤）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="宣伝"&gt;宣伝&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/fukabori"&gt;fukabori.fm の個人スポンサー募集中&lt;/a&gt;&lt;/p&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/53</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nqyypqr64baaggdt6c.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Thu, 22 Jul 2021 13:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nqyypqr64baaggdt6c.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4030/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:38:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://zenn.dev/nakabonne/articles/d300838a1500c7"&gt;ゼロから作る時系列データベースエンジン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;時系列データとは何か？&lt;/li&gt;
  &lt;li&gt;RDBで時系列データを扱う場合の課題とは？&lt;/li&gt;
  &lt;li&gt;時系列データの特徴とは？&lt;/li&gt;
  &lt;li&gt;イミュータブルなデータとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.influxdata.com/"&gt;influxDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.timescale.com/"&gt;Timescale DB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics"&gt;VictoriaMetrics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://m3db.io/"&gt;M3DB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;時系列DBにおけるカーディナリティの高さとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/tstorage"&gt;tstorage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ時系列DBを自分で実装したのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/ali"&gt;ali&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/gosivy"&gt;gosivy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;tstorageの設計概要は？&lt;/li&gt;
  &lt;li&gt;パーティショニングのメリットとは？&lt;/li&gt;
  &lt;li&gt;Write Amplificatonとは？&lt;/li&gt;
  &lt;li&gt;Bloom Filter&lt;/li&gt;
  &lt;li&gt;LSM Treeとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/34"&gt;34. NewSQLとは w/ tzkb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メモリパーティションの特徴とは？&lt;/li&gt;
  &lt;li&gt;時系列データをソート済みにする工夫&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://questdb.io/"&gt;QuestDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;パーティションをフラッシュするタイミングは？&lt;/li&gt;
  &lt;li&gt;Write Ahead Log&lt;/li&gt;
  &lt;li&gt;データ量を削減する工夫は？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.vldb.org/pvldb/vol8/p1816-teller.pdf"&gt;Gorilla: A Fast, Scalable, In-Memory Time Series Database&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;タイムスタンプとデータを分けて符号化する&lt;/li&gt;
  &lt;li&gt;delta encoding と delta-of-delta encoding&lt;/li&gt;
  &lt;li&gt;データ側はXORで符号化する&lt;/li&gt;
  &lt;li&gt;tstorageのdisadvantageは？&lt;/li&gt;
  &lt;li&gt;tstorageの今後の開発方針&lt;/li&gt;
  &lt;li&gt;YAGNI原則&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/cyberagent-group/jobs/0000694"&gt;【メディア事業部】サーバーサイドエンジニア（基盤）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="宣伝"&gt;宣伝&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/fukabori"&gt;fukabori.fm の個人スポンサー募集中&lt;/a&gt;&lt;/p&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://zenn.dev/nakabonne/articles/d300838a1500c7"&gt;ゼロから作る時系列データベースエンジン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;時系列データとは何か？&lt;/li&gt;
  &lt;li&gt;RDBで時系列データを扱う場合の課題とは？&lt;/li&gt;
  &lt;li&gt;時系列データの特徴とは？&lt;/li&gt;
  &lt;li&gt;イミュータブルなデータとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.influxdata.com/"&gt;influxDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.timescale.com/"&gt;Timescale DB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics"&gt;VictoriaMetrics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://m3db.io/"&gt;M3DB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;時系列DBにおけるカーディナリティの高さとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/tstorage"&gt;tstorage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ時系列DBを自分で実装したのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/ali"&gt;ali&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nakabonne/gosivy"&gt;gosivy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;tstorageの設計概要は？&lt;/li&gt;
  &lt;li&gt;パーティショニングのメリットとは？&lt;/li&gt;
  &lt;li&gt;Write Amplificatonとは？&lt;/li&gt;
  &lt;li&gt;Bloom Filter&lt;/li&gt;
  &lt;li&gt;LSM Treeとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/34"&gt;34. NewSQLとは w/ tzkb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メモリパーティションの特徴とは？&lt;/li&gt;
  &lt;li&gt;時系列データをソート済みにする工夫&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://questdb.io/"&gt;QuestDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;パーティションをフラッシュするタイミングは？&lt;/li&gt;
  &lt;li&gt;Write Ahead Log&lt;/li&gt;
  &lt;li&gt;データ量を削減する工夫は？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.vldb.org/pvldb/vol8/p1816-teller.pdf"&gt;Gorilla: A Fast, Scalable, In-Memory Time Series Database&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;タイムスタンプとデータを分けて符号化する&lt;/li&gt;
  &lt;li&gt;delta encoding と delta-of-delta encoding&lt;/li&gt;
  &lt;li&gt;データ側はXORで符号化する&lt;/li&gt;
  &lt;li&gt;tstorageのdisadvantageは？&lt;/li&gt;
  &lt;li&gt;tstorageの今後の開発方針&lt;/li&gt;
  &lt;li&gt;YAGNI原則&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/cyberagent-group/jobs/0000694"&gt;【メディア事業部】サーバーサイドエンジニア（基盤）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="宣伝"&gt;宣伝&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/fukabori"&gt;fukabori.fm の個人スポンサー募集中&lt;/a&gt;&lt;/p&gt;</itunes:summary>
      <itunes:title>53. 時系列データベースエンジン w/ nakabonne</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>54</podcast:episode>
    </item>
    <item>
      <title>52. ISUCON w/ 941</title>
      <link>https://fukabori.fm/episode/52</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://isucon.net/"&gt;ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONとは何か？&lt;/li&gt;
  &lt;li&gt;「ISUCON こわくないよ」&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/23"&gt;ep23. 社内ISUCON w/ yosuke_furukawa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONはエンジニアの人生を変えてきたらしい&lt;/li&gt;
  &lt;li&gt;ISU婚&lt;/li&gt;
  &lt;li&gt;ISUCONの初回はどんな感じで進んでいった？&lt;/li&gt;
  &lt;li&gt;ISUCON3で予選導入、参加者はISUCON9まで増加&lt;/li&gt;
  &lt;li&gt;なぜ、ISUCONはこんなに注目されたのか？&lt;/li&gt;
  &lt;li&gt;ISUCONらしい問題を作る&lt;/li&gt;
  &lt;li&gt;リアルISUCON&lt;/li&gt;
  &lt;li&gt;ISUCON開催の大変なところ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/isucon/isucandar"&gt;isucon/isucandar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/matsuu/aws-isucon"&gt;ISUCON過去問&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate"&gt;エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCON沼&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://isucon.net/archives/55835733.html"&gt;ISUCON 事前講習2021&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コミュニティは新しい人が入ってこないと終わってしまう&lt;/li&gt;
  &lt;li&gt;コミュニティ運営の続け方&lt;/li&gt;
  &lt;li&gt;コミュニティ参加者の想いを拾うために何をしているか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://route06.co.jp/"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/52</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nqfatca9a03fp53cds.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 21 Jun 2021 20:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nqfatca9a03fp53cds.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4029/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:43:02</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://isucon.net/"&gt;ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONとは何か？&lt;/li&gt;
  &lt;li&gt;「ISUCON こわくないよ」&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/23"&gt;ep23. 社内ISUCON w/ yosuke_furukawa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONはエンジニアの人生を変えてきたらしい&lt;/li&gt;
  &lt;li&gt;ISU婚&lt;/li&gt;
  &lt;li&gt;ISUCONの初回はどんな感じで進んでいった？&lt;/li&gt;
  &lt;li&gt;ISUCON3で予選導入、参加者はISUCON9まで増加&lt;/li&gt;
  &lt;li&gt;なぜ、ISUCONはこんなに注目されたのか？&lt;/li&gt;
  &lt;li&gt;ISUCONらしい問題を作る&lt;/li&gt;
  &lt;li&gt;リアルISUCON&lt;/li&gt;
  &lt;li&gt;ISUCON開催の大変なところ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/isucon/isucandar"&gt;isucon/isucandar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/matsuu/aws-isucon"&gt;ISUCON過去問&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate"&gt;エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCON沼&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://isucon.net/archives/55835733.html"&gt;ISUCON 事前講習2021&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コミュニティは新しい人が入ってこないと終わってしまう&lt;/li&gt;
  &lt;li&gt;コミュニティ運営の続け方&lt;/li&gt;
  &lt;li&gt;コミュニティ参加者の想いを拾うために何をしているか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://route06.co.jp/"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://isucon.net/"&gt;ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONとは何か？&lt;/li&gt;
  &lt;li&gt;「ISUCON こわくないよ」&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/23"&gt;ep23. 社内ISUCON w/ yosuke_furukawa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONはエンジニアの人生を変えてきたらしい&lt;/li&gt;
  &lt;li&gt;ISU婚&lt;/li&gt;
  &lt;li&gt;ISUCONの初回はどんな感じで進んでいった？&lt;/li&gt;
  &lt;li&gt;ISUCON3で予選導入、参加者はISUCON9まで増加&lt;/li&gt;
  &lt;li&gt;なぜ、ISUCONはこんなに注目されたのか？&lt;/li&gt;
  &lt;li&gt;ISUCONらしい問題を作る&lt;/li&gt;
  &lt;li&gt;リアルISUCON&lt;/li&gt;
  &lt;li&gt;ISUCON開催の大変なところ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/isucon/isucandar"&gt;isucon/isucandar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/matsuu/aws-isucon"&gt;ISUCON過去問&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate"&gt;エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCON沼&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://isucon.net/archives/55835733.html"&gt;ISUCON 事前講習2021&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コミュニティは新しい人が入ってこないと終わってしまう&lt;/li&gt;
  &lt;li&gt;コミュニティ運営の続け方&lt;/li&gt;
  &lt;li&gt;コミュニティ参加者の想いを拾うために何をしているか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://route06.co.jp/"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>52. ISUCON w/ 941</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>53</podcast:episode>
    </item>
    <item>
      <title>51. 組織学習、心理的契約、エンゲージメント w/ tomomiminabe</title>
      <link>https://fukabori.fm/episode/51</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://cultibase.jp/"&gt;CULTIBASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CI(Corporate Identity)&lt;/li&gt;
  &lt;li&gt;スタートアップがスタートアップのままスケールする&lt;/li&gt;
  &lt;li&gt;大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも&lt;/li&gt;
  &lt;li&gt;スタートアップの成長フェーズにおける組織課題とは？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3pd0eVI"&gt;THE MODEL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミドルマネージャの役割は何か？&lt;/li&gt;
  &lt;li&gt;マネージャにどのように成長してもらうのか？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/2SPOdJV"&gt;エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;技術を理解していないマネージャの言うことをメンバが聞かない問題&lt;/li&gt;
  &lt;li&gt;大企業向けのコンサル提供では、振る舞いを変える&lt;/li&gt;
  &lt;li&gt;組織学習とは何か？&lt;/li&gt;
  &lt;li&gt;シングルループ学習とダブルループ学習&lt;/li&gt;
  &lt;li&gt;ふりかえりでは、シングルループに目が向きがちでは&lt;/li&gt;
  &lt;li&gt;制圧寄りのコミュニケーションの何が悪いのか？&lt;/li&gt;
  &lt;li&gt;対話の上手いファシリテートの方法&lt;/li&gt;
  &lt;li&gt;意見を言わないボトルネックを探す&lt;/li&gt;
  &lt;li&gt;定例の前に関係を作るのが大切&lt;/li&gt;
  &lt;li&gt;上司が一方的に話して、「何かありますか？」で終わる&lt;/li&gt;
  &lt;li&gt;1on1職人&lt;/li&gt;
  &lt;li&gt;初対面の人と1on1の警戒を解く方法&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121"&gt;組織デザイン概論 - WDA研究会191121&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;従業員体験とは何か？&lt;/li&gt;
  &lt;li&gt;どうしたら従業員体験を損ねずに、評価面談を実施するか？&lt;/li&gt;
  &lt;li&gt;評価面談のアンチパターンとは？&lt;/li&gt;
  &lt;li&gt;ショッキング評価&lt;/li&gt;
  &lt;li&gt;心理的契約とは？&lt;/li&gt;
  &lt;li&gt;評価面談におけるストーリーテリングとは？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3vPNaZ4"&gt;はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;期待値調整&lt;/li&gt;
  &lt;li&gt;心理的契約をどうやって言語化するか？&lt;/li&gt;
  &lt;li&gt;エンゲージメントと従業員体験の関連は？&lt;/li&gt;
  &lt;li&gt;エンゲージメントとモチベーションの違い&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei"&gt;担ぎたくなる“神輿上司”の目指し方&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミミグリではどのようにエンゲージメントを高めているか？&lt;/li&gt;
  &lt;li&gt;プレイフル&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;株式会社MIMIGURI 採用募集(wantedly)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://route06.co.jp/"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/51</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nq7hrmvrmemztn7bks.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 02 Jun 2021 23:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nq7hrmvrmemztn7bks.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4028/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:54:40</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://cultibase.jp/"&gt;CULTIBASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CI(Corporate Identity)&lt;/li&gt;
  &lt;li&gt;スタートアップがスタートアップのままスケールする&lt;/li&gt;
  &lt;li&gt;大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも&lt;/li&gt;
  &lt;li&gt;スタートアップの成長フェーズにおける組織課題とは？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3pd0eVI"&gt;THE MODEL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミドルマネージャの役割は何か？&lt;/li&gt;
  &lt;li&gt;マネージャにどのように成長してもらうのか？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/2SPOdJV"&gt;エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;技術を理解していないマネージャの言うことをメンバが聞かない問題&lt;/li&gt;
  &lt;li&gt;大企業向けのコンサル提供では、振る舞いを変える&lt;/li&gt;
  &lt;li&gt;組織学習とは何か？&lt;/li&gt;
  &lt;li&gt;シングルループ学習とダブルループ学習&lt;/li&gt;
  &lt;li&gt;ふりかえりでは、シングルループに目が向きがちでは&lt;/li&gt;
  &lt;li&gt;制圧寄りのコミュニケーションの何が悪いのか？&lt;/li&gt;
  &lt;li&gt;対話の上手いファシリテートの方法&lt;/li&gt;
  &lt;li&gt;意見を言わないボトルネックを探す&lt;/li&gt;
  &lt;li&gt;定例の前に関係を作るのが大切&lt;/li&gt;
  &lt;li&gt;上司が一方的に話して、「何かありますか？」で終わる&lt;/li&gt;
  &lt;li&gt;1on1職人&lt;/li&gt;
  &lt;li&gt;初対面の人と1on1の警戒を解く方法&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121"&gt;組織デザイン概論 - WDA研究会191121&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;従業員体験とは何か？&lt;/li&gt;
  &lt;li&gt;どうしたら従業員体験を損ねずに、評価面談を実施するか？&lt;/li&gt;
  &lt;li&gt;評価面談のアンチパターンとは？&lt;/li&gt;
  &lt;li&gt;ショッキング評価&lt;/li&gt;
  &lt;li&gt;心理的契約とは？&lt;/li&gt;
  &lt;li&gt;評価面談におけるストーリーテリングとは？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3vPNaZ4"&gt;はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;期待値調整&lt;/li&gt;
  &lt;li&gt;心理的契約をどうやって言語化するか？&lt;/li&gt;
  &lt;li&gt;エンゲージメントと従業員体験の関連は？&lt;/li&gt;
  &lt;li&gt;エンゲージメントとモチベーションの違い&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei"&gt;担ぎたくなる“神輿上司”の目指し方&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミミグリではどのようにエンゲージメントを高めているか？&lt;/li&gt;
  &lt;li&gt;プレイフル&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;株式会社MIMIGURI 採用募集(wantedly)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://route06.co.jp/"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://cultibase.jp/"&gt;CULTIBASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CI(Corporate Identity)&lt;/li&gt;
  &lt;li&gt;スタートアップがスタートアップのままスケールする&lt;/li&gt;
  &lt;li&gt;大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも&lt;/li&gt;
  &lt;li&gt;スタートアップの成長フェーズにおける組織課題とは？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3pd0eVI"&gt;THE MODEL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミドルマネージャの役割は何か？&lt;/li&gt;
  &lt;li&gt;マネージャにどのように成長してもらうのか？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/2SPOdJV"&gt;エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;技術を理解していないマネージャの言うことをメンバが聞かない問題&lt;/li&gt;
  &lt;li&gt;大企業向けのコンサル提供では、振る舞いを変える&lt;/li&gt;
  &lt;li&gt;組織学習とは何か？&lt;/li&gt;
  &lt;li&gt;シングルループ学習とダブルループ学習&lt;/li&gt;
  &lt;li&gt;ふりかえりでは、シングルループに目が向きがちでは&lt;/li&gt;
  &lt;li&gt;制圧寄りのコミュニケーションの何が悪いのか？&lt;/li&gt;
  &lt;li&gt;対話の上手いファシリテートの方法&lt;/li&gt;
  &lt;li&gt;意見を言わないボトルネックを探す&lt;/li&gt;
  &lt;li&gt;定例の前に関係を作るのが大切&lt;/li&gt;
  &lt;li&gt;上司が一方的に話して、「何かありますか？」で終わる&lt;/li&gt;
  &lt;li&gt;1on1職人&lt;/li&gt;
  &lt;li&gt;初対面の人と1on1の警戒を解く方法&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121"&gt;組織デザイン概論 - WDA研究会191121&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;従業員体験とは何か？&lt;/li&gt;
  &lt;li&gt;どうしたら従業員体験を損ねずに、評価面談を実施するか？&lt;/li&gt;
  &lt;li&gt;評価面談のアンチパターンとは？&lt;/li&gt;
  &lt;li&gt;ショッキング評価&lt;/li&gt;
  &lt;li&gt;心理的契約とは？&lt;/li&gt;
  &lt;li&gt;評価面談におけるストーリーテリングとは？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3vPNaZ4"&gt;はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;期待値調整&lt;/li&gt;
  &lt;li&gt;心理的契約をどうやって言語化するか？&lt;/li&gt;
  &lt;li&gt;エンゲージメントと従業員体験の関連は？&lt;/li&gt;
  &lt;li&gt;エンゲージメントとモチベーションの違い&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei"&gt;担ぎたくなる“神輿上司”の目指し方&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミミグリではどのようにエンゲージメントを高めているか？&lt;/li&gt;
  &lt;li&gt;プレイフル&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects"&gt;株式会社MIMIGURI 採用募集(wantedly)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://route06.co.jp/"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>51. 組織学習、心理的契約、エンゲージメント w/ tomomiminabe</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>52</podcast:episode>
    </item>
    <item>
      <title>50. 社内DevOps基盤、Tekton、Cuelang w/ JunMakishi</title>
      <link>https://fukabori.fm/episode/50</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;社内DevOps基盤の狙いとは？&lt;/li&gt;
  &lt;li&gt;アプリケーションのライフサイクル管理とは？&lt;/li&gt;
  &lt;li&gt;対応するクラウドなどは？&lt;/li&gt;
  &lt;li&gt;市中にも同様のSaaSがあるが、なぜ自社開発するのか？&lt;/li&gt;
  &lt;li&gt;エンタープライズ向け・自社用での作り込みとは、たとえば何を？&lt;/li&gt;
  &lt;li&gt;どういう技術を利用しているのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tekton.dev/"&gt;Tekton&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tektonは何をするのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jenkins-x.io/"&gt;Jenkins X&lt;/a&gt; でも Tektonを活用&lt;/li&gt;
  &lt;li&gt;ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？&lt;/li&gt;
  &lt;li&gt;Tektonの採用事例は増えている？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spinnaker.io/"&gt;Spinnaker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-workflows"&gt;Argo Workflows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜTektonを採用したのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/kaniko"&gt;kaniko&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://cuelang.org/"&gt;CUE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜCUEを利用するのか？&lt;/li&gt;
  &lt;li&gt;YAMLやJSONとの違いは？&lt;/li&gt;
  &lt;li&gt;HashiCorp Configuration Language&lt;/li&gt;
  &lt;li&gt;CUEの特徴は？&lt;/li&gt;
  &lt;li&gt;Type Validation&lt;/li&gt;
  &lt;li&gt;Overlayを認めておらず、Unifyする&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jsonnet.org/"&gt;jsonnet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kustomize"&gt;kustomize&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ、CUEでOverlayを認めていないのか？&lt;/li&gt;
  &lt;li&gt;GopherがCUEの開発に携わっている&lt;/li&gt;
  &lt;li&gt;CUEは日本でも採用されている？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://changelog.com/gotime/163"&gt;gotime&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Grafanaでも取り込まれつつある&lt;/li&gt;
  &lt;li&gt;社内的になぜCUEを採用するのか？&lt;/li&gt;
  &lt;li&gt;社内に基盤の良さを伝えるのは大変では？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0000019"&gt;採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/50</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nqmhxffk4bm7vbk9ar.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 25 May 2021 23:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nqmhxffk4bm7vbk9ar.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4027/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:36:40</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;社内DevOps基盤の狙いとは？&lt;/li&gt;
  &lt;li&gt;アプリケーションのライフサイクル管理とは？&lt;/li&gt;
  &lt;li&gt;対応するクラウドなどは？&lt;/li&gt;
  &lt;li&gt;市中にも同様のSaaSがあるが、なぜ自社開発するのか？&lt;/li&gt;
  &lt;li&gt;エンタープライズ向け・自社用での作り込みとは、たとえば何を？&lt;/li&gt;
  &lt;li&gt;どういう技術を利用しているのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tekton.dev/"&gt;Tekton&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tektonは何をするのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jenkins-x.io/"&gt;Jenkins X&lt;/a&gt; でも Tektonを活用&lt;/li&gt;
  &lt;li&gt;ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？&lt;/li&gt;
  &lt;li&gt;Tektonの採用事例は増えている？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spinnaker.io/"&gt;Spinnaker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-workflows"&gt;Argo Workflows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜTektonを採用したのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/kaniko"&gt;kaniko&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://cuelang.org/"&gt;CUE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜCUEを利用するのか？&lt;/li&gt;
  &lt;li&gt;YAMLやJSONとの違いは？&lt;/li&gt;
  &lt;li&gt;HashiCorp Configuration Language&lt;/li&gt;
  &lt;li&gt;CUEの特徴は？&lt;/li&gt;
  &lt;li&gt;Type Validation&lt;/li&gt;
  &lt;li&gt;Overlayを認めておらず、Unifyする&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jsonnet.org/"&gt;jsonnet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kustomize"&gt;kustomize&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ、CUEでOverlayを認めていないのか？&lt;/li&gt;
  &lt;li&gt;GopherがCUEの開発に携わっている&lt;/li&gt;
  &lt;li&gt;CUEは日本でも採用されている？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://changelog.com/gotime/163"&gt;gotime&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Grafanaでも取り込まれつつある&lt;/li&gt;
  &lt;li&gt;社内的になぜCUEを採用するのか？&lt;/li&gt;
  &lt;li&gt;社内に基盤の良さを伝えるのは大変では？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0000019"&gt;採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;社内DevOps基盤の狙いとは？&lt;/li&gt;
  &lt;li&gt;アプリケーションのライフサイクル管理とは？&lt;/li&gt;
  &lt;li&gt;対応するクラウドなどは？&lt;/li&gt;
  &lt;li&gt;市中にも同様のSaaSがあるが、なぜ自社開発するのか？&lt;/li&gt;
  &lt;li&gt;エンタープライズ向け・自社用での作り込みとは、たとえば何を？&lt;/li&gt;
  &lt;li&gt;どういう技術を利用しているのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tekton.dev/"&gt;Tekton&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tektonは何をするのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jenkins-x.io/"&gt;Jenkins X&lt;/a&gt; でも Tektonを活用&lt;/li&gt;
  &lt;li&gt;ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？&lt;/li&gt;
  &lt;li&gt;Tektonの採用事例は増えている？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spinnaker.io/"&gt;Spinnaker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-workflows"&gt;Argo Workflows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜTektonを採用したのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/kaniko"&gt;kaniko&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://cuelang.org/"&gt;CUE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜCUEを利用するのか？&lt;/li&gt;
  &lt;li&gt;YAMLやJSONとの違いは？&lt;/li&gt;
  &lt;li&gt;HashiCorp Configuration Language&lt;/li&gt;
  &lt;li&gt;CUEの特徴は？&lt;/li&gt;
  &lt;li&gt;Type Validation&lt;/li&gt;
  &lt;li&gt;Overlayを認めておらず、Unifyする&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jsonnet.org/"&gt;jsonnet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kustomize"&gt;kustomize&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ、CUEでOverlayを認めていないのか？&lt;/li&gt;
  &lt;li&gt;GopherがCUEの開発に携わっている&lt;/li&gt;
  &lt;li&gt;CUEは日本でも採用されている？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://changelog.com/gotime/163"&gt;gotime&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Grafanaでも取り込まれつつある&lt;/li&gt;
  &lt;li&gt;社内的になぜCUEを採用するのか？&lt;/li&gt;
  &lt;li&gt;社内に基盤の良さを伝えるのは大変では？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0000019"&gt;採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>50. 社内DevOps基盤、Tekton、Cuelang w/ JunMakishi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>51</podcast:episode>
    </item>
    <item>
      <title>49. GoFデザインパターンとDI + リファクタリング (後編) w/ twada</title>
      <link>https://fukabori.fm/episode/49</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DIを勉強したい場合には何を参照する？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3omXLrc"&gt;Dependency Injection Principles, Practices, and Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/silexphp/Pimple"&gt;Pimple&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3tQcLix"&gt;Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GoFデザインパターンは、なぜここまで普及したのか？&lt;/li&gt;
  &lt;li&gt;OOPを理解するきっかけになったため&lt;/li&gt;
  &lt;li&gt;差分プログラミングの誤解&lt;/li&gt;
  &lt;li&gt;継承には悪い面も多い&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3tU8n1S"&gt;増補改訂版Java言語で学ぶデザインパターン入門&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OMT法とUML&lt;/li&gt;
  &lt;li&gt;Don’t Repeat Yourself 原則 と 差分プログラミング&lt;/li&gt;
  &lt;li&gt;差分プログラミングは、継承以外の手法でも実現できる&lt;/li&gt;
  &lt;li&gt;is-a と has-a&lt;/li&gt;
  &lt;li&gt;構造ではなくて、責務・振る舞いについてプログラミングする&lt;/li&gt;
  &lt;li&gt;DIコンテナ と Main関数&lt;/li&gt;
  &lt;li&gt;継承があるデザインパターンの現代における利用価値は？&lt;/li&gt;
  &lt;li&gt;GolangやRustには継承がそもそもない&lt;/li&gt;
  &lt;li&gt;Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった&lt;/li&gt;
  &lt;li&gt;Template method は現代においても使う&lt;/li&gt;
  &lt;li&gt;Abstract Factory と DIコンテナ は似ている？&lt;/li&gt;
  &lt;li&gt;リファクタリングとデザインパターンは、どういう関係性があるのか？&lt;/li&gt;
  &lt;li&gt;「こういうこともあろうかと」&lt;/li&gt;
  &lt;li&gt;YAGNI(You aren’t gonna need it)&lt;/li&gt;
  &lt;li&gt;リファクタリングのターゲットとしてのデザインパターン&lt;/li&gt;
  &lt;li&gt;振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？&lt;/li&gt;
  &lt;li&gt;テストピラミッド&lt;/li&gt;
  &lt;li&gt;ユニットテストしかないのは、あまり良い状況ではない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.informit.com/articles/article.aspx?p=1404056"&gt;15 年後に再整理された Design Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Null Object&lt;/li&gt;
  &lt;li&gt;Nullish coalescing&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3uXI2Bq"&gt;テスト駆動開発&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/2SRzZIh"&gt;リファクタリング(第2版): 既存のコードを安全に改善する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/49</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nqfrn3f1qfwdjtezxq.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 17 May 2021 11:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nqfrn3f1qfwdjtezxq.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4026/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:01:49</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DIを勉強したい場合には何を参照する？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3omXLrc"&gt;Dependency Injection Principles, Practices, and Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/silexphp/Pimple"&gt;Pimple&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3tQcLix"&gt;Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GoFデザインパターンは、なぜここまで普及したのか？&lt;/li&gt;
  &lt;li&gt;OOPを理解するきっかけになったため&lt;/li&gt;
  &lt;li&gt;差分プログラミングの誤解&lt;/li&gt;
  &lt;li&gt;継承には悪い面も多い&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3tU8n1S"&gt;増補改訂版Java言語で学ぶデザインパターン入門&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OMT法とUML&lt;/li&gt;
  &lt;li&gt;Don’t Repeat Yourself 原則 と 差分プログラミング&lt;/li&gt;
  &lt;li&gt;差分プログラミングは、継承以外の手法でも実現できる&lt;/li&gt;
  &lt;li&gt;is-a と has-a&lt;/li&gt;
  &lt;li&gt;構造ではなくて、責務・振る舞いについてプログラミングする&lt;/li&gt;
  &lt;li&gt;DIコンテナ と Main関数&lt;/li&gt;
  &lt;li&gt;継承があるデザインパターンの現代における利用価値は？&lt;/li&gt;
  &lt;li&gt;GolangやRustには継承がそもそもない&lt;/li&gt;
  &lt;li&gt;Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった&lt;/li&gt;
  &lt;li&gt;Template method は現代においても使う&lt;/li&gt;
  &lt;li&gt;Abstract Factory と DIコンテナ は似ている？&lt;/li&gt;
  &lt;li&gt;リファクタリングとデザインパターンは、どういう関係性があるのか？&lt;/li&gt;
  &lt;li&gt;「こういうこともあろうかと」&lt;/li&gt;
  &lt;li&gt;YAGNI(You aren’t gonna need it)&lt;/li&gt;
  &lt;li&gt;リファクタリングのターゲットとしてのデザインパターン&lt;/li&gt;
  &lt;li&gt;振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？&lt;/li&gt;
  &lt;li&gt;テストピラミッド&lt;/li&gt;
  &lt;li&gt;ユニットテストしかないのは、あまり良い状況ではない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.informit.com/articles/article.aspx?p=1404056"&gt;15 年後に再整理された Design Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Null Object&lt;/li&gt;
  &lt;li&gt;Nullish coalescing&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3uXI2Bq"&gt;テスト駆動開発&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/2SRzZIh"&gt;リファクタリング(第2版): 既存のコードを安全に改善する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DIを勉強したい場合には何を参照する？&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3omXLrc"&gt;Dependency Injection Principles, Practices, and Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/silexphp/Pimple"&gt;Pimple&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3tQcLix"&gt;Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GoFデザインパターンは、なぜここまで普及したのか？&lt;/li&gt;
  &lt;li&gt;OOPを理解するきっかけになったため&lt;/li&gt;
  &lt;li&gt;差分プログラミングの誤解&lt;/li&gt;
  &lt;li&gt;継承には悪い面も多い&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3tU8n1S"&gt;増補改訂版Java言語で学ぶデザインパターン入門&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OMT法とUML&lt;/li&gt;
  &lt;li&gt;Don’t Repeat Yourself 原則 と 差分プログラミング&lt;/li&gt;
  &lt;li&gt;差分プログラミングは、継承以外の手法でも実現できる&lt;/li&gt;
  &lt;li&gt;is-a と has-a&lt;/li&gt;
  &lt;li&gt;構造ではなくて、責務・振る舞いについてプログラミングする&lt;/li&gt;
  &lt;li&gt;DIコンテナ と Main関数&lt;/li&gt;
  &lt;li&gt;継承があるデザインパターンの現代における利用価値は？&lt;/li&gt;
  &lt;li&gt;GolangやRustには継承がそもそもない&lt;/li&gt;
  &lt;li&gt;Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった&lt;/li&gt;
  &lt;li&gt;Template method は現代においても使う&lt;/li&gt;
  &lt;li&gt;Abstract Factory と DIコンテナ は似ている？&lt;/li&gt;
  &lt;li&gt;リファクタリングとデザインパターンは、どういう関係性があるのか？&lt;/li&gt;
  &lt;li&gt;「こういうこともあろうかと」&lt;/li&gt;
  &lt;li&gt;YAGNI(You aren’t gonna need it)&lt;/li&gt;
  &lt;li&gt;リファクタリングのターゲットとしてのデザインパターン&lt;/li&gt;
  &lt;li&gt;振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？&lt;/li&gt;
  &lt;li&gt;テストピラミッド&lt;/li&gt;
  &lt;li&gt;ユニットテストしかないのは、あまり良い状況ではない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.informit.com/articles/article.aspx?p=1404056"&gt;15 年後に再整理された Design Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Null Object&lt;/li&gt;
  &lt;li&gt;Nullish coalescing&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3uXI2Bq"&gt;テスト駆動開発&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/2SRzZIh"&gt;リファクタリング(第2版): 既存のコードを安全に改善する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>49. GoFデザインパターンとDI + リファクタリング (後編) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>50</podcast:episode>
    </item>
    <item>
      <title>48. GoFデザインパターンとDI (前編) w/ twada</title>
      <link>https://fukabori.fm/episode/48</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;デザインパターンとは？&lt;/li&gt;
  &lt;li&gt;ソフトウェアパターン&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3y1OuJU"&gt;オブジェクト指向における再利用のためのデザインパターン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gang of Four&lt;/li&gt;
  &lt;li&gt;進研ゼミみたいなもの&lt;/li&gt;
  &lt;li&gt;Composite パターン&lt;/li&gt;
  &lt;li&gt;デザインパターン以外のソフトウェアパターンとは？&lt;/li&gt;
  &lt;li&gt;アーキテクチャパターン、アンチパターン、コンカレンシーパターン&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8"&gt;AWSクラウドデザインパターン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;パターンにはフォーマットがある&lt;/li&gt;
  &lt;li&gt;GoFのデザインパターンはいつ頃生まれたもの？&lt;/li&gt;
  &lt;li&gt;GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html"&gt;Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;C、C++、Perl、Smalltalk、Visual Basic の時代&lt;/li&gt;
  &lt;li&gt;デザインパターンには、どういうカテゴリがある？&lt;/li&gt;
  &lt;li&gt;生成・構造・振る舞い&lt;/li&gt;
  &lt;li&gt;Javaのクラスライブラリにおけるデザインパターン利用&lt;/li&gt;
  &lt;li&gt;GoFデザインパターンは、2021年において活用できるのか？&lt;/li&gt;
  &lt;li&gt;Iteratorパターン の言語標準実装&lt;/li&gt;
  &lt;li&gt;Iterator の登場背景とは？本質とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Depth-first_search"&gt;深さ優先探索&lt;/a&gt;と&lt;a href="https://en.wikipedia.org/wiki/Breadth-first_search"&gt;幅優先探索&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;2021年で不要となったデザインパターンは？&lt;/li&gt;
  &lt;li&gt;Singletonパターンはいらない&lt;/li&gt;
  &lt;li&gt;Singletonパターンが解きたかった課題と引き起こす副作用&lt;/li&gt;
  &lt;li&gt;グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない&lt;/li&gt;
  &lt;li&gt;Singletonの解決したかった課題を、現代ではどう解くのか？&lt;/li&gt;
  &lt;li&gt;DI(Dependenc Injection)&lt;/li&gt;
  &lt;li&gt;IoC(Inversion of Control)&lt;/li&gt;
  &lt;li&gt;オブジェクト指向における依存性解決&lt;/li&gt;
  &lt;li&gt;DIは、たとえばどう実装するのか？&lt;/li&gt;
  &lt;li&gt;DI Containerとは？&lt;/li&gt;
  &lt;li&gt;生成知識は結合度が高い&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3nZGvbs"&gt;LeanとDevOpsの科学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DI Container はどう実装するのか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/48</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nq95390v8ghmk4md1p.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 09 May 2021 23:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nq95390v8ghmk4md1p.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4025/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:57:28</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;デザインパターンとは？&lt;/li&gt;
  &lt;li&gt;ソフトウェアパターン&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3y1OuJU"&gt;オブジェクト指向における再利用のためのデザインパターン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gang of Four&lt;/li&gt;
  &lt;li&gt;進研ゼミみたいなもの&lt;/li&gt;
  &lt;li&gt;Composite パターン&lt;/li&gt;
  &lt;li&gt;デザインパターン以外のソフトウェアパターンとは？&lt;/li&gt;
  &lt;li&gt;アーキテクチャパターン、アンチパターン、コンカレンシーパターン&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8"&gt;AWSクラウドデザインパターン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;パターンにはフォーマットがある&lt;/li&gt;
  &lt;li&gt;GoFのデザインパターンはいつ頃生まれたもの？&lt;/li&gt;
  &lt;li&gt;GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html"&gt;Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;C、C++、Perl、Smalltalk、Visual Basic の時代&lt;/li&gt;
  &lt;li&gt;デザインパターンには、どういうカテゴリがある？&lt;/li&gt;
  &lt;li&gt;生成・構造・振る舞い&lt;/li&gt;
  &lt;li&gt;Javaのクラスライブラリにおけるデザインパターン利用&lt;/li&gt;
  &lt;li&gt;GoFデザインパターンは、2021年において活用できるのか？&lt;/li&gt;
  &lt;li&gt;Iteratorパターン の言語標準実装&lt;/li&gt;
  &lt;li&gt;Iterator の登場背景とは？本質とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Depth-first_search"&gt;深さ優先探索&lt;/a&gt;と&lt;a href="https://en.wikipedia.org/wiki/Breadth-first_search"&gt;幅優先探索&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;2021年で不要となったデザインパターンは？&lt;/li&gt;
  &lt;li&gt;Singletonパターンはいらない&lt;/li&gt;
  &lt;li&gt;Singletonパターンが解きたかった課題と引き起こす副作用&lt;/li&gt;
  &lt;li&gt;グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない&lt;/li&gt;
  &lt;li&gt;Singletonの解決したかった課題を、現代ではどう解くのか？&lt;/li&gt;
  &lt;li&gt;DI(Dependenc Injection)&lt;/li&gt;
  &lt;li&gt;IoC(Inversion of Control)&lt;/li&gt;
  &lt;li&gt;オブジェクト指向における依存性解決&lt;/li&gt;
  &lt;li&gt;DIは、たとえばどう実装するのか？&lt;/li&gt;
  &lt;li&gt;DI Containerとは？&lt;/li&gt;
  &lt;li&gt;生成知識は結合度が高い&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3nZGvbs"&gt;LeanとDevOpsの科学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DI Container はどう実装するのか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;デザインパターンとは？&lt;/li&gt;
  &lt;li&gt;ソフトウェアパターン&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3y1OuJU"&gt;オブジェクト指向における再利用のためのデザインパターン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gang of Four&lt;/li&gt;
  &lt;li&gt;進研ゼミみたいなもの&lt;/li&gt;
  &lt;li&gt;Composite パターン&lt;/li&gt;
  &lt;li&gt;デザインパターン以外のソフトウェアパターンとは？&lt;/li&gt;
  &lt;li&gt;アーキテクチャパターン、アンチパターン、コンカレンシーパターン&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8"&gt;AWSクラウドデザインパターン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;パターンにはフォーマットがある&lt;/li&gt;
  &lt;li&gt;GoFのデザインパターンはいつ頃生まれたもの？&lt;/li&gt;
  &lt;li&gt;GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html"&gt;Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;C、C++、Perl、Smalltalk、Visual Basic の時代&lt;/li&gt;
  &lt;li&gt;デザインパターンには、どういうカテゴリがある？&lt;/li&gt;
  &lt;li&gt;生成・構造・振る舞い&lt;/li&gt;
  &lt;li&gt;Javaのクラスライブラリにおけるデザインパターン利用&lt;/li&gt;
  &lt;li&gt;GoFデザインパターンは、2021年において活用できるのか？&lt;/li&gt;
  &lt;li&gt;Iteratorパターン の言語標準実装&lt;/li&gt;
  &lt;li&gt;Iterator の登場背景とは？本質とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Depth-first_search"&gt;深さ優先探索&lt;/a&gt;と&lt;a href="https://en.wikipedia.org/wiki/Breadth-first_search"&gt;幅優先探索&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;2021年で不要となったデザインパターンは？&lt;/li&gt;
  &lt;li&gt;Singletonパターンはいらない&lt;/li&gt;
  &lt;li&gt;Singletonパターンが解きたかった課題と引き起こす副作用&lt;/li&gt;
  &lt;li&gt;グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない&lt;/li&gt;
  &lt;li&gt;Singletonの解決したかった課題を、現代ではどう解くのか？&lt;/li&gt;
  &lt;li&gt;DI(Dependenc Injection)&lt;/li&gt;
  &lt;li&gt;IoC(Inversion of Control)&lt;/li&gt;
  &lt;li&gt;オブジェクト指向における依存性解決&lt;/li&gt;
  &lt;li&gt;DIは、たとえばどう実装するのか？&lt;/li&gt;
  &lt;li&gt;DI Containerとは？&lt;/li&gt;
  &lt;li&gt;生成知識は結合度が高い&lt;/li&gt;
  &lt;li&gt;書籍: &lt;a href="https://amzn.to/3nZGvbs"&gt;LeanとDevOpsの科学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DI Container はどう実装するのか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.yumemi.co.jp/"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>48. GoFデザインパターンとDI (前編) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>49</podcast:episode>
    </item>
    <item>
      <title>47. プロダクトマネジメントのすべて w/ takoratta</title>
      <link>https://fukabori.fm/episode/47</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2R5SxUo"&gt;プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍の概要&lt;/li&gt;
  &lt;li&gt;プロダクトの成功とチームの組成&lt;/li&gt;
  &lt;li&gt;Core/Why/What/How&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャ以外の人だと、誰が読むべき？&lt;/li&gt;
  &lt;li&gt;プロダクトマネジメントの応用範囲の広さ&lt;/li&gt;
  &lt;li&gt;アウトプットじゃなくアウトカムを考える&lt;/li&gt;
  &lt;li&gt;大企業のミッションは抽象度が高いが、それを上手く使う&lt;/li&gt;
  &lt;li&gt;会社を自己実現に活用する&lt;/li&gt;
  &lt;li&gt;大義に沿っているかどうか&lt;/li&gt;
  &lt;li&gt;書籍のおすすめの読み方&lt;/li&gt;
  &lt;li&gt;そもそも執筆者陣は、どうやって勉強して執筆したのか？&lt;/li&gt;
  &lt;li&gt;大量にあるフレームワークは使わなければいけないのか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャとプロダクトオーナとの関係性は？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャの毎日のタイムテーブル&lt;/li&gt;
  &lt;li&gt;企業内で、プロダクトマネジメントの概念をどのように広めていくか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？&lt;/li&gt;
  &lt;li&gt;KGI/KPI/NSM&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャはどのように信頼を積み重ねていくのか？&lt;/li&gt;
  &lt;li&gt;KPIやNSMを振り返るタイミング、頻度？&lt;/li&gt;
  &lt;li&gt;さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャの本当の成長の多くは、OJTである&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://productmanagement-criteria.com/"&gt;プロダクトマネジメントクライテリア&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.com/tably/n/nce04f2446a86"&gt;プロダクトをつくる力をアセスメントするDIA for PMのご案内&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/47</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nq8q92dzce2ggepztw.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 04 Apr 2021 11:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nq8q92dzce2ggepztw.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4024/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:56:54</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2R5SxUo"&gt;プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍の概要&lt;/li&gt;
  &lt;li&gt;プロダクトの成功とチームの組成&lt;/li&gt;
  &lt;li&gt;Core/Why/What/How&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャ以外の人だと、誰が読むべき？&lt;/li&gt;
  &lt;li&gt;プロダクトマネジメントの応用範囲の広さ&lt;/li&gt;
  &lt;li&gt;アウトプットじゃなくアウトカムを考える&lt;/li&gt;
  &lt;li&gt;大企業のミッションは抽象度が高いが、それを上手く使う&lt;/li&gt;
  &lt;li&gt;会社を自己実現に活用する&lt;/li&gt;
  &lt;li&gt;大義に沿っているかどうか&lt;/li&gt;
  &lt;li&gt;書籍のおすすめの読み方&lt;/li&gt;
  &lt;li&gt;そもそも執筆者陣は、どうやって勉強して執筆したのか？&lt;/li&gt;
  &lt;li&gt;大量にあるフレームワークは使わなければいけないのか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャとプロダクトオーナとの関係性は？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャの毎日のタイムテーブル&lt;/li&gt;
  &lt;li&gt;企業内で、プロダクトマネジメントの概念をどのように広めていくか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？&lt;/li&gt;
  &lt;li&gt;KGI/KPI/NSM&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャはどのように信頼を積み重ねていくのか？&lt;/li&gt;
  &lt;li&gt;KPIやNSMを振り返るタイミング、頻度？&lt;/li&gt;
  &lt;li&gt;さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャの本当の成長の多くは、OJTである&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://productmanagement-criteria.com/"&gt;プロダクトマネジメントクライテリア&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.com/tably/n/nce04f2446a86"&gt;プロダクトをつくる力をアセスメントするDIA for PMのご案内&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2R5SxUo"&gt;プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍の概要&lt;/li&gt;
  &lt;li&gt;プロダクトの成功とチームの組成&lt;/li&gt;
  &lt;li&gt;Core/Why/What/How&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャ以外の人だと、誰が読むべき？&lt;/li&gt;
  &lt;li&gt;プロダクトマネジメントの応用範囲の広さ&lt;/li&gt;
  &lt;li&gt;アウトプットじゃなくアウトカムを考える&lt;/li&gt;
  &lt;li&gt;大企業のミッションは抽象度が高いが、それを上手く使う&lt;/li&gt;
  &lt;li&gt;会社を自己実現に活用する&lt;/li&gt;
  &lt;li&gt;大義に沿っているかどうか&lt;/li&gt;
  &lt;li&gt;書籍のおすすめの読み方&lt;/li&gt;
  &lt;li&gt;そもそも執筆者陣は、どうやって勉強して執筆したのか？&lt;/li&gt;
  &lt;li&gt;大量にあるフレームワークは使わなければいけないのか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャとプロダクトオーナとの関係性は？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャの毎日のタイムテーブル&lt;/li&gt;
  &lt;li&gt;企業内で、プロダクトマネジメントの概念をどのように広めていくか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？&lt;/li&gt;
  &lt;li&gt;KGI/KPI/NSM&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャはどのように信頼を積み重ねていくのか？&lt;/li&gt;
  &lt;li&gt;KPIやNSMを振り返るタイミング、頻度？&lt;/li&gt;
  &lt;li&gt;さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャの本当の成長の多くは、OJTである&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://productmanagement-criteria.com/"&gt;プロダクトマネジメントクライテリア&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.com/tably/n/nce04f2446a86"&gt;プロダクトをつくる力をアセスメントするDIA for PMのご案内&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>47. プロダクトマネジメントのすべて w/ takoratta</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>48</podcast:episode>
    </item>
    <item>
      <title>46. アジャイルコーチとは？ w/ yohhatu</title>
      <link>https://fukabori.fm/episode/46</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;アジャイルコーチって何？&lt;/li&gt;
  &lt;li&gt;多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？&lt;/li&gt;
  &lt;li&gt;アジャイルコーチリファラル&lt;/li&gt;
  &lt;li&gt;RSGT、アジャイルコーチコミュニティ&lt;/li&gt;
  &lt;li&gt;ペアコーチによる現場支援体制&lt;/li&gt;
  &lt;li&gt;どれが正解か分からないので、試してみたらいい&lt;/li&gt;
  &lt;li&gt;透明性は現場ごとに違う&lt;/li&gt;
  &lt;li&gt;透明性を高くするためには何をするのか？&lt;/li&gt;
  &lt;li&gt;解像度をあげるための取り組みとは？&lt;/li&gt;
  &lt;li&gt;現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？&lt;/li&gt;
  &lt;li&gt;スクラムガイドと現場の間の溝を埋める&lt;/li&gt;
  &lt;li&gt;事例を伝える旅人&lt;/li&gt;
  &lt;li&gt;ファシリテーションで何をするのか？&lt;/li&gt;
  &lt;li&gt;良いファシリテーションとは何か？&lt;/li&gt;
  &lt;li&gt;アジェンダからトピックがはずれたときの対応&lt;/li&gt;
  &lt;li&gt;親指投票とは何か？&lt;/li&gt;
  &lt;li&gt;ファイブフィンガーとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3tIG2wa"&gt;カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;前の人の意見にひっぱられる問題&lt;/li&gt;
  &lt;li&gt;同調圧力がかかる状況を減らす&lt;/li&gt;
  &lt;li&gt;ファシリテーションをどうやって学べばいいのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.sonicgarden.jp/members/fujiwara"&gt;ソニックガーデンの藤原さん&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現場でどのような悩みを解決するのか？&lt;/li&gt;
  &lt;li&gt;ええ感じに解決するの、ええ感じとは何か？&lt;/li&gt;
  &lt;li&gt;正しいことを言えば物事が進むわけじゃない&lt;/li&gt;
  &lt;li&gt;技術的問題と適応課題&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2PaGCDV"&gt;学習する組織 ― システム思考で未来を創造する&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2Ph91s0"&gt;他者と働く──「わかりあえなさ」から始める組織論&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;大変だからしなくていいわけじゃない&lt;/li&gt;
  &lt;li&gt;アジャイルコーチに依頼して上手くいったことの指標・判断は？&lt;/li&gt;
  &lt;li&gt;ベロシティを上げるのを目的にしてはいけない&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/46</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7np07yj9k1jnhr49ssv.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 21 Mar 2021 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7np07yj9k1jnhr49ssv.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4023/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:44:06</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;アジャイルコーチって何？&lt;/li&gt;
  &lt;li&gt;多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？&lt;/li&gt;
  &lt;li&gt;アジャイルコーチリファラル&lt;/li&gt;
  &lt;li&gt;RSGT、アジャイルコーチコミュニティ&lt;/li&gt;
  &lt;li&gt;ペアコーチによる現場支援体制&lt;/li&gt;
  &lt;li&gt;どれが正解か分からないので、試してみたらいい&lt;/li&gt;
  &lt;li&gt;透明性は現場ごとに違う&lt;/li&gt;
  &lt;li&gt;透明性を高くするためには何をするのか？&lt;/li&gt;
  &lt;li&gt;解像度をあげるための取り組みとは？&lt;/li&gt;
  &lt;li&gt;現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？&lt;/li&gt;
  &lt;li&gt;スクラムガイドと現場の間の溝を埋める&lt;/li&gt;
  &lt;li&gt;事例を伝える旅人&lt;/li&gt;
  &lt;li&gt;ファシリテーションで何をするのか？&lt;/li&gt;
  &lt;li&gt;良いファシリテーションとは何か？&lt;/li&gt;
  &lt;li&gt;アジェンダからトピックがはずれたときの対応&lt;/li&gt;
  &lt;li&gt;親指投票とは何か？&lt;/li&gt;
  &lt;li&gt;ファイブフィンガーとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3tIG2wa"&gt;カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;前の人の意見にひっぱられる問題&lt;/li&gt;
  &lt;li&gt;同調圧力がかかる状況を減らす&lt;/li&gt;
  &lt;li&gt;ファシリテーションをどうやって学べばいいのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.sonicgarden.jp/members/fujiwara"&gt;ソニックガーデンの藤原さん&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現場でどのような悩みを解決するのか？&lt;/li&gt;
  &lt;li&gt;ええ感じに解決するの、ええ感じとは何か？&lt;/li&gt;
  &lt;li&gt;正しいことを言えば物事が進むわけじゃない&lt;/li&gt;
  &lt;li&gt;技術的問題と適応課題&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2PaGCDV"&gt;学習する組織 ― システム思考で未来を創造する&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2Ph91s0"&gt;他者と働く──「わかりあえなさ」から始める組織論&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;大変だからしなくていいわけじゃない&lt;/li&gt;
  &lt;li&gt;アジャイルコーチに依頼して上手くいったことの指標・判断は？&lt;/li&gt;
  &lt;li&gt;ベロシティを上げるのを目的にしてはいけない&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;アジャイルコーチって何？&lt;/li&gt;
  &lt;li&gt;多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？&lt;/li&gt;
  &lt;li&gt;アジャイルコーチリファラル&lt;/li&gt;
  &lt;li&gt;RSGT、アジャイルコーチコミュニティ&lt;/li&gt;
  &lt;li&gt;ペアコーチによる現場支援体制&lt;/li&gt;
  &lt;li&gt;どれが正解か分からないので、試してみたらいい&lt;/li&gt;
  &lt;li&gt;透明性は現場ごとに違う&lt;/li&gt;
  &lt;li&gt;透明性を高くするためには何をするのか？&lt;/li&gt;
  &lt;li&gt;解像度をあげるための取り組みとは？&lt;/li&gt;
  &lt;li&gt;現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？&lt;/li&gt;
  &lt;li&gt;スクラムガイドと現場の間の溝を埋める&lt;/li&gt;
  &lt;li&gt;事例を伝える旅人&lt;/li&gt;
  &lt;li&gt;ファシリテーションで何をするのか？&lt;/li&gt;
  &lt;li&gt;良いファシリテーションとは何か？&lt;/li&gt;
  &lt;li&gt;アジェンダからトピックがはずれたときの対応&lt;/li&gt;
  &lt;li&gt;親指投票とは何か？&lt;/li&gt;
  &lt;li&gt;ファイブフィンガーとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3tIG2wa"&gt;カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;前の人の意見にひっぱられる問題&lt;/li&gt;
  &lt;li&gt;同調圧力がかかる状況を減らす&lt;/li&gt;
  &lt;li&gt;ファシリテーションをどうやって学べばいいのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.sonicgarden.jp/members/fujiwara"&gt;ソニックガーデンの藤原さん&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現場でどのような悩みを解決するのか？&lt;/li&gt;
  &lt;li&gt;ええ感じに解決するの、ええ感じとは何か？&lt;/li&gt;
  &lt;li&gt;正しいことを言えば物事が進むわけじゃない&lt;/li&gt;
  &lt;li&gt;技術的問題と適応課題&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2PaGCDV"&gt;学習する組織 ― システム思考で未来を創造する&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/2Ph91s0"&gt;他者と働く──「わかりあえなさ」から始める組織論&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;大変だからしなくていいわけじゃない&lt;/li&gt;
  &lt;li&gt;アジャイルコーチに依頼して上手くいったことの指標・判断は？&lt;/li&gt;
  &lt;li&gt;ベロシティを上げるのを目的にしてはいけない&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>46. アジャイルコーチとは？ w/ yohhatu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>47</podcast:episode>
    </item>
    <item>
      <title>45. 組織の心理的安全性をどうやって高めるか？ w/ raykataoka</title>
      <link>https://fukabori.fm/episode/45</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://note.com/raykataoka/n/n1e3397bb153e"&gt;心理的安全ジャーニーSlackでの５つの実装方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;心理的安全性とは？その正体は何なのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3t28xUU"&gt;チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3cigChM"&gt;恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;心理的安全性によくある誤解とは何か？&lt;/li&gt;
  &lt;li&gt;批判・反論ができる組織・チームをどう作っていくのか？&lt;/li&gt;
  &lt;li&gt;正しい行動を強化して、間違った行動を消失させる&lt;/li&gt;
  &lt;li&gt;社内の心理的安全性を高めるために、何をしているか？&lt;/li&gt;
  &lt;li&gt;Bad News First&lt;/li&gt;
  &lt;li&gt;悪い情報を共有すること自体には感謝をする&lt;/li&gt;
  &lt;li&gt;失敗を共有できるようにリフレームしていく&lt;/li&gt;
  &lt;li&gt;実際の失敗共有はどんなものがある？&lt;/li&gt;
  &lt;li&gt;失敗共有時に怒ったらどうなるか？&lt;/li&gt;
  &lt;li&gt;失敗からどうやってノウハウを溜めていくのか？&lt;/li&gt;
  &lt;li&gt;失敗にはどのような種類があるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3eshgvJ"&gt;失敗学のすすめ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Slack Maturity Score、日本1位の企業の独創的な使い方は？&lt;/li&gt;
  &lt;li&gt;ゆめみにおける分報の使い方、自己開示を推奨していく&lt;/li&gt;
  &lt;li&gt;分報の数が多いが、どのぐらい見ている？&lt;/li&gt;
  &lt;li&gt;ネガティブな情報はSlackでも拡散しやすい&lt;/li&gt;
  &lt;li&gt;Slackのコミュニケーションガイドラインが規定されている&lt;/li&gt;
  &lt;li&gt;主語が大きい否定後は示唆を受ける&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.yumemi.co.jp/all_member_ceo"&gt;プロポーザルレビューリクエスト（Proposal Review Request）&lt;/a&gt;&lt;/p&gt;

    &lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/45</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nphgw17ydk9b076hsd.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 10 Mar 2021 21:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nphgw17ydk9b076hsd.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4022/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:38:41</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://note.com/raykataoka/n/n1e3397bb153e"&gt;心理的安全ジャーニーSlackでの５つの実装方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;心理的安全性とは？その正体は何なのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3t28xUU"&gt;チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3cigChM"&gt;恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;心理的安全性によくある誤解とは何か？&lt;/li&gt;
  &lt;li&gt;批判・反論ができる組織・チームをどう作っていくのか？&lt;/li&gt;
  &lt;li&gt;正しい行動を強化して、間違った行動を消失させる&lt;/li&gt;
  &lt;li&gt;社内の心理的安全性を高めるために、何をしているか？&lt;/li&gt;
  &lt;li&gt;Bad News First&lt;/li&gt;
  &lt;li&gt;悪い情報を共有すること自体には感謝をする&lt;/li&gt;
  &lt;li&gt;失敗を共有できるようにリフレームしていく&lt;/li&gt;
  &lt;li&gt;実際の失敗共有はどんなものがある？&lt;/li&gt;
  &lt;li&gt;失敗共有時に怒ったらどうなるか？&lt;/li&gt;
  &lt;li&gt;失敗からどうやってノウハウを溜めていくのか？&lt;/li&gt;
  &lt;li&gt;失敗にはどのような種類があるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3eshgvJ"&gt;失敗学のすすめ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Slack Maturity Score、日本1位の企業の独創的な使い方は？&lt;/li&gt;
  &lt;li&gt;ゆめみにおける分報の使い方、自己開示を推奨していく&lt;/li&gt;
  &lt;li&gt;分報の数が多いが、どのぐらい見ている？&lt;/li&gt;
  &lt;li&gt;ネガティブな情報はSlackでも拡散しやすい&lt;/li&gt;
  &lt;li&gt;Slackのコミュニケーションガイドラインが規定されている&lt;/li&gt;
  &lt;li&gt;主語が大きい否定後は示唆を受ける&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.yumemi.co.jp/all_member_ceo"&gt;プロポーザルレビューリクエスト（Proposal Review Request）&lt;/a&gt;&lt;/p&gt;

    &lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://note.com/raykataoka/n/n1e3397bb153e"&gt;心理的安全ジャーニーSlackでの５つの実装方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;心理的安全性とは？その正体は何なのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3t28xUU"&gt;チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3cigChM"&gt;恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;心理的安全性によくある誤解とは何か？&lt;/li&gt;
  &lt;li&gt;批判・反論ができる組織・チームをどう作っていくのか？&lt;/li&gt;
  &lt;li&gt;正しい行動を強化して、間違った行動を消失させる&lt;/li&gt;
  &lt;li&gt;社内の心理的安全性を高めるために、何をしているか？&lt;/li&gt;
  &lt;li&gt;Bad News First&lt;/li&gt;
  &lt;li&gt;悪い情報を共有すること自体には感謝をする&lt;/li&gt;
  &lt;li&gt;失敗を共有できるようにリフレームしていく&lt;/li&gt;
  &lt;li&gt;実際の失敗共有はどんなものがある？&lt;/li&gt;
  &lt;li&gt;失敗共有時に怒ったらどうなるか？&lt;/li&gt;
  &lt;li&gt;失敗からどうやってノウハウを溜めていくのか？&lt;/li&gt;
  &lt;li&gt;失敗にはどのような種類があるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3eshgvJ"&gt;失敗学のすすめ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Slack Maturity Score、日本1位の企業の独創的な使い方は？&lt;/li&gt;
  &lt;li&gt;ゆめみにおける分報の使い方、自己開示を推奨していく&lt;/li&gt;
  &lt;li&gt;分報の数が多いが、どのぐらい見ている？&lt;/li&gt;
  &lt;li&gt;ネガティブな情報はSlackでも拡散しやすい&lt;/li&gt;
  &lt;li&gt;Slackのコミュニケーションガイドラインが規定されている&lt;/li&gt;
  &lt;li&gt;主語が大きい否定後は示唆を受ける&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.yumemi.co.jp/all_member_ceo"&gt;プロポーザルレビューリクエスト（Proposal Review Request）&lt;/a&gt;&lt;/p&gt;

    &lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>45. 組織の心理的安全性をどうやって高めるか？ w/ raykataoka</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>46</podcast:episode>
    </item>
    <item>
      <title>44. Spotify型およびゆめみにおける組織モデルの変遷 w/ raykataoka</title>
      <link>https://fukabori.fm/episode/44</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/ray-kataoka"&gt;Ray Wow FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ゆめみの組織構造はどうなっている？&lt;/li&gt;
  &lt;li&gt;Spotify 組織モデルとは？&lt;/li&gt;
  &lt;li&gt;Spotify型組織のメリット・デメリット&lt;/li&gt;
  &lt;li&gt;技術的な評価は、技術者自身に評価してほしい&lt;/li&gt;
  &lt;li&gt;マトリクス型組織の難しさとは？&lt;/li&gt;
  &lt;li&gt;コミュニケーション・調整コストの高さ&lt;/li&gt;
  &lt;li&gt;ピープルマネジメントマネージャ側が深く関与できない&lt;/li&gt;
  &lt;li&gt;技術的な勉強会はどのような組織・チームで実施している？&lt;/li&gt;
  &lt;li&gt;人数が多くなった場合のナレッジシェアの難しさと対応&lt;/li&gt;
  &lt;li&gt;どのようにナレッジシェアを実現しているか&lt;/li&gt;
  &lt;li&gt;月間60回の勉強会&lt;/li&gt;
  &lt;li&gt;社内勉強会を活性化させる秘訣は？&lt;/li&gt;
  &lt;li&gt;雑な登壇で、雑壇&lt;/li&gt;
  &lt;li&gt;全てお金で人を動かそうとすると上手くいかない&lt;/li&gt;
  &lt;li&gt;Spotifyモデルはなぜ上手くいかない、何が大変なのか？&lt;/li&gt;
  &lt;li&gt;組織モデルを変更したターニングポイント・背景は？&lt;/li&gt;
  &lt;li&gt;事業部単位の縦割り&lt;/li&gt;
  &lt;li&gt;受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？&lt;/li&gt;
  &lt;li&gt;フィーチャーチームに、コンポーネントチームを割り当てる&lt;/li&gt;
  &lt;li&gt;案件ごとのドメイン知識が偏る問題をどうするか？&lt;/li&gt;
  &lt;li&gt;なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？&lt;/li&gt;
  &lt;li&gt;人気のある案件に偏ってしまわないか？&lt;/li&gt;
  &lt;li&gt;フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/44</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7npjh0n9y0crndagz1x.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 05 Mar 2021 03:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7npjh0n9y0crndagz1x.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4021/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:42:39</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/ray-kataoka"&gt;Ray Wow FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ゆめみの組織構造はどうなっている？&lt;/li&gt;
  &lt;li&gt;Spotify 組織モデルとは？&lt;/li&gt;
  &lt;li&gt;Spotify型組織のメリット・デメリット&lt;/li&gt;
  &lt;li&gt;技術的な評価は、技術者自身に評価してほしい&lt;/li&gt;
  &lt;li&gt;マトリクス型組織の難しさとは？&lt;/li&gt;
  &lt;li&gt;コミュニケーション・調整コストの高さ&lt;/li&gt;
  &lt;li&gt;ピープルマネジメントマネージャ側が深く関与できない&lt;/li&gt;
  &lt;li&gt;技術的な勉強会はどのような組織・チームで実施している？&lt;/li&gt;
  &lt;li&gt;人数が多くなった場合のナレッジシェアの難しさと対応&lt;/li&gt;
  &lt;li&gt;どのようにナレッジシェアを実現しているか&lt;/li&gt;
  &lt;li&gt;月間60回の勉強会&lt;/li&gt;
  &lt;li&gt;社内勉強会を活性化させる秘訣は？&lt;/li&gt;
  &lt;li&gt;雑な登壇で、雑壇&lt;/li&gt;
  &lt;li&gt;全てお金で人を動かそうとすると上手くいかない&lt;/li&gt;
  &lt;li&gt;Spotifyモデルはなぜ上手くいかない、何が大変なのか？&lt;/li&gt;
  &lt;li&gt;組織モデルを変更したターニングポイント・背景は？&lt;/li&gt;
  &lt;li&gt;事業部単位の縦割り&lt;/li&gt;
  &lt;li&gt;受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？&lt;/li&gt;
  &lt;li&gt;フィーチャーチームに、コンポーネントチームを割り当てる&lt;/li&gt;
  &lt;li&gt;案件ごとのドメイン知識が偏る問題をどうするか？&lt;/li&gt;
  &lt;li&gt;なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？&lt;/li&gt;
  &lt;li&gt;人気のある案件に偏ってしまわないか？&lt;/li&gt;
  &lt;li&gt;フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/ray-kataoka"&gt;Ray Wow FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ゆめみの組織構造はどうなっている？&lt;/li&gt;
  &lt;li&gt;Spotify 組織モデルとは？&lt;/li&gt;
  &lt;li&gt;Spotify型組織のメリット・デメリット&lt;/li&gt;
  &lt;li&gt;技術的な評価は、技術者自身に評価してほしい&lt;/li&gt;
  &lt;li&gt;マトリクス型組織の難しさとは？&lt;/li&gt;
  &lt;li&gt;コミュニケーション・調整コストの高さ&lt;/li&gt;
  &lt;li&gt;ピープルマネジメントマネージャ側が深く関与できない&lt;/li&gt;
  &lt;li&gt;技術的な勉強会はどのような組織・チームで実施している？&lt;/li&gt;
  &lt;li&gt;人数が多くなった場合のナレッジシェアの難しさと対応&lt;/li&gt;
  &lt;li&gt;どのようにナレッジシェアを実現しているか&lt;/li&gt;
  &lt;li&gt;月間60回の勉強会&lt;/li&gt;
  &lt;li&gt;社内勉強会を活性化させる秘訣は？&lt;/li&gt;
  &lt;li&gt;雑な登壇で、雑壇&lt;/li&gt;
  &lt;li&gt;全てお金で人を動かそうとすると上手くいかない&lt;/li&gt;
  &lt;li&gt;Spotifyモデルはなぜ上手くいかない、何が大変なのか？&lt;/li&gt;
  &lt;li&gt;組織モデルを変更したターニングポイント・背景は？&lt;/li&gt;
  &lt;li&gt;事業部単位の縦割り&lt;/li&gt;
  &lt;li&gt;受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？&lt;/li&gt;
  &lt;li&gt;フィーチャーチームに、コンポーネントチームを割り当てる&lt;/li&gt;
  &lt;li&gt;案件ごとのドメイン知識が偏る問題をどうするか？&lt;/li&gt;
  &lt;li&gt;なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？&lt;/li&gt;
  &lt;li&gt;人気のある案件に偏ってしまわないか？&lt;/li&gt;
  &lt;li&gt;フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>44. Spotify型およびゆめみにおける組織モデルの変遷 w/ raykataoka</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>45</podcast:episode>
    </item>
    <item>
      <title>43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</title>
      <link>https://fukabori.fm/episode/43</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf"&gt;WebSocketの次の技術！？WebTransportについての解説とチュートリアル&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58"&gt;WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WebTransportとは何か？&lt;/li&gt;
  &lt;li&gt;HTTPの双方向通信の歴史&lt;/li&gt;
  &lt;li&gt;XHR、Polling、Cometとは？&lt;/li&gt;
  &lt;li&gt;WebSocket&lt;/li&gt;
  &lt;li&gt;Server-Sent Eventsとは？&lt;/li&gt;
  &lt;li&gt;SSEって今も使われるの？どこに使う？&lt;/li&gt;
  &lt;li&gt;WebSocketとSSEとのパフォーマンス差異は？&lt;/li&gt;
  &lt;li&gt;なぜWebTransportは登場してきたのか？WebSocketの課題とは？&lt;/li&gt;
  &lt;li&gt;TCP Head of Line Blocking&lt;/li&gt;
  &lt;li&gt;QUICとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/"&gt;QUIC プロトコルスタック&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WebTransportは実際に使われている？&lt;/li&gt;
  &lt;li&gt;WebSocketとWebTransportのユースケース？&lt;/li&gt;
  &lt;li&gt;クラウドゲーミングとWebRTC&lt;/li&gt;
  &lt;li&gt;WebTransportでクライアントクライアント通信はできる？&lt;/li&gt;
  &lt;li&gt;TCPとUDP以外の選択肢は無かったのか？&lt;/li&gt;
  &lt;li&gt;ネットワークプロトコルの硬直化&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/1"&gt;1. IETFとか、QUICとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;UDPが通らない環境ってあるのでは？どう対応する？&lt;/li&gt;
  &lt;li&gt;HTTP/2とは？&lt;/li&gt;
  &lt;li&gt;HTTP Head of Line Blocking&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00"&gt;Bootstrapping WebSockets with HTTP/2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;HTTP/2の課題&lt;/li&gt;
  &lt;li&gt;HTTP/2と3の違いは？&lt;/li&gt;
  &lt;li&gt;内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。&lt;/li&gt;
  &lt;li&gt;Server Push と 103 Early Hints&lt;/li&gt;
  &lt;li&gt;内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています&lt;/li&gt;
  &lt;li&gt;WebCodecsとは何か？&lt;/li&gt;
  &lt;li&gt;なぜWebCodecsが登場してきたのか？&lt;/li&gt;
  &lt;li&gt;WebTransportやWebCodecsがだれが推進している？&lt;/li&gt;
  &lt;li&gt;WASM&lt;/li&gt;
  &lt;li&gt;WebTransportやWebCodecsは、個人の開発者には関係がある？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/43</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7np3gysmchrzrrzvhb3.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 12 Feb 2021 19:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7np3gysmchrzrrzvhb3.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4020/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:39:34</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf"&gt;WebSocketの次の技術！？WebTransportについての解説とチュートリアル&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58"&gt;WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WebTransportとは何か？&lt;/li&gt;
  &lt;li&gt;HTTPの双方向通信の歴史&lt;/li&gt;
  &lt;li&gt;XHR、Polling、Cometとは？&lt;/li&gt;
  &lt;li&gt;WebSocket&lt;/li&gt;
  &lt;li&gt;Server-Sent Eventsとは？&lt;/li&gt;
  &lt;li&gt;SSEって今も使われるの？どこに使う？&lt;/li&gt;
  &lt;li&gt;WebSocketとSSEとのパフォーマンス差異は？&lt;/li&gt;
  &lt;li&gt;なぜWebTransportは登場してきたのか？WebSocketの課題とは？&lt;/li&gt;
  &lt;li&gt;TCP Head of Line Blocking&lt;/li&gt;
  &lt;li&gt;QUICとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/"&gt;QUIC プロトコルスタック&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WebTransportは実際に使われている？&lt;/li&gt;
  &lt;li&gt;WebSocketとWebTransportのユースケース？&lt;/li&gt;
  &lt;li&gt;クラウドゲーミングとWebRTC&lt;/li&gt;
  &lt;li&gt;WebTransportでクライアントクライアント通信はできる？&lt;/li&gt;
  &lt;li&gt;TCPとUDP以外の選択肢は無かったのか？&lt;/li&gt;
  &lt;li&gt;ネットワークプロトコルの硬直化&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/1"&gt;1. IETFとか、QUICとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;UDPが通らない環境ってあるのでは？どう対応する？&lt;/li&gt;
  &lt;li&gt;HTTP/2とは？&lt;/li&gt;
  &lt;li&gt;HTTP Head of Line Blocking&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00"&gt;Bootstrapping WebSockets with HTTP/2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;HTTP/2の課題&lt;/li&gt;
  &lt;li&gt;HTTP/2と3の違いは？&lt;/li&gt;
  &lt;li&gt;内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。&lt;/li&gt;
  &lt;li&gt;Server Push と 103 Early Hints&lt;/li&gt;
  &lt;li&gt;内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています&lt;/li&gt;
  &lt;li&gt;WebCodecsとは何か？&lt;/li&gt;
  &lt;li&gt;なぜWebCodecsが登場してきたのか？&lt;/li&gt;
  &lt;li&gt;WebTransportやWebCodecsがだれが推進している？&lt;/li&gt;
  &lt;li&gt;WASM&lt;/li&gt;
  &lt;li&gt;WebTransportやWebCodecsは、個人の開発者には関係がある？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf"&gt;WebSocketの次の技術！？WebTransportについての解説とチュートリアル&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58"&gt;WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WebTransportとは何か？&lt;/li&gt;
  &lt;li&gt;HTTPの双方向通信の歴史&lt;/li&gt;
  &lt;li&gt;XHR、Polling、Cometとは？&lt;/li&gt;
  &lt;li&gt;WebSocket&lt;/li&gt;
  &lt;li&gt;Server-Sent Eventsとは？&lt;/li&gt;
  &lt;li&gt;SSEって今も使われるの？どこに使う？&lt;/li&gt;
  &lt;li&gt;WebSocketとSSEとのパフォーマンス差異は？&lt;/li&gt;
  &lt;li&gt;なぜWebTransportは登場してきたのか？WebSocketの課題とは？&lt;/li&gt;
  &lt;li&gt;TCP Head of Line Blocking&lt;/li&gt;
  &lt;li&gt;QUICとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/"&gt;QUIC プロトコルスタック&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WebTransportは実際に使われている？&lt;/li&gt;
  &lt;li&gt;WebSocketとWebTransportのユースケース？&lt;/li&gt;
  &lt;li&gt;クラウドゲーミングとWebRTC&lt;/li&gt;
  &lt;li&gt;WebTransportでクライアントクライアント通信はできる？&lt;/li&gt;
  &lt;li&gt;TCPとUDP以外の選択肢は無かったのか？&lt;/li&gt;
  &lt;li&gt;ネットワークプロトコルの硬直化&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/1"&gt;1. IETFとか、QUICとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;UDPが通らない環境ってあるのでは？どう対応する？&lt;/li&gt;
  &lt;li&gt;HTTP/2とは？&lt;/li&gt;
  &lt;li&gt;HTTP Head of Line Blocking&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00"&gt;Bootstrapping WebSockets with HTTP/2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;HTTP/2の課題&lt;/li&gt;
  &lt;li&gt;HTTP/2と3の違いは？&lt;/li&gt;
  &lt;li&gt;内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。&lt;/li&gt;
  &lt;li&gt;Server Push と 103 Early Hints&lt;/li&gt;
  &lt;li&gt;内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています&lt;/li&gt;
  &lt;li&gt;WebCodecsとは何か？&lt;/li&gt;
  &lt;li&gt;なぜWebCodecsが登場してきたのか？&lt;/li&gt;
  &lt;li&gt;WebTransportやWebCodecsがだれが推進している？&lt;/li&gt;
  &lt;li&gt;WASM&lt;/li&gt;
  &lt;li&gt;WebTransportやWebCodecsは、個人の開発者には関係がある？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>44</podcast:episode>
    </item>
    <item>
      <title>42. 良いマネジメントとは？良いミーティングとは？ w/ konifar</title>
      <link>https://fukabori.fm/episode/42</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Konifarさんにとってマネジメントとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3iiEdkP"&gt;HIGH OUTPUT MANAGEMENT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;実際にマネージャとしてどういう課題に取り組んでいたのか？&lt;/li&gt;
  &lt;li&gt;情報設計の方法論&lt;/li&gt;
  &lt;li&gt;コミュニケーションの最適な形をどう追求するか？&lt;/li&gt;
  &lt;li&gt;Konifarさんはどうやって問題発見するか？&lt;/li&gt;
  &lt;li&gt;1on1の場、チームの振り返りで吸い取る&lt;/li&gt;
  &lt;li&gt;忘れないようにGoogleDocsに書いておく&lt;/li&gt;
  &lt;li&gt;TextやQuickCallで解決する、1on1で解決するための判断基準は？&lt;/li&gt;
  &lt;li&gt;Feedbackを与えるにあたって気をつけていることは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/39C5daW"&gt;フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;言わないでいるより、言って後悔したほうが良い&lt;/li&gt;
  &lt;li&gt;どうやって褒める箇所を覚えておくか？&lt;/li&gt;
  &lt;li&gt;1on1 ミーティングの目的&lt;/li&gt;
  &lt;li&gt;Konifarさんにとって良いミーティングとは？&lt;/li&gt;
  &lt;li&gt;目的とゴールがハッキリしていること&lt;/li&gt;
  &lt;li&gt;目的とゴールの違いは？&lt;/li&gt;
  &lt;li&gt;何かを決めるミーティングは事前準備がすべて&lt;/li&gt;
  &lt;li&gt;ミーティングが上手くいかないとき = 例外処理&lt;/li&gt;
  &lt;li&gt;ミーティング関数の引数&lt;/li&gt;
  &lt;li&gt;参加者の発言偏り問題にどう対処するか？&lt;/li&gt;
  &lt;li&gt;発言しないのは、そもそもなぜなのかを考える必要がある&lt;/li&gt;
  &lt;li&gt;ネガティブなことを言えるように心理的安全性を高めるためにやっていること？&lt;/li&gt;
  &lt;li&gt;ストレートにネガティブな意見が出てくるのは嬉しい&lt;/li&gt;
  &lt;li&gt;タックマンモデルのStormingが苦手な人が多いのでは&lt;/li&gt;
  &lt;li&gt;率直に物事をいうのはすごい疲れる&lt;/li&gt;
  &lt;li&gt;ブログで言語化して楽になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122"&gt;リモート環境での雑談の工夫&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社内でボードゲーム&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/Kyashの全社忘年会で使用したサービスremo"&gt;Kyashの全社忘年会で使用したサービス(remo)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;リモート飲み会でお話を聞く、という形になる&lt;/li&gt;
  &lt;li&gt;リモートミーティングで音声とチャットでマルチで会話する&lt;/li&gt;
  &lt;li&gt;Chatに即興でアンケートFormを埋め込む&lt;/li&gt;
  &lt;li&gt;「これについて意見ありますか？」の後の沈黙に耐える&lt;/li&gt;
  &lt;li&gt;チェックイン&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://open.talentio.com/1/c/kyash/requisitions/232"&gt;Kyash募集職種一覧&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.patreon.com/fukabori"&gt;fukabori.fm 個人サポータープラン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/42</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7npatz9z73xhdw0410d.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 15 Jan 2021 03:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7npatz9z73xhdw0410d.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4019/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:52:39</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Konifarさんにとってマネジメントとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3iiEdkP"&gt;HIGH OUTPUT MANAGEMENT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;実際にマネージャとしてどういう課題に取り組んでいたのか？&lt;/li&gt;
  &lt;li&gt;情報設計の方法論&lt;/li&gt;
  &lt;li&gt;コミュニケーションの最適な形をどう追求するか？&lt;/li&gt;
  &lt;li&gt;Konifarさんはどうやって問題発見するか？&lt;/li&gt;
  &lt;li&gt;1on1の場、チームの振り返りで吸い取る&lt;/li&gt;
  &lt;li&gt;忘れないようにGoogleDocsに書いておく&lt;/li&gt;
  &lt;li&gt;TextやQuickCallで解決する、1on1で解決するための判断基準は？&lt;/li&gt;
  &lt;li&gt;Feedbackを与えるにあたって気をつけていることは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/39C5daW"&gt;フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;言わないでいるより、言って後悔したほうが良い&lt;/li&gt;
  &lt;li&gt;どうやって褒める箇所を覚えておくか？&lt;/li&gt;
  &lt;li&gt;1on1 ミーティングの目的&lt;/li&gt;
  &lt;li&gt;Konifarさんにとって良いミーティングとは？&lt;/li&gt;
  &lt;li&gt;目的とゴールがハッキリしていること&lt;/li&gt;
  &lt;li&gt;目的とゴールの違いは？&lt;/li&gt;
  &lt;li&gt;何かを決めるミーティングは事前準備がすべて&lt;/li&gt;
  &lt;li&gt;ミーティングが上手くいかないとき = 例外処理&lt;/li&gt;
  &lt;li&gt;ミーティング関数の引数&lt;/li&gt;
  &lt;li&gt;参加者の発言偏り問題にどう対処するか？&lt;/li&gt;
  &lt;li&gt;発言しないのは、そもそもなぜなのかを考える必要がある&lt;/li&gt;
  &lt;li&gt;ネガティブなことを言えるように心理的安全性を高めるためにやっていること？&lt;/li&gt;
  &lt;li&gt;ストレートにネガティブな意見が出てくるのは嬉しい&lt;/li&gt;
  &lt;li&gt;タックマンモデルのStormingが苦手な人が多いのでは&lt;/li&gt;
  &lt;li&gt;率直に物事をいうのはすごい疲れる&lt;/li&gt;
  &lt;li&gt;ブログで言語化して楽になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122"&gt;リモート環境での雑談の工夫&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社内でボードゲーム&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/Kyashの全社忘年会で使用したサービスremo"&gt;Kyashの全社忘年会で使用したサービス(remo)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;リモート飲み会でお話を聞く、という形になる&lt;/li&gt;
  &lt;li&gt;リモートミーティングで音声とチャットでマルチで会話する&lt;/li&gt;
  &lt;li&gt;Chatに即興でアンケートFormを埋め込む&lt;/li&gt;
  &lt;li&gt;「これについて意見ありますか？」の後の沈黙に耐える&lt;/li&gt;
  &lt;li&gt;チェックイン&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://open.talentio.com/1/c/kyash/requisitions/232"&gt;Kyash募集職種一覧&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.patreon.com/fukabori"&gt;fukabori.fm 個人サポータープラン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Konifarさんにとってマネジメントとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3iiEdkP"&gt;HIGH OUTPUT MANAGEMENT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;実際にマネージャとしてどういう課題に取り組んでいたのか？&lt;/li&gt;
  &lt;li&gt;情報設計の方法論&lt;/li&gt;
  &lt;li&gt;コミュニケーションの最適な形をどう追求するか？&lt;/li&gt;
  &lt;li&gt;Konifarさんはどうやって問題発見するか？&lt;/li&gt;
  &lt;li&gt;1on1の場、チームの振り返りで吸い取る&lt;/li&gt;
  &lt;li&gt;忘れないようにGoogleDocsに書いておく&lt;/li&gt;
  &lt;li&gt;TextやQuickCallで解決する、1on1で解決するための判断基準は？&lt;/li&gt;
  &lt;li&gt;Feedbackを与えるにあたって気をつけていることは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/39C5daW"&gt;フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;言わないでいるより、言って後悔したほうが良い&lt;/li&gt;
  &lt;li&gt;どうやって褒める箇所を覚えておくか？&lt;/li&gt;
  &lt;li&gt;1on1 ミーティングの目的&lt;/li&gt;
  &lt;li&gt;Konifarさんにとって良いミーティングとは？&lt;/li&gt;
  &lt;li&gt;目的とゴールがハッキリしていること&lt;/li&gt;
  &lt;li&gt;目的とゴールの違いは？&lt;/li&gt;
  &lt;li&gt;何かを決めるミーティングは事前準備がすべて&lt;/li&gt;
  &lt;li&gt;ミーティングが上手くいかないとき = 例外処理&lt;/li&gt;
  &lt;li&gt;ミーティング関数の引数&lt;/li&gt;
  &lt;li&gt;参加者の発言偏り問題にどう対処するか？&lt;/li&gt;
  &lt;li&gt;発言しないのは、そもそもなぜなのかを考える必要がある&lt;/li&gt;
  &lt;li&gt;ネガティブなことを言えるように心理的安全性を高めるためにやっていること？&lt;/li&gt;
  &lt;li&gt;ストレートにネガティブな意見が出てくるのは嬉しい&lt;/li&gt;
  &lt;li&gt;タックマンモデルのStormingが苦手な人が多いのでは&lt;/li&gt;
  &lt;li&gt;率直に物事をいうのはすごい疲れる&lt;/li&gt;
  &lt;li&gt;ブログで言語化して楽になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122"&gt;リモート環境での雑談の工夫&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社内でボードゲーム&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/Kyashの全社忘年会で使用したサービスremo"&gt;Kyashの全社忘年会で使用したサービス(remo)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;リモート飲み会でお話を聞く、という形になる&lt;/li&gt;
  &lt;li&gt;リモートミーティングで音声とチャットでマルチで会話する&lt;/li&gt;
  &lt;li&gt;Chatに即興でアンケートFormを埋め込む&lt;/li&gt;
  &lt;li&gt;「これについて意見ありますか？」の後の沈黙に耐える&lt;/li&gt;
  &lt;li&gt;チェックイン&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://open.talentio.com/1/c/kyash/requisitions/232"&gt;Kyash募集職種一覧&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.patreon.com/fukabori"&gt;fukabori.fm 個人サポータープラン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="エピソードスポンサー"&gt;エピソードスポンサー&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://offers.jp/"&gt;Offers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/"&gt;株式会社overflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>42. 良いマネジメントとは？良いミーティングとは？ w/ konifar</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>43</podcast:episode>
    </item>
    <item>
      <title>41. Wantedlyの開発組織 w/ kawasy</title>
      <link>https://fukabori.fm/episode/41</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.atlassian.com/agile/agile-at-scale/spotify"&gt;Discover the Spotify model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tribe間の情報流通の課題などから組織再編&lt;/li&gt;
  &lt;li&gt;Productの情報ラインと、技術情報ラインの会議体設計&lt;/li&gt;
  &lt;li&gt;議事録などの情報展開&lt;/li&gt;
  &lt;li&gt;モノリシックアプリケーションからマイクロサービスへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.argoproj.io/tagged/cncf"&gt;Argo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://looker.com/"&gt;Looker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;どのように技術判断を実施するのか？&lt;/li&gt;
  &lt;li&gt;組織の課題解決能力を向上させる&lt;/li&gt;
  &lt;li&gt;1-2年では困らないけど重要な問題をどのように対応するか？&lt;/li&gt;
  &lt;li&gt;たとえば、1チームの開発プロセスはどうなっている？&lt;/li&gt;
  &lt;li&gt;新しく価値をつくることと、リニューアルの難しさ&lt;/li&gt;
  &lt;li&gt;会社方針と個人方針でポジションがあわなくなった場合は？&lt;/li&gt;
  &lt;li&gt;インフラチームからの他チームへの留学制度&lt;/li&gt;
  &lt;li&gt;エンジニアの人事評価はどうしている？&lt;/li&gt;
  &lt;li&gt;「期待」を満たしたのか・満たしていのかをみる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/wantedly/projects"&gt;Wantedly, Inc.の採用/求人一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/41</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7npantr11wy38pezq0f.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 18 Dec 2020 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7npantr11wy38pezq0f.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4018/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:30:00</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.atlassian.com/agile/agile-at-scale/spotify"&gt;Discover the Spotify model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tribe間の情報流通の課題などから組織再編&lt;/li&gt;
  &lt;li&gt;Productの情報ラインと、技術情報ラインの会議体設計&lt;/li&gt;
  &lt;li&gt;議事録などの情報展開&lt;/li&gt;
  &lt;li&gt;モノリシックアプリケーションからマイクロサービスへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.argoproj.io/tagged/cncf"&gt;Argo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://looker.com/"&gt;Looker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;どのように技術判断を実施するのか？&lt;/li&gt;
  &lt;li&gt;組織の課題解決能力を向上させる&lt;/li&gt;
  &lt;li&gt;1-2年では困らないけど重要な問題をどのように対応するか？&lt;/li&gt;
  &lt;li&gt;たとえば、1チームの開発プロセスはどうなっている？&lt;/li&gt;
  &lt;li&gt;新しく価値をつくることと、リニューアルの難しさ&lt;/li&gt;
  &lt;li&gt;会社方針と個人方針でポジションがあわなくなった場合は？&lt;/li&gt;
  &lt;li&gt;インフラチームからの他チームへの留学制度&lt;/li&gt;
  &lt;li&gt;エンジニアの人事評価はどうしている？&lt;/li&gt;
  &lt;li&gt;「期待」を満たしたのか・満たしていのかをみる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/wantedly/projects"&gt;Wantedly, Inc.の採用/求人一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.atlassian.com/agile/agile-at-scale/spotify"&gt;Discover the Spotify model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tribe間の情報流通の課題などから組織再編&lt;/li&gt;
  &lt;li&gt;Productの情報ラインと、技術情報ラインの会議体設計&lt;/li&gt;
  &lt;li&gt;議事録などの情報展開&lt;/li&gt;
  &lt;li&gt;モノリシックアプリケーションからマイクロサービスへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.argoproj.io/tagged/cncf"&gt;Argo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://looker.com/"&gt;Looker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;どのように技術判断を実施するのか？&lt;/li&gt;
  &lt;li&gt;組織の課題解決能力を向上させる&lt;/li&gt;
  &lt;li&gt;1-2年では困らないけど重要な問題をどのように対応するか？&lt;/li&gt;
  &lt;li&gt;たとえば、1チームの開発プロセスはどうなっている？&lt;/li&gt;
  &lt;li&gt;新しく価値をつくることと、リニューアルの難しさ&lt;/li&gt;
  &lt;li&gt;会社方針と個人方針でポジションがあわなくなった場合は？&lt;/li&gt;
  &lt;li&gt;インフラチームからの他チームへの留学制度&lt;/li&gt;
  &lt;li&gt;エンジニアの人事評価はどうしている？&lt;/li&gt;
  &lt;li&gt;「期待」を満たしたのか・満たしていのかをみる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/wantedly/projects"&gt;Wantedly, Inc.の採用/求人一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>41. Wantedlyの開発組織 w/ kawasy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>42</podcast:episode>
    </item>
    <item>
      <title>40. 外資証券会社における独自言語および独自オブジェクト指向データベース w/ kawasy</title>
      <link>https://fukabori.fm/episode/40</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg"&gt;エンジニアトーク「ROLE MODEL」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;外資証券会社のシステムとは？&lt;/li&gt;
  &lt;li&gt;使われていた独自のプログラミング言語とは？&lt;/li&gt;
  &lt;li&gt;社内に存在する独自のエコシステム&lt;/li&gt;
  &lt;li&gt;独自言語は、どの言語に似ている？&lt;/li&gt;
  &lt;li&gt;専用の統合開発環境&lt;/li&gt;
  &lt;li&gt;独自のオブジェクト指向データベースとは？&lt;/li&gt;
  &lt;li&gt;Active Record Pattern&lt;/li&gt;
  &lt;li&gt;インピーダンスミスマッチ&lt;/li&gt;
  &lt;li&gt;オブジェクト指向データベースはなぜ流行らなかったのか？&lt;/li&gt;
  &lt;li&gt;グローバルレベルでのマルチマスタ同期&lt;/li&gt;
  &lt;li&gt;パフォーマンスレベルでの問題は？&lt;/li&gt;
  &lt;li&gt;どのようにロックする？&lt;/li&gt;
  &lt;li&gt;Dependency graphが実装されている&lt;/li&gt;
  &lt;li&gt;処理軽減・速度向上のためのメモ化&lt;/li&gt;
  &lt;li&gt;変数名にスペースが使えるプログラミング言語&lt;/li&gt;
  &lt;li&gt;どうやって品質を担保していたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3qdLx53"&gt;LeanとDevOpsの科学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コードレビューをもらうのが難しい問題とその対策&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/40</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7np80ze1hg6sv7w9byc.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 01 Dec 2020 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7np80ze1hg6sv7w9byc.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4017/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:32:57</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg"&gt;エンジニアトーク「ROLE MODEL」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;外資証券会社のシステムとは？&lt;/li&gt;
  &lt;li&gt;使われていた独自のプログラミング言語とは？&lt;/li&gt;
  &lt;li&gt;社内に存在する独自のエコシステム&lt;/li&gt;
  &lt;li&gt;独自言語は、どの言語に似ている？&lt;/li&gt;
  &lt;li&gt;専用の統合開発環境&lt;/li&gt;
  &lt;li&gt;独自のオブジェクト指向データベースとは？&lt;/li&gt;
  &lt;li&gt;Active Record Pattern&lt;/li&gt;
  &lt;li&gt;インピーダンスミスマッチ&lt;/li&gt;
  &lt;li&gt;オブジェクト指向データベースはなぜ流行らなかったのか？&lt;/li&gt;
  &lt;li&gt;グローバルレベルでのマルチマスタ同期&lt;/li&gt;
  &lt;li&gt;パフォーマンスレベルでの問題は？&lt;/li&gt;
  &lt;li&gt;どのようにロックする？&lt;/li&gt;
  &lt;li&gt;Dependency graphが実装されている&lt;/li&gt;
  &lt;li&gt;処理軽減・速度向上のためのメモ化&lt;/li&gt;
  &lt;li&gt;変数名にスペースが使えるプログラミング言語&lt;/li&gt;
  &lt;li&gt;どうやって品質を担保していたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3qdLx53"&gt;LeanとDevOpsの科学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コードレビューをもらうのが難しい問題とその対策&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg"&gt;エンジニアトーク「ROLE MODEL」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;外資証券会社のシステムとは？&lt;/li&gt;
  &lt;li&gt;使われていた独自のプログラミング言語とは？&lt;/li&gt;
  &lt;li&gt;社内に存在する独自のエコシステム&lt;/li&gt;
  &lt;li&gt;独自言語は、どの言語に似ている？&lt;/li&gt;
  &lt;li&gt;専用の統合開発環境&lt;/li&gt;
  &lt;li&gt;独自のオブジェクト指向データベースとは？&lt;/li&gt;
  &lt;li&gt;Active Record Pattern&lt;/li&gt;
  &lt;li&gt;インピーダンスミスマッチ&lt;/li&gt;
  &lt;li&gt;オブジェクト指向データベースはなぜ流行らなかったのか？&lt;/li&gt;
  &lt;li&gt;グローバルレベルでのマルチマスタ同期&lt;/li&gt;
  &lt;li&gt;パフォーマンスレベルでの問題は？&lt;/li&gt;
  &lt;li&gt;どのようにロックする？&lt;/li&gt;
  &lt;li&gt;Dependency graphが実装されている&lt;/li&gt;
  &lt;li&gt;処理軽減・速度向上のためのメモ化&lt;/li&gt;
  &lt;li&gt;変数名にスペースが使えるプログラミング言語&lt;/li&gt;
  &lt;li&gt;どうやって品質を担保していたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3qdLx53"&gt;LeanとDevOpsの科学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コードレビューをもらうのが難しい問題とその対策&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>40. 外資証券会社における独自言語および独自オブジェクト指向データベース w/ kawasy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>41</podcast:episode>
    </item>
    <item>
      <title>39. Work Together Anywhere w/ Lisette Sutherland</title>
      <link>https://fukabori.fm/episode/39</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/323rFY1"&gt;Work Together Anywhere&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3bv9w8I"&gt;リモートワーク - チームが結束する次世代型メソッド&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/schedule/"&gt;Collaboration superpowers workshops&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Why remote working is so important?&lt;/li&gt;
  &lt;li&gt;The reasons from company’s view and individual’s view&lt;/li&gt;
  &lt;li&gt;The future of work is choice; Let us choose&lt;/li&gt;
  &lt;li&gt;Shift to result oriented work&lt;/li&gt;
  &lt;li&gt;What are the difficulties in working at home?&lt;/li&gt;
  &lt;li&gt;Build boundary; turn off computers at certain time&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf"&gt;Template for creating a REMOTE TEAM AGREEMENT:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Should we share the agreements with other teams?&lt;/li&gt;
  &lt;li&gt;What’s difference in term of manager’s role?&lt;/li&gt;
  &lt;li&gt;How do managers find roadblocks when working remotely?&lt;/li&gt;
  &lt;li&gt;Not only 1 on 1 between a boss and a member but also between team members&lt;/li&gt;
  &lt;li&gt;Just calling without urgent matter&lt;/li&gt;
  &lt;li&gt;Over communiacation is definitely recommended&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf"&gt;Japanese Super Cards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/39</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7np80mbsmxn3sspaz29.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sat, 05 Sep 2020 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7np80mbsmxn3sspaz29.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4016/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:30:33</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/323rFY1"&gt;Work Together Anywhere&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3bv9w8I"&gt;リモートワーク - チームが結束する次世代型メソッド&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/schedule/"&gt;Collaboration superpowers workshops&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Why remote working is so important?&lt;/li&gt;
  &lt;li&gt;The reasons from company’s view and individual’s view&lt;/li&gt;
  &lt;li&gt;The future of work is choice; Let us choose&lt;/li&gt;
  &lt;li&gt;Shift to result oriented work&lt;/li&gt;
  &lt;li&gt;What are the difficulties in working at home?&lt;/li&gt;
  &lt;li&gt;Build boundary; turn off computers at certain time&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf"&gt;Template for creating a REMOTE TEAM AGREEMENT:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Should we share the agreements with other teams?&lt;/li&gt;
  &lt;li&gt;What’s difference in term of manager’s role?&lt;/li&gt;
  &lt;li&gt;How do managers find roadblocks when working remotely?&lt;/li&gt;
  &lt;li&gt;Not only 1 on 1 between a boss and a member but also between team members&lt;/li&gt;
  &lt;li&gt;Just calling without urgent matter&lt;/li&gt;
  &lt;li&gt;Over communiacation is definitely recommended&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf"&gt;Japanese Super Cards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/323rFY1"&gt;Work Together Anywhere&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://amzn.to/3bv9w8I"&gt;リモートワーク - チームが結束する次世代型メソッド&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/schedule/"&gt;Collaboration superpowers workshops&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Why remote working is so important?&lt;/li&gt;
  &lt;li&gt;The reasons from company’s view and individual’s view&lt;/li&gt;
  &lt;li&gt;The future of work is choice; Let us choose&lt;/li&gt;
  &lt;li&gt;Shift to result oriented work&lt;/li&gt;
  &lt;li&gt;What are the difficulties in working at home?&lt;/li&gt;
  &lt;li&gt;Build boundary; turn off computers at certain time&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf"&gt;Template for creating a REMOTE TEAM AGREEMENT:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Should we share the agreements with other teams?&lt;/li&gt;
  &lt;li&gt;What’s difference in term of manager’s role?&lt;/li&gt;
  &lt;li&gt;How do managers find roadblocks when working remotely?&lt;/li&gt;
  &lt;li&gt;Not only 1 on 1 between a boss and a member but also between team members&lt;/li&gt;
  &lt;li&gt;Just calling without urgent matter&lt;/li&gt;
  &lt;li&gt;Over communiacation is definitely recommended&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf"&gt;Japanese Super Cards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>39. Work Together Anywhere w/ Lisette Sutherland</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>40</podcast:episode>
    </item>
    <item>
      <title>38. 良い組織を作るために w/ yunon_phys</title>
      <link>https://fukabori.fm/episode/38</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;p&gt;(収録環境都合により、途中で音質が変わります)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Chief of Staff, Games とは何をする人？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://voice.aktsk.jp/5302/"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://voice.aktsk.jp/5345/"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Engineering Managerとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki"&gt;アカツキのEngineering Managerは何をする人なのか、EM Triangle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Managementというの言葉の訳語&lt;/li&gt;
  &lt;li&gt;これまでどのような組織づくりをしてきたのか？&lt;/li&gt;
  &lt;li&gt;問題を見つけるために、どのような行動をするのか？&lt;/li&gt;
  &lt;li&gt;30人以上との1on1からの模索&lt;/li&gt;
  &lt;li&gt;1on1で本音を出してもらうために、どのように話す？&lt;/li&gt;
  &lt;li&gt;学習する組織&lt;/li&gt;
  &lt;li&gt;1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？&lt;/li&gt;
  &lt;li&gt;大量の課題に面したとき、どう行動するか？&lt;/li&gt;
  &lt;li&gt;マインドマップで可視化して、システム思考的に考える&lt;/li&gt;
  &lt;li&gt;関係ないと思われた課題がつながる例とは？&lt;/li&gt;
  &lt;li&gt;組織開発(Organization Development)とは何か？&lt;/li&gt;
  &lt;li&gt;Developmentにある発展という意味&lt;/li&gt;
  &lt;li&gt;30人以上の意識をあわせにいくときの方法&lt;/li&gt;
  &lt;li&gt;対立をなくすのではなく、なぜそう考えたかという起点を考える&lt;/li&gt;
  &lt;li&gt;相手が自分と同じではない、また自分と同じ人間であることを認識する&lt;/li&gt;
  &lt;li&gt;無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく&lt;/li&gt;
  &lt;li&gt;何を考えているのか、何に困っているのかを共有するようなファシリテーション&lt;/li&gt;
  &lt;li&gt;未来を良くするために、自分が置かれている地点をメタ認知する&lt;/li&gt;
  &lt;li&gt;職能で自律して進めてもらうようなアプローチ&lt;/li&gt;
  &lt;li&gt;ゆのんさんにとってコミュニティとは？&lt;/li&gt;
  &lt;li&gt;コミュニティから一番得るのは活力&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/"&gt;Reginal Scrum Gathering Tokyo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる&lt;/li&gt;
  &lt;li&gt;ピープルマネジメントのネタは人に話しにくいこともある&lt;/li&gt;
  &lt;li&gt;心のNDA&lt;/li&gt;
  &lt;li&gt;マネージャ自身のバイアスを他者と会話することで見つける&lt;/li&gt;
  &lt;li&gt;オンライン勉強会は参加が簡単、出席率も変わる&lt;/li&gt;
  &lt;li&gt;https://game.aktsk.jp/&lt;/li&gt;
  &lt;li&gt;https://voice.aktsk.jp/&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/38</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nn589vwh449ccqe6d4.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sat, 22 Aug 2020 14:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nn589vwh449ccqe6d4.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4015/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:53:58</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;p&gt;(収録環境都合により、途中で音質が変わります)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Chief of Staff, Games とは何をする人？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://voice.aktsk.jp/5302/"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://voice.aktsk.jp/5345/"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Engineering Managerとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki"&gt;アカツキのEngineering Managerは何をする人なのか、EM Triangle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Managementというの言葉の訳語&lt;/li&gt;
  &lt;li&gt;これまでどのような組織づくりをしてきたのか？&lt;/li&gt;
  &lt;li&gt;問題を見つけるために、どのような行動をするのか？&lt;/li&gt;
  &lt;li&gt;30人以上との1on1からの模索&lt;/li&gt;
  &lt;li&gt;1on1で本音を出してもらうために、どのように話す？&lt;/li&gt;
  &lt;li&gt;学習する組織&lt;/li&gt;
  &lt;li&gt;1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？&lt;/li&gt;
  &lt;li&gt;大量の課題に面したとき、どう行動するか？&lt;/li&gt;
  &lt;li&gt;マインドマップで可視化して、システム思考的に考える&lt;/li&gt;
  &lt;li&gt;関係ないと思われた課題がつながる例とは？&lt;/li&gt;
  &lt;li&gt;組織開発(Organization Development)とは何か？&lt;/li&gt;
  &lt;li&gt;Developmentにある発展という意味&lt;/li&gt;
  &lt;li&gt;30人以上の意識をあわせにいくときの方法&lt;/li&gt;
  &lt;li&gt;対立をなくすのではなく、なぜそう考えたかという起点を考える&lt;/li&gt;
  &lt;li&gt;相手が自分と同じではない、また自分と同じ人間であることを認識する&lt;/li&gt;
  &lt;li&gt;無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく&lt;/li&gt;
  &lt;li&gt;何を考えているのか、何に困っているのかを共有するようなファシリテーション&lt;/li&gt;
  &lt;li&gt;未来を良くするために、自分が置かれている地点をメタ認知する&lt;/li&gt;
  &lt;li&gt;職能で自律して進めてもらうようなアプローチ&lt;/li&gt;
  &lt;li&gt;ゆのんさんにとってコミュニティとは？&lt;/li&gt;
  &lt;li&gt;コミュニティから一番得るのは活力&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/"&gt;Reginal Scrum Gathering Tokyo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる&lt;/li&gt;
  &lt;li&gt;ピープルマネジメントのネタは人に話しにくいこともある&lt;/li&gt;
  &lt;li&gt;心のNDA&lt;/li&gt;
  &lt;li&gt;マネージャ自身のバイアスを他者と会話することで見つける&lt;/li&gt;
  &lt;li&gt;オンライン勉強会は参加が簡単、出席率も変わる&lt;/li&gt;
  &lt;li&gt;https://game.aktsk.jp/&lt;/li&gt;
  &lt;li&gt;https://voice.aktsk.jp/&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;p&gt;(収録環境都合により、途中で音質が変わります)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Chief of Staff, Games とは何をする人？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://voice.aktsk.jp/5302/"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://voice.aktsk.jp/5345/"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Engineering Managerとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki"&gt;アカツキのEngineering Managerは何をする人なのか、EM Triangle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Managementというの言葉の訳語&lt;/li&gt;
  &lt;li&gt;これまでどのような組織づくりをしてきたのか？&lt;/li&gt;
  &lt;li&gt;問題を見つけるために、どのような行動をするのか？&lt;/li&gt;
  &lt;li&gt;30人以上との1on1からの模索&lt;/li&gt;
  &lt;li&gt;1on1で本音を出してもらうために、どのように話す？&lt;/li&gt;
  &lt;li&gt;学習する組織&lt;/li&gt;
  &lt;li&gt;1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？&lt;/li&gt;
  &lt;li&gt;大量の課題に面したとき、どう行動するか？&lt;/li&gt;
  &lt;li&gt;マインドマップで可視化して、システム思考的に考える&lt;/li&gt;
  &lt;li&gt;関係ないと思われた課題がつながる例とは？&lt;/li&gt;
  &lt;li&gt;組織開発(Organization Development)とは何か？&lt;/li&gt;
  &lt;li&gt;Developmentにある発展という意味&lt;/li&gt;
  &lt;li&gt;30人以上の意識をあわせにいくときの方法&lt;/li&gt;
  &lt;li&gt;対立をなくすのではなく、なぜそう考えたかという起点を考える&lt;/li&gt;
  &lt;li&gt;相手が自分と同じではない、また自分と同じ人間であることを認識する&lt;/li&gt;
  &lt;li&gt;無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく&lt;/li&gt;
  &lt;li&gt;何を考えているのか、何に困っているのかを共有するようなファシリテーション&lt;/li&gt;
  &lt;li&gt;未来を良くするために、自分が置かれている地点をメタ認知する&lt;/li&gt;
  &lt;li&gt;職能で自律して進めてもらうようなアプローチ&lt;/li&gt;
  &lt;li&gt;ゆのんさんにとってコミュニティとは？&lt;/li&gt;
  &lt;li&gt;コミュニティから一番得るのは活力&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/"&gt;Reginal Scrum Gathering Tokyo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる&lt;/li&gt;
  &lt;li&gt;ピープルマネジメントのネタは人に話しにくいこともある&lt;/li&gt;
  &lt;li&gt;心のNDA&lt;/li&gt;
  &lt;li&gt;マネージャ自身のバイアスを他者と会話することで見つける&lt;/li&gt;
  &lt;li&gt;オンライン勉強会は参加が簡単、出席率も変わる&lt;/li&gt;
  &lt;li&gt;https://game.aktsk.jp/&lt;/li&gt;
  &lt;li&gt;https://voice.aktsk.jp/&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>38. 良い組織を作るために w/ yunon_phys</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>39</podcast:episode>
    </item>
    <item>
      <title>37. MLOpsとは？どのようにMLOpsを実装しているか？ w/ kenta_sato3</title>
      <link>https://fukabori.fm/episode/37</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;MLOpsとは何か？&lt;/li&gt;
  &lt;li&gt;MLOpsの定義&lt;/li&gt;
  &lt;li&gt;MLのおけるモデルとは何か？&lt;/li&gt;
  &lt;li&gt;MLOpsで解決する課題とは？&lt;/li&gt;
  &lt;li&gt;CACE / Changing Anything Changes Everything&lt;/li&gt;
  &lt;li&gt;学習に使ったデータ管理の難しさ&lt;/li&gt;
  &lt;li&gt;メタ情報だけのバージョン管理というプラクティス&lt;/li&gt;
  &lt;li&gt;MLに必要なパイプラインを回すのは大変&lt;/li&gt;
  &lt;li&gt;ML Superhero、MLからインフラ構築まですべて担う人&lt;/li&gt;
  &lt;li&gt;Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/mlops/"&gt;BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MLOps取り組み前のアーキテクチャの課題とは？&lt;/li&gt;
  &lt;li&gt;温かみのある手動Opsの自動化&lt;/li&gt;
  &lt;li&gt;AWS CodeBuildの権限周りの楽さ&lt;/li&gt;
  &lt;li&gt;ワークフローが見えにくい課題をワークフローエンジンで解決する&lt;/li&gt;
  &lt;li&gt;AWS Step Functions と AWS Batch の活用&lt;/li&gt;
  &lt;li&gt;今後のMLOpsの野望&lt;/li&gt;
  &lt;li&gt;モデルのパフォーマンスを決める上流データバリデーション&lt;/li&gt;
  &lt;li&gt;学習のパイプラインの整理、その目指すべきところは？&lt;/li&gt;
  &lt;li&gt;汎用言語モデルをGoogle TPUでの開発&lt;/li&gt;
  &lt;li&gt;MLOpsにどのような気持ちで望んでいるか？&lt;/li&gt;
  &lt;li&gt;ペインをどうやって発見しているか？&lt;/li&gt;
  &lt;li&gt;推測するな、計測せよ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://aws.amazon.com/jp/builders-flash/202007/bokete-2/"&gt;電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/"&gt;Stockmark Tech Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/stockmark"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/37</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nndq0kvnhb0s26260w.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 07 Aug 2020 09:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nndq0kvnhb0s26260w.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4014/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:39:07</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;MLOpsとは何か？&lt;/li&gt;
  &lt;li&gt;MLOpsの定義&lt;/li&gt;
  &lt;li&gt;MLのおけるモデルとは何か？&lt;/li&gt;
  &lt;li&gt;MLOpsで解決する課題とは？&lt;/li&gt;
  &lt;li&gt;CACE / Changing Anything Changes Everything&lt;/li&gt;
  &lt;li&gt;学習に使ったデータ管理の難しさ&lt;/li&gt;
  &lt;li&gt;メタ情報だけのバージョン管理というプラクティス&lt;/li&gt;
  &lt;li&gt;MLに必要なパイプラインを回すのは大変&lt;/li&gt;
  &lt;li&gt;ML Superhero、MLからインフラ構築まですべて担う人&lt;/li&gt;
  &lt;li&gt;Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/mlops/"&gt;BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MLOps取り組み前のアーキテクチャの課題とは？&lt;/li&gt;
  &lt;li&gt;温かみのある手動Opsの自動化&lt;/li&gt;
  &lt;li&gt;AWS CodeBuildの権限周りの楽さ&lt;/li&gt;
  &lt;li&gt;ワークフローが見えにくい課題をワークフローエンジンで解決する&lt;/li&gt;
  &lt;li&gt;AWS Step Functions と AWS Batch の活用&lt;/li&gt;
  &lt;li&gt;今後のMLOpsの野望&lt;/li&gt;
  &lt;li&gt;モデルのパフォーマンスを決める上流データバリデーション&lt;/li&gt;
  &lt;li&gt;学習のパイプラインの整理、その目指すべきところは？&lt;/li&gt;
  &lt;li&gt;汎用言語モデルをGoogle TPUでの開発&lt;/li&gt;
  &lt;li&gt;MLOpsにどのような気持ちで望んでいるか？&lt;/li&gt;
  &lt;li&gt;ペインをどうやって発見しているか？&lt;/li&gt;
  &lt;li&gt;推測するな、計測せよ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://aws.amazon.com/jp/builders-flash/202007/bokete-2/"&gt;電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/"&gt;Stockmark Tech Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/stockmark"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;MLOpsとは何か？&lt;/li&gt;
  &lt;li&gt;MLOpsの定義&lt;/li&gt;
  &lt;li&gt;MLのおけるモデルとは何か？&lt;/li&gt;
  &lt;li&gt;MLOpsで解決する課題とは？&lt;/li&gt;
  &lt;li&gt;CACE / Changing Anything Changes Everything&lt;/li&gt;
  &lt;li&gt;学習に使ったデータ管理の難しさ&lt;/li&gt;
  &lt;li&gt;メタ情報だけのバージョン管理というプラクティス&lt;/li&gt;
  &lt;li&gt;MLに必要なパイプラインを回すのは大変&lt;/li&gt;
  &lt;li&gt;ML Superhero、MLからインフラ構築まですべて担う人&lt;/li&gt;
  &lt;li&gt;Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/mlops/"&gt;BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MLOps取り組み前のアーキテクチャの課題とは？&lt;/li&gt;
  &lt;li&gt;温かみのある手動Opsの自動化&lt;/li&gt;
  &lt;li&gt;AWS CodeBuildの権限周りの楽さ&lt;/li&gt;
  &lt;li&gt;ワークフローが見えにくい課題をワークフローエンジンで解決する&lt;/li&gt;
  &lt;li&gt;AWS Step Functions と AWS Batch の活用&lt;/li&gt;
  &lt;li&gt;今後のMLOpsの野望&lt;/li&gt;
  &lt;li&gt;モデルのパフォーマンスを決める上流データバリデーション&lt;/li&gt;
  &lt;li&gt;学習のパイプラインの整理、その目指すべきところは？&lt;/li&gt;
  &lt;li&gt;汎用言語モデルをGoogle TPUでの開発&lt;/li&gt;
  &lt;li&gt;MLOpsにどのような気持ちで望んでいるか？&lt;/li&gt;
  &lt;li&gt;ペインをどうやって発見しているか？&lt;/li&gt;
  &lt;li&gt;推測するな、計測せよ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://aws.amazon.com/jp/builders-flash/202007/bokete-2/"&gt;電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/"&gt;Stockmark Tech Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/stockmark"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>37. MLOpsとは？どのようにMLOpsを実装しているか？ w/ kenta_sato3</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>38</podcast:episode>
    </item>
    <item>
      <title>36. [後編] You have commit bit! w/ songmu</title>
      <link>https://fukabori.fm/episode/36</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;OSSをどのように読むか？&lt;/li&gt;
  &lt;li&gt;利用するOSSをどうやって選定していくか？&lt;/li&gt;
  &lt;li&gt;協調できるかどうか、という選定基準&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-03-18-ecspresso.html"&gt;ecs-deployからecspressoに乗り換えた&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi"&gt;go-katsubushi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi/pull/40"&gt;implement STAT via binary protocol &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;そもそも、なぜ採番する必要があるのか？&lt;/li&gt;
  &lt;li&gt;Snowflakeの意味が複数ある&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://yapcjapan.org/2020kyoto/timetable.html#/detail/21"&gt;OSS貢献を小さく始めて技術力を高め、大きく花開かせる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GitHubはSoftware Engineerのpixiv&lt;/li&gt;
  &lt;li&gt;OSSの引き継ぎ&lt;/li&gt;
  &lt;li&gt;0-&amp;gt;1よりも1-&amp;gt;10のが得意になった原点&lt;/li&gt;
  &lt;li&gt;OSSの引き継ぎを自分から提言する&lt;/li&gt;
  &lt;li&gt;OSSのメンテは具体的には何をしている？&lt;/li&gt;
  &lt;li&gt;OSSを引き継いだ結果、どう成長したか？&lt;/li&gt;
  &lt;li&gt;コードの個性&lt;/li&gt;
  &lt;li&gt;どうやってOSSへコントリビュートしやすくしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/x-motemen/ghq"&gt;ghq&lt;/a&gt;ですぐ見つけること&lt;/li&gt;
  &lt;li&gt;最新のバージョンを使うこと&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/renovatebot/renovate"&gt;renovate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dependabot.com/"&gt;dependabot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pull Requestを送る際の心構えとは？&lt;/li&gt;
  &lt;li&gt;Pull Requestを放置されても気にしない&lt;/li&gt;
  &lt;li&gt;OSSを他者へ引き継ぐ場合に何を考えているか？&lt;/li&gt;
  &lt;li&gt;Songmuさんの考えるCTOの役割とは？&lt;/li&gt;
  &lt;li&gt;プロダクトセントリックとは？何を意識するか？&lt;/li&gt;
  &lt;li&gt;広告塔の役割として何をするか？&lt;/li&gt;
  &lt;li&gt;チームのパフォーマンスを最大化するために何をするか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.song.mu/entry/startup-manifest"&gt;スタートアップマニフェスト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏&lt;/li&gt;
  &lt;li&gt;生み出せることに敬意を払って、コミュニケーションをとる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nature.global/jp/nature-remo-3"&gt;Nature Remo 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nature.global/jp/careers"&gt;Nature株式会社 採用情報&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://leanpub.com/ghq-handbook"&gt;ghq handbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/36</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nnwf4j9q2dp22pm48q.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 31 Jul 2020 13:20:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nnwf4j9q2dp22pm48q.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4013/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:47:24</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;OSSをどのように読むか？&lt;/li&gt;
  &lt;li&gt;利用するOSSをどうやって選定していくか？&lt;/li&gt;
  &lt;li&gt;協調できるかどうか、という選定基準&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-03-18-ecspresso.html"&gt;ecs-deployからecspressoに乗り換えた&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi"&gt;go-katsubushi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi/pull/40"&gt;implement STAT via binary protocol &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;そもそも、なぜ採番する必要があるのか？&lt;/li&gt;
  &lt;li&gt;Snowflakeの意味が複数ある&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://yapcjapan.org/2020kyoto/timetable.html#/detail/21"&gt;OSS貢献を小さく始めて技術力を高め、大きく花開かせる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GitHubはSoftware Engineerのpixiv&lt;/li&gt;
  &lt;li&gt;OSSの引き継ぎ&lt;/li&gt;
  &lt;li&gt;0-&amp;gt;1よりも1-&amp;gt;10のが得意になった原点&lt;/li&gt;
  &lt;li&gt;OSSの引き継ぎを自分から提言する&lt;/li&gt;
  &lt;li&gt;OSSのメンテは具体的には何をしている？&lt;/li&gt;
  &lt;li&gt;OSSを引き継いだ結果、どう成長したか？&lt;/li&gt;
  &lt;li&gt;コードの個性&lt;/li&gt;
  &lt;li&gt;どうやってOSSへコントリビュートしやすくしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/x-motemen/ghq"&gt;ghq&lt;/a&gt;ですぐ見つけること&lt;/li&gt;
  &lt;li&gt;最新のバージョンを使うこと&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/renovatebot/renovate"&gt;renovate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dependabot.com/"&gt;dependabot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pull Requestを送る際の心構えとは？&lt;/li&gt;
  &lt;li&gt;Pull Requestを放置されても気にしない&lt;/li&gt;
  &lt;li&gt;OSSを他者へ引き継ぐ場合に何を考えているか？&lt;/li&gt;
  &lt;li&gt;Songmuさんの考えるCTOの役割とは？&lt;/li&gt;
  &lt;li&gt;プロダクトセントリックとは？何を意識するか？&lt;/li&gt;
  &lt;li&gt;広告塔の役割として何をするか？&lt;/li&gt;
  &lt;li&gt;チームのパフォーマンスを最大化するために何をするか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.song.mu/entry/startup-manifest"&gt;スタートアップマニフェスト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏&lt;/li&gt;
  &lt;li&gt;生み出せることに敬意を払って、コミュニケーションをとる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nature.global/jp/nature-remo-3"&gt;Nature Remo 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nature.global/jp/careers"&gt;Nature株式会社 採用情報&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://leanpub.com/ghq-handbook"&gt;ghq handbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;OSSをどのように読むか？&lt;/li&gt;
  &lt;li&gt;利用するOSSをどうやって選定していくか？&lt;/li&gt;
  &lt;li&gt;協調できるかどうか、という選定基準&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-03-18-ecspresso.html"&gt;ecs-deployからecspressoに乗り換えた&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi"&gt;go-katsubushi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi/pull/40"&gt;implement STAT via binary protocol &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;そもそも、なぜ採番する必要があるのか？&lt;/li&gt;
  &lt;li&gt;Snowflakeの意味が複数ある&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://yapcjapan.org/2020kyoto/timetable.html#/detail/21"&gt;OSS貢献を小さく始めて技術力を高め、大きく花開かせる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GitHubはSoftware Engineerのpixiv&lt;/li&gt;
  &lt;li&gt;OSSの引き継ぎ&lt;/li&gt;
  &lt;li&gt;0-&amp;gt;1よりも1-&amp;gt;10のが得意になった原点&lt;/li&gt;
  &lt;li&gt;OSSの引き継ぎを自分から提言する&lt;/li&gt;
  &lt;li&gt;OSSのメンテは具体的には何をしている？&lt;/li&gt;
  &lt;li&gt;OSSを引き継いだ結果、どう成長したか？&lt;/li&gt;
  &lt;li&gt;コードの個性&lt;/li&gt;
  &lt;li&gt;どうやってOSSへコントリビュートしやすくしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/x-motemen/ghq"&gt;ghq&lt;/a&gt;ですぐ見つけること&lt;/li&gt;
  &lt;li&gt;最新のバージョンを使うこと&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/renovatebot/renovate"&gt;renovate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dependabot.com/"&gt;dependabot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pull Requestを送る際の心構えとは？&lt;/li&gt;
  &lt;li&gt;Pull Requestを放置されても気にしない&lt;/li&gt;
  &lt;li&gt;OSSを他者へ引き継ぐ場合に何を考えているか？&lt;/li&gt;
  &lt;li&gt;Songmuさんの考えるCTOの役割とは？&lt;/li&gt;
  &lt;li&gt;プロダクトセントリックとは？何を意識するか？&lt;/li&gt;
  &lt;li&gt;広告塔の役割として何をするか？&lt;/li&gt;
  &lt;li&gt;チームのパフォーマンスを最大化するために何をするか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.song.mu/entry/startup-manifest"&gt;スタートアップマニフェスト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏&lt;/li&gt;
  &lt;li&gt;生み出せることに敬意を払って、コミュニケーションをとる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nature.global/jp/nature-remo-3"&gt;Nature Remo 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nature.global/jp/careers"&gt;Nature株式会社 採用情報&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://leanpub.com/ghq-handbook"&gt;ghq handbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>36. [後編] You have commit bit! w/ songmu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>37</podcast:episode>
    </item>
    <item>
      <title>35. [前編] Nature Remoから学ぶシステムアーキテクチャと開発プロセス w/ songmu</title>
      <link>https://fukabori.fm/episode/35</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/songmu/inside-nature-remo"&gt;Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nature Remoとは何か？&lt;/li&gt;
  &lt;li&gt;Nature Remoのアーキテクチャとは&lt;/li&gt;
  &lt;li&gt;Redis Pub/Sub&lt;/li&gt;
  &lt;li&gt;Timer処理をどのように実装するか？&lt;/li&gt;
  &lt;li&gt;ElastiCache Redisが将来的にボトルネックになる可能性&lt;/li&gt;
  &lt;li&gt;Redisの分割はどのような方式とするか？&lt;/li&gt;
  &lt;li&gt;SNSでよくあるID分割による弊害（お化けユーザなど）&lt;/li&gt;
  &lt;li&gt;DDoSに対する防御は？&lt;/li&gt;
  &lt;li&gt;WebSocketを受けるWorkerのCPUはサチらないの？&lt;/li&gt;
  &lt;li&gt;GolangのWebSocket実装が優秀&lt;/li&gt;
  &lt;li&gt;接続先解決の方式はどうするか？&lt;/li&gt;
  &lt;li&gt;ConsulからALBへの移行&lt;/li&gt;
  &lt;li&gt;ALBからWorkerへの接続はTLSを解いている？&lt;/li&gt;
  &lt;li&gt;Streamはどうやってスケールさせるか？&lt;/li&gt;
  &lt;li&gt;積み上げマイグレーションは何がイマイチなのか？&lt;/li&gt;
  &lt;li&gt;手続き型 vs 宣言型&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/schemalex/schemalex"&gt;schemalex&lt;/a&gt;や&lt;a href="https://github.com/k0kubun/sqldef"&gt;sqldef&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nature Remoは何人ぐらいで開発している？&lt;/li&gt;
  &lt;li&gt;Songmuさんはどうやって採用している？&lt;/li&gt;
  &lt;li&gt;採用時にどうやってスキル的に十分である、と判断するのか？&lt;/li&gt;
  &lt;li&gt;Nature RemoにおけるGitHubのブランチとデプロイ戦略&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/x-motemen/git-pr-release"&gt;git-pr-release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html"&gt;CircleCIでgit-pr-releaseする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;デプロイ後の障害をどうやって気づくか？&lt;/li&gt;
  &lt;li&gt;ALBにおけるReal IPの解決の課題&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-04-24-realip.html"&gt;GoのWebアプリでクライアントIPを検出するrealipモジュール&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nginxのngx_http_realip_module&lt;/li&gt;
  &lt;li&gt;全員が自分たちのプロダクトのユーザである&lt;/li&gt;
  &lt;li&gt;ビジネス要求の管理はどうしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.zenhub.com/"&gt;ZenHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オフィス移転とリモートワーク&lt;/li&gt;
  &lt;li&gt;どうやって見積もりする？&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/35</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nn4hrntnxgt20b06e1.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 29 Jul 2020 16:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nn4hrntnxgt20b06e1.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4012/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:45:41</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/songmu/inside-nature-remo"&gt;Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nature Remoとは何か？&lt;/li&gt;
  &lt;li&gt;Nature Remoのアーキテクチャとは&lt;/li&gt;
  &lt;li&gt;Redis Pub/Sub&lt;/li&gt;
  &lt;li&gt;Timer処理をどのように実装するか？&lt;/li&gt;
  &lt;li&gt;ElastiCache Redisが将来的にボトルネックになる可能性&lt;/li&gt;
  &lt;li&gt;Redisの分割はどのような方式とするか？&lt;/li&gt;
  &lt;li&gt;SNSでよくあるID分割による弊害（お化けユーザなど）&lt;/li&gt;
  &lt;li&gt;DDoSに対する防御は？&lt;/li&gt;
  &lt;li&gt;WebSocketを受けるWorkerのCPUはサチらないの？&lt;/li&gt;
  &lt;li&gt;GolangのWebSocket実装が優秀&lt;/li&gt;
  &lt;li&gt;接続先解決の方式はどうするか？&lt;/li&gt;
  &lt;li&gt;ConsulからALBへの移行&lt;/li&gt;
  &lt;li&gt;ALBからWorkerへの接続はTLSを解いている？&lt;/li&gt;
  &lt;li&gt;Streamはどうやってスケールさせるか？&lt;/li&gt;
  &lt;li&gt;積み上げマイグレーションは何がイマイチなのか？&lt;/li&gt;
  &lt;li&gt;手続き型 vs 宣言型&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/schemalex/schemalex"&gt;schemalex&lt;/a&gt;や&lt;a href="https://github.com/k0kubun/sqldef"&gt;sqldef&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nature Remoは何人ぐらいで開発している？&lt;/li&gt;
  &lt;li&gt;Songmuさんはどうやって採用している？&lt;/li&gt;
  &lt;li&gt;採用時にどうやってスキル的に十分である、と判断するのか？&lt;/li&gt;
  &lt;li&gt;Nature RemoにおけるGitHubのブランチとデプロイ戦略&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/x-motemen/git-pr-release"&gt;git-pr-release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html"&gt;CircleCIでgit-pr-releaseする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;デプロイ後の障害をどうやって気づくか？&lt;/li&gt;
  &lt;li&gt;ALBにおけるReal IPの解決の課題&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-04-24-realip.html"&gt;GoのWebアプリでクライアントIPを検出するrealipモジュール&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nginxのngx_http_realip_module&lt;/li&gt;
  &lt;li&gt;全員が自分たちのプロダクトのユーザである&lt;/li&gt;
  &lt;li&gt;ビジネス要求の管理はどうしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.zenhub.com/"&gt;ZenHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オフィス移転とリモートワーク&lt;/li&gt;
  &lt;li&gt;どうやって見積もりする？&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/songmu/inside-nature-remo"&gt;Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nature Remoとは何か？&lt;/li&gt;
  &lt;li&gt;Nature Remoのアーキテクチャとは&lt;/li&gt;
  &lt;li&gt;Redis Pub/Sub&lt;/li&gt;
  &lt;li&gt;Timer処理をどのように実装するか？&lt;/li&gt;
  &lt;li&gt;ElastiCache Redisが将来的にボトルネックになる可能性&lt;/li&gt;
  &lt;li&gt;Redisの分割はどのような方式とするか？&lt;/li&gt;
  &lt;li&gt;SNSでよくあるID分割による弊害（お化けユーザなど）&lt;/li&gt;
  &lt;li&gt;DDoSに対する防御は？&lt;/li&gt;
  &lt;li&gt;WebSocketを受けるWorkerのCPUはサチらないの？&lt;/li&gt;
  &lt;li&gt;GolangのWebSocket実装が優秀&lt;/li&gt;
  &lt;li&gt;接続先解決の方式はどうするか？&lt;/li&gt;
  &lt;li&gt;ConsulからALBへの移行&lt;/li&gt;
  &lt;li&gt;ALBからWorkerへの接続はTLSを解いている？&lt;/li&gt;
  &lt;li&gt;Streamはどうやってスケールさせるか？&lt;/li&gt;
  &lt;li&gt;積み上げマイグレーションは何がイマイチなのか？&lt;/li&gt;
  &lt;li&gt;手続き型 vs 宣言型&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/schemalex/schemalex"&gt;schemalex&lt;/a&gt;や&lt;a href="https://github.com/k0kubun/sqldef"&gt;sqldef&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nature Remoは何人ぐらいで開発している？&lt;/li&gt;
  &lt;li&gt;Songmuさんはどうやって採用している？&lt;/li&gt;
  &lt;li&gt;採用時にどうやってスキル的に十分である、と判断するのか？&lt;/li&gt;
  &lt;li&gt;Nature RemoにおけるGitHubのブランチとデプロイ戦略&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/x-motemen/git-pr-release"&gt;git-pr-release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html"&gt;CircleCIでgit-pr-releaseする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;デプロイ後の障害をどうやって気づくか？&lt;/li&gt;
  &lt;li&gt;ALBにおけるReal IPの解決の課題&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-04-24-realip.html"&gt;GoのWebアプリでクライアントIPを検出するrealipモジュール&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nginxのngx_http_realip_module&lt;/li&gt;
  &lt;li&gt;全員が自分たちのプロダクトのユーザである&lt;/li&gt;
  &lt;li&gt;ビジネス要求の管理はどうしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.zenhub.com/"&gt;ZenHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オフィス移転とリモートワーク&lt;/li&gt;
  &lt;li&gt;どうやって見積もりする？&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>35. [前編] Nature Remoから学ぶシステムアーキテクチャと開発プロセス w/ songmu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>36</podcast:episode>
    </item>
    <item>
      <title>34. NewSQLとは w/ tzkb</title>
      <link>https://fukabori.fm/episode/34</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2000年初頭のデータストアは何が主流だったのか？&lt;/li&gt;
  &lt;li&gt;OLTPとDWH&lt;/li&gt;
  &lt;li&gt;データベースから見るとReadのスケールアウトは難しくない&lt;/li&gt;
  &lt;li&gt;Web系で難しいのはWriteのスケールアウト&lt;/li&gt;
  &lt;li&gt;RDBのReadのスケールアウト方法とは？&lt;/li&gt;
  &lt;li&gt;Web + RDB + Cache のアーキテクチャの辛い点は？&lt;/li&gt;
  &lt;li&gt;UniverseとMultiverse&lt;/li&gt;
  &lt;li&gt;Oracle Exadata&lt;/li&gt;
  &lt;li&gt;RDBにおける全文検索&lt;/li&gt;
  &lt;li&gt;NewSQLとは何か？&lt;/li&gt;
  &lt;li&gt;NoSQLとは何を指すか？&lt;/li&gt;
  &lt;li&gt;トランザクション処理はなぜ難しいのか？&lt;/li&gt;
  &lt;li&gt;マルチマスタの難しさ&lt;/li&gt;
  &lt;li&gt;Google Cloud Spannerについて&lt;/li&gt;
  &lt;li&gt;金の弾丸&lt;/li&gt;
  &lt;li&gt;YugabyteDB/CockroachDB/TiDB&lt;/li&gt;
  &lt;li&gt;YugabyteDBの特徴は？&lt;/li&gt;
  &lt;li&gt;PostgreSQL互換とMySQL互換という売り&lt;/li&gt;
  &lt;li&gt;NewSQLの技術要素は？&lt;/li&gt;
  &lt;li&gt;NewSQLのレプリケーションはどうやるか？&lt;/li&gt;
  &lt;li&gt;Raftとは？&lt;/li&gt;
  &lt;li&gt;DBにおけるShardingとは何か？&lt;/li&gt;
  &lt;li&gt;Partioningとは何か？&lt;/li&gt;
  &lt;li&gt;RDBのデータ構造は何を利用しているか？&lt;/li&gt;
  &lt;li&gt;B+TreeのRead/Writeはどうやるか？&lt;/li&gt;
  &lt;li&gt;B+Treeの計算量は？&lt;/li&gt;
  &lt;li&gt;NewSQLのデータ構造は？&lt;/li&gt;
  &lt;li&gt;LSM Tree(Log Structured Merge Tree)とは？&lt;/li&gt;
  &lt;li&gt;B+Treeのメリット・デメリット&lt;/li&gt;
  &lt;li&gt;LSM Treeのメリット・デメリット&lt;/li&gt;
  &lt;li&gt;DBに難しいのは古いバージョンのデータを取るとき&lt;/li&gt;
  &lt;li&gt;MVCC(Multi Version Concurrency Control)とは？&lt;/li&gt;
  &lt;li&gt;LSM Treeで古いデータをどうやって探すのか？&lt;/li&gt;
  &lt;li&gt;Bloom Filter&lt;/li&gt;
  &lt;li&gt;Facebook製のRocksDB&lt;/li&gt;
  &lt;li&gt;分散トランザクションをどう実現するのか？&lt;/li&gt;
  &lt;li&gt;DBにおける分離レベルとは？&lt;/li&gt;
  &lt;li&gt;Read Commited/Repeatable Read/Serializable&lt;/li&gt;
  &lt;li&gt;SpannerのExternal Consistency&lt;/li&gt;
  &lt;li&gt;AWS Auroraの裏側の作りは？&lt;/li&gt;
  &lt;li&gt;OracleのRAC(Real Application Cluster)とは？&lt;/li&gt;
  &lt;li&gt;令和時代のアプリケーション開発者のデータストア選定について&lt;/li&gt;
  &lt;li&gt;MySQLとPostgrSQLの使い分けは？&lt;/li&gt;
  &lt;li&gt;どうやってDBについて学習するか？&lt;/li&gt;
  &lt;li&gt;CAPの定理をあえて使う必要はない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://databaseinternals.connpass.com/"&gt;Database Internals 輪読会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/34</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nnqcgjheh0hnepz99b.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Thu, 02 Jul 2020 18:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nnqcgjheh0hnepz99b.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4011/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:59:21</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2000年初頭のデータストアは何が主流だったのか？&lt;/li&gt;
  &lt;li&gt;OLTPとDWH&lt;/li&gt;
  &lt;li&gt;データベースから見るとReadのスケールアウトは難しくない&lt;/li&gt;
  &lt;li&gt;Web系で難しいのはWriteのスケールアウト&lt;/li&gt;
  &lt;li&gt;RDBのReadのスケールアウト方法とは？&lt;/li&gt;
  &lt;li&gt;Web + RDB + Cache のアーキテクチャの辛い点は？&lt;/li&gt;
  &lt;li&gt;UniverseとMultiverse&lt;/li&gt;
  &lt;li&gt;Oracle Exadata&lt;/li&gt;
  &lt;li&gt;RDBにおける全文検索&lt;/li&gt;
  &lt;li&gt;NewSQLとは何か？&lt;/li&gt;
  &lt;li&gt;NoSQLとは何を指すか？&lt;/li&gt;
  &lt;li&gt;トランザクション処理はなぜ難しいのか？&lt;/li&gt;
  &lt;li&gt;マルチマスタの難しさ&lt;/li&gt;
  &lt;li&gt;Google Cloud Spannerについて&lt;/li&gt;
  &lt;li&gt;金の弾丸&lt;/li&gt;
  &lt;li&gt;YugabyteDB/CockroachDB/TiDB&lt;/li&gt;
  &lt;li&gt;YugabyteDBの特徴は？&lt;/li&gt;
  &lt;li&gt;PostgreSQL互換とMySQL互換という売り&lt;/li&gt;
  &lt;li&gt;NewSQLの技術要素は？&lt;/li&gt;
  &lt;li&gt;NewSQLのレプリケーションはどうやるか？&lt;/li&gt;
  &lt;li&gt;Raftとは？&lt;/li&gt;
  &lt;li&gt;DBにおけるShardingとは何か？&lt;/li&gt;
  &lt;li&gt;Partioningとは何か？&lt;/li&gt;
  &lt;li&gt;RDBのデータ構造は何を利用しているか？&lt;/li&gt;
  &lt;li&gt;B+TreeのRead/Writeはどうやるか？&lt;/li&gt;
  &lt;li&gt;B+Treeの計算量は？&lt;/li&gt;
  &lt;li&gt;NewSQLのデータ構造は？&lt;/li&gt;
  &lt;li&gt;LSM Tree(Log Structured Merge Tree)とは？&lt;/li&gt;
  &lt;li&gt;B+Treeのメリット・デメリット&lt;/li&gt;
  &lt;li&gt;LSM Treeのメリット・デメリット&lt;/li&gt;
  &lt;li&gt;DBに難しいのは古いバージョンのデータを取るとき&lt;/li&gt;
  &lt;li&gt;MVCC(Multi Version Concurrency Control)とは？&lt;/li&gt;
  &lt;li&gt;LSM Treeで古いデータをどうやって探すのか？&lt;/li&gt;
  &lt;li&gt;Bloom Filter&lt;/li&gt;
  &lt;li&gt;Facebook製のRocksDB&lt;/li&gt;
  &lt;li&gt;分散トランザクションをどう実現するのか？&lt;/li&gt;
  &lt;li&gt;DBにおける分離レベルとは？&lt;/li&gt;
  &lt;li&gt;Read Commited/Repeatable Read/Serializable&lt;/li&gt;
  &lt;li&gt;SpannerのExternal Consistency&lt;/li&gt;
  &lt;li&gt;AWS Auroraの裏側の作りは？&lt;/li&gt;
  &lt;li&gt;OracleのRAC(Real Application Cluster)とは？&lt;/li&gt;
  &lt;li&gt;令和時代のアプリケーション開発者のデータストア選定について&lt;/li&gt;
  &lt;li&gt;MySQLとPostgrSQLの使い分けは？&lt;/li&gt;
  &lt;li&gt;どうやってDBについて学習するか？&lt;/li&gt;
  &lt;li&gt;CAPの定理をあえて使う必要はない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://databaseinternals.connpass.com/"&gt;Database Internals 輪読会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2000年初頭のデータストアは何が主流だったのか？&lt;/li&gt;
  &lt;li&gt;OLTPとDWH&lt;/li&gt;
  &lt;li&gt;データベースから見るとReadのスケールアウトは難しくない&lt;/li&gt;
  &lt;li&gt;Web系で難しいのはWriteのスケールアウト&lt;/li&gt;
  &lt;li&gt;RDBのReadのスケールアウト方法とは？&lt;/li&gt;
  &lt;li&gt;Web + RDB + Cache のアーキテクチャの辛い点は？&lt;/li&gt;
  &lt;li&gt;UniverseとMultiverse&lt;/li&gt;
  &lt;li&gt;Oracle Exadata&lt;/li&gt;
  &lt;li&gt;RDBにおける全文検索&lt;/li&gt;
  &lt;li&gt;NewSQLとは何か？&lt;/li&gt;
  &lt;li&gt;NoSQLとは何を指すか？&lt;/li&gt;
  &lt;li&gt;トランザクション処理はなぜ難しいのか？&lt;/li&gt;
  &lt;li&gt;マルチマスタの難しさ&lt;/li&gt;
  &lt;li&gt;Google Cloud Spannerについて&lt;/li&gt;
  &lt;li&gt;金の弾丸&lt;/li&gt;
  &lt;li&gt;YugabyteDB/CockroachDB/TiDB&lt;/li&gt;
  &lt;li&gt;YugabyteDBの特徴は？&lt;/li&gt;
  &lt;li&gt;PostgreSQL互換とMySQL互換という売り&lt;/li&gt;
  &lt;li&gt;NewSQLの技術要素は？&lt;/li&gt;
  &lt;li&gt;NewSQLのレプリケーションはどうやるか？&lt;/li&gt;
  &lt;li&gt;Raftとは？&lt;/li&gt;
  &lt;li&gt;DBにおけるShardingとは何か？&lt;/li&gt;
  &lt;li&gt;Partioningとは何か？&lt;/li&gt;
  &lt;li&gt;RDBのデータ構造は何を利用しているか？&lt;/li&gt;
  &lt;li&gt;B+TreeのRead/Writeはどうやるか？&lt;/li&gt;
  &lt;li&gt;B+Treeの計算量は？&lt;/li&gt;
  &lt;li&gt;NewSQLのデータ構造は？&lt;/li&gt;
  &lt;li&gt;LSM Tree(Log Structured Merge Tree)とは？&lt;/li&gt;
  &lt;li&gt;B+Treeのメリット・デメリット&lt;/li&gt;
  &lt;li&gt;LSM Treeのメリット・デメリット&lt;/li&gt;
  &lt;li&gt;DBに難しいのは古いバージョンのデータを取るとき&lt;/li&gt;
  &lt;li&gt;MVCC(Multi Version Concurrency Control)とは？&lt;/li&gt;
  &lt;li&gt;LSM Treeで古いデータをどうやって探すのか？&lt;/li&gt;
  &lt;li&gt;Bloom Filter&lt;/li&gt;
  &lt;li&gt;Facebook製のRocksDB&lt;/li&gt;
  &lt;li&gt;分散トランザクションをどう実現するのか？&lt;/li&gt;
  &lt;li&gt;DBにおける分離レベルとは？&lt;/li&gt;
  &lt;li&gt;Read Commited/Repeatable Read/Serializable&lt;/li&gt;
  &lt;li&gt;SpannerのExternal Consistency&lt;/li&gt;
  &lt;li&gt;AWS Auroraの裏側の作りは？&lt;/li&gt;
  &lt;li&gt;OracleのRAC(Real Application Cluster)とは？&lt;/li&gt;
  &lt;li&gt;令和時代のアプリケーション開発者のデータストア選定について&lt;/li&gt;
  &lt;li&gt;MySQLとPostgrSQLの使い分けは？&lt;/li&gt;
  &lt;li&gt;どうやってDBについて学習するか？&lt;/li&gt;
  &lt;li&gt;CAPの定理をあえて使う必要はない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://databaseinternals.connpass.com/"&gt;Database Internals 輪読会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>34. NewSQLとは w/ tzkb</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>35</podcast:episode>
    </item>
    <item>
      <title>33. エンジニアの新卒採用事情 w/ tomoaki_mura</title>
      <link>https://fukabori.fm/episode/33</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;最近の新卒採用事情ってどんな感じ？&lt;/li&gt;
  &lt;li&gt;B3/M1であっても、5月時点でオファーを持っていることも&lt;/li&gt;
  &lt;li&gt;優秀な人材の低学年化&lt;/li&gt;
  &lt;li&gt;サマーインターンシップは増えている？&lt;/li&gt;
  &lt;li&gt;インターンシップで学生に刺さるコンテンツとは？&lt;/li&gt;
  &lt;li&gt;チーム開発形式のインターンシップが人気な理由とは？&lt;/li&gt;
  &lt;li&gt;ペアプロ、モブプロというコンテンツ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://athletix.run/events/bFPaKSbCE"&gt;先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スタートアップ、大企業などで、どこが人気か？&lt;/li&gt;
  &lt;li&gt;職種別選考とは何か？メリット・デメリットは？&lt;/li&gt;
  &lt;li&gt;人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？&lt;/li&gt;
  &lt;li&gt;エンジニアの開発実態・KPTを見に行くプラクティス&lt;/li&gt;
  &lt;li&gt;最初の「なんだこいつ」の違和感を乗り越える&lt;/li&gt;
  &lt;li&gt;職種別選考を進める上で、重要なポイントとは？&lt;/li&gt;
  &lt;li&gt;経営戦略から採用戦略まで一気通貫で筋をとおす&lt;/li&gt;
  &lt;li&gt;立場関係なくお互いを信じ合う&lt;/li&gt;
  &lt;li&gt;配属ガチャは依然としてまだ結構ある？なぜ起きるのか？&lt;/li&gt;
  &lt;li&gt;採用と育成をやる人は同じの方がいい？&lt;/li&gt;
  &lt;li&gt;効果的な新入社員研修とは？&lt;/li&gt;
  &lt;li&gt;能力を可視化した上で、グルーピングする&lt;/li&gt;
  &lt;li&gt;グループ分けしたあとの研修コンテンツは？&lt;/li&gt;
  &lt;li&gt;入社した後のケアとしての新入社員研修&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://givery.co.jp/services/track/"&gt;track&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://givery.co.jp/services/athletics/"&gt;athletics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hatenacorp.jp/intern2020"&gt;はてなインターン2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/33</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nmb6zbhyf2ykgspbks.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 07 Jun 2020 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nmb6zbhyf2ykgspbks.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4010/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:48:00</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;最近の新卒採用事情ってどんな感じ？&lt;/li&gt;
  &lt;li&gt;B3/M1であっても、5月時点でオファーを持っていることも&lt;/li&gt;
  &lt;li&gt;優秀な人材の低学年化&lt;/li&gt;
  &lt;li&gt;サマーインターンシップは増えている？&lt;/li&gt;
  &lt;li&gt;インターンシップで学生に刺さるコンテンツとは？&lt;/li&gt;
  &lt;li&gt;チーム開発形式のインターンシップが人気な理由とは？&lt;/li&gt;
  &lt;li&gt;ペアプロ、モブプロというコンテンツ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://athletix.run/events/bFPaKSbCE"&gt;先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スタートアップ、大企業などで、どこが人気か？&lt;/li&gt;
  &lt;li&gt;職種別選考とは何か？メリット・デメリットは？&lt;/li&gt;
  &lt;li&gt;人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？&lt;/li&gt;
  &lt;li&gt;エンジニアの開発実態・KPTを見に行くプラクティス&lt;/li&gt;
  &lt;li&gt;最初の「なんだこいつ」の違和感を乗り越える&lt;/li&gt;
  &lt;li&gt;職種別選考を進める上で、重要なポイントとは？&lt;/li&gt;
  &lt;li&gt;経営戦略から採用戦略まで一気通貫で筋をとおす&lt;/li&gt;
  &lt;li&gt;立場関係なくお互いを信じ合う&lt;/li&gt;
  &lt;li&gt;配属ガチャは依然としてまだ結構ある？なぜ起きるのか？&lt;/li&gt;
  &lt;li&gt;採用と育成をやる人は同じの方がいい？&lt;/li&gt;
  &lt;li&gt;効果的な新入社員研修とは？&lt;/li&gt;
  &lt;li&gt;能力を可視化した上で、グルーピングする&lt;/li&gt;
  &lt;li&gt;グループ分けしたあとの研修コンテンツは？&lt;/li&gt;
  &lt;li&gt;入社した後のケアとしての新入社員研修&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://givery.co.jp/services/track/"&gt;track&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://givery.co.jp/services/athletics/"&gt;athletics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hatenacorp.jp/intern2020"&gt;はてなインターン2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;最近の新卒採用事情ってどんな感じ？&lt;/li&gt;
  &lt;li&gt;B3/M1であっても、5月時点でオファーを持っていることも&lt;/li&gt;
  &lt;li&gt;優秀な人材の低学年化&lt;/li&gt;
  &lt;li&gt;サマーインターンシップは増えている？&lt;/li&gt;
  &lt;li&gt;インターンシップで学生に刺さるコンテンツとは？&lt;/li&gt;
  &lt;li&gt;チーム開発形式のインターンシップが人気な理由とは？&lt;/li&gt;
  &lt;li&gt;ペアプロ、モブプロというコンテンツ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://athletix.run/events/bFPaKSbCE"&gt;先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スタートアップ、大企業などで、どこが人気か？&lt;/li&gt;
  &lt;li&gt;職種別選考とは何か？メリット・デメリットは？&lt;/li&gt;
  &lt;li&gt;人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？&lt;/li&gt;
  &lt;li&gt;エンジニアの開発実態・KPTを見に行くプラクティス&lt;/li&gt;
  &lt;li&gt;最初の「なんだこいつ」の違和感を乗り越える&lt;/li&gt;
  &lt;li&gt;職種別選考を進める上で、重要なポイントとは？&lt;/li&gt;
  &lt;li&gt;経営戦略から採用戦略まで一気通貫で筋をとおす&lt;/li&gt;
  &lt;li&gt;立場関係なくお互いを信じ合う&lt;/li&gt;
  &lt;li&gt;配属ガチャは依然としてまだ結構ある？なぜ起きるのか？&lt;/li&gt;
  &lt;li&gt;採用と育成をやる人は同じの方がいい？&lt;/li&gt;
  &lt;li&gt;効果的な新入社員研修とは？&lt;/li&gt;
  &lt;li&gt;能力を可視化した上で、グルーピングする&lt;/li&gt;
  &lt;li&gt;グループ分けしたあとの研修コンテンツは？&lt;/li&gt;
  &lt;li&gt;入社した後のケアとしての新入社員研修&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://givery.co.jp/services/track/"&gt;track&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://givery.co.jp/services/athletics/"&gt;athletics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hatenacorp.jp/intern2020"&gt;はてなインターン2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>33. エンジニアの新卒採用事情 w/ tomoaki_mura</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>34</podcast:episode>
    </item>
    <item>
      <title>32. みんなでアジャイル w/ ryuzee</title>
      <link>https://fukabori.fm/episode/32</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873119090/"&gt;みんなでアジャイル&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;想定読者は？&lt;/li&gt;
  &lt;li&gt;アジャイルはなぜ重要なのか？&lt;/li&gt;
  &lt;li&gt;書籍を通して伝えているのは、顧客に価値を届けること&lt;/li&gt;
  &lt;li&gt;説教臭い&lt;/li&gt;
  &lt;li&gt;プラクティスよりも、前段にあるなぜアジャイルなのか、から始める&lt;/li&gt;
  &lt;li&gt;たくさん作るのではなく、成果を出しにいく&lt;/li&gt;
  &lt;li&gt;サクッと読めるわりにグサグサやる&lt;/li&gt;
  &lt;li&gt;自分たちの北極星とは何か？&lt;/li&gt;
  &lt;li&gt;自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない&lt;/li&gt;
  &lt;li&gt;北極星を見つけるためには、どうすればいいのか？&lt;/li&gt;
  &lt;li&gt;どのぐらいのレイヤ、スコープで北極星を探せばいいのか？&lt;/li&gt;
  &lt;li&gt;経営方針とチームミッションが一致していると周りの支援が得やすい&lt;/li&gt;
  &lt;li&gt;OKRという考え方&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit"&gt;みんなでアジャイル Playbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オンラインでのチームビルディングはどうしたら良いか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://simplearchitect.hatenablog.com/entry/2020/04/15/100449"&gt;マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;やっているのを見せるのが大事&lt;/li&gt;
  &lt;li&gt;分報から始まるQuick Call&lt;/li&gt;
  &lt;li&gt;制約があったほうが工夫、アイデアが生まれる&lt;/li&gt;
  &lt;li&gt;上手くいってないからフレームワークを探そうはダメ&lt;/li&gt;
  &lt;li&gt;アジャイルについて話すだけで、アジャイルになった気になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/ryuzee/status/1250547829702930434"&gt;必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;組織重力の3法則&lt;/li&gt;
  &lt;li&gt;第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける&lt;/li&gt;
  &lt;li&gt;なぜ、第1法則が生まれるのか？&lt;/li&gt;
  &lt;li&gt;第1法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;顧客から一番離れている人が意思決定していて良いのか？&lt;/li&gt;
  &lt;li&gt;社員全員がカスタマサポートのチャットに入る&lt;/li&gt;
  &lt;li&gt;第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する&lt;/li&gt;
  &lt;li&gt;チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある&lt;/li&gt;
  &lt;li&gt;第2法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;今やっている仕事を見える化する、仕事をオープンにする&lt;/li&gt;
  &lt;li&gt;早期から頻繁にコラボレーションするには楽なやり方が必要&lt;/li&gt;
  &lt;li&gt;そもそもコラボレーションしたいものを扱ってるのか？&lt;/li&gt;
  &lt;li&gt;なぜ顧客の声を早期に聴きに行くのが難しいのか？&lt;/li&gt;
  &lt;li&gt;第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない&lt;/li&gt;
  &lt;li&gt;なぜ第3法則が生まれるのか？&lt;/li&gt;
  &lt;li&gt;目標設定と評価が関係している&lt;/li&gt;
  &lt;li&gt;第3法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;スタート地点からどんなリスクがあるのか明らかにする&lt;/li&gt;
  &lt;li&gt;不確実性を計画に組み込む&lt;/li&gt;
  &lt;li&gt;進捗レポートで「問題ありません」というのはダメ&lt;/li&gt;
  &lt;li&gt;紙のレポートは残るので、安全に倒してしまう&lt;/li&gt;
  &lt;li&gt;タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる&lt;/li&gt;
  &lt;li&gt;組織変革の熱狂は長くても6ヶ月しか持たない&lt;/li&gt;
  &lt;li&gt;ryuzeeさんが訳していて、書籍の一番好きなところは何か？&lt;/li&gt;
  &lt;li&gt;アジャイル系開発手法は応用範囲が広い&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/32</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nkeddectd93mnajwg0.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 05 May 2020 13:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nkeddectd93mnajwg0.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4009/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:49:48</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873119090/"&gt;みんなでアジャイル&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;想定読者は？&lt;/li&gt;
  &lt;li&gt;アジャイルはなぜ重要なのか？&lt;/li&gt;
  &lt;li&gt;書籍を通して伝えているのは、顧客に価値を届けること&lt;/li&gt;
  &lt;li&gt;説教臭い&lt;/li&gt;
  &lt;li&gt;プラクティスよりも、前段にあるなぜアジャイルなのか、から始める&lt;/li&gt;
  &lt;li&gt;たくさん作るのではなく、成果を出しにいく&lt;/li&gt;
  &lt;li&gt;サクッと読めるわりにグサグサやる&lt;/li&gt;
  &lt;li&gt;自分たちの北極星とは何か？&lt;/li&gt;
  &lt;li&gt;自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない&lt;/li&gt;
  &lt;li&gt;北極星を見つけるためには、どうすればいいのか？&lt;/li&gt;
  &lt;li&gt;どのぐらいのレイヤ、スコープで北極星を探せばいいのか？&lt;/li&gt;
  &lt;li&gt;経営方針とチームミッションが一致していると周りの支援が得やすい&lt;/li&gt;
  &lt;li&gt;OKRという考え方&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit"&gt;みんなでアジャイル Playbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オンラインでのチームビルディングはどうしたら良いか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://simplearchitect.hatenablog.com/entry/2020/04/15/100449"&gt;マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;やっているのを見せるのが大事&lt;/li&gt;
  &lt;li&gt;分報から始まるQuick Call&lt;/li&gt;
  &lt;li&gt;制約があったほうが工夫、アイデアが生まれる&lt;/li&gt;
  &lt;li&gt;上手くいってないからフレームワークを探そうはダメ&lt;/li&gt;
  &lt;li&gt;アジャイルについて話すだけで、アジャイルになった気になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/ryuzee/status/1250547829702930434"&gt;必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;組織重力の3法則&lt;/li&gt;
  &lt;li&gt;第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける&lt;/li&gt;
  &lt;li&gt;なぜ、第1法則が生まれるのか？&lt;/li&gt;
  &lt;li&gt;第1法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;顧客から一番離れている人が意思決定していて良いのか？&lt;/li&gt;
  &lt;li&gt;社員全員がカスタマサポートのチャットに入る&lt;/li&gt;
  &lt;li&gt;第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する&lt;/li&gt;
  &lt;li&gt;チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある&lt;/li&gt;
  &lt;li&gt;第2法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;今やっている仕事を見える化する、仕事をオープンにする&lt;/li&gt;
  &lt;li&gt;早期から頻繁にコラボレーションするには楽なやり方が必要&lt;/li&gt;
  &lt;li&gt;そもそもコラボレーションしたいものを扱ってるのか？&lt;/li&gt;
  &lt;li&gt;なぜ顧客の声を早期に聴きに行くのが難しいのか？&lt;/li&gt;
  &lt;li&gt;第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない&lt;/li&gt;
  &lt;li&gt;なぜ第3法則が生まれるのか？&lt;/li&gt;
  &lt;li&gt;目標設定と評価が関係している&lt;/li&gt;
  &lt;li&gt;第3法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;スタート地点からどんなリスクがあるのか明らかにする&lt;/li&gt;
  &lt;li&gt;不確実性を計画に組み込む&lt;/li&gt;
  &lt;li&gt;進捗レポートで「問題ありません」というのはダメ&lt;/li&gt;
  &lt;li&gt;紙のレポートは残るので、安全に倒してしまう&lt;/li&gt;
  &lt;li&gt;タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる&lt;/li&gt;
  &lt;li&gt;組織変革の熱狂は長くても6ヶ月しか持たない&lt;/li&gt;
  &lt;li&gt;ryuzeeさんが訳していて、書籍の一番好きなところは何か？&lt;/li&gt;
  &lt;li&gt;アジャイル系開発手法は応用範囲が広い&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873119090/"&gt;みんなでアジャイル&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;想定読者は？&lt;/li&gt;
  &lt;li&gt;アジャイルはなぜ重要なのか？&lt;/li&gt;
  &lt;li&gt;書籍を通して伝えているのは、顧客に価値を届けること&lt;/li&gt;
  &lt;li&gt;説教臭い&lt;/li&gt;
  &lt;li&gt;プラクティスよりも、前段にあるなぜアジャイルなのか、から始める&lt;/li&gt;
  &lt;li&gt;たくさん作るのではなく、成果を出しにいく&lt;/li&gt;
  &lt;li&gt;サクッと読めるわりにグサグサやる&lt;/li&gt;
  &lt;li&gt;自分たちの北極星とは何か？&lt;/li&gt;
  &lt;li&gt;自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない&lt;/li&gt;
  &lt;li&gt;北極星を見つけるためには、どうすればいいのか？&lt;/li&gt;
  &lt;li&gt;どのぐらいのレイヤ、スコープで北極星を探せばいいのか？&lt;/li&gt;
  &lt;li&gt;経営方針とチームミッションが一致していると周りの支援が得やすい&lt;/li&gt;
  &lt;li&gt;OKRという考え方&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit"&gt;みんなでアジャイル Playbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;オンラインでのチームビルディングはどうしたら良いか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://simplearchitect.hatenablog.com/entry/2020/04/15/100449"&gt;マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;やっているのを見せるのが大事&lt;/li&gt;
  &lt;li&gt;分報から始まるQuick Call&lt;/li&gt;
  &lt;li&gt;制約があったほうが工夫、アイデアが生まれる&lt;/li&gt;
  &lt;li&gt;上手くいってないからフレームワークを探そうはダメ&lt;/li&gt;
  &lt;li&gt;アジャイルについて話すだけで、アジャイルになった気になる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/ryuzee/status/1250547829702930434"&gt;必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;組織重力の3法則&lt;/li&gt;
  &lt;li&gt;第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける&lt;/li&gt;
  &lt;li&gt;なぜ、第1法則が生まれるのか？&lt;/li&gt;
  &lt;li&gt;第1法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;顧客から一番離れている人が意思決定していて良いのか？&lt;/li&gt;
  &lt;li&gt;社員全員がカスタマサポートのチャットに入る&lt;/li&gt;
  &lt;li&gt;第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する&lt;/li&gt;
  &lt;li&gt;チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある&lt;/li&gt;
  &lt;li&gt;第2法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;今やっている仕事を見える化する、仕事をオープンにする&lt;/li&gt;
  &lt;li&gt;早期から頻繁にコラボレーションするには楽なやり方が必要&lt;/li&gt;
  &lt;li&gt;そもそもコラボレーションしたいものを扱ってるのか？&lt;/li&gt;
  &lt;li&gt;なぜ顧客の声を早期に聴きに行くのが難しいのか？&lt;/li&gt;
  &lt;li&gt;第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない&lt;/li&gt;
  &lt;li&gt;なぜ第3法則が生まれるのか？&lt;/li&gt;
  &lt;li&gt;目標設定と評価が関係している&lt;/li&gt;
  &lt;li&gt;第3法則からはどうすれば脱却できるか？&lt;/li&gt;
  &lt;li&gt;スタート地点からどんなリスクがあるのか明らかにする&lt;/li&gt;
  &lt;li&gt;不確実性を計画に組み込む&lt;/li&gt;
  &lt;li&gt;進捗レポートで「問題ありません」というのはダメ&lt;/li&gt;
  &lt;li&gt;紙のレポートは残るので、安全に倒してしまう&lt;/li&gt;
  &lt;li&gt;タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる&lt;/li&gt;
  &lt;li&gt;組織変革の熱狂は長くても6ヶ月しか持たない&lt;/li&gt;
  &lt;li&gt;ryuzeeさんが訳していて、書籍の一番好きなところは何か？&lt;/li&gt;
  &lt;li&gt;アジャイル系開発手法は応用範囲が広い&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>32. みんなでアジャイル w/ ryuzee</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>33</podcast:episode>
    </item>
    <item>
      <title>31. fukabori.fmのロゴ作成から学ぶデザイナーの業務プロセス w/ hiromisugie</title>
      <link>https://fukabori.fm/episode/31</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://note.com/hiromisugie/n/n4f586af50513"&gt;エンジニア向けPodcast 「fukabori.fm」のロゴデザイン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;どのようなプロセスでロゴを作成するのか？&lt;/li&gt;
  &lt;li&gt;対象の理解では、何をするのか？&lt;/li&gt;
  &lt;li&gt;ヒアリングは何のためにするのか？&lt;/li&gt;
  &lt;li&gt;周辺の理解、リサーチでは何をするのか？&lt;/li&gt;
  &lt;li&gt;競合リサーチ、市場リサーチとは？&lt;/li&gt;
  &lt;li&gt;fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？&lt;/li&gt;
  &lt;li&gt;見えやすさの5性質とは？&lt;/li&gt;
  &lt;li&gt;誘目性、視認性、明視性、可読性、識別性とは？&lt;/li&gt;
  &lt;li&gt;行間をどのような目安で決めるのか？&lt;/li&gt;
  &lt;li&gt;noteの記事は、なぜ行間が広いのか？&lt;/li&gt;
  &lt;li&gt;ユニバーサルデザイン&lt;/li&gt;
  &lt;li&gt;デザインコンセプトの検討、ラフスイッチとは？&lt;/li&gt;
  &lt;li&gt;デザインコンセプトとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;ロゴ作成のおけるプロトタイプ作成はどう進めるのか？&lt;/li&gt;
  &lt;li&gt;ロゴの似たもの調査はどうやるのか？&lt;/li&gt;
  &lt;li&gt;シンプルなロゴは非常にかぶりやすいのでは？&lt;/li&gt;
  &lt;li&gt;似てる・似てないの判断とは？&lt;/li&gt;
  &lt;li&gt;東京オリンピックのロゴ類似問題&lt;/li&gt;
  &lt;li&gt;シンガポールのティラミスヒーロー&lt;/li&gt;
  &lt;li&gt;最後の作り込み、ブラッシュアップは何をしていくのか？&lt;/li&gt;
  &lt;li&gt;ロゴにおける大文字と小文字の意味&lt;/li&gt;
  &lt;li&gt;どのように色を決めるのか？&lt;/li&gt;
  &lt;li&gt;デザイナーは安直にパターンを作ってはいけない&lt;/li&gt;
  &lt;li&gt;訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: ノンデザイナーズ・デザインブック&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: マンガでわかる色のおもしろ心理学&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: 7日間でマスターする 配色基礎講座&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: 欧文書体 その背景と使い方&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/31</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nk01xvg23pwdpnbxfq.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 27 Apr 2020 21:50:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nk01xvg23pwdpnbxfq.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4008/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:01:19</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://note.com/hiromisugie/n/n4f586af50513"&gt;エンジニア向けPodcast 「fukabori.fm」のロゴデザイン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;どのようなプロセスでロゴを作成するのか？&lt;/li&gt;
  &lt;li&gt;対象の理解では、何をするのか？&lt;/li&gt;
  &lt;li&gt;ヒアリングは何のためにするのか？&lt;/li&gt;
  &lt;li&gt;周辺の理解、リサーチでは何をするのか？&lt;/li&gt;
  &lt;li&gt;競合リサーチ、市場リサーチとは？&lt;/li&gt;
  &lt;li&gt;fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？&lt;/li&gt;
  &lt;li&gt;見えやすさの5性質とは？&lt;/li&gt;
  &lt;li&gt;誘目性、視認性、明視性、可読性、識別性とは？&lt;/li&gt;
  &lt;li&gt;行間をどのような目安で決めるのか？&lt;/li&gt;
  &lt;li&gt;noteの記事は、なぜ行間が広いのか？&lt;/li&gt;
  &lt;li&gt;ユニバーサルデザイン&lt;/li&gt;
  &lt;li&gt;デザインコンセプトの検討、ラフスイッチとは？&lt;/li&gt;
  &lt;li&gt;デザインコンセプトとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;ロゴ作成のおけるプロトタイプ作成はどう進めるのか？&lt;/li&gt;
  &lt;li&gt;ロゴの似たもの調査はどうやるのか？&lt;/li&gt;
  &lt;li&gt;シンプルなロゴは非常にかぶりやすいのでは？&lt;/li&gt;
  &lt;li&gt;似てる・似てないの判断とは？&lt;/li&gt;
  &lt;li&gt;東京オリンピックのロゴ類似問題&lt;/li&gt;
  &lt;li&gt;シンガポールのティラミスヒーロー&lt;/li&gt;
  &lt;li&gt;最後の作り込み、ブラッシュアップは何をしていくのか？&lt;/li&gt;
  &lt;li&gt;ロゴにおける大文字と小文字の意味&lt;/li&gt;
  &lt;li&gt;どのように色を決めるのか？&lt;/li&gt;
  &lt;li&gt;デザイナーは安直にパターンを作ってはいけない&lt;/li&gt;
  &lt;li&gt;訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: ノンデザイナーズ・デザインブック&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: マンガでわかる色のおもしろ心理学&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: 7日間でマスターする 配色基礎講座&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: 欧文書体 その背景と使い方&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://note.com/hiromisugie/n/n4f586af50513"&gt;エンジニア向けPodcast 「fukabori.fm」のロゴデザイン&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;どのようなプロセスでロゴを作成するのか？&lt;/li&gt;
  &lt;li&gt;対象の理解では、何をするのか？&lt;/li&gt;
  &lt;li&gt;ヒアリングは何のためにするのか？&lt;/li&gt;
  &lt;li&gt;周辺の理解、リサーチでは何をするのか？&lt;/li&gt;
  &lt;li&gt;競合リサーチ、市場リサーチとは？&lt;/li&gt;
  &lt;li&gt;fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？&lt;/li&gt;
  &lt;li&gt;見えやすさの5性質とは？&lt;/li&gt;
  &lt;li&gt;誘目性、視認性、明視性、可読性、識別性とは？&lt;/li&gt;
  &lt;li&gt;行間をどのような目安で決めるのか？&lt;/li&gt;
  &lt;li&gt;noteの記事は、なぜ行間が広いのか？&lt;/li&gt;
  &lt;li&gt;ユニバーサルデザイン&lt;/li&gt;
  &lt;li&gt;デザインコンセプトの検討、ラフスイッチとは？&lt;/li&gt;
  &lt;li&gt;デザインコンセプトとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;ロゴ作成のおけるプロトタイプ作成はどう進めるのか？&lt;/li&gt;
  &lt;li&gt;ロゴの似たもの調査はどうやるのか？&lt;/li&gt;
  &lt;li&gt;シンプルなロゴは非常にかぶりやすいのでは？&lt;/li&gt;
  &lt;li&gt;似てる・似てないの判断とは？&lt;/li&gt;
  &lt;li&gt;東京オリンピックのロゴ類似問題&lt;/li&gt;
  &lt;li&gt;シンガポールのティラミスヒーロー&lt;/li&gt;
  &lt;li&gt;最後の作り込み、ブラッシュアップは何をしていくのか？&lt;/li&gt;
  &lt;li&gt;ロゴにおける大文字と小文字の意味&lt;/li&gt;
  &lt;li&gt;どのように色を決めるのか？&lt;/li&gt;
  &lt;li&gt;デザイナーは安直にパターンを作ってはいけない&lt;/li&gt;
  &lt;li&gt;訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: ノンデザイナーズ・デザインブック&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: マンガでわかる色のおもしろ心理学&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: 7日間でマスターする 配色基礎講座&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング&lt;/li&gt;
  &lt;li&gt;オススメ書籍名: 欧文書体 その背景と使い方&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>31. fukabori.fmのロゴ作成から学ぶデザイナーの業務プロセス w/ hiromisugie</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>32</podcast:episode>
    </item>
    <item>
      <title>30. Cloud Native Data Center Networking w/ toby</title>
      <link>https://fukabori.fm/episode/30</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？&lt;/li&gt;
  &lt;li&gt;Aggregation Switchと、Access Switchの分割している理由は？&lt;/li&gt;
  &lt;li&gt;サーバとAccess Switchは、Ethernetでつないでいる？&lt;/li&gt;
  &lt;li&gt;Access Switchや、Aggregation Swtichの冗長化はどうするか？&lt;/li&gt;
  &lt;li&gt;トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？&lt;/li&gt;
  &lt;li&gt;STP(Spanning Tree Protocol)とBroadcast Storm&lt;/li&gt;
  &lt;li&gt;なぜ、このアーキテクチャが全盛だったのか？&lt;/li&gt;
  &lt;li&gt;従来のネットワーキングは、何が問題になるのか？&lt;/li&gt;
  &lt;li&gt;L2にTTL(Time To Live)は存在する？&lt;/li&gt;
  &lt;li&gt;検証で上手くいっていても、系の切り替え時はドキドキする&lt;/li&gt;
  &lt;li&gt;Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？&lt;/li&gt;
  &lt;li&gt;North South / East West トラフィック&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/11"&gt;11. dockerネットワーキングとか、kubernetesネットワーキングとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CLOS Topologyとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html"&gt;クロスバースイッチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現代のDCで使うCLOSは、具体的にどういう構成になるのか？&lt;/li&gt;
  &lt;li&gt;CLOSはどういう特徴があるのか？&lt;/li&gt;
  &lt;li&gt;Leaf SwitchとSpine Switchとは？&lt;/li&gt;
  &lt;li&gt;なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？&lt;/li&gt;
  &lt;li&gt;ユーザがL2を使いたい場合はどうするのか？&lt;/li&gt;
  &lt;li&gt;CLOS上の構成では、トラフィックはACT/ACTか？&lt;/li&gt;
  &lt;li&gt;ECMPと、5 tuple flow&lt;/li&gt;
  &lt;li&gt;CLOSのスケール限界はあるのか？&lt;/li&gt;
  &lt;li&gt;CLOSにおけるフラクタル&lt;/li&gt;
  &lt;li&gt;NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？&lt;/li&gt;
  &lt;li&gt;なぜ、Storage Planeと、Data Planeを分けているのか？&lt;/li&gt;
  &lt;li&gt;Leafの冗長化はどのように実現しているのか？&lt;/li&gt;
  &lt;li&gt;運用上で大変なところは何か？これからどうしていきたいか？&lt;/li&gt;
  &lt;li&gt;リンクの自動化試験、LLDP(Link Layer Discovery Protocol)&lt;/li&gt;
  &lt;li&gt;ソフトウェアのやり方でネットワークを変えていきたい人を募集中&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/30</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nk886hr8cvg0zm43z8.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 05 Apr 2020 08:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nk886hr8cvg0zm43z8.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4007/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:43:30</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？&lt;/li&gt;
  &lt;li&gt;Aggregation Switchと、Access Switchの分割している理由は？&lt;/li&gt;
  &lt;li&gt;サーバとAccess Switchは、Ethernetでつないでいる？&lt;/li&gt;
  &lt;li&gt;Access Switchや、Aggregation Swtichの冗長化はどうするか？&lt;/li&gt;
  &lt;li&gt;トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？&lt;/li&gt;
  &lt;li&gt;STP(Spanning Tree Protocol)とBroadcast Storm&lt;/li&gt;
  &lt;li&gt;なぜ、このアーキテクチャが全盛だったのか？&lt;/li&gt;
  &lt;li&gt;従来のネットワーキングは、何が問題になるのか？&lt;/li&gt;
  &lt;li&gt;L2にTTL(Time To Live)は存在する？&lt;/li&gt;
  &lt;li&gt;検証で上手くいっていても、系の切り替え時はドキドキする&lt;/li&gt;
  &lt;li&gt;Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？&lt;/li&gt;
  &lt;li&gt;North South / East West トラフィック&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/11"&gt;11. dockerネットワーキングとか、kubernetesネットワーキングとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CLOS Topologyとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html"&gt;クロスバースイッチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現代のDCで使うCLOSは、具体的にどういう構成になるのか？&lt;/li&gt;
  &lt;li&gt;CLOSはどういう特徴があるのか？&lt;/li&gt;
  &lt;li&gt;Leaf SwitchとSpine Switchとは？&lt;/li&gt;
  &lt;li&gt;なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？&lt;/li&gt;
  &lt;li&gt;ユーザがL2を使いたい場合はどうするのか？&lt;/li&gt;
  &lt;li&gt;CLOS上の構成では、トラフィックはACT/ACTか？&lt;/li&gt;
  &lt;li&gt;ECMPと、5 tuple flow&lt;/li&gt;
  &lt;li&gt;CLOSのスケール限界はあるのか？&lt;/li&gt;
  &lt;li&gt;CLOSにおけるフラクタル&lt;/li&gt;
  &lt;li&gt;NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？&lt;/li&gt;
  &lt;li&gt;なぜ、Storage Planeと、Data Planeを分けているのか？&lt;/li&gt;
  &lt;li&gt;Leafの冗長化はどのように実現しているのか？&lt;/li&gt;
  &lt;li&gt;運用上で大変なところは何か？これからどうしていきたいか？&lt;/li&gt;
  &lt;li&gt;リンクの自動化試験、LLDP(Link Layer Discovery Protocol)&lt;/li&gt;
  &lt;li&gt;ソフトウェアのやり方でネットワークを変えていきたい人を募集中&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？&lt;/li&gt;
  &lt;li&gt;Aggregation Switchと、Access Switchの分割している理由は？&lt;/li&gt;
  &lt;li&gt;サーバとAccess Switchは、Ethernetでつないでいる？&lt;/li&gt;
  &lt;li&gt;Access Switchや、Aggregation Swtichの冗長化はどうするか？&lt;/li&gt;
  &lt;li&gt;トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？&lt;/li&gt;
  &lt;li&gt;STP(Spanning Tree Protocol)とBroadcast Storm&lt;/li&gt;
  &lt;li&gt;なぜ、このアーキテクチャが全盛だったのか？&lt;/li&gt;
  &lt;li&gt;従来のネットワーキングは、何が問題になるのか？&lt;/li&gt;
  &lt;li&gt;L2にTTL(Time To Live)は存在する？&lt;/li&gt;
  &lt;li&gt;検証で上手くいっていても、系の切り替え時はドキドキする&lt;/li&gt;
  &lt;li&gt;Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？&lt;/li&gt;
  &lt;li&gt;North South / East West トラフィック&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/11"&gt;11. dockerネットワーキングとか、kubernetesネットワーキングとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CLOS Topologyとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html"&gt;クロスバースイッチ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現代のDCで使うCLOSは、具体的にどういう構成になるのか？&lt;/li&gt;
  &lt;li&gt;CLOSはどういう特徴があるのか？&lt;/li&gt;
  &lt;li&gt;Leaf SwitchとSpine Switchとは？&lt;/li&gt;
  &lt;li&gt;なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？&lt;/li&gt;
  &lt;li&gt;ユーザがL2を使いたい場合はどうするのか？&lt;/li&gt;
  &lt;li&gt;CLOS上の構成では、トラフィックはACT/ACTか？&lt;/li&gt;
  &lt;li&gt;ECMPと、5 tuple flow&lt;/li&gt;
  &lt;li&gt;CLOSのスケール限界はあるのか？&lt;/li&gt;
  &lt;li&gt;CLOSにおけるフラクタル&lt;/li&gt;
  &lt;li&gt;NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？&lt;/li&gt;
  &lt;li&gt;なぜ、Storage Planeと、Data Planeを分けているのか？&lt;/li&gt;
  &lt;li&gt;Leafの冗長化はどのように実現しているのか？&lt;/li&gt;
  &lt;li&gt;運用上で大変なところは何か？これからどうしていきたいか？&lt;/li&gt;
  &lt;li&gt;リンクの自動化試験、LLDP(Link Layer Discovery Protocol)&lt;/li&gt;
  &lt;li&gt;ソフトウェアのやり方でネットワークを変えていきたい人を募集中&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>30. Cloud Native Data Center Networking w/ toby</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>31</podcast:episode>
    </item>
    <item>
      <title>29. 技術選定の審美眼(2) w/ twada</title>
      <link>https://fukabori.fm/episode/29</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;集中と分散&lt;/li&gt;
  &lt;li&gt;Good Old Webとは何か？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gihyo.jp/book/2006/4-7741-2687-X"&gt;改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Linux, Apache, PostgreSQL, PHP&lt;/li&gt;
  &lt;li&gt;2層アーキテクチャから3層アーキテクチャへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/Enterprise_JavaBeans"&gt;EJB(Enterprise Java Beans)&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;SOAP(Simple Object Access Protocol)とは？&lt;/li&gt;
  &lt;li&gt;なぜEJBやSOAPが生まれてきたのか？&lt;/li&gt;
  &lt;li&gt;言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3"&gt;SOA(Service-Oriented Architecture)とは？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://e-words.jp/w/ESB.html"&gt;Enterprise Service Bus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;XMLによる設定とマッピングが多い時代だった&lt;/li&gt;
  &lt;li&gt;XMLエンジニアとYAMLエンジニア&lt;/li&gt;
  &lt;li&gt;Ruby on Railsの登場へ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gzj723LkRJY"&gt;How to build a blog engine in 15 minutes with Ruby on Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;設定より規約(Convention over Configuration)&lt;/li&gt;
  &lt;li&gt;システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に&lt;/li&gt;
  &lt;li&gt;Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/"&gt;Spring&lt;/a&gt;や&lt;a href="https://www.seasar.org/en/"&gt;Seasar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Delicious_(website)"&gt;Delicious&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;成功している分散している分散システム(Web)が身近にあった&lt;/li&gt;
  &lt;li&gt;分散システムの設計がRPCからWebベースへ&lt;/li&gt;
  &lt;li&gt;RESTとステートレス、Shared Nothing、スケールアウト&lt;/li&gt;
  &lt;li&gt;XMLじゃなくてJSONで十分だったという気づき&lt;/li&gt;
  &lt;li&gt;クラウドコンピューティングの時代へ&lt;/li&gt;
  &lt;li&gt;ムーアの法則と、スケールアップ戦略の限界&lt;/li&gt;
  &lt;li&gt;Dockerの登場と、コンテナ技術&lt;/li&gt;
  &lt;li&gt;冪等性の難しさ&lt;/li&gt;
  &lt;li&gt;巨大化したモノリスによる問題から、マイクロサービスへ&lt;/li&gt;
  &lt;li&gt;BFF(Backend For Frontend)&lt;/li&gt;
  &lt;li&gt;SOAとマイクロサービスの螺旋&lt;/li&gt;
  &lt;li&gt;DevOps、コンウェイの法則・逆コンウェイの法則&lt;/li&gt;
  &lt;li&gt;組織は戦略に従う、戦略は組織に従う&lt;/li&gt;
  &lt;li&gt;ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460"&gt;Why Software Is Eating The World / Marc Andreessen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Swagger、GraphQL、gRPCの共通点とは何か？&lt;/li&gt;
  &lt;li&gt;動的型付けから静的型付けへ&lt;/li&gt;
  &lt;li&gt;サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ&lt;/li&gt;
  &lt;li&gt;Cloud Nativeとサーバレスコンピューティング&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/29</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nk21h7w8nqyctne3v9.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 22 Mar 2020 14:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nk21h7w8nqyctne3v9.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4006/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:17:37</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;集中と分散&lt;/li&gt;
  &lt;li&gt;Good Old Webとは何か？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gihyo.jp/book/2006/4-7741-2687-X"&gt;改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Linux, Apache, PostgreSQL, PHP&lt;/li&gt;
  &lt;li&gt;2層アーキテクチャから3層アーキテクチャへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/Enterprise_JavaBeans"&gt;EJB(Enterprise Java Beans)&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;SOAP(Simple Object Access Protocol)とは？&lt;/li&gt;
  &lt;li&gt;なぜEJBやSOAPが生まれてきたのか？&lt;/li&gt;
  &lt;li&gt;言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3"&gt;SOA(Service-Oriented Architecture)とは？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://e-words.jp/w/ESB.html"&gt;Enterprise Service Bus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;XMLによる設定とマッピングが多い時代だった&lt;/li&gt;
  &lt;li&gt;XMLエンジニアとYAMLエンジニア&lt;/li&gt;
  &lt;li&gt;Ruby on Railsの登場へ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gzj723LkRJY"&gt;How to build a blog engine in 15 minutes with Ruby on Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;設定より規約(Convention over Configuration)&lt;/li&gt;
  &lt;li&gt;システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に&lt;/li&gt;
  &lt;li&gt;Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/"&gt;Spring&lt;/a&gt;や&lt;a href="https://www.seasar.org/en/"&gt;Seasar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Delicious_(website)"&gt;Delicious&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;成功している分散している分散システム(Web)が身近にあった&lt;/li&gt;
  &lt;li&gt;分散システムの設計がRPCからWebベースへ&lt;/li&gt;
  &lt;li&gt;RESTとステートレス、Shared Nothing、スケールアウト&lt;/li&gt;
  &lt;li&gt;XMLじゃなくてJSONで十分だったという気づき&lt;/li&gt;
  &lt;li&gt;クラウドコンピューティングの時代へ&lt;/li&gt;
  &lt;li&gt;ムーアの法則と、スケールアップ戦略の限界&lt;/li&gt;
  &lt;li&gt;Dockerの登場と、コンテナ技術&lt;/li&gt;
  &lt;li&gt;冪等性の難しさ&lt;/li&gt;
  &lt;li&gt;巨大化したモノリスによる問題から、マイクロサービスへ&lt;/li&gt;
  &lt;li&gt;BFF(Backend For Frontend)&lt;/li&gt;
  &lt;li&gt;SOAとマイクロサービスの螺旋&lt;/li&gt;
  &lt;li&gt;DevOps、コンウェイの法則・逆コンウェイの法則&lt;/li&gt;
  &lt;li&gt;組織は戦略に従う、戦略は組織に従う&lt;/li&gt;
  &lt;li&gt;ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460"&gt;Why Software Is Eating The World / Marc Andreessen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Swagger、GraphQL、gRPCの共通点とは何か？&lt;/li&gt;
  &lt;li&gt;動的型付けから静的型付けへ&lt;/li&gt;
  &lt;li&gt;サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ&lt;/li&gt;
  &lt;li&gt;Cloud Nativeとサーバレスコンピューティング&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;集中と分散&lt;/li&gt;
  &lt;li&gt;Good Old Webとは何か？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gihyo.jp/book/2006/4-7741-2687-X"&gt;改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Linux, Apache, PostgreSQL, PHP&lt;/li&gt;
  &lt;li&gt;2層アーキテクチャから3層アーキテクチャへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/Enterprise_JavaBeans"&gt;EJB(Enterprise Java Beans)&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;SOAP(Simple Object Access Protocol)とは？&lt;/li&gt;
  &lt;li&gt;なぜEJBやSOAPが生まれてきたのか？&lt;/li&gt;
  &lt;li&gt;言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3"&gt;SOA(Service-Oriented Architecture)とは？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://e-words.jp/w/ESB.html"&gt;Enterprise Service Bus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;XMLによる設定とマッピングが多い時代だった&lt;/li&gt;
  &lt;li&gt;XMLエンジニアとYAMLエンジニア&lt;/li&gt;
  &lt;li&gt;Ruby on Railsの登場へ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gzj723LkRJY"&gt;How to build a blog engine in 15 minutes with Ruby on Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;設定より規約(Convention over Configuration)&lt;/li&gt;
  &lt;li&gt;システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に&lt;/li&gt;
  &lt;li&gt;Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/"&gt;Spring&lt;/a&gt;や&lt;a href="https://www.seasar.org/en/"&gt;Seasar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Delicious_(website)"&gt;Delicious&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;成功している分散している分散システム(Web)が身近にあった&lt;/li&gt;
  &lt;li&gt;分散システムの設計がRPCからWebベースへ&lt;/li&gt;
  &lt;li&gt;RESTとステートレス、Shared Nothing、スケールアウト&lt;/li&gt;
  &lt;li&gt;XMLじゃなくてJSONで十分だったという気づき&lt;/li&gt;
  &lt;li&gt;クラウドコンピューティングの時代へ&lt;/li&gt;
  &lt;li&gt;ムーアの法則と、スケールアップ戦略の限界&lt;/li&gt;
  &lt;li&gt;Dockerの登場と、コンテナ技術&lt;/li&gt;
  &lt;li&gt;冪等性の難しさ&lt;/li&gt;
  &lt;li&gt;巨大化したモノリスによる問題から、マイクロサービスへ&lt;/li&gt;
  &lt;li&gt;BFF(Backend For Frontend)&lt;/li&gt;
  &lt;li&gt;SOAとマイクロサービスの螺旋&lt;/li&gt;
  &lt;li&gt;DevOps、コンウェイの法則・逆コンウェイの法則&lt;/li&gt;
  &lt;li&gt;組織は戦略に従う、戦略は組織に従う&lt;/li&gt;
  &lt;li&gt;ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460"&gt;Why Software Is Eating The World / Marc Andreessen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Swagger、GraphQL、gRPCの共通点とは何か？&lt;/li&gt;
  &lt;li&gt;動的型付けから静的型付けへ&lt;/li&gt;
  &lt;li&gt;サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ&lt;/li&gt;
  &lt;li&gt;Cloud Nativeとサーバレスコンピューティング&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>29. 技術選定の審美眼(2) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>30</podcast:episode>
    </item>
    <item>
      <title>28. 技術選定の審美眼(1) w/ twada</title>
      <link>https://fukabori.fm/episode/28</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;フロントエンド疲れとは？&lt;/li&gt;
  &lt;li&gt;大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう&lt;/li&gt;
  &lt;li&gt;Gruntとgulp.js、ReactとVue.js&lt;/li&gt;
  &lt;li&gt;イメージ的には選球眼&lt;/li&gt;
  &lt;li&gt;変わるもの、変わらないものを見極めるモチベーションは何か？&lt;/li&gt;
  &lt;li&gt;技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある&lt;/li&gt;
  &lt;li&gt;振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事&lt;/li&gt;
  &lt;li&gt;ベテランエンジニアの唯一のアドバンテージとは？&lt;/li&gt;
  &lt;li&gt;プログラマとしての可処分時間はどんどん減っていく&lt;/li&gt;
  &lt;li&gt;ベテランプログラマに求められる役割としての、語り部と老害のボーダライン&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.co.jp/dp/4274064069"&gt;Unix哲学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;小さいのは良いことだ(Small is beautiful)&lt;/li&gt;
  &lt;li&gt;一つのことを上手くやる(Make each program do one thing well)&lt;/li&gt;
  &lt;li&gt;すべてはファイルである&lt;/li&gt;
  &lt;li&gt;強い制約による高い相互接続性&lt;/li&gt;
  &lt;li&gt;ネットワークプロトコルにおける強い制約&lt;/li&gt;
  &lt;li&gt;REST / Web&lt;/li&gt;
  &lt;li&gt;すべてをURLで表現できる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://postd.cc/how-dhh-organizes-his-rails-controllers/"&gt;DHHはどのようにRailsのコントローラを書くのか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RDBMS / SQL&lt;/li&gt;
  &lt;li&gt;すべては関係である、(わかりやすく言えば)集合である&lt;/li&gt;
  &lt;li&gt;共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと&lt;/li&gt;
  &lt;li&gt;コミュニケーションコストにを下げるという寄与&lt;/li&gt;
  &lt;li&gt;系が閉じることによる強さ&lt;/li&gt;
  &lt;li&gt;閉包性とは？&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/28</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nk3y83vqdss7a5pyx9.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 15 Mar 2020 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nk3y83vqdss7a5pyx9.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4005/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:41:52</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;フロントエンド疲れとは？&lt;/li&gt;
  &lt;li&gt;大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう&lt;/li&gt;
  &lt;li&gt;Gruntとgulp.js、ReactとVue.js&lt;/li&gt;
  &lt;li&gt;イメージ的には選球眼&lt;/li&gt;
  &lt;li&gt;変わるもの、変わらないものを見極めるモチベーションは何か？&lt;/li&gt;
  &lt;li&gt;技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある&lt;/li&gt;
  &lt;li&gt;振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事&lt;/li&gt;
  &lt;li&gt;ベテランエンジニアの唯一のアドバンテージとは？&lt;/li&gt;
  &lt;li&gt;プログラマとしての可処分時間はどんどん減っていく&lt;/li&gt;
  &lt;li&gt;ベテランプログラマに求められる役割としての、語り部と老害のボーダライン&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.co.jp/dp/4274064069"&gt;Unix哲学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;小さいのは良いことだ(Small is beautiful)&lt;/li&gt;
  &lt;li&gt;一つのことを上手くやる(Make each program do one thing well)&lt;/li&gt;
  &lt;li&gt;すべてはファイルである&lt;/li&gt;
  &lt;li&gt;強い制約による高い相互接続性&lt;/li&gt;
  &lt;li&gt;ネットワークプロトコルにおける強い制約&lt;/li&gt;
  &lt;li&gt;REST / Web&lt;/li&gt;
  &lt;li&gt;すべてをURLで表現できる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://postd.cc/how-dhh-organizes-his-rails-controllers/"&gt;DHHはどのようにRailsのコントローラを書くのか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RDBMS / SQL&lt;/li&gt;
  &lt;li&gt;すべては関係である、(わかりやすく言えば)集合である&lt;/li&gt;
  &lt;li&gt;共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと&lt;/li&gt;
  &lt;li&gt;コミュニケーションコストにを下げるという寄与&lt;/li&gt;
  &lt;li&gt;系が閉じることによる強さ&lt;/li&gt;
  &lt;li&gt;閉包性とは？&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;フロントエンド疲れとは？&lt;/li&gt;
  &lt;li&gt;大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう&lt;/li&gt;
  &lt;li&gt;Gruntとgulp.js、ReactとVue.js&lt;/li&gt;
  &lt;li&gt;イメージ的には選球眼&lt;/li&gt;
  &lt;li&gt;変わるもの、変わらないものを見極めるモチベーションは何か？&lt;/li&gt;
  &lt;li&gt;技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある&lt;/li&gt;
  &lt;li&gt;振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事&lt;/li&gt;
  &lt;li&gt;ベテランエンジニアの唯一のアドバンテージとは？&lt;/li&gt;
  &lt;li&gt;プログラマとしての可処分時間はどんどん減っていく&lt;/li&gt;
  &lt;li&gt;ベテランプログラマに求められる役割としての、語り部と老害のボーダライン&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.co.jp/dp/4274064069"&gt;Unix哲学&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;小さいのは良いことだ(Small is beautiful)&lt;/li&gt;
  &lt;li&gt;一つのことを上手くやる(Make each program do one thing well)&lt;/li&gt;
  &lt;li&gt;すべてはファイルである&lt;/li&gt;
  &lt;li&gt;強い制約による高い相互接続性&lt;/li&gt;
  &lt;li&gt;ネットワークプロトコルにおける強い制約&lt;/li&gt;
  &lt;li&gt;REST / Web&lt;/li&gt;
  &lt;li&gt;すべてをURLで表現できる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://postd.cc/how-dhh-organizes-his-rails-controllers/"&gt;DHHはどのようにRailsのコントローラを書くのか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RDBMS / SQL&lt;/li&gt;
  &lt;li&gt;すべては関係である、(わかりやすく言えば)集合である&lt;/li&gt;
  &lt;li&gt;共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと&lt;/li&gt;
  &lt;li&gt;コミュニケーションコストにを下げるという寄与&lt;/li&gt;
  &lt;li&gt;系が閉じることによる強さ&lt;/li&gt;
  &lt;li&gt;閉包性とは？&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>28. 技術選定の審美眼(1) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>29</podcast:episode>
    </item>
    <item>
      <title>27. 論理削除とは何か？どのような解法があるのか？ w/ twada</title>
      <link>https://fukabori.fm/episode/27</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;論理削除とはそもそも何か？&lt;/li&gt;
  &lt;li&gt;物理削除とは？&lt;/li&gt;
  &lt;li&gt;なぜ、論理削除が生まれてくるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/t_wada/ronsakucasual"&gt;SQLアンチパターン 幻の第26章「とりあえず削除フラグ」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;理由1: 心理的なハードルの高さ、怖さがある&lt;/li&gt;
  &lt;li&gt;理由2: 削除したデータを検索対象に入れたい場合がある&lt;/li&gt;
  &lt;li&gt;理由3: ログとしての用途&lt;/li&gt;
  &lt;li&gt;理由4: 誤操作をすぐに戻したい&lt;/li&gt;
  &lt;li&gt;アンチパターンとは何か？&lt;/li&gt;
  &lt;li&gt;なぜ、論理削除はアンチパターンとして捉えられるのか？&lt;/li&gt;
  &lt;li&gt;全てのSQL文のWHERE句に削除フラグが必ず入る&lt;/li&gt;
  &lt;li&gt;LIMIT 1などが蔓延していく&lt;/li&gt;
  &lt;li&gt;論理削除に気づくきっかけは何か？&lt;/li&gt;
  &lt;li&gt;テーブル設計や、規約から気づく&lt;/li&gt;
  &lt;li&gt;論理削除というアンチパターンをどのように解いていくか？&lt;/li&gt;
  &lt;li&gt;論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない&lt;/li&gt;
  &lt;li&gt;要件をどのように設計すればいいのか？&lt;/li&gt;
  &lt;li&gt;ORMの論理削除プラグインはあまり良くない&lt;/li&gt;
  &lt;li&gt;状態遷移として捉える方法&lt;/li&gt;
  &lt;li&gt;Soft Delete と Hard Delete&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html"&gt;Doctrine 2 “Behaviours” in a Nutshell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RDBにおけるStateパターンとは？&lt;/li&gt;
  &lt;li&gt;UMLにある状態遷移図&lt;/li&gt;
  &lt;li&gt;Stateパターンが使えないケースはある？&lt;/li&gt;
  &lt;li&gt;FSM - Finite State Machine&lt;/li&gt;
  &lt;li&gt;State Machineのプラグインをまず探す&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/aasm/aasm"&gt;AASM - Ruby state machines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;履歴テーブルを使った設計による解法&lt;/li&gt;
  &lt;li&gt;履歴テーブルをあえて使う強いモチベーションは何か？&lt;/li&gt;
  &lt;li&gt;そもそも削除も更新もしない解法もある&lt;/li&gt;
  &lt;li&gt;発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81"&gt;データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;T字形ER手法&lt;/li&gt;
  &lt;li&gt;データ量が増えた場合にどうするか？&lt;/li&gt;
  &lt;li&gt;Webシステムが流行る前後のデータ量&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB"&gt;イミュータブルデータモデル(入門編)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;誤った操作をなかったことにしたい、という課題はまだ解けていない&lt;/li&gt;
  &lt;li&gt;教科書的なのは間違えにくいUI/画面設計を作る&lt;/li&gt;
  &lt;li&gt;遅延レプリケーションという解法&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/27</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nkegvy1bq8c150wm8b.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 01 Mar 2020 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nkegvy1bq8c150wm8b.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4004/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:05:48</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;論理削除とはそもそも何か？&lt;/li&gt;
  &lt;li&gt;物理削除とは？&lt;/li&gt;
  &lt;li&gt;なぜ、論理削除が生まれてくるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/t_wada/ronsakucasual"&gt;SQLアンチパターン 幻の第26章「とりあえず削除フラグ」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;理由1: 心理的なハードルの高さ、怖さがある&lt;/li&gt;
  &lt;li&gt;理由2: 削除したデータを検索対象に入れたい場合がある&lt;/li&gt;
  &lt;li&gt;理由3: ログとしての用途&lt;/li&gt;
  &lt;li&gt;理由4: 誤操作をすぐに戻したい&lt;/li&gt;
  &lt;li&gt;アンチパターンとは何か？&lt;/li&gt;
  &lt;li&gt;なぜ、論理削除はアンチパターンとして捉えられるのか？&lt;/li&gt;
  &lt;li&gt;全てのSQL文のWHERE句に削除フラグが必ず入る&lt;/li&gt;
  &lt;li&gt;LIMIT 1などが蔓延していく&lt;/li&gt;
  &lt;li&gt;論理削除に気づくきっかけは何か？&lt;/li&gt;
  &lt;li&gt;テーブル設計や、規約から気づく&lt;/li&gt;
  &lt;li&gt;論理削除というアンチパターンをどのように解いていくか？&lt;/li&gt;
  &lt;li&gt;論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない&lt;/li&gt;
  &lt;li&gt;要件をどのように設計すればいいのか？&lt;/li&gt;
  &lt;li&gt;ORMの論理削除プラグインはあまり良くない&lt;/li&gt;
  &lt;li&gt;状態遷移として捉える方法&lt;/li&gt;
  &lt;li&gt;Soft Delete と Hard Delete&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html"&gt;Doctrine 2 “Behaviours” in a Nutshell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RDBにおけるStateパターンとは？&lt;/li&gt;
  &lt;li&gt;UMLにある状態遷移図&lt;/li&gt;
  &lt;li&gt;Stateパターンが使えないケースはある？&lt;/li&gt;
  &lt;li&gt;FSM - Finite State Machine&lt;/li&gt;
  &lt;li&gt;State Machineのプラグインをまず探す&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/aasm/aasm"&gt;AASM - Ruby state machines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;履歴テーブルを使った設計による解法&lt;/li&gt;
  &lt;li&gt;履歴テーブルをあえて使う強いモチベーションは何か？&lt;/li&gt;
  &lt;li&gt;そもそも削除も更新もしない解法もある&lt;/li&gt;
  &lt;li&gt;発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81"&gt;データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;T字形ER手法&lt;/li&gt;
  &lt;li&gt;データ量が増えた場合にどうするか？&lt;/li&gt;
  &lt;li&gt;Webシステムが流行る前後のデータ量&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB"&gt;イミュータブルデータモデル(入門編)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;誤った操作をなかったことにしたい、という課題はまだ解けていない&lt;/li&gt;
  &lt;li&gt;教科書的なのは間違えにくいUI/画面設計を作る&lt;/li&gt;
  &lt;li&gt;遅延レプリケーションという解法&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;論理削除とはそもそも何か？&lt;/li&gt;
  &lt;li&gt;物理削除とは？&lt;/li&gt;
  &lt;li&gt;なぜ、論理削除が生まれてくるのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/t_wada/ronsakucasual"&gt;SQLアンチパターン 幻の第26章「とりあえず削除フラグ」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;理由1: 心理的なハードルの高さ、怖さがある&lt;/li&gt;
  &lt;li&gt;理由2: 削除したデータを検索対象に入れたい場合がある&lt;/li&gt;
  &lt;li&gt;理由3: ログとしての用途&lt;/li&gt;
  &lt;li&gt;理由4: 誤操作をすぐに戻したい&lt;/li&gt;
  &lt;li&gt;アンチパターンとは何か？&lt;/li&gt;
  &lt;li&gt;なぜ、論理削除はアンチパターンとして捉えられるのか？&lt;/li&gt;
  &lt;li&gt;全てのSQL文のWHERE句に削除フラグが必ず入る&lt;/li&gt;
  &lt;li&gt;LIMIT 1などが蔓延していく&lt;/li&gt;
  &lt;li&gt;論理削除に気づくきっかけは何か？&lt;/li&gt;
  &lt;li&gt;テーブル設計や、規約から気づく&lt;/li&gt;
  &lt;li&gt;論理削除というアンチパターンをどのように解いていくか？&lt;/li&gt;
  &lt;li&gt;論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない&lt;/li&gt;
  &lt;li&gt;要件をどのように設計すればいいのか？&lt;/li&gt;
  &lt;li&gt;ORMの論理削除プラグインはあまり良くない&lt;/li&gt;
  &lt;li&gt;状態遷移として捉える方法&lt;/li&gt;
  &lt;li&gt;Soft Delete と Hard Delete&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html"&gt;Doctrine 2 “Behaviours” in a Nutshell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RDBにおけるStateパターンとは？&lt;/li&gt;
  &lt;li&gt;UMLにある状態遷移図&lt;/li&gt;
  &lt;li&gt;Stateパターンが使えないケースはある？&lt;/li&gt;
  &lt;li&gt;FSM - Finite State Machine&lt;/li&gt;
  &lt;li&gt;State Machineのプラグインをまず探す&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/aasm/aasm"&gt;AASM - Ruby state machines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;履歴テーブルを使った設計による解法&lt;/li&gt;
  &lt;li&gt;履歴テーブルをあえて使う強いモチベーションは何か？&lt;/li&gt;
  &lt;li&gt;そもそも削除も更新もしない解法もある&lt;/li&gt;
  &lt;li&gt;発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81"&gt;データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;T字形ER手法&lt;/li&gt;
  &lt;li&gt;データ量が増えた場合にどうするか？&lt;/li&gt;
  &lt;li&gt;Webシステムが流行る前後のデータ量&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB"&gt;イミュータブルデータモデル(入門編)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;誤った操作をなかったことにしたい、という課題はまだ解けていない&lt;/li&gt;
  &lt;li&gt;教科書的なのは間違えにくいUI/画面設計を作る&lt;/li&gt;
  &lt;li&gt;遅延レプリケーションという解法&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>27. 論理削除とは何か？どのような解法があるのか？ w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>28</podcast:episode>
    </item>
    <item>
      <title>26. Spinnakerとは w/ k_mrgk</title>
      <link>https://fukabori.fm/episode/26</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/ktmrgk/sre-next-2020"&gt;Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.spinnaker.io/"&gt;Spinnaker&lt;/a&gt;とは何か？&lt;/li&gt;
  &lt;li&gt;kubernetesのみではなく、他にも対応している？&lt;/li&gt;
  &lt;li&gt;継続的デリバリとは、継続的デプロイメントの違いとは？&lt;/li&gt;
  &lt;li&gt;CDについて、Spinnakerはどこまで対応している？&lt;/li&gt;
  &lt;li&gt;Spinnaker単体でRollbackも簡単になる？&lt;/li&gt;
  &lt;li&gt;国内だと、どれぐらい使われている？&lt;/li&gt;
  &lt;li&gt;GitOpsとは何か？&lt;/li&gt;
  &lt;li&gt;Single Source of Truth&lt;/li&gt;
  &lt;li&gt;リポジトリはどのように分割するのか？&lt;/li&gt;
  &lt;li&gt;Spinnakerのデプロイ戦略には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/"&gt;ReplicaSet&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;訂正 fukabori ep.11は 市川さん -&amp;gt; 市原さん です。ごめんなさい。&lt;/li&gt;
  &lt;li&gt;メトリクス周りでSpinnakerがケアしているくれるところはある？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spinnaker/kayenta"&gt;Kayenta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;手動承認もできる&lt;/li&gt;
  &lt;li&gt;SpinnakerのPipelineでどんな感じ？&lt;/li&gt;
  &lt;li&gt;何かCIやテストで選定しているものはあるか？&lt;/li&gt;
  &lt;li&gt;kubernetesのJobでの制約は？&lt;/li&gt;
  &lt;li&gt;Spinnaker自体のアーキテクチャはどうなっている？&lt;/li&gt;
  &lt;li&gt;Spinnaker運用におけるトラブルシュートは大変？&lt;/li&gt;
  &lt;li&gt;開発チームとSREチームでの分解点、運用フローはどうする？&lt;/li&gt;
  &lt;li&gt;PipelineをテストするPipelineとは？どのようなテストをしている？&lt;/li&gt;
  &lt;li&gt;Spinnaker自体のモニタリングはどうするのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-rollouts"&gt;Argo Rollouts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"&gt;Custom Resources&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/kanatakita/items/a68c6e7758524422ecb0"&gt;アプリケーションのリリースに必要な会議を倒したい話&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Istioを使っているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kustomize"&gt;kustomize&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/helm/helm"&gt;Helm&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nttcom.connpass.com/event/163460/"&gt;学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/26</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nj32fjt4f27j607d3z.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 05 Feb 2020 14:45:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nj32fjt4f27j607d3z.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4003/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:38:47</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/ktmrgk/sre-next-2020"&gt;Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.spinnaker.io/"&gt;Spinnaker&lt;/a&gt;とは何か？&lt;/li&gt;
  &lt;li&gt;kubernetesのみではなく、他にも対応している？&lt;/li&gt;
  &lt;li&gt;継続的デリバリとは、継続的デプロイメントの違いとは？&lt;/li&gt;
  &lt;li&gt;CDについて、Spinnakerはどこまで対応している？&lt;/li&gt;
  &lt;li&gt;Spinnaker単体でRollbackも簡単になる？&lt;/li&gt;
  &lt;li&gt;国内だと、どれぐらい使われている？&lt;/li&gt;
  &lt;li&gt;GitOpsとは何か？&lt;/li&gt;
  &lt;li&gt;Single Source of Truth&lt;/li&gt;
  &lt;li&gt;リポジトリはどのように分割するのか？&lt;/li&gt;
  &lt;li&gt;Spinnakerのデプロイ戦略には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/"&gt;ReplicaSet&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;訂正 fukabori ep.11は 市川さん -&amp;gt; 市原さん です。ごめんなさい。&lt;/li&gt;
  &lt;li&gt;メトリクス周りでSpinnakerがケアしているくれるところはある？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spinnaker/kayenta"&gt;Kayenta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;手動承認もできる&lt;/li&gt;
  &lt;li&gt;SpinnakerのPipelineでどんな感じ？&lt;/li&gt;
  &lt;li&gt;何かCIやテストで選定しているものはあるか？&lt;/li&gt;
  &lt;li&gt;kubernetesのJobでの制約は？&lt;/li&gt;
  &lt;li&gt;Spinnaker自体のアーキテクチャはどうなっている？&lt;/li&gt;
  &lt;li&gt;Spinnaker運用におけるトラブルシュートは大変？&lt;/li&gt;
  &lt;li&gt;開発チームとSREチームでの分解点、運用フローはどうする？&lt;/li&gt;
  &lt;li&gt;PipelineをテストするPipelineとは？どのようなテストをしている？&lt;/li&gt;
  &lt;li&gt;Spinnaker自体のモニタリングはどうするのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-rollouts"&gt;Argo Rollouts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"&gt;Custom Resources&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/kanatakita/items/a68c6e7758524422ecb0"&gt;アプリケーションのリリースに必要な会議を倒したい話&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Istioを使っているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kustomize"&gt;kustomize&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/helm/helm"&gt;Helm&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nttcom.connpass.com/event/163460/"&gt;学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/ktmrgk/sre-next-2020"&gt;Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.spinnaker.io/"&gt;Spinnaker&lt;/a&gt;とは何か？&lt;/li&gt;
  &lt;li&gt;kubernetesのみではなく、他にも対応している？&lt;/li&gt;
  &lt;li&gt;継続的デリバリとは、継続的デプロイメントの違いとは？&lt;/li&gt;
  &lt;li&gt;CDについて、Spinnakerはどこまで対応している？&lt;/li&gt;
  &lt;li&gt;Spinnaker単体でRollbackも簡単になる？&lt;/li&gt;
  &lt;li&gt;国内だと、どれぐらい使われている？&lt;/li&gt;
  &lt;li&gt;GitOpsとは何か？&lt;/li&gt;
  &lt;li&gt;Single Source of Truth&lt;/li&gt;
  &lt;li&gt;リポジトリはどのように分割するのか？&lt;/li&gt;
  &lt;li&gt;Spinnakerのデプロイ戦略には何があるか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/"&gt;ReplicaSet&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;訂正 fukabori ep.11は 市川さん -&amp;gt; 市原さん です。ごめんなさい。&lt;/li&gt;
  &lt;li&gt;メトリクス周りでSpinnakerがケアしているくれるところはある？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spinnaker/kayenta"&gt;Kayenta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;手動承認もできる&lt;/li&gt;
  &lt;li&gt;SpinnakerのPipelineでどんな感じ？&lt;/li&gt;
  &lt;li&gt;何かCIやテストで選定しているものはあるか？&lt;/li&gt;
  &lt;li&gt;kubernetesのJobでの制約は？&lt;/li&gt;
  &lt;li&gt;Spinnaker自体のアーキテクチャはどうなっている？&lt;/li&gt;
  &lt;li&gt;Spinnaker運用におけるトラブルシュートは大変？&lt;/li&gt;
  &lt;li&gt;開発チームとSREチームでの分解点、運用フローはどうする？&lt;/li&gt;
  &lt;li&gt;PipelineをテストするPipelineとは？どのようなテストをしている？&lt;/li&gt;
  &lt;li&gt;Spinnaker自体のモニタリングはどうするのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-rollouts"&gt;Argo Rollouts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"&gt;Custom Resources&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/kanatakita/items/a68c6e7758524422ecb0"&gt;アプリケーションのリリースに必要な会議を倒したい話&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Istioを使っているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kustomize"&gt;kustomize&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/helm/helm"&gt;Helm&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://nttcom.connpass.com/event/163460/"&gt;学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>26. Spinnakerとは w/ k_mrgk</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>27</podcast:episode>
    </item>
    <item>
      <title>25. 日本企業を辞めてカーネギーメロン大学へ入学し、Nianticで働くまで  w/ noralife</title>
      <link>https://fukabori.fm/episode/25</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;海外企業でソフトウェアエンジニアで働くための手段&lt;/li&gt;
  &lt;li&gt;ビザってなぜ必要なんだっけ？&lt;/li&gt;
  &lt;li&gt;米国のビザってどういう種類があるの？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ryugaku.com/blog/entry/opt-mio.html"&gt;OPT STEM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;10:05 訂正 &lt;a href="https://honkiku.com/getting-american-visa-is-impossible/"&gt;H1は9月に発給される -&amp;gt; 10/1の間違い&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;大学の出願候補はどうやって選んだのか？&lt;/li&gt;
  &lt;li&gt;就業中で働きながらどのように受験の勉強をしたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ets.org/toefl"&gt;TOEFL&lt;/a&gt;と&lt;a href="https://www.ets.org/gre/"&gt;GRE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GREの単語は無理ゲー&lt;/li&gt;
  &lt;li&gt;リスニングはどうやって勉強した？&lt;/li&gt;
  &lt;li&gt;何校程度、受験した？&lt;/li&gt;
  &lt;li&gt;入学したCMUのコースは何人ぐらいいるの？&lt;/li&gt;
  &lt;li&gt;コースにいる学生で米国Nativeの数は？&lt;/li&gt;
  &lt;li&gt;CMUの学生生活はブラック&lt;/li&gt;
  &lt;li&gt;CMUの授業はどういう形式が多い？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mse.isri.cmu.edu/"&gt;CMU Software Engineering&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.cs.cmu.edu/~213/"&gt;Introduction to Computer Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;mallocを実装する宿題&lt;/li&gt;
  &lt;li&gt;修論執筆は必須？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://users.ece.cmu.edu/~raj/"&gt;Raj教授&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;卒業制作はアジャイル開発で進める&lt;/li&gt;
  &lt;li&gt;アジャイル開発のフレームワークなどは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf"&gt;ACDM/Architecture Centric Design Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;この授業、とくに面白かったな、って授業は？&lt;/li&gt;
  &lt;li&gt;Raftの実装する課題&lt;/li&gt;
  &lt;li&gt;課題のテストケースが秘伝のタレ&lt;/li&gt;
  &lt;li&gt;GoのTCPライブラリに仕込んである&lt;/li&gt;
  &lt;li&gt;Databaseの授業では、ほぼDBMSを作るような課題&lt;/li&gt;
  &lt;li&gt;b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変&lt;/li&gt;
  &lt;li&gt;在学中から就職先の選定はどのように進めた？&lt;/li&gt;
  &lt;li&gt;リファーラルが取れる場合はとったほうが良い&lt;/li&gt;
  &lt;li&gt;日本と違って自分の履歴書があればポジションへ応募できる&lt;/li&gt;
  &lt;li&gt;リモートでの技術面接はどのような問題が出る？&lt;/li&gt;
  &lt;li&gt;オンサイトでの技術面接は？&lt;/li&gt;
  &lt;li&gt;どのように面接準備した？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/dp/0984782850"&gt;Cracking coding interview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nianticで働いてみて、実際にどんな印象か？&lt;/li&gt;
  &lt;li&gt;エリートといえばリスクテイク&lt;/li&gt;
  &lt;li&gt;同僚をみていて、日本のエンジニアという違う部分はある？&lt;/li&gt;
  &lt;li&gt;1日のタイムスケジュール、どのぐらいコーディングしているか？&lt;/li&gt;
  &lt;li&gt;英語力は伸びる？&lt;/li&gt;
  &lt;li&gt;英語が分からなかったときの対応スキルが伸びる&lt;/li&gt;
  &lt;li&gt;海外で働いてみてよかった点は、英語の勉強から離れられたこと&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b"&gt;東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/25</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7njd6pq8ztmbfxbztkg.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 17 Jan 2020 23:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7njd6pq8ztmbfxbztkg.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4002/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:47:24</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;海外企業でソフトウェアエンジニアで働くための手段&lt;/li&gt;
  &lt;li&gt;ビザってなぜ必要なんだっけ？&lt;/li&gt;
  &lt;li&gt;米国のビザってどういう種類があるの？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ryugaku.com/blog/entry/opt-mio.html"&gt;OPT STEM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;10:05 訂正 &lt;a href="https://honkiku.com/getting-american-visa-is-impossible/"&gt;H1は9月に発給される -&amp;gt; 10/1の間違い&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;大学の出願候補はどうやって選んだのか？&lt;/li&gt;
  &lt;li&gt;就業中で働きながらどのように受験の勉強をしたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ets.org/toefl"&gt;TOEFL&lt;/a&gt;と&lt;a href="https://www.ets.org/gre/"&gt;GRE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GREの単語は無理ゲー&lt;/li&gt;
  &lt;li&gt;リスニングはどうやって勉強した？&lt;/li&gt;
  &lt;li&gt;何校程度、受験した？&lt;/li&gt;
  &lt;li&gt;入学したCMUのコースは何人ぐらいいるの？&lt;/li&gt;
  &lt;li&gt;コースにいる学生で米国Nativeの数は？&lt;/li&gt;
  &lt;li&gt;CMUの学生生活はブラック&lt;/li&gt;
  &lt;li&gt;CMUの授業はどういう形式が多い？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mse.isri.cmu.edu/"&gt;CMU Software Engineering&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.cs.cmu.edu/~213/"&gt;Introduction to Computer Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;mallocを実装する宿題&lt;/li&gt;
  &lt;li&gt;修論執筆は必須？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://users.ece.cmu.edu/~raj/"&gt;Raj教授&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;卒業制作はアジャイル開発で進める&lt;/li&gt;
  &lt;li&gt;アジャイル開発のフレームワークなどは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf"&gt;ACDM/Architecture Centric Design Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;この授業、とくに面白かったな、って授業は？&lt;/li&gt;
  &lt;li&gt;Raftの実装する課題&lt;/li&gt;
  &lt;li&gt;課題のテストケースが秘伝のタレ&lt;/li&gt;
  &lt;li&gt;GoのTCPライブラリに仕込んである&lt;/li&gt;
  &lt;li&gt;Databaseの授業では、ほぼDBMSを作るような課題&lt;/li&gt;
  &lt;li&gt;b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変&lt;/li&gt;
  &lt;li&gt;在学中から就職先の選定はどのように進めた？&lt;/li&gt;
  &lt;li&gt;リファーラルが取れる場合はとったほうが良い&lt;/li&gt;
  &lt;li&gt;日本と違って自分の履歴書があればポジションへ応募できる&lt;/li&gt;
  &lt;li&gt;リモートでの技術面接はどのような問題が出る？&lt;/li&gt;
  &lt;li&gt;オンサイトでの技術面接は？&lt;/li&gt;
  &lt;li&gt;どのように面接準備した？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/dp/0984782850"&gt;Cracking coding interview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nianticで働いてみて、実際にどんな印象か？&lt;/li&gt;
  &lt;li&gt;エリートといえばリスクテイク&lt;/li&gt;
  &lt;li&gt;同僚をみていて、日本のエンジニアという違う部分はある？&lt;/li&gt;
  &lt;li&gt;1日のタイムスケジュール、どのぐらいコーディングしているか？&lt;/li&gt;
  &lt;li&gt;英語力は伸びる？&lt;/li&gt;
  &lt;li&gt;英語が分からなかったときの対応スキルが伸びる&lt;/li&gt;
  &lt;li&gt;海外で働いてみてよかった点は、英語の勉強から離れられたこと&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b"&gt;東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;海外企業でソフトウェアエンジニアで働くための手段&lt;/li&gt;
  &lt;li&gt;ビザってなぜ必要なんだっけ？&lt;/li&gt;
  &lt;li&gt;米国のビザってどういう種類があるの？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ryugaku.com/blog/entry/opt-mio.html"&gt;OPT STEM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;10:05 訂正 &lt;a href="https://honkiku.com/getting-american-visa-is-impossible/"&gt;H1は9月に発給される -&amp;gt; 10/1の間違い&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;大学の出願候補はどうやって選んだのか？&lt;/li&gt;
  &lt;li&gt;就業中で働きながらどのように受験の勉強をしたのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ets.org/toefl"&gt;TOEFL&lt;/a&gt;と&lt;a href="https://www.ets.org/gre/"&gt;GRE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GREの単語は無理ゲー&lt;/li&gt;
  &lt;li&gt;リスニングはどうやって勉強した？&lt;/li&gt;
  &lt;li&gt;何校程度、受験した？&lt;/li&gt;
  &lt;li&gt;入学したCMUのコースは何人ぐらいいるの？&lt;/li&gt;
  &lt;li&gt;コースにいる学生で米国Nativeの数は？&lt;/li&gt;
  &lt;li&gt;CMUの学生生活はブラック&lt;/li&gt;
  &lt;li&gt;CMUの授業はどういう形式が多い？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mse.isri.cmu.edu/"&gt;CMU Software Engineering&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.cs.cmu.edu/~213/"&gt;Introduction to Computer Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;mallocを実装する宿題&lt;/li&gt;
  &lt;li&gt;修論執筆は必須？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://users.ece.cmu.edu/~raj/"&gt;Raj教授&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;卒業制作はアジャイル開発で進める&lt;/li&gt;
  &lt;li&gt;アジャイル開発のフレームワークなどは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf"&gt;ACDM/Architecture Centric Design Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;この授業、とくに面白かったな、って授業は？&lt;/li&gt;
  &lt;li&gt;Raftの実装する課題&lt;/li&gt;
  &lt;li&gt;課題のテストケースが秘伝のタレ&lt;/li&gt;
  &lt;li&gt;GoのTCPライブラリに仕込んである&lt;/li&gt;
  &lt;li&gt;Databaseの授業では、ほぼDBMSを作るような課題&lt;/li&gt;
  &lt;li&gt;b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変&lt;/li&gt;
  &lt;li&gt;在学中から就職先の選定はどのように進めた？&lt;/li&gt;
  &lt;li&gt;リファーラルが取れる場合はとったほうが良い&lt;/li&gt;
  &lt;li&gt;日本と違って自分の履歴書があればポジションへ応募できる&lt;/li&gt;
  &lt;li&gt;リモートでの技術面接はどのような問題が出る？&lt;/li&gt;
  &lt;li&gt;オンサイトでの技術面接は？&lt;/li&gt;
  &lt;li&gt;どのように面接準備した？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/dp/0984782850"&gt;Cracking coding interview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nianticで働いてみて、実際にどんな印象か？&lt;/li&gt;
  &lt;li&gt;エリートといえばリスクテイク&lt;/li&gt;
  &lt;li&gt;同僚をみていて、日本のエンジニアという違う部分はある？&lt;/li&gt;
  &lt;li&gt;1日のタイムスケジュール、どのぐらいコーディングしているか？&lt;/li&gt;
  &lt;li&gt;英語力は伸びる？&lt;/li&gt;
  &lt;li&gt;英語が分からなかったときの対応スキルが伸びる&lt;/li&gt;
  &lt;li&gt;海外で働いてみてよかった点は、英語の勉強から離れられたこと&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b"&gt;東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>25. 日本企業を辞めてカーネギーメロン大学へ入学し、Nianticで働くまで  w/ noralife</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>26</podcast:episode>
    </item>
    <item>
      <title>24. 開発組織から部長がいなくなるまでの経緯 w/ teppeis</title>
      <link>https://fukabori.fm/episode/24</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;サイボウズはどのようなプロダクトを開発しているのか？&lt;/li&gt;
  &lt;li&gt;kintoneの競合って？&lt;/li&gt;
  &lt;li&gt;サイボウズって外注しているの？オフショアは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.cybozu.io/entry/2019/02/13/080000"&gt;組織変更したら部長がいなくなりました&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;部長がいなくなる組織変更する前はどのような組織だったのか？&lt;/li&gt;
  &lt;li&gt;マトリクス組織、上長って複数名？&lt;/li&gt;
  &lt;li&gt;マトリクス組織において、どのような問題があったのか？&lt;/li&gt;
  &lt;li&gt;職能定義に固定的に考えてしまう&lt;/li&gt;
  &lt;li&gt;どのように組織変更を進めていったのか？&lt;/li&gt;
  &lt;li&gt;60組以上に今考えている課題について、ヒアリング実施&lt;/li&gt;
  &lt;li&gt;左右の壁と、上下の壁&lt;/li&gt;
  &lt;li&gt;プロダクトチームはどういうメンバ構成なのか？&lt;/li&gt;
  &lt;li&gt;組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？&lt;/li&gt;
  &lt;li&gt;ヒアリング結果は常にオープンに&lt;/li&gt;
  &lt;li&gt;「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？&lt;/li&gt;
  &lt;li&gt;旧部長の多くは、組織運営チームにJoinした&lt;/li&gt;
  &lt;li&gt;マネージャは孤独な仕事であるが、チームを組んで考えるようになった&lt;/li&gt;
  &lt;li&gt;組織運営チームで解決する課題はどのように発見しているのか？&lt;/li&gt;
  &lt;li&gt;発見した課題の優先度付けは？&lt;/li&gt;
  &lt;li&gt;Scrum at ScaleにおけるEAT(Executive Action Team)に近い&lt;/li&gt;
  &lt;li&gt;EATはエスカレーションされた問題の即日解決を目指す&lt;/li&gt;
  &lt;li&gt;予算系のものの承認は、誰がするようになったのか？&lt;/li&gt;
  &lt;li&gt;予算枠確保よりも、必要なものを、必要なときに使うのが大事&lt;/li&gt;
  &lt;li&gt;チームの活動をkintone上というオープンな場に公開する&lt;/li&gt;
  &lt;li&gt;公明正大が会話にまで浸透している&lt;/li&gt;
  &lt;li&gt;チーム間の異動は自由にできるようになったのか？&lt;/li&gt;
  &lt;li&gt;チームメンバに(社内)採用の権限を落とした&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://cybozu.co.jp/company/work-style/"&gt;体験入部制度&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;公開されているJob boardでの応募はどのようにすればできる？&lt;/li&gt;
  &lt;li&gt;人気のあるチームに集まっちゃう問題？&lt;/li&gt;
  &lt;li&gt;レガシーとなったプロダクトのチームで解く課題の人気&lt;/li&gt;
  &lt;li&gt;組織変更後の給与評価はどのようにするようになった？&lt;/li&gt;
  &lt;li&gt;メンバの活躍をどのように把握しているのか？&lt;/li&gt;
  &lt;li&gt;市場価値として、社内＋社外の評価を利用している&lt;/li&gt;
  &lt;li&gt;アジャイル開発のフレームワークは何を使っている？&lt;/li&gt;
  &lt;li&gt;スクラムチームはどの程度ある？&lt;/li&gt;
  &lt;li&gt;スクラムチーム間の情報交換はどうしている？&lt;/li&gt;
  &lt;li&gt;開発ツールとしてのコード管理は何を使っている？&lt;/li&gt;
  &lt;li&gt;徐々にGitHub Enterpriseから、GitHub.comの利用へ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/index.html"&gt;RSGT2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/24</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nj3kn98vsbq3z86xzy.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 29 Dec 2019 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nj3kn98vsbq3z86xzy.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4001/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:06:55</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;サイボウズはどのようなプロダクトを開発しているのか？&lt;/li&gt;
  &lt;li&gt;kintoneの競合って？&lt;/li&gt;
  &lt;li&gt;サイボウズって外注しているの？オフショアは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.cybozu.io/entry/2019/02/13/080000"&gt;組織変更したら部長がいなくなりました&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;部長がいなくなる組織変更する前はどのような組織だったのか？&lt;/li&gt;
  &lt;li&gt;マトリクス組織、上長って複数名？&lt;/li&gt;
  &lt;li&gt;マトリクス組織において、どのような問題があったのか？&lt;/li&gt;
  &lt;li&gt;職能定義に固定的に考えてしまう&lt;/li&gt;
  &lt;li&gt;どのように組織変更を進めていったのか？&lt;/li&gt;
  &lt;li&gt;60組以上に今考えている課題について、ヒアリング実施&lt;/li&gt;
  &lt;li&gt;左右の壁と、上下の壁&lt;/li&gt;
  &lt;li&gt;プロダクトチームはどういうメンバ構成なのか？&lt;/li&gt;
  &lt;li&gt;組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？&lt;/li&gt;
  &lt;li&gt;ヒアリング結果は常にオープンに&lt;/li&gt;
  &lt;li&gt;「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？&lt;/li&gt;
  &lt;li&gt;旧部長の多くは、組織運営チームにJoinした&lt;/li&gt;
  &lt;li&gt;マネージャは孤独な仕事であるが、チームを組んで考えるようになった&lt;/li&gt;
  &lt;li&gt;組織運営チームで解決する課題はどのように発見しているのか？&lt;/li&gt;
  &lt;li&gt;発見した課題の優先度付けは？&lt;/li&gt;
  &lt;li&gt;Scrum at ScaleにおけるEAT(Executive Action Team)に近い&lt;/li&gt;
  &lt;li&gt;EATはエスカレーションされた問題の即日解決を目指す&lt;/li&gt;
  &lt;li&gt;予算系のものの承認は、誰がするようになったのか？&lt;/li&gt;
  &lt;li&gt;予算枠確保よりも、必要なものを、必要なときに使うのが大事&lt;/li&gt;
  &lt;li&gt;チームの活動をkintone上というオープンな場に公開する&lt;/li&gt;
  &lt;li&gt;公明正大が会話にまで浸透している&lt;/li&gt;
  &lt;li&gt;チーム間の異動は自由にできるようになったのか？&lt;/li&gt;
  &lt;li&gt;チームメンバに(社内)採用の権限を落とした&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://cybozu.co.jp/company/work-style/"&gt;体験入部制度&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;公開されているJob boardでの応募はどのようにすればできる？&lt;/li&gt;
  &lt;li&gt;人気のあるチームに集まっちゃう問題？&lt;/li&gt;
  &lt;li&gt;レガシーとなったプロダクトのチームで解く課題の人気&lt;/li&gt;
  &lt;li&gt;組織変更後の給与評価はどのようにするようになった？&lt;/li&gt;
  &lt;li&gt;メンバの活躍をどのように把握しているのか？&lt;/li&gt;
  &lt;li&gt;市場価値として、社内＋社外の評価を利用している&lt;/li&gt;
  &lt;li&gt;アジャイル開発のフレームワークは何を使っている？&lt;/li&gt;
  &lt;li&gt;スクラムチームはどの程度ある？&lt;/li&gt;
  &lt;li&gt;スクラムチーム間の情報交換はどうしている？&lt;/li&gt;
  &lt;li&gt;開発ツールとしてのコード管理は何を使っている？&lt;/li&gt;
  &lt;li&gt;徐々にGitHub Enterpriseから、GitHub.comの利用へ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/index.html"&gt;RSGT2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;サイボウズはどのようなプロダクトを開発しているのか？&lt;/li&gt;
  &lt;li&gt;kintoneの競合って？&lt;/li&gt;
  &lt;li&gt;サイボウズって外注しているの？オフショアは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.cybozu.io/entry/2019/02/13/080000"&gt;組織変更したら部長がいなくなりました&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;部長がいなくなる組織変更する前はどのような組織だったのか？&lt;/li&gt;
  &lt;li&gt;マトリクス組織、上長って複数名？&lt;/li&gt;
  &lt;li&gt;マトリクス組織において、どのような問題があったのか？&lt;/li&gt;
  &lt;li&gt;職能定義に固定的に考えてしまう&lt;/li&gt;
  &lt;li&gt;どのように組織変更を進めていったのか？&lt;/li&gt;
  &lt;li&gt;60組以上に今考えている課題について、ヒアリング実施&lt;/li&gt;
  &lt;li&gt;左右の壁と、上下の壁&lt;/li&gt;
  &lt;li&gt;プロダクトチームはどういうメンバ構成なのか？&lt;/li&gt;
  &lt;li&gt;組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？&lt;/li&gt;
  &lt;li&gt;ヒアリング結果は常にオープンに&lt;/li&gt;
  &lt;li&gt;「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？&lt;/li&gt;
  &lt;li&gt;旧部長の多くは、組織運営チームにJoinした&lt;/li&gt;
  &lt;li&gt;マネージャは孤独な仕事であるが、チームを組んで考えるようになった&lt;/li&gt;
  &lt;li&gt;組織運営チームで解決する課題はどのように発見しているのか？&lt;/li&gt;
  &lt;li&gt;発見した課題の優先度付けは？&lt;/li&gt;
  &lt;li&gt;Scrum at ScaleにおけるEAT(Executive Action Team)に近い&lt;/li&gt;
  &lt;li&gt;EATはエスカレーションされた問題の即日解決を目指す&lt;/li&gt;
  &lt;li&gt;予算系のものの承認は、誰がするようになったのか？&lt;/li&gt;
  &lt;li&gt;予算枠確保よりも、必要なものを、必要なときに使うのが大事&lt;/li&gt;
  &lt;li&gt;チームの活動をkintone上というオープンな場に公開する&lt;/li&gt;
  &lt;li&gt;公明正大が会話にまで浸透している&lt;/li&gt;
  &lt;li&gt;チーム間の異動は自由にできるようになったのか？&lt;/li&gt;
  &lt;li&gt;チームメンバに(社内)採用の権限を落とした&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://cybozu.co.jp/company/work-style/"&gt;体験入部制度&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;公開されているJob boardでの応募はどのようにすればできる？&lt;/li&gt;
  &lt;li&gt;人気のあるチームに集まっちゃう問題？&lt;/li&gt;
  &lt;li&gt;レガシーとなったプロダクトのチームで解く課題の人気&lt;/li&gt;
  &lt;li&gt;組織変更後の給与評価はどのようにするようになった？&lt;/li&gt;
  &lt;li&gt;メンバの活躍をどのように把握しているのか？&lt;/li&gt;
  &lt;li&gt;市場価値として、社内＋社外の評価を利用している&lt;/li&gt;
  &lt;li&gt;アジャイル開発のフレームワークは何を使っている？&lt;/li&gt;
  &lt;li&gt;スクラムチームはどの程度ある？&lt;/li&gt;
  &lt;li&gt;スクラムチーム間の情報交換はどうしている？&lt;/li&gt;
  &lt;li&gt;開発ツールとしてのコード管理は何を使っている？&lt;/li&gt;
  &lt;li&gt;徐々にGitHub Enterpriseから、GitHub.comの利用へ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/index.html"&gt;RSGT2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>24. 開発組織から部長がいなくなるまでの経緯 w/ teppeis</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>25</podcast:episode>
    </item>
    <item>
      <title>23. 社内ISUCON w/ yosuke_furukawa</title>
      <link>https://fukabori.fm/episode/23</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Write Code Every Day&lt;/li&gt;
  &lt;li&gt;ISUCONとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate"&gt;エンジニア5000名が参加するISUCONとは何か&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONに参加するまでの流れ&lt;/li&gt;
  &lt;li&gt;ISUCON問題作問する側のインフラ担当は大変&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/isucon/isucon9-qualify"&gt;ISUCARI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011"&gt;ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;R-ISUCONは優勝者が作問側へ&lt;/li&gt;
  &lt;li&gt;ISUCON参加側のyosuke_furukawaの役割は？&lt;/li&gt;
  &lt;li&gt;テディベアプログラミング&lt;/li&gt;
  &lt;li&gt;なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？&lt;/li&gt;
  &lt;li&gt;ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く&lt;/li&gt;
  &lt;li&gt;社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？&lt;/li&gt;
  &lt;li&gt;スモールスタートで始めつつ、偉い人を巻き込む&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/recruit-tech/r-isucon"&gt;R-ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;PortalにVM再起動ボタン&lt;/li&gt;
  &lt;li&gt;ベンチ動きっぱなしISUCON&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0"&gt;NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DevOpsエンジニアリング&lt;/li&gt;
  &lt;li&gt;エンジニアの横のつながり&lt;/li&gt;
  &lt;li&gt;運営メンバってだいたいどのぐらい人数？&lt;/li&gt;
  &lt;li&gt;社内ISUCONの言語選定は？&lt;/li&gt;
  &lt;li&gt;開催までの工数ってどう考えるか？&lt;/li&gt;
  &lt;li&gt;社内ISUCONデスマーチ&lt;/li&gt;
  &lt;li&gt;インフラ基盤には何を使う？&lt;/li&gt;
  &lt;li&gt;VMのOSは何を？&lt;/li&gt;
  &lt;li&gt;複数VMを異なるスペック、構成で提供する&lt;/li&gt;
  &lt;li&gt;参照実装を増やす場合に、CIなどを回す？&lt;/li&gt;
  &lt;li&gt;フロントエンドエンジニアがISUCONでは能力を出しにくい&lt;/li&gt;
  &lt;li&gt;フロントエンド限定のスピードハッカソン&lt;/li&gt;
  &lt;li&gt;ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも&lt;/li&gt;
  &lt;li&gt;ベンチマーカはどうやってい実装している？&lt;/li&gt;
  &lt;li&gt;データベースに入れておくデータセットはどうやって作る？&lt;/li&gt;
  &lt;li&gt;画像のプリセットを作るのが大変&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/loadimpact/k6"&gt;loadimpact/k6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.getpostman.com"&gt;Postman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現代システムアーキテクチャとの乖離について&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://recruit-tech.co.jp/recruitment/"&gt;リクルートテクノロジーズ 採用情報&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jsconf.jp/2019/"&gt;JSConf JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/23</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7njpm3cnm85q8p9rezq.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 21 Oct 2019 04:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7njpm3cnm85q8p9rezq.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/4000/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:03:30</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Write Code Every Day&lt;/li&gt;
  &lt;li&gt;ISUCONとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate"&gt;エンジニア5000名が参加するISUCONとは何か&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONに参加するまでの流れ&lt;/li&gt;
  &lt;li&gt;ISUCON問題作問する側のインフラ担当は大変&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/isucon/isucon9-qualify"&gt;ISUCARI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011"&gt;ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;R-ISUCONは優勝者が作問側へ&lt;/li&gt;
  &lt;li&gt;ISUCON参加側のyosuke_furukawaの役割は？&lt;/li&gt;
  &lt;li&gt;テディベアプログラミング&lt;/li&gt;
  &lt;li&gt;なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？&lt;/li&gt;
  &lt;li&gt;ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く&lt;/li&gt;
  &lt;li&gt;社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？&lt;/li&gt;
  &lt;li&gt;スモールスタートで始めつつ、偉い人を巻き込む&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/recruit-tech/r-isucon"&gt;R-ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;PortalにVM再起動ボタン&lt;/li&gt;
  &lt;li&gt;ベンチ動きっぱなしISUCON&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0"&gt;NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DevOpsエンジニアリング&lt;/li&gt;
  &lt;li&gt;エンジニアの横のつながり&lt;/li&gt;
  &lt;li&gt;運営メンバってだいたいどのぐらい人数？&lt;/li&gt;
  &lt;li&gt;社内ISUCONの言語選定は？&lt;/li&gt;
  &lt;li&gt;開催までの工数ってどう考えるか？&lt;/li&gt;
  &lt;li&gt;社内ISUCONデスマーチ&lt;/li&gt;
  &lt;li&gt;インフラ基盤には何を使う？&lt;/li&gt;
  &lt;li&gt;VMのOSは何を？&lt;/li&gt;
  &lt;li&gt;複数VMを異なるスペック、構成で提供する&lt;/li&gt;
  &lt;li&gt;参照実装を増やす場合に、CIなどを回す？&lt;/li&gt;
  &lt;li&gt;フロントエンドエンジニアがISUCONでは能力を出しにくい&lt;/li&gt;
  &lt;li&gt;フロントエンド限定のスピードハッカソン&lt;/li&gt;
  &lt;li&gt;ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも&lt;/li&gt;
  &lt;li&gt;ベンチマーカはどうやってい実装している？&lt;/li&gt;
  &lt;li&gt;データベースに入れておくデータセットはどうやって作る？&lt;/li&gt;
  &lt;li&gt;画像のプリセットを作るのが大変&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/loadimpact/k6"&gt;loadimpact/k6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.getpostman.com"&gt;Postman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現代システムアーキテクチャとの乖離について&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://recruit-tech.co.jp/recruitment/"&gt;リクルートテクノロジーズ 採用情報&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jsconf.jp/2019/"&gt;JSConf JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Write Code Every Day&lt;/li&gt;
  &lt;li&gt;ISUCONとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate"&gt;エンジニア5000名が参加するISUCONとは何か&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ISUCONに参加するまでの流れ&lt;/li&gt;
  &lt;li&gt;ISUCON問題作問する側のインフラ担当は大変&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/isucon/isucon9-qualify"&gt;ISUCARI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011"&gt;ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;R-ISUCONは優勝者が作問側へ&lt;/li&gt;
  &lt;li&gt;ISUCON参加側のyosuke_furukawaの役割は？&lt;/li&gt;
  &lt;li&gt;テディベアプログラミング&lt;/li&gt;
  &lt;li&gt;なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？&lt;/li&gt;
  &lt;li&gt;ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く&lt;/li&gt;
  &lt;li&gt;社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？&lt;/li&gt;
  &lt;li&gt;スモールスタートで始めつつ、偉い人を巻き込む&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/recruit-tech/r-isucon"&gt;R-ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;PortalにVM再起動ボタン&lt;/li&gt;
  &lt;li&gt;ベンチ動きっぱなしISUCON&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0"&gt;NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DevOpsエンジニアリング&lt;/li&gt;
  &lt;li&gt;エンジニアの横のつながり&lt;/li&gt;
  &lt;li&gt;運営メンバってだいたいどのぐらい人数？&lt;/li&gt;
  &lt;li&gt;社内ISUCONの言語選定は？&lt;/li&gt;
  &lt;li&gt;開催までの工数ってどう考えるか？&lt;/li&gt;
  &lt;li&gt;社内ISUCONデスマーチ&lt;/li&gt;
  &lt;li&gt;インフラ基盤には何を使う？&lt;/li&gt;
  &lt;li&gt;VMのOSは何を？&lt;/li&gt;
  &lt;li&gt;複数VMを異なるスペック、構成で提供する&lt;/li&gt;
  &lt;li&gt;参照実装を増やす場合に、CIなどを回す？&lt;/li&gt;
  &lt;li&gt;フロントエンドエンジニアがISUCONでは能力を出しにくい&lt;/li&gt;
  &lt;li&gt;フロントエンド限定のスピードハッカソン&lt;/li&gt;
  &lt;li&gt;ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも&lt;/li&gt;
  &lt;li&gt;ベンチマーカはどうやってい実装している？&lt;/li&gt;
  &lt;li&gt;データベースに入れておくデータセットはどうやって作る？&lt;/li&gt;
  &lt;li&gt;画像のプリセットを作るのが大変&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/loadimpact/k6"&gt;loadimpact/k6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.getpostman.com"&gt;Postman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;現代システムアーキテクチャとの乖離について&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://recruit-tech.co.jp/recruitment/"&gt;リクルートテクノロジーズ 採用情報&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jsconf.jp/2019/"&gt;JSConf JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>23. 社内ISUCON w/ yosuke_furukawa</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>24</podcast:episode>
    </item>
    <item>
      <title>22. ソフトウェア・ファースト w/ takoratta</title>
      <link>https://fukabori.fm/episode/22</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/"&gt;ソフトウェア・ファースト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.mu/softwarefirst"&gt;製作委員会のnote&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍執筆の動機&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873118482/"&gt;エンジニアのためのマネジメントキャリアパス&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DXという言葉は使いたくなかった&lt;/li&gt;
  &lt;li&gt;ソフトウェア・ファーストという名前がついた経緯&lt;/li&gt;
  &lt;li&gt;モバイルファースト、AIファーストとの対比&lt;/li&gt;
  &lt;li&gt;ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける&lt;/li&gt;
  &lt;li&gt;トランスフォーメーションより変革という言葉&lt;/li&gt;
  &lt;li&gt;人と組織を変える気がないDX&lt;/li&gt;
  &lt;li&gt;RPAは変革の途中であり、小手先の技術&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/4GL"&gt;4GL&lt;/a&gt;や&lt;a href="http://e-words.jp/w/EUC-1.html"&gt;EUC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンプラの技術的負債の解消？&lt;/li&gt;
  &lt;li&gt;事業会社がSIerへ丸投げするのは、負債の発生&lt;/li&gt;
  &lt;li&gt;内製化、手の内化&lt;/li&gt;
  &lt;li&gt;メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える&lt;/li&gt;
  &lt;li&gt;常に触り続けるのが、負債化を避けるのは王道&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://shuuji3.github.io/eng-practices/"&gt;Google エンジニアリング・プラクティス ドキュメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1章 ソフトウェアファースト のサマリ&lt;/li&gt;
  &lt;li&gt;2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ&lt;/li&gt;
  &lt;li&gt;日本でIT産業の競争力を失った理由&lt;/li&gt;
  &lt;li&gt;IT産業は製造業を模倣しているが、実際は模倣できていない&lt;/li&gt;
  &lt;li&gt;なぜ、製造業ではオーナーシップを保っているのか？&lt;/li&gt;
  &lt;li&gt;ものづくりにおける技能オリンピック&lt;/li&gt;
  &lt;li&gt;経営層がITを理解しているかどうか&lt;/li&gt;
  &lt;li&gt;役員の中にソフトウェアがわかる人が何人いるか？&lt;/li&gt;
  &lt;li&gt;ソフトウェアがわかるとは、どの程度まで理解していればいいのか？&lt;/li&gt;
  &lt;li&gt;幹部や経営層にどのような教育をお願いすればいいのか？&lt;/li&gt;
  &lt;li&gt;日本の経営者がITを理解できないのは、お友達が悪いから&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/kunihirotanaka"&gt;さくらインターネットの田中さん&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ&lt;/li&gt;
  &lt;li&gt;DXの勝者と敗者：ネットフリックスとブロックバスター&lt;/li&gt;
  &lt;li&gt;経営陣のITリテラシ、風通しの良い組織文化、会社のミッション&lt;/li&gt;
  &lt;li&gt;セブンペイ&lt;/li&gt;
  &lt;li&gt;某元国営企業のアプリ&lt;/li&gt;
  &lt;li&gt;技術を分かってる経営層を増やすには？&lt;/li&gt;
  &lt;li&gt;前回同様に、やっぱり辞めちゃえばいい、辞める気で変える&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://toyokeizai.net/articles/-/92606"&gt;Google TGIF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社内システムのリバースエンジニアリングから技術の価値を見せる&lt;/li&gt;
  &lt;li&gt;4章：これからの「強い開発組織」を考える のサマリ&lt;/li&gt;
  &lt;li&gt;5章：ソフトウェア・ファーストなキャリアを築くには のサマリ&lt;/li&gt;
  &lt;li&gt;組織を作るのはプロダクトを作る人、人事はサポート&lt;/li&gt;
  &lt;li&gt;組織に対するオーナーシップをどうやって持ってもらうか？&lt;/li&gt;
  &lt;li&gt;組織はコミュニティと一緒である&lt;/li&gt;
  &lt;li&gt;書籍の制作秘話、何が大変だったのか？&lt;/li&gt;
  &lt;li&gt;受託開発のように受け身で執筆してしまっていた&lt;/li&gt;
  &lt;li&gt;ペルソナを後で書いた&lt;/li&gt;
  &lt;li&gt;書籍が、自分の分身になっていなかった&lt;/li&gt;
  &lt;li&gt;3万字を捨てる決断&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2019.pmconf.jp"&gt;プロダクトマネージャーカンファレンス 2019&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーカンファレンスを始めたきっかけ&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/22</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7njmh5n8fyehbwwf97h.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 14 Oct 2019 10:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7njmh5n8fyehbwwf97h.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3999/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:15:45</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/"&gt;ソフトウェア・ファースト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.mu/softwarefirst"&gt;製作委員会のnote&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍執筆の動機&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873118482/"&gt;エンジニアのためのマネジメントキャリアパス&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DXという言葉は使いたくなかった&lt;/li&gt;
  &lt;li&gt;ソフトウェア・ファーストという名前がついた経緯&lt;/li&gt;
  &lt;li&gt;モバイルファースト、AIファーストとの対比&lt;/li&gt;
  &lt;li&gt;ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける&lt;/li&gt;
  &lt;li&gt;トランスフォーメーションより変革という言葉&lt;/li&gt;
  &lt;li&gt;人と組織を変える気がないDX&lt;/li&gt;
  &lt;li&gt;RPAは変革の途中であり、小手先の技術&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/4GL"&gt;4GL&lt;/a&gt;や&lt;a href="http://e-words.jp/w/EUC-1.html"&gt;EUC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンプラの技術的負債の解消？&lt;/li&gt;
  &lt;li&gt;事業会社がSIerへ丸投げするのは、負債の発生&lt;/li&gt;
  &lt;li&gt;内製化、手の内化&lt;/li&gt;
  &lt;li&gt;メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える&lt;/li&gt;
  &lt;li&gt;常に触り続けるのが、負債化を避けるのは王道&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://shuuji3.github.io/eng-practices/"&gt;Google エンジニアリング・プラクティス ドキュメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1章 ソフトウェアファースト のサマリ&lt;/li&gt;
  &lt;li&gt;2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ&lt;/li&gt;
  &lt;li&gt;日本でIT産業の競争力を失った理由&lt;/li&gt;
  &lt;li&gt;IT産業は製造業を模倣しているが、実際は模倣できていない&lt;/li&gt;
  &lt;li&gt;なぜ、製造業ではオーナーシップを保っているのか？&lt;/li&gt;
  &lt;li&gt;ものづくりにおける技能オリンピック&lt;/li&gt;
  &lt;li&gt;経営層がITを理解しているかどうか&lt;/li&gt;
  &lt;li&gt;役員の中にソフトウェアがわかる人が何人いるか？&lt;/li&gt;
  &lt;li&gt;ソフトウェアがわかるとは、どの程度まで理解していればいいのか？&lt;/li&gt;
  &lt;li&gt;幹部や経営層にどのような教育をお願いすればいいのか？&lt;/li&gt;
  &lt;li&gt;日本の経営者がITを理解できないのは、お友達が悪いから&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/kunihirotanaka"&gt;さくらインターネットの田中さん&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ&lt;/li&gt;
  &lt;li&gt;DXの勝者と敗者：ネットフリックスとブロックバスター&lt;/li&gt;
  &lt;li&gt;経営陣のITリテラシ、風通しの良い組織文化、会社のミッション&lt;/li&gt;
  &lt;li&gt;セブンペイ&lt;/li&gt;
  &lt;li&gt;某元国営企業のアプリ&lt;/li&gt;
  &lt;li&gt;技術を分かってる経営層を増やすには？&lt;/li&gt;
  &lt;li&gt;前回同様に、やっぱり辞めちゃえばいい、辞める気で変える&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://toyokeizai.net/articles/-/92606"&gt;Google TGIF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社内システムのリバースエンジニアリングから技術の価値を見せる&lt;/li&gt;
  &lt;li&gt;4章：これからの「強い開発組織」を考える のサマリ&lt;/li&gt;
  &lt;li&gt;5章：ソフトウェア・ファーストなキャリアを築くには のサマリ&lt;/li&gt;
  &lt;li&gt;組織を作るのはプロダクトを作る人、人事はサポート&lt;/li&gt;
  &lt;li&gt;組織に対するオーナーシップをどうやって持ってもらうか？&lt;/li&gt;
  &lt;li&gt;組織はコミュニティと一緒である&lt;/li&gt;
  &lt;li&gt;書籍の制作秘話、何が大変だったのか？&lt;/li&gt;
  &lt;li&gt;受託開発のように受け身で執筆してしまっていた&lt;/li&gt;
  &lt;li&gt;ペルソナを後で書いた&lt;/li&gt;
  &lt;li&gt;書籍が、自分の分身になっていなかった&lt;/li&gt;
  &lt;li&gt;3万字を捨てる決断&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2019.pmconf.jp"&gt;プロダクトマネージャーカンファレンス 2019&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーカンファレンスを始めたきっかけ&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/"&gt;ソフトウェア・ファースト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.mu/softwarefirst"&gt;製作委員会のnote&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;書籍執筆の動機&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873118482/"&gt;エンジニアのためのマネジメントキャリアパス&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DXという言葉は使いたくなかった&lt;/li&gt;
  &lt;li&gt;ソフトウェア・ファーストという名前がついた経緯&lt;/li&gt;
  &lt;li&gt;モバイルファースト、AIファーストとの対比&lt;/li&gt;
  &lt;li&gt;ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける&lt;/li&gt;
  &lt;li&gt;トランスフォーメーションより変革という言葉&lt;/li&gt;
  &lt;li&gt;人と組織を変える気がないDX&lt;/li&gt;
  &lt;li&gt;RPAは変革の途中であり、小手先の技術&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/4GL"&gt;4GL&lt;/a&gt;や&lt;a href="http://e-words.jp/w/EUC-1.html"&gt;EUC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンプラの技術的負債の解消？&lt;/li&gt;
  &lt;li&gt;事業会社がSIerへ丸投げするのは、負債の発生&lt;/li&gt;
  &lt;li&gt;内製化、手の内化&lt;/li&gt;
  &lt;li&gt;メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える&lt;/li&gt;
  &lt;li&gt;常に触り続けるのが、負債化を避けるのは王道&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://shuuji3.github.io/eng-practices/"&gt;Google エンジニアリング・プラクティス ドキュメント&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1章 ソフトウェアファースト のサマリ&lt;/li&gt;
  &lt;li&gt;2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ&lt;/li&gt;
  &lt;li&gt;日本でIT産業の競争力を失った理由&lt;/li&gt;
  &lt;li&gt;IT産業は製造業を模倣しているが、実際は模倣できていない&lt;/li&gt;
  &lt;li&gt;なぜ、製造業ではオーナーシップを保っているのか？&lt;/li&gt;
  &lt;li&gt;ものづくりにおける技能オリンピック&lt;/li&gt;
  &lt;li&gt;経営層がITを理解しているかどうか&lt;/li&gt;
  &lt;li&gt;役員の中にソフトウェアがわかる人が何人いるか？&lt;/li&gt;
  &lt;li&gt;ソフトウェアがわかるとは、どの程度まで理解していればいいのか？&lt;/li&gt;
  &lt;li&gt;幹部や経営層にどのような教育をお願いすればいいのか？&lt;/li&gt;
  &lt;li&gt;日本の経営者がITを理解できないのは、お友達が悪いから&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/kunihirotanaka"&gt;さくらインターネットの田中さん&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ&lt;/li&gt;
  &lt;li&gt;DXの勝者と敗者：ネットフリックスとブロックバスター&lt;/li&gt;
  &lt;li&gt;経営陣のITリテラシ、風通しの良い組織文化、会社のミッション&lt;/li&gt;
  &lt;li&gt;セブンペイ&lt;/li&gt;
  &lt;li&gt;某元国営企業のアプリ&lt;/li&gt;
  &lt;li&gt;技術を分かってる経営層を増やすには？&lt;/li&gt;
  &lt;li&gt;前回同様に、やっぱり辞めちゃえばいい、辞める気で変える&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://toyokeizai.net/articles/-/92606"&gt;Google TGIF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;社内システムのリバースエンジニアリングから技術の価値を見せる&lt;/li&gt;
  &lt;li&gt;4章：これからの「強い開発組織」を考える のサマリ&lt;/li&gt;
  &lt;li&gt;5章：ソフトウェア・ファーストなキャリアを築くには のサマリ&lt;/li&gt;
  &lt;li&gt;組織を作るのはプロダクトを作る人、人事はサポート&lt;/li&gt;
  &lt;li&gt;組織に対するオーナーシップをどうやって持ってもらうか？&lt;/li&gt;
  &lt;li&gt;組織はコミュニティと一緒である&lt;/li&gt;
  &lt;li&gt;書籍の制作秘話、何が大変だったのか？&lt;/li&gt;
  &lt;li&gt;受託開発のように受け身で執筆してしまっていた&lt;/li&gt;
  &lt;li&gt;ペルソナを後で書いた&lt;/li&gt;
  &lt;li&gt;書籍が、自分の分身になっていなかった&lt;/li&gt;
  &lt;li&gt;3万字を捨てる決断&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://2019.pmconf.jp"&gt;プロダクトマネージャーカンファレンス 2019&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;プロダクトマネージャーカンファレンスを始めたきっかけ&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>22. ソフトウェア・ファースト w/ takoratta</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>23</podcast:episode>
    </item>
    <item>
      <title>21. Segment Routing v6 とは何か？ w/ slankdev</title>
      <link>https://fukabori.fm/episode/21</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Segment Routingとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;Segmentはどういう単位か？&lt;/li&gt;
  &lt;li&gt;Source Routingとの関連は？&lt;/li&gt;
  &lt;li&gt;Segment Routingで、どういう問題が解けるのか？&lt;/li&gt;
  &lt;li&gt;現在のバックボーンネットワークにおけるMPLS&lt;/li&gt;
  &lt;li&gt;MPLSでネットワークを構成したときの課題&lt;/li&gt;
  &lt;li&gt;Segment RoutingだとNetwork Nodeが、よりステートレス&lt;/li&gt;
  &lt;li&gt;Segment Routing MPLSの動きは？&lt;/li&gt;
  &lt;li&gt;Segment Routing v6では、どういう拡張ヘッダを付与する？&lt;/li&gt;
  &lt;li&gt;Segment Routing Header(SRH)&lt;/li&gt;
  &lt;li&gt;Segment IDは128bit&lt;/li&gt;
  &lt;li&gt;SRHはネットワークノードで剥がすのか？&lt;/li&gt;
  &lt;li&gt;Segment Routingだからこその特徴は？&lt;/li&gt;
  &lt;li&gt;SRv6は世の中でどういうフェーズか？&lt;/li&gt;
  &lt;li&gt;IETF側で基本的な部分は決まってきている&lt;/li&gt;
  &lt;li&gt;SRv6の実装状況はどうか？&lt;/li&gt;
  &lt;li&gt;Juniperの指摘はSegment IDが広いという点&lt;/li&gt;
  &lt;li&gt;Kamueeって何でしたっけ？&lt;/li&gt;
  &lt;li&gt;InteropにおけるShownetとは？&lt;/li&gt;
  &lt;li&gt;InteropでKamueeをどう組み込んだ？&lt;/li&gt;
  &lt;li&gt;Service Chain周りで組み込んだ&lt;/li&gt;
  &lt;li&gt;Service Chainでは、どんな機能がつながった？&lt;/li&gt;
  &lt;li&gt;SRv6だと、Security Functionと上手くいかない部分がある&lt;/li&gt;
  &lt;li&gt;SR Proxyという機能&lt;/li&gt;
  &lt;li&gt;SRv6に対応していない機器が、SDHを見たときにどう動く？&lt;/li&gt;
  &lt;li&gt;SRv6の実装はどの辺が大変だった？&lt;/li&gt;
  &lt;li&gt;VRF(Virtual Routing and Forwarding)とは？&lt;/li&gt;
  &lt;li&gt;パケット作るのは簡単&lt;/li&gt;
  &lt;li&gt;VRFにおけるルーティングテーブルの選択ロジックは？&lt;/li&gt;
  &lt;li&gt;Kamueeのネットワークデバッグ機能とは？&lt;/li&gt;
  &lt;li&gt;SRv6の課題は？&lt;/li&gt;
  &lt;li&gt;ソフトウェアルータの課題は？&lt;/li&gt;
  &lt;li&gt;Segment Routingは自由研究のネタになる&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/21</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7njf1c2rnm73w4q2sq5.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Mon, 16 Sep 2019 14:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7njf1c2rnm73w4q2sq5.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3998/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:46:13</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Segment Routingとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;Segmentはどういう単位か？&lt;/li&gt;
  &lt;li&gt;Source Routingとの関連は？&lt;/li&gt;
  &lt;li&gt;Segment Routingで、どういう問題が解けるのか？&lt;/li&gt;
  &lt;li&gt;現在のバックボーンネットワークにおけるMPLS&lt;/li&gt;
  &lt;li&gt;MPLSでネットワークを構成したときの課題&lt;/li&gt;
  &lt;li&gt;Segment RoutingだとNetwork Nodeが、よりステートレス&lt;/li&gt;
  &lt;li&gt;Segment Routing MPLSの動きは？&lt;/li&gt;
  &lt;li&gt;Segment Routing v6では、どういう拡張ヘッダを付与する？&lt;/li&gt;
  &lt;li&gt;Segment Routing Header(SRH)&lt;/li&gt;
  &lt;li&gt;Segment IDは128bit&lt;/li&gt;
  &lt;li&gt;SRHはネットワークノードで剥がすのか？&lt;/li&gt;
  &lt;li&gt;Segment Routingだからこその特徴は？&lt;/li&gt;
  &lt;li&gt;SRv6は世の中でどういうフェーズか？&lt;/li&gt;
  &lt;li&gt;IETF側で基本的な部分は決まってきている&lt;/li&gt;
  &lt;li&gt;SRv6の実装状況はどうか？&lt;/li&gt;
  &lt;li&gt;Juniperの指摘はSegment IDが広いという点&lt;/li&gt;
  &lt;li&gt;Kamueeって何でしたっけ？&lt;/li&gt;
  &lt;li&gt;InteropにおけるShownetとは？&lt;/li&gt;
  &lt;li&gt;InteropでKamueeをどう組み込んだ？&lt;/li&gt;
  &lt;li&gt;Service Chain周りで組み込んだ&lt;/li&gt;
  &lt;li&gt;Service Chainでは、どんな機能がつながった？&lt;/li&gt;
  &lt;li&gt;SRv6だと、Security Functionと上手くいかない部分がある&lt;/li&gt;
  &lt;li&gt;SR Proxyという機能&lt;/li&gt;
  &lt;li&gt;SRv6に対応していない機器が、SDHを見たときにどう動く？&lt;/li&gt;
  &lt;li&gt;SRv6の実装はどの辺が大変だった？&lt;/li&gt;
  &lt;li&gt;VRF(Virtual Routing and Forwarding)とは？&lt;/li&gt;
  &lt;li&gt;パケット作るのは簡単&lt;/li&gt;
  &lt;li&gt;VRFにおけるルーティングテーブルの選択ロジックは？&lt;/li&gt;
  &lt;li&gt;Kamueeのネットワークデバッグ機能とは？&lt;/li&gt;
  &lt;li&gt;SRv6の課題は？&lt;/li&gt;
  &lt;li&gt;ソフトウェアルータの課題は？&lt;/li&gt;
  &lt;li&gt;Segment Routingは自由研究のネタになる&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Segment Routingとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;Segmentはどういう単位か？&lt;/li&gt;
  &lt;li&gt;Source Routingとの関連は？&lt;/li&gt;
  &lt;li&gt;Segment Routingで、どういう問題が解けるのか？&lt;/li&gt;
  &lt;li&gt;現在のバックボーンネットワークにおけるMPLS&lt;/li&gt;
  &lt;li&gt;MPLSでネットワークを構成したときの課題&lt;/li&gt;
  &lt;li&gt;Segment RoutingだとNetwork Nodeが、よりステートレス&lt;/li&gt;
  &lt;li&gt;Segment Routing MPLSの動きは？&lt;/li&gt;
  &lt;li&gt;Segment Routing v6では、どういう拡張ヘッダを付与する？&lt;/li&gt;
  &lt;li&gt;Segment Routing Header(SRH)&lt;/li&gt;
  &lt;li&gt;Segment IDは128bit&lt;/li&gt;
  &lt;li&gt;SRHはネットワークノードで剥がすのか？&lt;/li&gt;
  &lt;li&gt;Segment Routingだからこその特徴は？&lt;/li&gt;
  &lt;li&gt;SRv6は世の中でどういうフェーズか？&lt;/li&gt;
  &lt;li&gt;IETF側で基本的な部分は決まってきている&lt;/li&gt;
  &lt;li&gt;SRv6の実装状況はどうか？&lt;/li&gt;
  &lt;li&gt;Juniperの指摘はSegment IDが広いという点&lt;/li&gt;
  &lt;li&gt;Kamueeって何でしたっけ？&lt;/li&gt;
  &lt;li&gt;InteropにおけるShownetとは？&lt;/li&gt;
  &lt;li&gt;InteropでKamueeをどう組み込んだ？&lt;/li&gt;
  &lt;li&gt;Service Chain周りで組み込んだ&lt;/li&gt;
  &lt;li&gt;Service Chainでは、どんな機能がつながった？&lt;/li&gt;
  &lt;li&gt;SRv6だと、Security Functionと上手くいかない部分がある&lt;/li&gt;
  &lt;li&gt;SR Proxyという機能&lt;/li&gt;
  &lt;li&gt;SRv6に対応していない機器が、SDHを見たときにどう動く？&lt;/li&gt;
  &lt;li&gt;SRv6の実装はどの辺が大変だった？&lt;/li&gt;
  &lt;li&gt;VRF(Virtual Routing and Forwarding)とは？&lt;/li&gt;
  &lt;li&gt;パケット作るのは簡単&lt;/li&gt;
  &lt;li&gt;VRFにおけるルーティングテーブルの選択ロジックは？&lt;/li&gt;
  &lt;li&gt;Kamueeのネットワークデバッグ機能とは？&lt;/li&gt;
  &lt;li&gt;SRv6の課題は？&lt;/li&gt;
  &lt;li&gt;ソフトウェアルータの課題は？&lt;/li&gt;
  &lt;li&gt;Segment Routingは自由研究のネタになる&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>21. Segment Routing v6 とは何か？ w/ slankdev</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>22</podcast:episode>
    </item>
    <item>
      <title>20. 技術力をいかに評価するか？インターンシップにおける採用・戦略とは？ w/ makoga</title>
      <link>https://fukabori.fm/episode/20</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;CTOの1日ってどんな感じですか？コードは書きますか？&lt;/li&gt;
  &lt;li&gt;会社の経営戦略と人事制度（等級制度）との関連&lt;/li&gt;
  &lt;li&gt;等級（グレード）ダウンってありえる？&lt;/li&gt;
  &lt;li&gt;報酬はどのように決定しているのか？&lt;/li&gt;
  &lt;li&gt;技術力評価制度はどのような全体像・プロセスなのか？&lt;/li&gt;
  &lt;li&gt;評価のすり合わせは、なぜ実施するのか？&lt;/li&gt;
  &lt;li&gt;評価者2人はどのように選定しているのか？&lt;/li&gt;
  &lt;li&gt;定量的な評価を最初になぜ導入したのか？&lt;/li&gt;
  &lt;li&gt;人の給料を決めたくない&lt;/li&gt;
  &lt;li&gt;評価制度とグレードの昇給ってどういう相関？&lt;/li&gt;
  &lt;li&gt;技術力評価制度の社内の満足感はどうか？&lt;/li&gt;
  &lt;li&gt;自分の成長につながるフィードバックをもらえるのが大事&lt;/li&gt;
  &lt;li&gt;評価する側にも学びが多い&lt;/li&gt;
  &lt;li&gt;Voyageグループでは開発チームごとに色を出して良い&lt;/li&gt;
  &lt;li&gt;全社での技術ガイドラインはあるのか？&lt;/li&gt;
  &lt;li&gt;ない、事業特性と技術特性を考慮して決める&lt;/li&gt;
  &lt;li&gt;流行りで技術選定しない&lt;/li&gt;
  &lt;li&gt;好きな技術をねじ込んでくる機会はあっていい&lt;/li&gt;
  &lt;li&gt;新しい技術を浸透するための勉強会などは自主的に発生する？&lt;/li&gt;
  &lt;li&gt;今までの延長業務でも、新しい技術を学び選択肢を増やす&lt;/li&gt;
  &lt;li&gt;グレードを上げる判断基準は何か？&lt;/li&gt;
  &lt;li&gt;CCFB(360度評価)の評価項目は何か？&lt;/li&gt;
  &lt;li&gt;AmazonのLeadership Principle&lt;/li&gt;
  &lt;li&gt;エンジニア職種以外に技術力評価制度を応用可能か？&lt;/li&gt;
  &lt;li&gt;(技術力評価制度の)全体振り返りはどのようにやっているのか？&lt;/li&gt;
  &lt;li&gt;次に活かすTry項目はどのように決定するのか？&lt;/li&gt;
  &lt;li&gt;評価制度も自分たちでエンジニアリングしていく&lt;/li&gt;
  &lt;li&gt;新卒・中途採用はどのように改善したのか？&lt;/li&gt;
  &lt;li&gt;中途向けの面接の同席から始めた&lt;/li&gt;
  &lt;li&gt;評価会を通じて、採用スキルが上がる&lt;/li&gt;
  &lt;li&gt;どのタイミングで、面接の同席を辞めたのか？&lt;/li&gt;
  &lt;li&gt;最悪な状況を理解して、そこさえならなければやり方を任せる&lt;/li&gt;
  &lt;li&gt;採用における最低のラインとは何か？&lt;/li&gt;
  &lt;li&gt;新卒研修をどのように変えていったのか？&lt;/li&gt;
  &lt;li&gt;新卒入社研修を結果的になくした&lt;/li&gt;
  &lt;li&gt;チームとして、新卒を受け入れて育てられるスキル0&lt;/li&gt;
  &lt;li&gt;アジャイル戦略室では何をしたのか？&lt;/li&gt;
  &lt;li&gt;アジャイルは思想&lt;/li&gt;
  &lt;li&gt;振り返りの文化を根付かせる&lt;/li&gt;
  &lt;li&gt;振り返りでよく話す人、あまり話さない人&lt;/li&gt;
  &lt;li&gt;インターンシップ面白すぎでは？どのように決めているのか？&lt;/li&gt;
  &lt;li&gt;いかにインターンで、学生向けに目立つか？&lt;/li&gt;
  &lt;li&gt;講義をしっかりすることで学生に訴求した&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;2019/8/31 builderscon のランチセッションで &lt;a href="https://fukabori.fm/ajito.fm"&gt;ajito.fm&lt;/a&gt; の公開収録！&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/20</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7njm82xrcy3fszed86t.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 28 Jul 2019 15:50:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7njm82xrcy3fszed86t.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3997/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:00:36</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;CTOの1日ってどんな感じですか？コードは書きますか？&lt;/li&gt;
  &lt;li&gt;会社の経営戦略と人事制度（等級制度）との関連&lt;/li&gt;
  &lt;li&gt;等級（グレード）ダウンってありえる？&lt;/li&gt;
  &lt;li&gt;報酬はどのように決定しているのか？&lt;/li&gt;
  &lt;li&gt;技術力評価制度はどのような全体像・プロセスなのか？&lt;/li&gt;
  &lt;li&gt;評価のすり合わせは、なぜ実施するのか？&lt;/li&gt;
  &lt;li&gt;評価者2人はどのように選定しているのか？&lt;/li&gt;
  &lt;li&gt;定量的な評価を最初になぜ導入したのか？&lt;/li&gt;
  &lt;li&gt;人の給料を決めたくない&lt;/li&gt;
  &lt;li&gt;評価制度とグレードの昇給ってどういう相関？&lt;/li&gt;
  &lt;li&gt;技術力評価制度の社内の満足感はどうか？&lt;/li&gt;
  &lt;li&gt;自分の成長につながるフィードバックをもらえるのが大事&lt;/li&gt;
  &lt;li&gt;評価する側にも学びが多い&lt;/li&gt;
  &lt;li&gt;Voyageグループでは開発チームごとに色を出して良い&lt;/li&gt;
  &lt;li&gt;全社での技術ガイドラインはあるのか？&lt;/li&gt;
  &lt;li&gt;ない、事業特性と技術特性を考慮して決める&lt;/li&gt;
  &lt;li&gt;流行りで技術選定しない&lt;/li&gt;
  &lt;li&gt;好きな技術をねじ込んでくる機会はあっていい&lt;/li&gt;
  &lt;li&gt;新しい技術を浸透するための勉強会などは自主的に発生する？&lt;/li&gt;
  &lt;li&gt;今までの延長業務でも、新しい技術を学び選択肢を増やす&lt;/li&gt;
  &lt;li&gt;グレードを上げる判断基準は何か？&lt;/li&gt;
  &lt;li&gt;CCFB(360度評価)の評価項目は何か？&lt;/li&gt;
  &lt;li&gt;AmazonのLeadership Principle&lt;/li&gt;
  &lt;li&gt;エンジニア職種以外に技術力評価制度を応用可能か？&lt;/li&gt;
  &lt;li&gt;(技術力評価制度の)全体振り返りはどのようにやっているのか？&lt;/li&gt;
  &lt;li&gt;次に活かすTry項目はどのように決定するのか？&lt;/li&gt;
  &lt;li&gt;評価制度も自分たちでエンジニアリングしていく&lt;/li&gt;
  &lt;li&gt;新卒・中途採用はどのように改善したのか？&lt;/li&gt;
  &lt;li&gt;中途向けの面接の同席から始めた&lt;/li&gt;
  &lt;li&gt;評価会を通じて、採用スキルが上がる&lt;/li&gt;
  &lt;li&gt;どのタイミングで、面接の同席を辞めたのか？&lt;/li&gt;
  &lt;li&gt;最悪な状況を理解して、そこさえならなければやり方を任せる&lt;/li&gt;
  &lt;li&gt;採用における最低のラインとは何か？&lt;/li&gt;
  &lt;li&gt;新卒研修をどのように変えていったのか？&lt;/li&gt;
  &lt;li&gt;新卒入社研修を結果的になくした&lt;/li&gt;
  &lt;li&gt;チームとして、新卒を受け入れて育てられるスキル0&lt;/li&gt;
  &lt;li&gt;アジャイル戦略室では何をしたのか？&lt;/li&gt;
  &lt;li&gt;アジャイルは思想&lt;/li&gt;
  &lt;li&gt;振り返りの文化を根付かせる&lt;/li&gt;
  &lt;li&gt;振り返りでよく話す人、あまり話さない人&lt;/li&gt;
  &lt;li&gt;インターンシップ面白すぎでは？どのように決めているのか？&lt;/li&gt;
  &lt;li&gt;いかにインターンで、学生向けに目立つか？&lt;/li&gt;
  &lt;li&gt;講義をしっかりすることで学生に訴求した&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;2019/8/31 builderscon のランチセッションで &lt;a href="https://fukabori.fm/ajito.fm"&gt;ajito.fm&lt;/a&gt; の公開収録！&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;CTOの1日ってどんな感じですか？コードは書きますか？&lt;/li&gt;
  &lt;li&gt;会社の経営戦略と人事制度（等級制度）との関連&lt;/li&gt;
  &lt;li&gt;等級（グレード）ダウンってありえる？&lt;/li&gt;
  &lt;li&gt;報酬はどのように決定しているのか？&lt;/li&gt;
  &lt;li&gt;技術力評価制度はどのような全体像・プロセスなのか？&lt;/li&gt;
  &lt;li&gt;評価のすり合わせは、なぜ実施するのか？&lt;/li&gt;
  &lt;li&gt;評価者2人はどのように選定しているのか？&lt;/li&gt;
  &lt;li&gt;定量的な評価を最初になぜ導入したのか？&lt;/li&gt;
  &lt;li&gt;人の給料を決めたくない&lt;/li&gt;
  &lt;li&gt;評価制度とグレードの昇給ってどういう相関？&lt;/li&gt;
  &lt;li&gt;技術力評価制度の社内の満足感はどうか？&lt;/li&gt;
  &lt;li&gt;自分の成長につながるフィードバックをもらえるのが大事&lt;/li&gt;
  &lt;li&gt;評価する側にも学びが多い&lt;/li&gt;
  &lt;li&gt;Voyageグループでは開発チームごとに色を出して良い&lt;/li&gt;
  &lt;li&gt;全社での技術ガイドラインはあるのか？&lt;/li&gt;
  &lt;li&gt;ない、事業特性と技術特性を考慮して決める&lt;/li&gt;
  &lt;li&gt;流行りで技術選定しない&lt;/li&gt;
  &lt;li&gt;好きな技術をねじ込んでくる機会はあっていい&lt;/li&gt;
  &lt;li&gt;新しい技術を浸透するための勉強会などは自主的に発生する？&lt;/li&gt;
  &lt;li&gt;今までの延長業務でも、新しい技術を学び選択肢を増やす&lt;/li&gt;
  &lt;li&gt;グレードを上げる判断基準は何か？&lt;/li&gt;
  &lt;li&gt;CCFB(360度評価)の評価項目は何か？&lt;/li&gt;
  &lt;li&gt;AmazonのLeadership Principle&lt;/li&gt;
  &lt;li&gt;エンジニア職種以外に技術力評価制度を応用可能か？&lt;/li&gt;
  &lt;li&gt;(技術力評価制度の)全体振り返りはどのようにやっているのか？&lt;/li&gt;
  &lt;li&gt;次に活かすTry項目はどのように決定するのか？&lt;/li&gt;
  &lt;li&gt;評価制度も自分たちでエンジニアリングしていく&lt;/li&gt;
  &lt;li&gt;新卒・中途採用はどのように改善したのか？&lt;/li&gt;
  &lt;li&gt;中途向けの面接の同席から始めた&lt;/li&gt;
  &lt;li&gt;評価会を通じて、採用スキルが上がる&lt;/li&gt;
  &lt;li&gt;どのタイミングで、面接の同席を辞めたのか？&lt;/li&gt;
  &lt;li&gt;最悪な状況を理解して、そこさえならなければやり方を任せる&lt;/li&gt;
  &lt;li&gt;採用における最低のラインとは何か？&lt;/li&gt;
  &lt;li&gt;新卒研修をどのように変えていったのか？&lt;/li&gt;
  &lt;li&gt;新卒入社研修を結果的になくした&lt;/li&gt;
  &lt;li&gt;チームとして、新卒を受け入れて育てられるスキル0&lt;/li&gt;
  &lt;li&gt;アジャイル戦略室では何をしたのか？&lt;/li&gt;
  &lt;li&gt;アジャイルは思想&lt;/li&gt;
  &lt;li&gt;振り返りの文化を根付かせる&lt;/li&gt;
  &lt;li&gt;振り返りでよく話す人、あまり話さない人&lt;/li&gt;
  &lt;li&gt;インターンシップ面白すぎでは？どのように決めているのか？&lt;/li&gt;
  &lt;li&gt;いかにインターンで、学生向けに目立つか？&lt;/li&gt;
  &lt;li&gt;講義をしっかりすることで学生に訴求した&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;2019/8/31 builderscon のランチセッションで &lt;a href="https://fukabori.fm/ajito.fm"&gt;ajito.fm&lt;/a&gt; の公開収録！&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>20. 技術力をいかに評価するか？インターンシップにおける採用・戦略とは？ w/ makoga</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>21</podcast:episode>
    </item>
    <item>
      <title>19. エンジニアリング組織を取り巻く変化とは？ w/ hiroki_daichi</title>
      <link>https://fukabori.fm/episode/19</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3"&gt;エンジニアリング組織論への招待&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンジニアリングの定義とは？&lt;/li&gt;
  &lt;li&gt;エンジニアリングとは不確実性を減らすプロセス&lt;/li&gt;
  &lt;li&gt;間に落ちてる仕事&lt;/li&gt;
  &lt;li&gt;多くの仕事で出くわす人の多くは良い人&lt;/li&gt;
  &lt;li&gt;構造によって良い人たちが感情的な対立を起こしている&lt;/li&gt;
  &lt;li&gt;透明人間、構造の力、空気、アーキテクチャ&lt;/li&gt;
  &lt;li&gt;コードから書いた人、気持ちがわかるようになってきた&lt;/li&gt;
  &lt;li&gt;一番負債はコード変更履歴からTrackしていくのは見栄えがいい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity"&gt;Cyclomatic complexity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;知らない、わからないという恐怖は根源的なもの&lt;/li&gt;
  &lt;li&gt;人間はハードウェアの機能として、第一に動物である&lt;/li&gt;
  &lt;li&gt;本能は漏れのある抽象化をして、理性的な面を描いている&lt;/li&gt;
  &lt;li&gt;その人のことが嫌いだよね、ってのを一般論として話す&lt;/li&gt;
  &lt;li&gt;多くの問題は学校の問題ほど難しくない&lt;/li&gt;
  &lt;li&gt;問題発見をし、明晰化する学問が弱い&lt;/li&gt;
  &lt;li&gt;バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に&lt;/li&gt;
  &lt;li&gt;思考のリファクタリングをすると外部入出力は変わるのか？&lt;/li&gt;
  &lt;li&gt;目的という抽象をもって、手段という階層をリファクタリングする&lt;/li&gt;
  &lt;li&gt;Developer ExperienceとDigital Transformationという2つのDXとは？&lt;/li&gt;
  &lt;li&gt;内製化はいままで外部に持っていた異質なものを取り込む過程である&lt;/li&gt;
  &lt;li&gt;エンジニアがビジネスのラインに自然に入り込んでいく&lt;/li&gt;
  &lt;li&gt;マーケタもSQLを書く&lt;/li&gt;
  &lt;li&gt;コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程&lt;/li&gt;
  &lt;li&gt;組織というベクトルだけで解を出せないが、別の軸から解を出せる&lt;/li&gt;
  &lt;li&gt;仕様を決めることと、ソフトウェアを書くことが同じになっていく&lt;/li&gt;
  &lt;li&gt;文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる&lt;/li&gt;
  &lt;li&gt;ハレーションを恐れすぎると何もしなくなる&lt;/li&gt;
  &lt;li&gt;エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？&lt;/li&gt;
  &lt;li&gt;1,2回転職したらいいんじゃないか&lt;/li&gt;
  &lt;li&gt;ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ&lt;/li&gt;
  &lt;li&gt;シンプルを作るのは非常に難しい&lt;/li&gt;
  &lt;li&gt;ソフトウェアに社内事情を組み込みすぎている&lt;/li&gt;
  &lt;li&gt;マーケットの原理で物事を動かせない&lt;/li&gt;
  &lt;li&gt;なぜエンジニアが流出するのか？&lt;/li&gt;
  &lt;li&gt;正当なリスペクト、周りに優秀な人がいる、透明性のある社風&lt;/li&gt;
  &lt;li&gt;価値観が違うと、甘やかすことすらできない&lt;/li&gt;
  &lt;li&gt;その人が何を求めているのか紳士に向き合う&lt;/li&gt;
  &lt;li&gt;なんで辞めた人に理由を聞かないの？&lt;/li&gt;
  &lt;li&gt;リスペクトっていう概念が理解されていない問題&lt;/li&gt;
  &lt;li&gt;尊敬しているというのは、その人に興味を持ち、理解する過程である&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://rector.co.jp/"&gt;rector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/19</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nhdmjfswjxfqs0cb3v.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 09 Jul 2019 16:10:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nhdmjfswjxfqs0cb3v.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3996/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:04:03</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3"&gt;エンジニアリング組織論への招待&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンジニアリングの定義とは？&lt;/li&gt;
  &lt;li&gt;エンジニアリングとは不確実性を減らすプロセス&lt;/li&gt;
  &lt;li&gt;間に落ちてる仕事&lt;/li&gt;
  &lt;li&gt;多くの仕事で出くわす人の多くは良い人&lt;/li&gt;
  &lt;li&gt;構造によって良い人たちが感情的な対立を起こしている&lt;/li&gt;
  &lt;li&gt;透明人間、構造の力、空気、アーキテクチャ&lt;/li&gt;
  &lt;li&gt;コードから書いた人、気持ちがわかるようになってきた&lt;/li&gt;
  &lt;li&gt;一番負債はコード変更履歴からTrackしていくのは見栄えがいい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity"&gt;Cyclomatic complexity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;知らない、わからないという恐怖は根源的なもの&lt;/li&gt;
  &lt;li&gt;人間はハードウェアの機能として、第一に動物である&lt;/li&gt;
  &lt;li&gt;本能は漏れのある抽象化をして、理性的な面を描いている&lt;/li&gt;
  &lt;li&gt;その人のことが嫌いだよね、ってのを一般論として話す&lt;/li&gt;
  &lt;li&gt;多くの問題は学校の問題ほど難しくない&lt;/li&gt;
  &lt;li&gt;問題発見をし、明晰化する学問が弱い&lt;/li&gt;
  &lt;li&gt;バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に&lt;/li&gt;
  &lt;li&gt;思考のリファクタリングをすると外部入出力は変わるのか？&lt;/li&gt;
  &lt;li&gt;目的という抽象をもって、手段という階層をリファクタリングする&lt;/li&gt;
  &lt;li&gt;Developer ExperienceとDigital Transformationという2つのDXとは？&lt;/li&gt;
  &lt;li&gt;内製化はいままで外部に持っていた異質なものを取り込む過程である&lt;/li&gt;
  &lt;li&gt;エンジニアがビジネスのラインに自然に入り込んでいく&lt;/li&gt;
  &lt;li&gt;マーケタもSQLを書く&lt;/li&gt;
  &lt;li&gt;コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程&lt;/li&gt;
  &lt;li&gt;組織というベクトルだけで解を出せないが、別の軸から解を出せる&lt;/li&gt;
  &lt;li&gt;仕様を決めることと、ソフトウェアを書くことが同じになっていく&lt;/li&gt;
  &lt;li&gt;文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる&lt;/li&gt;
  &lt;li&gt;ハレーションを恐れすぎると何もしなくなる&lt;/li&gt;
  &lt;li&gt;エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？&lt;/li&gt;
  &lt;li&gt;1,2回転職したらいいんじゃないか&lt;/li&gt;
  &lt;li&gt;ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ&lt;/li&gt;
  &lt;li&gt;シンプルを作るのは非常に難しい&lt;/li&gt;
  &lt;li&gt;ソフトウェアに社内事情を組み込みすぎている&lt;/li&gt;
  &lt;li&gt;マーケットの原理で物事を動かせない&lt;/li&gt;
  &lt;li&gt;なぜエンジニアが流出するのか？&lt;/li&gt;
  &lt;li&gt;正当なリスペクト、周りに優秀な人がいる、透明性のある社風&lt;/li&gt;
  &lt;li&gt;価値観が違うと、甘やかすことすらできない&lt;/li&gt;
  &lt;li&gt;その人が何を求めているのか紳士に向き合う&lt;/li&gt;
  &lt;li&gt;なんで辞めた人に理由を聞かないの？&lt;/li&gt;
  &lt;li&gt;リスペクトっていう概念が理解されていない問題&lt;/li&gt;
  &lt;li&gt;尊敬しているというのは、その人に興味を持ち、理解する過程である&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://rector.co.jp/"&gt;rector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3"&gt;エンジニアリング組織論への招待&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;エンジニアリングの定義とは？&lt;/li&gt;
  &lt;li&gt;エンジニアリングとは不確実性を減らすプロセス&lt;/li&gt;
  &lt;li&gt;間に落ちてる仕事&lt;/li&gt;
  &lt;li&gt;多くの仕事で出くわす人の多くは良い人&lt;/li&gt;
  &lt;li&gt;構造によって良い人たちが感情的な対立を起こしている&lt;/li&gt;
  &lt;li&gt;透明人間、構造の力、空気、アーキテクチャ&lt;/li&gt;
  &lt;li&gt;コードから書いた人、気持ちがわかるようになってきた&lt;/li&gt;
  &lt;li&gt;一番負債はコード変更履歴からTrackしていくのは見栄えがいい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity"&gt;Cyclomatic complexity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;知らない、わからないという恐怖は根源的なもの&lt;/li&gt;
  &lt;li&gt;人間はハードウェアの機能として、第一に動物である&lt;/li&gt;
  &lt;li&gt;本能は漏れのある抽象化をして、理性的な面を描いている&lt;/li&gt;
  &lt;li&gt;その人のことが嫌いだよね、ってのを一般論として話す&lt;/li&gt;
  &lt;li&gt;多くの問題は学校の問題ほど難しくない&lt;/li&gt;
  &lt;li&gt;問題発見をし、明晰化する学問が弱い&lt;/li&gt;
  &lt;li&gt;バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に&lt;/li&gt;
  &lt;li&gt;思考のリファクタリングをすると外部入出力は変わるのか？&lt;/li&gt;
  &lt;li&gt;目的という抽象をもって、手段という階層をリファクタリングする&lt;/li&gt;
  &lt;li&gt;Developer ExperienceとDigital Transformationという2つのDXとは？&lt;/li&gt;
  &lt;li&gt;内製化はいままで外部に持っていた異質なものを取り込む過程である&lt;/li&gt;
  &lt;li&gt;エンジニアがビジネスのラインに自然に入り込んでいく&lt;/li&gt;
  &lt;li&gt;マーケタもSQLを書く&lt;/li&gt;
  &lt;li&gt;コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程&lt;/li&gt;
  &lt;li&gt;組織というベクトルだけで解を出せないが、別の軸から解を出せる&lt;/li&gt;
  &lt;li&gt;仕様を決めることと、ソフトウェアを書くことが同じになっていく&lt;/li&gt;
  &lt;li&gt;文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる&lt;/li&gt;
  &lt;li&gt;ハレーションを恐れすぎると何もしなくなる&lt;/li&gt;
  &lt;li&gt;エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？&lt;/li&gt;
  &lt;li&gt;1,2回転職したらいいんじゃないか&lt;/li&gt;
  &lt;li&gt;ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ&lt;/li&gt;
  &lt;li&gt;シンプルを作るのは非常に難しい&lt;/li&gt;
  &lt;li&gt;ソフトウェアに社内事情を組み込みすぎている&lt;/li&gt;
  &lt;li&gt;マーケットの原理で物事を動かせない&lt;/li&gt;
  &lt;li&gt;なぜエンジニアが流出するのか？&lt;/li&gt;
  &lt;li&gt;正当なリスペクト、周りに優秀な人がいる、透明性のある社風&lt;/li&gt;
  &lt;li&gt;価値観が違うと、甘やかすことすらできない&lt;/li&gt;
  &lt;li&gt;その人が何を求めているのか紳士に向き合う&lt;/li&gt;
  &lt;li&gt;なんで辞めた人に理由を聞かないの？&lt;/li&gt;
  &lt;li&gt;リスペクトっていう概念が理解されていない問題&lt;/li&gt;
  &lt;li&gt;尊敬しているというのは、その人に興味を持ち、理解する過程である&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://rector.co.jp/"&gt;rector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>19. エンジニアリング組織を取り巻く変化とは？ w/ hiroki_daichi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>20</podcast:episode>
    </item>
    <item>
      <title>18. どのようにDX支援・アジャイル開発・スクラムを進めているのか？ w/ sorano_tarou</title>
      <link>https://fukabori.fm/episode/18</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;アジャイル開発で採用しているフレームワークは何か？&lt;/li&gt;
  &lt;li&gt;スクラム、XP、モブプロ&lt;/li&gt;
  &lt;li&gt;スプリントのタイムボックスは？&lt;/li&gt;
  &lt;li&gt;補足: &lt;a href="http://e-words.jp/w/POC.html"&gt;POCとは&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スプリントプランニングどのぐらいの時間をかける？&lt;/li&gt;
  &lt;li&gt;なぜ、1日スプリントにしたのか？&lt;/li&gt;
  &lt;li&gt;スプリントプランニングには、SM/PO/Devの誰が参加する？&lt;/li&gt;
  &lt;li&gt;自分たちのモノ（社内のシステムなど）を作るのを並行してやる&lt;/li&gt;
  &lt;li&gt;空いている時間で新しい技術を触り続ける&lt;/li&gt;
  &lt;li&gt;デザイン思考のワークショップには、開発チームが参加する？&lt;/li&gt;
  &lt;li&gt;アイデアを本当に形にできるか、というのを重視ししている&lt;/li&gt;
  &lt;li&gt;開発時にお客様は同席する？&lt;/li&gt;
  &lt;li&gt;プロキシPOを立てることはあるか？&lt;/li&gt;
  &lt;li&gt;プロダクトバックログはいつ作っているのか？&lt;/li&gt;
  &lt;li&gt;プロダクトバックログへのアイデア貼り付けはいつやっても良い&lt;/li&gt;
  &lt;li&gt;アイデアの粒度はどの程度で書くか？&lt;/li&gt;
  &lt;li&gt;最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない&lt;/li&gt;
  &lt;li&gt;学習専用の時間はあえて確保しているのか？&lt;/li&gt;
  &lt;li&gt;アウトプットと同じぐらい、次のインプット時間が必要と考えている&lt;/li&gt;
  &lt;li&gt;モブチームはどのように取るタスクを選ぶのか？&lt;/li&gt;
  &lt;li&gt;Definition of Done、Acceptance Criteriaはどのように規定しているのか？&lt;/li&gt;
  &lt;li&gt;自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している&lt;/li&gt;
  &lt;li&gt;振り返りの手法は何を使うか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef"&gt;Fun, Done, Learn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;振り返りのコメントはどのようなものが出るのか？&lt;/li&gt;
  &lt;li&gt;わかりません、というのを自信を持って言いたい&lt;/li&gt;
  &lt;li&gt;各モブごとの振り返りと、全チームの振り返り&lt;/li&gt;
  &lt;li&gt;Tryを蓄積していく、TryのRefinement&lt;/li&gt;
  &lt;li&gt;インセプションデッキは作るのか？いつ作るのか？&lt;/li&gt;
  &lt;li&gt;デザイン思考のワークショップはどの程度実施するのか？&lt;/li&gt;
  &lt;li&gt;POC開発・検証後はどのように進めていくのか？&lt;/li&gt;
  &lt;li&gt;チームビルディングはどのタイミングで、何を実施するか？&lt;/li&gt;
  &lt;li&gt;オンボーディング向けに気をつけていることはあるか？&lt;/li&gt;
  &lt;li&gt;プログラミング経験ゼロの人向けの育成モブ&lt;/li&gt;
  &lt;li&gt;KDDI DIGITAL GATEでエンジニア募集中&lt;/li&gt;
  &lt;li&gt;どんなエンジニアに来て欲しいか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://codebase.connpass.com/event/134947/"&gt;アジャイル開発体験会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/18</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nhb67r8vgkh8172v6c.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 23 Jun 2019 14:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nhb67r8vgkh8172v6c.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3995/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:41:28</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;アジャイル開発で採用しているフレームワークは何か？&lt;/li&gt;
  &lt;li&gt;スクラム、XP、モブプロ&lt;/li&gt;
  &lt;li&gt;スプリントのタイムボックスは？&lt;/li&gt;
  &lt;li&gt;補足: &lt;a href="http://e-words.jp/w/POC.html"&gt;POCとは&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スプリントプランニングどのぐらいの時間をかける？&lt;/li&gt;
  &lt;li&gt;なぜ、1日スプリントにしたのか？&lt;/li&gt;
  &lt;li&gt;スプリントプランニングには、SM/PO/Devの誰が参加する？&lt;/li&gt;
  &lt;li&gt;自分たちのモノ（社内のシステムなど）を作るのを並行してやる&lt;/li&gt;
  &lt;li&gt;空いている時間で新しい技術を触り続ける&lt;/li&gt;
  &lt;li&gt;デザイン思考のワークショップには、開発チームが参加する？&lt;/li&gt;
  &lt;li&gt;アイデアを本当に形にできるか、というのを重視ししている&lt;/li&gt;
  &lt;li&gt;開発時にお客様は同席する？&lt;/li&gt;
  &lt;li&gt;プロキシPOを立てることはあるか？&lt;/li&gt;
  &lt;li&gt;プロダクトバックログはいつ作っているのか？&lt;/li&gt;
  &lt;li&gt;プロダクトバックログへのアイデア貼り付けはいつやっても良い&lt;/li&gt;
  &lt;li&gt;アイデアの粒度はどの程度で書くか？&lt;/li&gt;
  &lt;li&gt;最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない&lt;/li&gt;
  &lt;li&gt;学習専用の時間はあえて確保しているのか？&lt;/li&gt;
  &lt;li&gt;アウトプットと同じぐらい、次のインプット時間が必要と考えている&lt;/li&gt;
  &lt;li&gt;モブチームはどのように取るタスクを選ぶのか？&lt;/li&gt;
  &lt;li&gt;Definition of Done、Acceptance Criteriaはどのように規定しているのか？&lt;/li&gt;
  &lt;li&gt;自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している&lt;/li&gt;
  &lt;li&gt;振り返りの手法は何を使うか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef"&gt;Fun, Done, Learn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;振り返りのコメントはどのようなものが出るのか？&lt;/li&gt;
  &lt;li&gt;わかりません、というのを自信を持って言いたい&lt;/li&gt;
  &lt;li&gt;各モブごとの振り返りと、全チームの振り返り&lt;/li&gt;
  &lt;li&gt;Tryを蓄積していく、TryのRefinement&lt;/li&gt;
  &lt;li&gt;インセプションデッキは作るのか？いつ作るのか？&lt;/li&gt;
  &lt;li&gt;デザイン思考のワークショップはどの程度実施するのか？&lt;/li&gt;
  &lt;li&gt;POC開発・検証後はどのように進めていくのか？&lt;/li&gt;
  &lt;li&gt;チームビルディングはどのタイミングで、何を実施するか？&lt;/li&gt;
  &lt;li&gt;オンボーディング向けに気をつけていることはあるか？&lt;/li&gt;
  &lt;li&gt;プログラミング経験ゼロの人向けの育成モブ&lt;/li&gt;
  &lt;li&gt;KDDI DIGITAL GATEでエンジニア募集中&lt;/li&gt;
  &lt;li&gt;どんなエンジニアに来て欲しいか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://codebase.connpass.com/event/134947/"&gt;アジャイル開発体験会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;アジャイル開発で採用しているフレームワークは何か？&lt;/li&gt;
  &lt;li&gt;スクラム、XP、モブプロ&lt;/li&gt;
  &lt;li&gt;スプリントのタイムボックスは？&lt;/li&gt;
  &lt;li&gt;補足: &lt;a href="http://e-words.jp/w/POC.html"&gt;POCとは&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スプリントプランニングどのぐらいの時間をかける？&lt;/li&gt;
  &lt;li&gt;なぜ、1日スプリントにしたのか？&lt;/li&gt;
  &lt;li&gt;スプリントプランニングには、SM/PO/Devの誰が参加する？&lt;/li&gt;
  &lt;li&gt;自分たちのモノ（社内のシステムなど）を作るのを並行してやる&lt;/li&gt;
  &lt;li&gt;空いている時間で新しい技術を触り続ける&lt;/li&gt;
  &lt;li&gt;デザイン思考のワークショップには、開発チームが参加する？&lt;/li&gt;
  &lt;li&gt;アイデアを本当に形にできるか、というのを重視ししている&lt;/li&gt;
  &lt;li&gt;開発時にお客様は同席する？&lt;/li&gt;
  &lt;li&gt;プロキシPOを立てることはあるか？&lt;/li&gt;
  &lt;li&gt;プロダクトバックログはいつ作っているのか？&lt;/li&gt;
  &lt;li&gt;プロダクトバックログへのアイデア貼り付けはいつやっても良い&lt;/li&gt;
  &lt;li&gt;アイデアの粒度はどの程度で書くか？&lt;/li&gt;
  &lt;li&gt;最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない&lt;/li&gt;
  &lt;li&gt;学習専用の時間はあえて確保しているのか？&lt;/li&gt;
  &lt;li&gt;アウトプットと同じぐらい、次のインプット時間が必要と考えている&lt;/li&gt;
  &lt;li&gt;モブチームはどのように取るタスクを選ぶのか？&lt;/li&gt;
  &lt;li&gt;Definition of Done、Acceptance Criteriaはどのように規定しているのか？&lt;/li&gt;
  &lt;li&gt;自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している&lt;/li&gt;
  &lt;li&gt;振り返りの手法は何を使うか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef"&gt;Fun, Done, Learn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;振り返りのコメントはどのようなものが出るのか？&lt;/li&gt;
  &lt;li&gt;わかりません、というのを自信を持って言いたい&lt;/li&gt;
  &lt;li&gt;各モブごとの振り返りと、全チームの振り返り&lt;/li&gt;
  &lt;li&gt;Tryを蓄積していく、TryのRefinement&lt;/li&gt;
  &lt;li&gt;インセプションデッキは作るのか？いつ作るのか？&lt;/li&gt;
  &lt;li&gt;デザイン思考のワークショップはどの程度実施するのか？&lt;/li&gt;
  &lt;li&gt;POC開発・検証後はどのように進めていくのか？&lt;/li&gt;
  &lt;li&gt;チームビルディングはどのタイミングで、何を実施するか？&lt;/li&gt;
  &lt;li&gt;オンボーディング向けに気をつけていることはあるか？&lt;/li&gt;
  &lt;li&gt;プログラミング経験ゼロの人向けの育成モブ&lt;/li&gt;
  &lt;li&gt;KDDI DIGITAL GATEでエンジニア募集中&lt;/li&gt;
  &lt;li&gt;どんなエンジニアに来て欲しいか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://codebase.connpass.com/event/134947/"&gt;アジャイル開発体験会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>18. どのようにDX支援・アジャイル開発・スクラムを進めているのか？ w/ sorano_tarou</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>19</podcast:episode>
    </item>
    <item>
      <title>17. 本当にやれることを全部やってますか？ w/ takoratta</title>
      <link>https://fukabori.fm/episode/17</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DECって会社は何をやっていた？&lt;/li&gt;
  &lt;li&gt;IBMと7人の小人達&lt;/li&gt;
  &lt;li&gt;メインフレームに対するアンチテーゼ、ミニコンピューター&lt;/li&gt;
  &lt;li&gt;NEC PC-9801が大流行した時代&lt;/li&gt;
  &lt;li&gt;この時代の日本のIT企業は何をしていたのか？&lt;/li&gt;
  &lt;li&gt;通産省とのタッグ&lt;/li&gt;
  &lt;li&gt;富士通、日立、NEC、日本IBMで市場を分け合っていた時代&lt;/li&gt;
  &lt;li&gt;ソフトウェアはハードウェアのおまけだった&lt;/li&gt;
  &lt;li&gt;SIerという名前が生まれてきた背景&lt;/li&gt;
  &lt;li&gt;当初は何と何をインテグレーションしていたのか？&lt;/li&gt;
  &lt;li&gt;トークンリングとイーサネット&lt;/li&gt;
  &lt;li&gt;90年代の日本の技術者は、どのような開発をしていた？&lt;/li&gt;
  &lt;li&gt;ユニコードがない時代なので、国際化は大変な仕事だった&lt;/li&gt;
  &lt;li&gt;IT業界の下請け構造はどの時期から発生しはじめたのか？&lt;/li&gt;
  &lt;li&gt;Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC"&gt;デヴィッド・カトラー&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった&lt;/li&gt;
  &lt;li&gt;AppleTalkは素晴らしかった&lt;/li&gt;
  &lt;li&gt;90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった&lt;/li&gt;
  &lt;li&gt;オープンシステム流行の背景&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://e-words.jp/w/EUC-1.html"&gt;エンドユーザーコンピューティング&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/4GL"&gt;4GL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？&lt;/li&gt;
  &lt;li&gt;UIのちょっとしたミスが製品全体の品質の疑いにつながる&lt;/li&gt;
  &lt;li&gt;一番やってはいけないのはリコール&lt;/li&gt;
  &lt;li&gt;現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える&lt;/li&gt;
  &lt;li&gt;ITに対する捉え方の違いが、国内・国外との差を広げたのではないか&lt;/li&gt;
  &lt;li&gt;ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？&lt;/li&gt;
  &lt;li&gt;科学・製造・ビジネス&lt;/li&gt;
  &lt;li&gt;経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった&lt;/li&gt;
  &lt;li&gt;日本と米国の状況は危機的、スピード感が違う&lt;/li&gt;
  &lt;li&gt;日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない&lt;/li&gt;
  &lt;li&gt;及川さんのエンタープライズ向けのDXセミナーは娯楽&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://type.jp/et/feature/8350"&gt;静かに暮らしたい人たち&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;年功序列、終身雇用、企業内組合という三種の神器&lt;/li&gt;
  &lt;li&gt;安定を望む人も多いが、もうそんな場所はない&lt;/li&gt;
  &lt;li&gt;むしろ自分自身に自信を持てることが安定につながる&lt;/li&gt;
  &lt;li&gt;米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる&lt;/li&gt;
  &lt;li&gt;社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？&lt;/li&gt;
  &lt;li&gt;新しいことにチャレンジするコストよりも、転職するコストのが安い&lt;/li&gt;
  &lt;li&gt;みんな辞めればいい、そうすれば経営者は危機感を持つ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Exit_interview"&gt;Exit Interview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;人は会社と心中する必要はない&lt;/li&gt;
  &lt;li&gt;本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切&lt;/li&gt;
  &lt;li&gt;いつでもやめられる、けどやめない社員がいる会社は強い&lt;/li&gt;
  &lt;li&gt;辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？&lt;/li&gt;
  &lt;li&gt;井深さんの「説得工学」&lt;/li&gt;
  &lt;li&gt;足りないのはやり切る覚悟&lt;/li&gt;
  &lt;li&gt;一番必要なのはアントレプレナーシップ、起業家精神&lt;/li&gt;
  &lt;li&gt;本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？&lt;/li&gt;
  &lt;li&gt;オーナーシップを持って進めるのが少なくなってきているのではないか&lt;/li&gt;
  &lt;li&gt;日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？&lt;/li&gt;
  &lt;li&gt;他国のをまねして上手く仕上げて、外に出せばいい&lt;/li&gt;
  &lt;li&gt;スタートアップと同じことを、大企業でなぜできないのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://diamond.jp/articles/-/203881"&gt;アマゾンの成功から日本の部品メーカーが学ぶべき理由&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;最初のiPhoneにはSDKがなかった&lt;/li&gt;
  &lt;li&gt;まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略&lt;/li&gt;
  &lt;li&gt;どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？&lt;/li&gt;
  &lt;li&gt;リテール業界でAWSを使わなくなる傾向&lt;/li&gt;
  &lt;li&gt;IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム&lt;/li&gt;
  &lt;li&gt;Mircosoftの遡上である開発ツールのプラットフォーム化&lt;/li&gt;
  &lt;li&gt;部品メーカーも思想を変えれば、プラットフォーム化できる&lt;/li&gt;
  &lt;li&gt;nVidiaは部品メーカーからプラットフォーマーへの例&lt;/li&gt;
  &lt;li&gt;日本で足りない役割としてのBizDev、パートナー開拓&lt;/li&gt;
  &lt;li&gt;(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？&lt;/li&gt;
  &lt;li&gt;エンジニアとエンジニアじゃない人が組む社内ハッカソン&lt;/li&gt;
  &lt;li&gt;採用は一種の営業活動である&lt;/li&gt;
  &lt;li&gt;組織、環境を魅力的にして外に広報していく働きが必要&lt;/li&gt;
  &lt;li&gt;採用に本当に困ってるんだったら給料を上げればいい&lt;/li&gt;
  &lt;li&gt;エンジニアを引きつける3つの魅力&lt;/li&gt;
  &lt;li&gt;雇用条件・給与、プロダクト・ミッション、技術者としての面白さ&lt;/li&gt;
  &lt;li&gt;3つ出来なくても、1つは突き抜ければ良い&lt;/li&gt;
  &lt;li&gt;技術的に魅力的がないところには、優秀なエンジニアは来ない&lt;/li&gt;
  &lt;li&gt;エンジニアが他の職種と違うところ&lt;/li&gt;
  &lt;li&gt;高い課題設定を魅力設定として打ち出す&lt;/li&gt;
  &lt;li&gt;リファラル採用はやったほうがいい、なぜか？&lt;/li&gt;
  &lt;li&gt;本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク&lt;/li&gt;
  &lt;li&gt;「いやー僕はいいんだけど、こいつは誘えないな」というときの理由&lt;/li&gt;
  &lt;li&gt;大企業が変わらないと、日本は変わらない&lt;/li&gt;
  &lt;li&gt;エンタープライズから日本を変えていけると楽しいのではないか&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/17</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nh3f2qdnzd02rs9b5d.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sat, 15 Jun 2019 13:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nh3f2qdnzd02rs9b5d.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3994/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:27:02</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DECって会社は何をやっていた？&lt;/li&gt;
  &lt;li&gt;IBMと7人の小人達&lt;/li&gt;
  &lt;li&gt;メインフレームに対するアンチテーゼ、ミニコンピューター&lt;/li&gt;
  &lt;li&gt;NEC PC-9801が大流行した時代&lt;/li&gt;
  &lt;li&gt;この時代の日本のIT企業は何をしていたのか？&lt;/li&gt;
  &lt;li&gt;通産省とのタッグ&lt;/li&gt;
  &lt;li&gt;富士通、日立、NEC、日本IBMで市場を分け合っていた時代&lt;/li&gt;
  &lt;li&gt;ソフトウェアはハードウェアのおまけだった&lt;/li&gt;
  &lt;li&gt;SIerという名前が生まれてきた背景&lt;/li&gt;
  &lt;li&gt;当初は何と何をインテグレーションしていたのか？&lt;/li&gt;
  &lt;li&gt;トークンリングとイーサネット&lt;/li&gt;
  &lt;li&gt;90年代の日本の技術者は、どのような開発をしていた？&lt;/li&gt;
  &lt;li&gt;ユニコードがない時代なので、国際化は大変な仕事だった&lt;/li&gt;
  &lt;li&gt;IT業界の下請け構造はどの時期から発生しはじめたのか？&lt;/li&gt;
  &lt;li&gt;Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC"&gt;デヴィッド・カトラー&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった&lt;/li&gt;
  &lt;li&gt;AppleTalkは素晴らしかった&lt;/li&gt;
  &lt;li&gt;90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった&lt;/li&gt;
  &lt;li&gt;オープンシステム流行の背景&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://e-words.jp/w/EUC-1.html"&gt;エンドユーザーコンピューティング&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/4GL"&gt;4GL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？&lt;/li&gt;
  &lt;li&gt;UIのちょっとしたミスが製品全体の品質の疑いにつながる&lt;/li&gt;
  &lt;li&gt;一番やってはいけないのはリコール&lt;/li&gt;
  &lt;li&gt;現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える&lt;/li&gt;
  &lt;li&gt;ITに対する捉え方の違いが、国内・国外との差を広げたのではないか&lt;/li&gt;
  &lt;li&gt;ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？&lt;/li&gt;
  &lt;li&gt;科学・製造・ビジネス&lt;/li&gt;
  &lt;li&gt;経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった&lt;/li&gt;
  &lt;li&gt;日本と米国の状況は危機的、スピード感が違う&lt;/li&gt;
  &lt;li&gt;日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない&lt;/li&gt;
  &lt;li&gt;及川さんのエンタープライズ向けのDXセミナーは娯楽&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://type.jp/et/feature/8350"&gt;静かに暮らしたい人たち&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;年功序列、終身雇用、企業内組合という三種の神器&lt;/li&gt;
  &lt;li&gt;安定を望む人も多いが、もうそんな場所はない&lt;/li&gt;
  &lt;li&gt;むしろ自分自身に自信を持てることが安定につながる&lt;/li&gt;
  &lt;li&gt;米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる&lt;/li&gt;
  &lt;li&gt;社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？&lt;/li&gt;
  &lt;li&gt;新しいことにチャレンジするコストよりも、転職するコストのが安い&lt;/li&gt;
  &lt;li&gt;みんな辞めればいい、そうすれば経営者は危機感を持つ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Exit_interview"&gt;Exit Interview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;人は会社と心中する必要はない&lt;/li&gt;
  &lt;li&gt;本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切&lt;/li&gt;
  &lt;li&gt;いつでもやめられる、けどやめない社員がいる会社は強い&lt;/li&gt;
  &lt;li&gt;辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？&lt;/li&gt;
  &lt;li&gt;井深さんの「説得工学」&lt;/li&gt;
  &lt;li&gt;足りないのはやり切る覚悟&lt;/li&gt;
  &lt;li&gt;一番必要なのはアントレプレナーシップ、起業家精神&lt;/li&gt;
  &lt;li&gt;本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？&lt;/li&gt;
  &lt;li&gt;オーナーシップを持って進めるのが少なくなってきているのではないか&lt;/li&gt;
  &lt;li&gt;日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？&lt;/li&gt;
  &lt;li&gt;他国のをまねして上手く仕上げて、外に出せばいい&lt;/li&gt;
  &lt;li&gt;スタートアップと同じことを、大企業でなぜできないのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://diamond.jp/articles/-/203881"&gt;アマゾンの成功から日本の部品メーカーが学ぶべき理由&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;最初のiPhoneにはSDKがなかった&lt;/li&gt;
  &lt;li&gt;まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略&lt;/li&gt;
  &lt;li&gt;どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？&lt;/li&gt;
  &lt;li&gt;リテール業界でAWSを使わなくなる傾向&lt;/li&gt;
  &lt;li&gt;IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム&lt;/li&gt;
  &lt;li&gt;Mircosoftの遡上である開発ツールのプラットフォーム化&lt;/li&gt;
  &lt;li&gt;部品メーカーも思想を変えれば、プラットフォーム化できる&lt;/li&gt;
  &lt;li&gt;nVidiaは部品メーカーからプラットフォーマーへの例&lt;/li&gt;
  &lt;li&gt;日本で足りない役割としてのBizDev、パートナー開拓&lt;/li&gt;
  &lt;li&gt;(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？&lt;/li&gt;
  &lt;li&gt;エンジニアとエンジニアじゃない人が組む社内ハッカソン&lt;/li&gt;
  &lt;li&gt;採用は一種の営業活動である&lt;/li&gt;
  &lt;li&gt;組織、環境を魅力的にして外に広報していく働きが必要&lt;/li&gt;
  &lt;li&gt;採用に本当に困ってるんだったら給料を上げればいい&lt;/li&gt;
  &lt;li&gt;エンジニアを引きつける3つの魅力&lt;/li&gt;
  &lt;li&gt;雇用条件・給与、プロダクト・ミッション、技術者としての面白さ&lt;/li&gt;
  &lt;li&gt;3つ出来なくても、1つは突き抜ければ良い&lt;/li&gt;
  &lt;li&gt;技術的に魅力的がないところには、優秀なエンジニアは来ない&lt;/li&gt;
  &lt;li&gt;エンジニアが他の職種と違うところ&lt;/li&gt;
  &lt;li&gt;高い課題設定を魅力設定として打ち出す&lt;/li&gt;
  &lt;li&gt;リファラル採用はやったほうがいい、なぜか？&lt;/li&gt;
  &lt;li&gt;本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク&lt;/li&gt;
  &lt;li&gt;「いやー僕はいいんだけど、こいつは誘えないな」というときの理由&lt;/li&gt;
  &lt;li&gt;大企業が変わらないと、日本は変わらない&lt;/li&gt;
  &lt;li&gt;エンタープライズから日本を変えていけると楽しいのではないか&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DECって会社は何をやっていた？&lt;/li&gt;
  &lt;li&gt;IBMと7人の小人達&lt;/li&gt;
  &lt;li&gt;メインフレームに対するアンチテーゼ、ミニコンピューター&lt;/li&gt;
  &lt;li&gt;NEC PC-9801が大流行した時代&lt;/li&gt;
  &lt;li&gt;この時代の日本のIT企業は何をしていたのか？&lt;/li&gt;
  &lt;li&gt;通産省とのタッグ&lt;/li&gt;
  &lt;li&gt;富士通、日立、NEC、日本IBMで市場を分け合っていた時代&lt;/li&gt;
  &lt;li&gt;ソフトウェアはハードウェアのおまけだった&lt;/li&gt;
  &lt;li&gt;SIerという名前が生まれてきた背景&lt;/li&gt;
  &lt;li&gt;当初は何と何をインテグレーションしていたのか？&lt;/li&gt;
  &lt;li&gt;トークンリングとイーサネット&lt;/li&gt;
  &lt;li&gt;90年代の日本の技術者は、どのような開発をしていた？&lt;/li&gt;
  &lt;li&gt;ユニコードがない時代なので、国際化は大変な仕事だった&lt;/li&gt;
  &lt;li&gt;IT業界の下請け構造はどの時期から発生しはじめたのか？&lt;/li&gt;
  &lt;li&gt;Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC"&gt;デヴィッド・カトラー&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった&lt;/li&gt;
  &lt;li&gt;AppleTalkは素晴らしかった&lt;/li&gt;
  &lt;li&gt;90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった&lt;/li&gt;
  &lt;li&gt;オープンシステム流行の背景&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://e-words.jp/w/EUC-1.html"&gt;エンドユーザーコンピューティング&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/4GL"&gt;4GL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？&lt;/li&gt;
  &lt;li&gt;UIのちょっとしたミスが製品全体の品質の疑いにつながる&lt;/li&gt;
  &lt;li&gt;一番やってはいけないのはリコール&lt;/li&gt;
  &lt;li&gt;現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える&lt;/li&gt;
  &lt;li&gt;ITに対する捉え方の違いが、国内・国外との差を広げたのではないか&lt;/li&gt;
  &lt;li&gt;ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？&lt;/li&gt;
  &lt;li&gt;科学・製造・ビジネス&lt;/li&gt;
  &lt;li&gt;経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった&lt;/li&gt;
  &lt;li&gt;日本と米国の状況は危機的、スピード感が違う&lt;/li&gt;
  &lt;li&gt;日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない&lt;/li&gt;
  &lt;li&gt;及川さんのエンタープライズ向けのDXセミナーは娯楽&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://type.jp/et/feature/8350"&gt;静かに暮らしたい人たち&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;年功序列、終身雇用、企業内組合という三種の神器&lt;/li&gt;
  &lt;li&gt;安定を望む人も多いが、もうそんな場所はない&lt;/li&gt;
  &lt;li&gt;むしろ自分自身に自信を持てることが安定につながる&lt;/li&gt;
  &lt;li&gt;米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる&lt;/li&gt;
  &lt;li&gt;社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？&lt;/li&gt;
  &lt;li&gt;新しいことにチャレンジするコストよりも、転職するコストのが安い&lt;/li&gt;
  &lt;li&gt;みんな辞めればいい、そうすれば経営者は危機感を持つ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Exit_interview"&gt;Exit Interview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;人は会社と心中する必要はない&lt;/li&gt;
  &lt;li&gt;本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切&lt;/li&gt;
  &lt;li&gt;いつでもやめられる、けどやめない社員がいる会社は強い&lt;/li&gt;
  &lt;li&gt;辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？&lt;/li&gt;
  &lt;li&gt;井深さんの「説得工学」&lt;/li&gt;
  &lt;li&gt;足りないのはやり切る覚悟&lt;/li&gt;
  &lt;li&gt;一番必要なのはアントレプレナーシップ、起業家精神&lt;/li&gt;
  &lt;li&gt;本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？&lt;/li&gt;
  &lt;li&gt;オーナーシップを持って進めるのが少なくなってきているのではないか&lt;/li&gt;
  &lt;li&gt;日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？&lt;/li&gt;
  &lt;li&gt;他国のをまねして上手く仕上げて、外に出せばいい&lt;/li&gt;
  &lt;li&gt;スタートアップと同じことを、大企業でなぜできないのか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://diamond.jp/articles/-/203881"&gt;アマゾンの成功から日本の部品メーカーが学ぶべき理由&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;最初のiPhoneにはSDKがなかった&lt;/li&gt;
  &lt;li&gt;まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略&lt;/li&gt;
  &lt;li&gt;どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？&lt;/li&gt;
  &lt;li&gt;リテール業界でAWSを使わなくなる傾向&lt;/li&gt;
  &lt;li&gt;IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム&lt;/li&gt;
  &lt;li&gt;Mircosoftの遡上である開発ツールのプラットフォーム化&lt;/li&gt;
  &lt;li&gt;部品メーカーも思想を変えれば、プラットフォーム化できる&lt;/li&gt;
  &lt;li&gt;nVidiaは部品メーカーからプラットフォーマーへの例&lt;/li&gt;
  &lt;li&gt;日本で足りない役割としてのBizDev、パートナー開拓&lt;/li&gt;
  &lt;li&gt;(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？&lt;/li&gt;
  &lt;li&gt;エンジニアとエンジニアじゃない人が組む社内ハッカソン&lt;/li&gt;
  &lt;li&gt;採用は一種の営業活動である&lt;/li&gt;
  &lt;li&gt;組織、環境を魅力的にして外に広報していく働きが必要&lt;/li&gt;
  &lt;li&gt;採用に本当に困ってるんだったら給料を上げればいい&lt;/li&gt;
  &lt;li&gt;エンジニアを引きつける3つの魅力&lt;/li&gt;
  &lt;li&gt;雇用条件・給与、プロダクト・ミッション、技術者としての面白さ&lt;/li&gt;
  &lt;li&gt;3つ出来なくても、1つは突き抜ければ良い&lt;/li&gt;
  &lt;li&gt;技術的に魅力的がないところには、優秀なエンジニアは来ない&lt;/li&gt;
  &lt;li&gt;エンジニアが他の職種と違うところ&lt;/li&gt;
  &lt;li&gt;高い課題設定を魅力設定として打ち出す&lt;/li&gt;
  &lt;li&gt;リファラル採用はやったほうがいい、なぜか？&lt;/li&gt;
  &lt;li&gt;本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク&lt;/li&gt;
  &lt;li&gt;「いやー僕はいいんだけど、こいつは誘えないな」というときの理由&lt;/li&gt;
  &lt;li&gt;大企業が変わらないと、日本は変わらない&lt;/li&gt;
  &lt;li&gt;エンタープライズから日本を変えていけると楽しいのではないか&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>17. 本当にやれることを全部やってますか？ w/ takoratta</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>18</podcast:episode>
    </item>
    <item>
      <title>16. [番外編] NTTComでメンバーシップ雇用を抜けてスペシャリスト雇用に転向した話とか w/ yuyarin、shinji_abe</title>
      <link>https://fukabori.fm/episode/16</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://yuyarin.hatenablog.com/entry/2019/04/30/223004"&gt;NTTComを退職してNTTComに入社します&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.security-design.jp/entry/2019/05/07/082119"&gt;NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メンバーシップ雇用とは何か？&lt;/li&gt;
  &lt;li&gt;スペシャリスト雇用とは何か？&lt;/li&gt;
  &lt;li&gt;変則ミッショングレードという制度&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf"&gt;Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メンバーシップ雇用は何が良くて、何が悪いのか？&lt;/li&gt;
  &lt;li&gt;特定のスキルを持った人の報酬が定義できない&lt;/li&gt;
  &lt;li&gt;市場価値と比べて低い給料になり、入社が減少し、退職が増加する&lt;/li&gt;
  &lt;li&gt;やりたいことが曖昧な場合には効果的&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k"&gt;Planned Happenstance Theory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる&lt;/li&gt;
  &lt;li&gt;スペシャリストである、となぜ公言しにくいのか？&lt;/li&gt;
  &lt;li&gt;役職定年、中途採用、転職に対するカウンターオファー（引き止め）&lt;/li&gt;
  &lt;li&gt;社内のエンジニアのモチベーションを上げたい&lt;/li&gt;
  &lt;li&gt;メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に&lt;/li&gt;
  &lt;li&gt;中途採用が上手くいく秘訣は何か？&lt;/li&gt;
  &lt;li&gt;自分たちの仕事が魅力的であることを発信する&lt;/li&gt;
  &lt;li&gt;採用制度を独自に作り上げる&lt;/li&gt;
  &lt;li&gt;技術試験を採用プロセスに含める&lt;/li&gt;
  &lt;li&gt;パケットキャプチャをあえて改ざんして、応募者に解析してもらう&lt;/li&gt;
  &lt;li&gt;本質的な理解をしているか、確かめる&lt;/li&gt;
  &lt;li&gt;バイナリで読めるのはBGPだけ&lt;/li&gt;
  &lt;li&gt;スペシャリストになって、何が具体的に変わったのか？&lt;/li&gt;
  &lt;li&gt;福利厚生は変化、お給料もある程度上がった&lt;/li&gt;
  &lt;li&gt;評価の仕組みが大きく変わった&lt;/li&gt;
  &lt;li&gt;評価の指標は、エンジニアリングマネージャーとすり合わせて決める&lt;/li&gt;
  &lt;li&gt;1年前の目標って古すぎないか？&lt;/li&gt;
  &lt;li&gt;給料爆上げ&lt;/li&gt;
  &lt;li&gt;隗より始めよ&lt;/li&gt;
  &lt;li&gt;働いてる環境ってどんな感じ？&lt;/li&gt;
  &lt;li&gt;Security Operation Centerでの個人環境&lt;/li&gt;
  &lt;li&gt;メモリは16GB&lt;/li&gt;
  &lt;li&gt;G Suite、Confluence、Jira、Slack&lt;/li&gt;
  &lt;li&gt;社内システムはクローズドなので、使いにくい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32"&gt;アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社の悪いところは？&lt;/li&gt;
  &lt;li&gt;プロフェッショナルな人材が、マネージャー層より上に少ない&lt;/li&gt;
  &lt;li&gt;Executiveの中途も進むと良い&lt;/li&gt;
  &lt;li&gt;雇用制度の違いによる利害の不一致&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/15"&gt;(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まる&lt;/code&gt;という課題にどう対処するか？&lt;/li&gt;
  &lt;li&gt;業務として、チームとして成果を出して経営へアピールすること&lt;/li&gt;
  &lt;li&gt;個人として転職活動を常日頃しておく&lt;/li&gt;
  &lt;li&gt;業界を盛り上げること&lt;/li&gt;
  &lt;li&gt;ラグビー部のおしかけってあった？&lt;/li&gt;
  &lt;li&gt;大手町の綱引き大会で優勝&lt;/li&gt;
  &lt;li&gt;ラグビー部社員はスペシャリスト&lt;/li&gt;
  &lt;li&gt;なんで、まだ会社に残っているの？&lt;/li&gt;
  &lt;li&gt;ジャパニーズ トラディッショナル ビッグ カンパニー&lt;/li&gt;
  &lt;li&gt;会社に対する愛はある&lt;/li&gt;
  &lt;li&gt;（難しい環境であっても）いかに変えていくのか、に面白みを感じる&lt;/li&gt;
  &lt;li&gt;契約と、それに基づいた評価の規定&lt;/li&gt;
  &lt;li&gt;対外発表を契約項目に含める&lt;/li&gt;
  &lt;li&gt;一定額の給与で裁量をもたせて、やらせてほしい&lt;/li&gt;
  &lt;li&gt;古くからある企業で、変わり始めてる事例を紹介するエピソード&lt;/li&gt;
  &lt;li&gt;（出演者全員）中途採用してます！&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/16</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nhb0ecg3z07jpvav08.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 29 May 2019 12:55:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nhb0ecg3z07jpvav08.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3993/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:47:07</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://yuyarin.hatenablog.com/entry/2019/04/30/223004"&gt;NTTComを退職してNTTComに入社します&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.security-design.jp/entry/2019/05/07/082119"&gt;NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メンバーシップ雇用とは何か？&lt;/li&gt;
  &lt;li&gt;スペシャリスト雇用とは何か？&lt;/li&gt;
  &lt;li&gt;変則ミッショングレードという制度&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf"&gt;Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メンバーシップ雇用は何が良くて、何が悪いのか？&lt;/li&gt;
  &lt;li&gt;特定のスキルを持った人の報酬が定義できない&lt;/li&gt;
  &lt;li&gt;市場価値と比べて低い給料になり、入社が減少し、退職が増加する&lt;/li&gt;
  &lt;li&gt;やりたいことが曖昧な場合には効果的&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k"&gt;Planned Happenstance Theory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる&lt;/li&gt;
  &lt;li&gt;スペシャリストである、となぜ公言しにくいのか？&lt;/li&gt;
  &lt;li&gt;役職定年、中途採用、転職に対するカウンターオファー（引き止め）&lt;/li&gt;
  &lt;li&gt;社内のエンジニアのモチベーションを上げたい&lt;/li&gt;
  &lt;li&gt;メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に&lt;/li&gt;
  &lt;li&gt;中途採用が上手くいく秘訣は何か？&lt;/li&gt;
  &lt;li&gt;自分たちの仕事が魅力的であることを発信する&lt;/li&gt;
  &lt;li&gt;採用制度を独自に作り上げる&lt;/li&gt;
  &lt;li&gt;技術試験を採用プロセスに含める&lt;/li&gt;
  &lt;li&gt;パケットキャプチャをあえて改ざんして、応募者に解析してもらう&lt;/li&gt;
  &lt;li&gt;本質的な理解をしているか、確かめる&lt;/li&gt;
  &lt;li&gt;バイナリで読めるのはBGPだけ&lt;/li&gt;
  &lt;li&gt;スペシャリストになって、何が具体的に変わったのか？&lt;/li&gt;
  &lt;li&gt;福利厚生は変化、お給料もある程度上がった&lt;/li&gt;
  &lt;li&gt;評価の仕組みが大きく変わった&lt;/li&gt;
  &lt;li&gt;評価の指標は、エンジニアリングマネージャーとすり合わせて決める&lt;/li&gt;
  &lt;li&gt;1年前の目標って古すぎないか？&lt;/li&gt;
  &lt;li&gt;給料爆上げ&lt;/li&gt;
  &lt;li&gt;隗より始めよ&lt;/li&gt;
  &lt;li&gt;働いてる環境ってどんな感じ？&lt;/li&gt;
  &lt;li&gt;Security Operation Centerでの個人環境&lt;/li&gt;
  &lt;li&gt;メモリは16GB&lt;/li&gt;
  &lt;li&gt;G Suite、Confluence、Jira、Slack&lt;/li&gt;
  &lt;li&gt;社内システムはクローズドなので、使いにくい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32"&gt;アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社の悪いところは？&lt;/li&gt;
  &lt;li&gt;プロフェッショナルな人材が、マネージャー層より上に少ない&lt;/li&gt;
  &lt;li&gt;Executiveの中途も進むと良い&lt;/li&gt;
  &lt;li&gt;雇用制度の違いによる利害の不一致&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/15"&gt;(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まる&lt;/code&gt;という課題にどう対処するか？&lt;/li&gt;
  &lt;li&gt;業務として、チームとして成果を出して経営へアピールすること&lt;/li&gt;
  &lt;li&gt;個人として転職活動を常日頃しておく&lt;/li&gt;
  &lt;li&gt;業界を盛り上げること&lt;/li&gt;
  &lt;li&gt;ラグビー部のおしかけってあった？&lt;/li&gt;
  &lt;li&gt;大手町の綱引き大会で優勝&lt;/li&gt;
  &lt;li&gt;ラグビー部社員はスペシャリスト&lt;/li&gt;
  &lt;li&gt;なんで、まだ会社に残っているの？&lt;/li&gt;
  &lt;li&gt;ジャパニーズ トラディッショナル ビッグ カンパニー&lt;/li&gt;
  &lt;li&gt;会社に対する愛はある&lt;/li&gt;
  &lt;li&gt;（難しい環境であっても）いかに変えていくのか、に面白みを感じる&lt;/li&gt;
  &lt;li&gt;契約と、それに基づいた評価の規定&lt;/li&gt;
  &lt;li&gt;対外発表を契約項目に含める&lt;/li&gt;
  &lt;li&gt;一定額の給与で裁量をもたせて、やらせてほしい&lt;/li&gt;
  &lt;li&gt;古くからある企業で、変わり始めてる事例を紹介するエピソード&lt;/li&gt;
  &lt;li&gt;（出演者全員）中途採用してます！&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://yuyarin.hatenablog.com/entry/2019/04/30/223004"&gt;NTTComを退職してNTTComに入社します&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.security-design.jp/entry/2019/05/07/082119"&gt;NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メンバーシップ雇用とは何か？&lt;/li&gt;
  &lt;li&gt;スペシャリスト雇用とは何か？&lt;/li&gt;
  &lt;li&gt;変則ミッショングレードという制度&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf"&gt;Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メンバーシップ雇用は何が良くて、何が悪いのか？&lt;/li&gt;
  &lt;li&gt;特定のスキルを持った人の報酬が定義できない&lt;/li&gt;
  &lt;li&gt;市場価値と比べて低い給料になり、入社が減少し、退職が増加する&lt;/li&gt;
  &lt;li&gt;やりたいことが曖昧な場合には効果的&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k"&gt;Planned Happenstance Theory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる&lt;/li&gt;
  &lt;li&gt;スペシャリストである、となぜ公言しにくいのか？&lt;/li&gt;
  &lt;li&gt;役職定年、中途採用、転職に対するカウンターオファー（引き止め）&lt;/li&gt;
  &lt;li&gt;社内のエンジニアのモチベーションを上げたい&lt;/li&gt;
  &lt;li&gt;メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に&lt;/li&gt;
  &lt;li&gt;中途採用が上手くいく秘訣は何か？&lt;/li&gt;
  &lt;li&gt;自分たちの仕事が魅力的であることを発信する&lt;/li&gt;
  &lt;li&gt;採用制度を独自に作り上げる&lt;/li&gt;
  &lt;li&gt;技術試験を採用プロセスに含める&lt;/li&gt;
  &lt;li&gt;パケットキャプチャをあえて改ざんして、応募者に解析してもらう&lt;/li&gt;
  &lt;li&gt;本質的な理解をしているか、確かめる&lt;/li&gt;
  &lt;li&gt;バイナリで読めるのはBGPだけ&lt;/li&gt;
  &lt;li&gt;スペシャリストになって、何が具体的に変わったのか？&lt;/li&gt;
  &lt;li&gt;福利厚生は変化、お給料もある程度上がった&lt;/li&gt;
  &lt;li&gt;評価の仕組みが大きく変わった&lt;/li&gt;
  &lt;li&gt;評価の指標は、エンジニアリングマネージャーとすり合わせて決める&lt;/li&gt;
  &lt;li&gt;1年前の目標って古すぎないか？&lt;/li&gt;
  &lt;li&gt;給料爆上げ&lt;/li&gt;
  &lt;li&gt;隗より始めよ&lt;/li&gt;
  &lt;li&gt;働いてる環境ってどんな感じ？&lt;/li&gt;
  &lt;li&gt;Security Operation Centerでの個人環境&lt;/li&gt;
  &lt;li&gt;メモリは16GB&lt;/li&gt;
  &lt;li&gt;G Suite、Confluence、Jira、Slack&lt;/li&gt;
  &lt;li&gt;社内システムはクローズドなので、使いにくい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32"&gt;アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社の悪いところは？&lt;/li&gt;
  &lt;li&gt;プロフェッショナルな人材が、マネージャー層より上に少ない&lt;/li&gt;
  &lt;li&gt;Executiveの中途も進むと良い&lt;/li&gt;
  &lt;li&gt;雇用制度の違いによる利害の不一致&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://fukabori.fm/episode/15"&gt;(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まる&lt;/code&gt;という課題にどう対処するか？&lt;/li&gt;
  &lt;li&gt;業務として、チームとして成果を出して経営へアピールすること&lt;/li&gt;
  &lt;li&gt;個人として転職活動を常日頃しておく&lt;/li&gt;
  &lt;li&gt;業界を盛り上げること&lt;/li&gt;
  &lt;li&gt;ラグビー部のおしかけってあった？&lt;/li&gt;
  &lt;li&gt;大手町の綱引き大会で優勝&lt;/li&gt;
  &lt;li&gt;ラグビー部社員はスペシャリスト&lt;/li&gt;
  &lt;li&gt;なんで、まだ会社に残っているの？&lt;/li&gt;
  &lt;li&gt;ジャパニーズ トラディッショナル ビッグ カンパニー&lt;/li&gt;
  &lt;li&gt;会社に対する愛はある&lt;/li&gt;
  &lt;li&gt;（難しい環境であっても）いかに変えていくのか、に面白みを感じる&lt;/li&gt;
  &lt;li&gt;契約と、それに基づいた評価の規定&lt;/li&gt;
  &lt;li&gt;対外発表を契約項目に含める&lt;/li&gt;
  &lt;li&gt;一定額の給与で裁量をもたせて、やらせてほしい&lt;/li&gt;
  &lt;li&gt;古くからある企業で、変わり始めてる事例を紹介するエピソード&lt;/li&gt;
  &lt;li&gt;（出演者全員）中途採用してます！&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>16. [番外編] NTTComでメンバーシップ雇用を抜けてスペシャリスト雇用に転向した話とか w/ yuyarin、shinji_abe</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>17</podcast:episode>
    </item>
    <item>
      <title>15. 良い組織とは何か？どのように良い組織を作っていくのか？</title>
      <link>https://fukabori.fm/episode/15</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian"&gt;スタートアップ組織開発勉強会_scoutyの組織開発理論と実践&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;良い組織とは何か？&lt;/li&gt;
  &lt;li&gt;組織と複雑系とは？&lt;/li&gt;
  &lt;li&gt;複雑な仕組みと複雑系の違い&lt;/li&gt;
  &lt;li&gt;組織は複雑系である&lt;/li&gt;
  &lt;li&gt;採用だけ頑張っても、働く仕組みがイケてないと人は去っていく&lt;/li&gt;
  &lt;li&gt;HRに関わるあらゆる領域に対して総合的に取り組む&lt;/li&gt;
  &lt;li&gt;数字でしか語れない人は害悪である&lt;/li&gt;
  &lt;li&gt;VUCAに代表される時代&lt;/li&gt;
  &lt;li&gt;社会が画一的で、成長している時代ではない&lt;/li&gt;
  &lt;li&gt;ジョブ理論とは何か？&lt;/li&gt;
  &lt;li&gt;イノベーションのジレンマ&lt;/li&gt;
  &lt;li&gt;機能的側面・感情的側面・社会的側面&lt;/li&gt;
  &lt;li&gt;OKRとは何か？なぜ必要になってきたのか？&lt;/li&gt;
  &lt;li&gt;OKRは、当人がパフォーマンスを引き出すためのツール&lt;/li&gt;
  &lt;li&gt;KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない&lt;/li&gt;
  &lt;li&gt;MBOに対する誤解&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall"&gt;ウォータフォール開発の論文&lt;/a&gt;に対する誤解&lt;/li&gt;
  &lt;li&gt;言い訳のための仕事を増やしてはいけない&lt;/li&gt;
  &lt;li&gt;MVP、デザイン思考、リーン、OODAの共通点は何か？&lt;/li&gt;
  &lt;li&gt;不確実なことは必ず起きるという前提に立つ&lt;/li&gt;
  &lt;li&gt;OODAとは何か？&lt;/li&gt;
  &lt;li&gt;良い問いと学習が重要&lt;/li&gt;
  &lt;li&gt;そもそも、「良い問い」とは何か？&lt;/li&gt;
  &lt;li&gt;SEDA理論とは何か？&lt;/li&gt;
  &lt;li&gt;当たり前だったものを当たり前じゃなくするのがArt&lt;/li&gt;
  &lt;li&gt;SECIモデル&lt;/li&gt;
  &lt;li&gt;パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)&lt;/li&gt;
  &lt;li&gt;個人のモチベーションとは何か？&lt;/li&gt;
  &lt;li&gt;自己決定理論&lt;/li&gt;
  &lt;li&gt;外発的動機付けの分類とは何か？&lt;/li&gt;
  &lt;li&gt;統合的調整、同一化的調整、取り入れ的調整&lt;/li&gt;
  &lt;li&gt;モチベーションを上げるためには、どうすればいいか？&lt;/li&gt;
  &lt;li&gt;モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事&lt;/li&gt;
  &lt;li&gt;メンバーシップ採用とジョブディスクリプション採用&lt;/li&gt;
  &lt;li&gt;モチベーションを阻害するものは何か？&lt;/li&gt;
  &lt;li&gt;責任の不備とは、具体的には何か？&lt;/li&gt;
  &lt;li&gt;本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事&lt;/li&gt;
  &lt;li&gt;スキルというものは変動性が高い、アウトプットである&lt;/li&gt;
  &lt;li&gt;スキルの阻害要因とは何か？&lt;/li&gt;
  &lt;li&gt;高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/li&gt;
  &lt;li&gt;簡単な仕事は、関係性の影響が少ない&lt;/li&gt;
  &lt;li&gt;複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい&lt;/li&gt;
  &lt;li&gt;組織が掛け算である、というのが幻想である&lt;/li&gt;
  &lt;li&gt;その人の良さを下げないようにするのが、組織として大事&lt;/li&gt;
  &lt;li&gt;組織としての完成形&lt;/li&gt;
  &lt;li&gt;Total Rewardsとは何か？&lt;/li&gt;
  &lt;li&gt;自分の人生と、会社の方向が重なっているのも大事&lt;/li&gt;
  &lt;li&gt;No Ratingとは何か？&lt;/li&gt;
  &lt;li&gt;人は人を正しく評価できないのは前提&lt;/li&gt;
  &lt;li&gt;お互いの納得感を重視した評価&lt;/li&gt;
  &lt;li&gt;期末に活躍した人が高く評価される、目の前の状況に引きづられやすい&lt;/li&gt;
  &lt;li&gt;心理的安全性を根付かせるためにはどうすればいいか？&lt;/li&gt;
  &lt;li&gt;心理的安全性はやさしさではない&lt;/li&gt;
  &lt;li&gt;ティール組織とは何か？&lt;/li&gt;
  &lt;li&gt;ティール組織の3要件とは&lt;/li&gt;
  &lt;li&gt;ホラクラシーとは何か？&lt;/li&gt;
  &lt;li&gt;Role自体に権限と責任、目的を明示する&lt;/li&gt;
  &lt;li&gt;自律的に組織が変えて、世の中の変化に適合する&lt;/li&gt;
  &lt;li&gt;寄生獣の後藤&lt;/li&gt;
  &lt;li&gt;ディスコースとは何か？&lt;/li&gt;
  &lt;li&gt;社会構成主義&lt;/li&gt;
  &lt;li&gt;組織の壁をどうやって埋めていくか？&lt;/li&gt;
  &lt;li&gt;ダイアログとは何か？&lt;/li&gt;
  &lt;li&gt;お互いの一致していないものを探す場&lt;/li&gt;
  &lt;li&gt;GoogleのTGIF&lt;/li&gt;
  &lt;li&gt;日本の未来をちょっとだけ明るくしたい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://scout.lapras.com/"&gt;LAPRAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(一部のPodcastクライアント用に再掲)
320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。&lt;/p&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/15</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nhvara8hg33tmx2mhv.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Thu, 16 May 2019 12:30:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nhvara8hg33tmx2mhv.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3992/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:59:37</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian"&gt;スタートアップ組織開発勉強会_scoutyの組織開発理論と実践&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;良い組織とは何か？&lt;/li&gt;
  &lt;li&gt;組織と複雑系とは？&lt;/li&gt;
  &lt;li&gt;複雑な仕組みと複雑系の違い&lt;/li&gt;
  &lt;li&gt;組織は複雑系である&lt;/li&gt;
  &lt;li&gt;採用だけ頑張っても、働く仕組みがイケてないと人は去っていく&lt;/li&gt;
  &lt;li&gt;HRに関わるあらゆる領域に対して総合的に取り組む&lt;/li&gt;
  &lt;li&gt;数字でしか語れない人は害悪である&lt;/li&gt;
  &lt;li&gt;VUCAに代表される時代&lt;/li&gt;
  &lt;li&gt;社会が画一的で、成長している時代ではない&lt;/li&gt;
  &lt;li&gt;ジョブ理論とは何か？&lt;/li&gt;
  &lt;li&gt;イノベーションのジレンマ&lt;/li&gt;
  &lt;li&gt;機能的側面・感情的側面・社会的側面&lt;/li&gt;
  &lt;li&gt;OKRとは何か？なぜ必要になってきたのか？&lt;/li&gt;
  &lt;li&gt;OKRは、当人がパフォーマンスを引き出すためのツール&lt;/li&gt;
  &lt;li&gt;KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない&lt;/li&gt;
  &lt;li&gt;MBOに対する誤解&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall"&gt;ウォータフォール開発の論文&lt;/a&gt;に対する誤解&lt;/li&gt;
  &lt;li&gt;言い訳のための仕事を増やしてはいけない&lt;/li&gt;
  &lt;li&gt;MVP、デザイン思考、リーン、OODAの共通点は何か？&lt;/li&gt;
  &lt;li&gt;不確実なことは必ず起きるという前提に立つ&lt;/li&gt;
  &lt;li&gt;OODAとは何か？&lt;/li&gt;
  &lt;li&gt;良い問いと学習が重要&lt;/li&gt;
  &lt;li&gt;そもそも、「良い問い」とは何か？&lt;/li&gt;
  &lt;li&gt;SEDA理論とは何か？&lt;/li&gt;
  &lt;li&gt;当たり前だったものを当たり前じゃなくするのがArt&lt;/li&gt;
  &lt;li&gt;SECIモデル&lt;/li&gt;
  &lt;li&gt;パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)&lt;/li&gt;
  &lt;li&gt;個人のモチベーションとは何か？&lt;/li&gt;
  &lt;li&gt;自己決定理論&lt;/li&gt;
  &lt;li&gt;外発的動機付けの分類とは何か？&lt;/li&gt;
  &lt;li&gt;統合的調整、同一化的調整、取り入れ的調整&lt;/li&gt;
  &lt;li&gt;モチベーションを上げるためには、どうすればいいか？&lt;/li&gt;
  &lt;li&gt;モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事&lt;/li&gt;
  &lt;li&gt;メンバーシップ採用とジョブディスクリプション採用&lt;/li&gt;
  &lt;li&gt;モチベーションを阻害するものは何か？&lt;/li&gt;
  &lt;li&gt;責任の不備とは、具体的には何か？&lt;/li&gt;
  &lt;li&gt;本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事&lt;/li&gt;
  &lt;li&gt;スキルというものは変動性が高い、アウトプットである&lt;/li&gt;
  &lt;li&gt;スキルの阻害要因とは何か？&lt;/li&gt;
  &lt;li&gt;高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/li&gt;
  &lt;li&gt;簡単な仕事は、関係性の影響が少ない&lt;/li&gt;
  &lt;li&gt;複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい&lt;/li&gt;
  &lt;li&gt;組織が掛け算である、というのが幻想である&lt;/li&gt;
  &lt;li&gt;その人の良さを下げないようにするのが、組織として大事&lt;/li&gt;
  &lt;li&gt;組織としての完成形&lt;/li&gt;
  &lt;li&gt;Total Rewardsとは何か？&lt;/li&gt;
  &lt;li&gt;自分の人生と、会社の方向が重なっているのも大事&lt;/li&gt;
  &lt;li&gt;No Ratingとは何か？&lt;/li&gt;
  &lt;li&gt;人は人を正しく評価できないのは前提&lt;/li&gt;
  &lt;li&gt;お互いの納得感を重視した評価&lt;/li&gt;
  &lt;li&gt;期末に活躍した人が高く評価される、目の前の状況に引きづられやすい&lt;/li&gt;
  &lt;li&gt;心理的安全性を根付かせるためにはどうすればいいか？&lt;/li&gt;
  &lt;li&gt;心理的安全性はやさしさではない&lt;/li&gt;
  &lt;li&gt;ティール組織とは何か？&lt;/li&gt;
  &lt;li&gt;ティール組織の3要件とは&lt;/li&gt;
  &lt;li&gt;ホラクラシーとは何か？&lt;/li&gt;
  &lt;li&gt;Role自体に権限と責任、目的を明示する&lt;/li&gt;
  &lt;li&gt;自律的に組織が変えて、世の中の変化に適合する&lt;/li&gt;
  &lt;li&gt;寄生獣の後藤&lt;/li&gt;
  &lt;li&gt;ディスコースとは何か？&lt;/li&gt;
  &lt;li&gt;社会構成主義&lt;/li&gt;
  &lt;li&gt;組織の壁をどうやって埋めていくか？&lt;/li&gt;
  &lt;li&gt;ダイアログとは何か？&lt;/li&gt;
  &lt;li&gt;お互いの一致していないものを探す場&lt;/li&gt;
  &lt;li&gt;GoogleのTGIF&lt;/li&gt;
  &lt;li&gt;日本の未来をちょっとだけ明るくしたい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://scout.lapras.com/"&gt;LAPRAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(一部のPodcastクライアント用に再掲)
320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。&lt;/p&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian"&gt;スタートアップ組織開発勉強会_scoutyの組織開発理論と実践&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;良い組織とは何か？&lt;/li&gt;
  &lt;li&gt;組織と複雑系とは？&lt;/li&gt;
  &lt;li&gt;複雑な仕組みと複雑系の違い&lt;/li&gt;
  &lt;li&gt;組織は複雑系である&lt;/li&gt;
  &lt;li&gt;採用だけ頑張っても、働く仕組みがイケてないと人は去っていく&lt;/li&gt;
  &lt;li&gt;HRに関わるあらゆる領域に対して総合的に取り組む&lt;/li&gt;
  &lt;li&gt;数字でしか語れない人は害悪である&lt;/li&gt;
  &lt;li&gt;VUCAに代表される時代&lt;/li&gt;
  &lt;li&gt;社会が画一的で、成長している時代ではない&lt;/li&gt;
  &lt;li&gt;ジョブ理論とは何か？&lt;/li&gt;
  &lt;li&gt;イノベーションのジレンマ&lt;/li&gt;
  &lt;li&gt;機能的側面・感情的側面・社会的側面&lt;/li&gt;
  &lt;li&gt;OKRとは何か？なぜ必要になってきたのか？&lt;/li&gt;
  &lt;li&gt;OKRは、当人がパフォーマンスを引き出すためのツール&lt;/li&gt;
  &lt;li&gt;KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない&lt;/li&gt;
  &lt;li&gt;MBOに対する誤解&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall"&gt;ウォータフォール開発の論文&lt;/a&gt;に対する誤解&lt;/li&gt;
  &lt;li&gt;言い訳のための仕事を増やしてはいけない&lt;/li&gt;
  &lt;li&gt;MVP、デザイン思考、リーン、OODAの共通点は何か？&lt;/li&gt;
  &lt;li&gt;不確実なことは必ず起きるという前提に立つ&lt;/li&gt;
  &lt;li&gt;OODAとは何か？&lt;/li&gt;
  &lt;li&gt;良い問いと学習が重要&lt;/li&gt;
  &lt;li&gt;そもそも、「良い問い」とは何か？&lt;/li&gt;
  &lt;li&gt;SEDA理論とは何か？&lt;/li&gt;
  &lt;li&gt;当たり前だったものを当たり前じゃなくするのがArt&lt;/li&gt;
  &lt;li&gt;SECIモデル&lt;/li&gt;
  &lt;li&gt;パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)&lt;/li&gt;
  &lt;li&gt;個人のモチベーションとは何か？&lt;/li&gt;
  &lt;li&gt;自己決定理論&lt;/li&gt;
  &lt;li&gt;外発的動機付けの分類とは何か？&lt;/li&gt;
  &lt;li&gt;統合的調整、同一化的調整、取り入れ的調整&lt;/li&gt;
  &lt;li&gt;モチベーションを上げるためには、どうすればいいか？&lt;/li&gt;
  &lt;li&gt;モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事&lt;/li&gt;
  &lt;li&gt;メンバーシップ採用とジョブディスクリプション採用&lt;/li&gt;
  &lt;li&gt;モチベーションを阻害するものは何か？&lt;/li&gt;
  &lt;li&gt;責任の不備とは、具体的には何か？&lt;/li&gt;
  &lt;li&gt;本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事&lt;/li&gt;
  &lt;li&gt;スキルというものは変動性が高い、アウトプットである&lt;/li&gt;
  &lt;li&gt;スキルの阻害要因とは何か？&lt;/li&gt;
  &lt;li&gt;高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/li&gt;
  &lt;li&gt;簡単な仕事は、関係性の影響が少ない&lt;/li&gt;
  &lt;li&gt;複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい&lt;/li&gt;
  &lt;li&gt;組織が掛け算である、というのが幻想である&lt;/li&gt;
  &lt;li&gt;その人の良さを下げないようにするのが、組織として大事&lt;/li&gt;
  &lt;li&gt;組織としての完成形&lt;/li&gt;
  &lt;li&gt;Total Rewardsとは何か？&lt;/li&gt;
  &lt;li&gt;自分の人生と、会社の方向が重なっているのも大事&lt;/li&gt;
  &lt;li&gt;No Ratingとは何か？&lt;/li&gt;
  &lt;li&gt;人は人を正しく評価できないのは前提&lt;/li&gt;
  &lt;li&gt;お互いの納得感を重視した評価&lt;/li&gt;
  &lt;li&gt;期末に活躍した人が高く評価される、目の前の状況に引きづられやすい&lt;/li&gt;
  &lt;li&gt;心理的安全性を根付かせるためにはどうすればいいか？&lt;/li&gt;
  &lt;li&gt;心理的安全性はやさしさではない&lt;/li&gt;
  &lt;li&gt;ティール組織とは何か？&lt;/li&gt;
  &lt;li&gt;ティール組織の3要件とは&lt;/li&gt;
  &lt;li&gt;ホラクラシーとは何か？&lt;/li&gt;
  &lt;li&gt;Role自体に権限と責任、目的を明示する&lt;/li&gt;
  &lt;li&gt;自律的に組織が変えて、世の中の変化に適合する&lt;/li&gt;
  &lt;li&gt;寄生獣の後藤&lt;/li&gt;
  &lt;li&gt;ディスコースとは何か？&lt;/li&gt;
  &lt;li&gt;社会構成主義&lt;/li&gt;
  &lt;li&gt;組織の壁をどうやって埋めていくか？&lt;/li&gt;
  &lt;li&gt;ダイアログとは何か？&lt;/li&gt;
  &lt;li&gt;お互いの一致していないものを探す場&lt;/li&gt;
  &lt;li&gt;GoogleのTGIF&lt;/li&gt;
  &lt;li&gt;日本の未来をちょっとだけ明るくしたい&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://scout.lapras.com/"&gt;LAPRAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(一部のPodcastクライアント用に再掲)
320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。&lt;/p&gt;</itunes:summary>
      <itunes:title>15. 良い組織とは何か？どのように良い組織を作っていくのか？</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>16</podcast:episode>
    </item>
    <item>
      <title>14. なぜ、エンタープライズ業界でアジャイル・リーンは普及しないのか？</title>
      <link>https://fukabori.fm/episode/14</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;なぜ、&lt;a href="http://jbpress.ismedia.jp/articles/-/51448"&gt;企画と開発が責任を押し付け合う会社の前途は暗い&lt;/a&gt;のか？&lt;/li&gt;
  &lt;li&gt;計画が悪い vs 実装が悪い、というどっちが悪い論&lt;/li&gt;
  &lt;li&gt;問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる&lt;/li&gt;
  &lt;li&gt;市場、世界は悠長に回っていない&lt;/li&gt;
  &lt;li&gt;将棋でのメタファーとRTSでのメタファー&lt;/li&gt;
  &lt;li&gt;上手くいかないのは全体という前提をどこまで作れるか？&lt;/li&gt;
  &lt;li&gt;仕様が固まってから開発の後半で発生する変更を怖がる&lt;/li&gt;
  &lt;li&gt;あたかも世界の時間が止まっているように振る舞う&lt;/li&gt;
  &lt;li&gt;オーシャンズ11&lt;/li&gt;
  &lt;li&gt;その場の状況にあった計画を立て直していく、情報を得続ける&lt;/li&gt;
  &lt;li&gt;現代の戦争は火力戦・物量戦から変わってきている&lt;/li&gt;
  &lt;li&gt;企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない&lt;/li&gt;
  &lt;li&gt;ピラミッド構造は例外処理が役割の1つ&lt;/li&gt;
  &lt;li&gt;手順書はQ&amp;amp;Aに答えてくれない&lt;/li&gt;
  &lt;li&gt;Q&amp;amp;Aに答えられる人が現場にいない&lt;/li&gt;
  &lt;li&gt;リーンスタートアップやアジャイルなやり方が出てきた背景は？&lt;/li&gt;
  &lt;li&gt;ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409"&gt;Organizational Patterns of Agile Software Development &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf"&gt;Quattro Pro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者&lt;/li&gt;
  &lt;li&gt;開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化&lt;/li&gt;
  &lt;li&gt;オブジェクト指向の成熟&lt;/li&gt;
  &lt;li&gt;顧客開発と製品開発にあった別のループを統合した&lt;/li&gt;
  &lt;li&gt;未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか&lt;/li&gt;
  &lt;li&gt;クラウドやRails&lt;/li&gt;
  &lt;li&gt;売れてもいないのに、最大アクセスの条件で試算する&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jbpress.ismedia.jp/articles/-/52025"&gt;ビジネスに追いつけない日本のシステム開発の構造欠陥&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;プライムをとれないSIをやると辛いことがある&lt;/li&gt;
  &lt;li&gt;「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる&lt;/li&gt;
  &lt;li&gt;ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる&lt;/li&gt;
  &lt;li&gt;本来であれば仕様書は動くもの&lt;/li&gt;
  &lt;li&gt;SIの調達モデルとは&lt;/li&gt;
  &lt;li&gt;イノベーションは調達できるの？って話&lt;/li&gt;
  &lt;li&gt;ソフトウェアは材料として変わっている&lt;/li&gt;
  &lt;li&gt;鉄鋼は産業の米&lt;/li&gt;
  &lt;li&gt;鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった&lt;/li&gt;
  &lt;li&gt;ソフトウェアも同様に考え、各会社がシステム子会社を作った&lt;/li&gt;
  &lt;li&gt;その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている&lt;/li&gt;
  &lt;li&gt;ソフトウェアは材料ではなく、垂直のビジネス構造と設計している&lt;/li&gt;
  &lt;li&gt;とくに業務システムでは、ビジネスとソフトウェアは切り分けられない&lt;/li&gt;
  &lt;li&gt;ソフトウェアの事業の中核である&lt;/li&gt;
  &lt;li&gt;ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも&lt;/li&gt;
  &lt;li&gt;作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう&lt;/li&gt;
  &lt;li&gt;対立するのではなく、協調することによって得られる価値に向かう時代&lt;/li&gt;
  &lt;li&gt;なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？&lt;/li&gt;
  &lt;li&gt;考え方の普及と、ビジネス構造の変革速度に差がある&lt;/li&gt;
  &lt;li&gt;ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している&lt;/li&gt;
  &lt;li&gt;就職で入りたいランキングにおいて、SIerは上位&lt;/li&gt;
  &lt;li&gt;20代の時期を何に投資するか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jbpress.ismedia.jp/articles/-/52264"&gt;企業内イノベーションの実現に向けた7つの提言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？&lt;/li&gt;
  &lt;li&gt;経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう&lt;/li&gt;
  &lt;li&gt;イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要&lt;/li&gt;
  &lt;li&gt;“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？&lt;/li&gt;
  &lt;li&gt;大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変&lt;/li&gt;
  &lt;li&gt;小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない&lt;/li&gt;
  &lt;li&gt;離れている時間が長い、成果が出ない場合は役員が意味を伝える&lt;/li&gt;
  &lt;li&gt;“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？&lt;/li&gt;
  &lt;li&gt;年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない&lt;/li&gt;
  &lt;li&gt;できないもんはできない&lt;/li&gt;
  &lt;li&gt;どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える&lt;/li&gt;
  &lt;li&gt;上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断&lt;/li&gt;
  &lt;li&gt;仕事をした気になって疲れる&lt;/li&gt;
  &lt;li&gt;お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか&lt;/li&gt;
  &lt;li&gt;“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？&lt;/li&gt;
  &lt;li&gt;本を読んでもアジャイルにできない&lt;/li&gt;
  &lt;li&gt;本を読んでも自転車に乗れない、暗黙知伝達の最たるところ&lt;/li&gt;
  &lt;li&gt;アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす&lt;/li&gt;
  &lt;li&gt;“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？&lt;/li&gt;
  &lt;li&gt;効率良くやるためには、形式的知識伝達もやる&lt;/li&gt;
  &lt;li&gt;全体的な体系をわかった上で実践に入る&lt;/li&gt;
  &lt;li&gt;“技術力のあるエンジニアを招集すること”&lt;/li&gt;
  &lt;li&gt;結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ&lt;/li&gt;
  &lt;li&gt;技術力のない人がものづくりをするのはおかしい&lt;/li&gt;
  &lt;li&gt;パワポという黒魔術にひっかからない&lt;/li&gt;
  &lt;li&gt;エンジニアの召集という言葉の意味&lt;/li&gt;
  &lt;li&gt;“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”&lt;/li&gt;
  &lt;li&gt;熱を受け取る場面&lt;/li&gt;
  &lt;li&gt;この人と出会った、この人の話を聞いて人生が変わったという転機&lt;/li&gt;
  &lt;li&gt;会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき&lt;/li&gt;
  &lt;li&gt;（イベント参加の）報告書は別にいらない、その人の中に溜まる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://slide.meguro.ryuzee.com/slides/50"&gt;ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社は度量を持つ&lt;/li&gt;
  &lt;li&gt;会社からの退職者数の傾きを見る&lt;/li&gt;
  &lt;li&gt;古くからいるマネージャーの役割はどうなっていくのか？&lt;/li&gt;
  &lt;li&gt;得意なことで、変化の中心になっている人を支援する&lt;/li&gt;
  &lt;li&gt;上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか&lt;/li&gt;
  &lt;li&gt;取締役からのメッセージも重要&lt;/li&gt;
  &lt;li&gt;バリューを出せる人は、どうやってもバリューを出せる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.asf.esm.co.jp/"&gt;アジャイルスタジオ福井&lt;/a&gt;で見学募集中&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/14</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nh4qss24a2e2scw5s3.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 06 Mar 2019 12:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nh4qss24a2e2scw5s3.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3991/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:42:17</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;なぜ、&lt;a href="http://jbpress.ismedia.jp/articles/-/51448"&gt;企画と開発が責任を押し付け合う会社の前途は暗い&lt;/a&gt;のか？&lt;/li&gt;
  &lt;li&gt;計画が悪い vs 実装が悪い、というどっちが悪い論&lt;/li&gt;
  &lt;li&gt;問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる&lt;/li&gt;
  &lt;li&gt;市場、世界は悠長に回っていない&lt;/li&gt;
  &lt;li&gt;将棋でのメタファーとRTSでのメタファー&lt;/li&gt;
  &lt;li&gt;上手くいかないのは全体という前提をどこまで作れるか？&lt;/li&gt;
  &lt;li&gt;仕様が固まってから開発の後半で発生する変更を怖がる&lt;/li&gt;
  &lt;li&gt;あたかも世界の時間が止まっているように振る舞う&lt;/li&gt;
  &lt;li&gt;オーシャンズ11&lt;/li&gt;
  &lt;li&gt;その場の状況にあった計画を立て直していく、情報を得続ける&lt;/li&gt;
  &lt;li&gt;現代の戦争は火力戦・物量戦から変わってきている&lt;/li&gt;
  &lt;li&gt;企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない&lt;/li&gt;
  &lt;li&gt;ピラミッド構造は例外処理が役割の1つ&lt;/li&gt;
  &lt;li&gt;手順書はQ&amp;amp;Aに答えてくれない&lt;/li&gt;
  &lt;li&gt;Q&amp;amp;Aに答えられる人が現場にいない&lt;/li&gt;
  &lt;li&gt;リーンスタートアップやアジャイルなやり方が出てきた背景は？&lt;/li&gt;
  &lt;li&gt;ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409"&gt;Organizational Patterns of Agile Software Development &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf"&gt;Quattro Pro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者&lt;/li&gt;
  &lt;li&gt;開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化&lt;/li&gt;
  &lt;li&gt;オブジェクト指向の成熟&lt;/li&gt;
  &lt;li&gt;顧客開発と製品開発にあった別のループを統合した&lt;/li&gt;
  &lt;li&gt;未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか&lt;/li&gt;
  &lt;li&gt;クラウドやRails&lt;/li&gt;
  &lt;li&gt;売れてもいないのに、最大アクセスの条件で試算する&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jbpress.ismedia.jp/articles/-/52025"&gt;ビジネスに追いつけない日本のシステム開発の構造欠陥&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;プライムをとれないSIをやると辛いことがある&lt;/li&gt;
  &lt;li&gt;「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる&lt;/li&gt;
  &lt;li&gt;ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる&lt;/li&gt;
  &lt;li&gt;本来であれば仕様書は動くもの&lt;/li&gt;
  &lt;li&gt;SIの調達モデルとは&lt;/li&gt;
  &lt;li&gt;イノベーションは調達できるの？って話&lt;/li&gt;
  &lt;li&gt;ソフトウェアは材料として変わっている&lt;/li&gt;
  &lt;li&gt;鉄鋼は産業の米&lt;/li&gt;
  &lt;li&gt;鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった&lt;/li&gt;
  &lt;li&gt;ソフトウェアも同様に考え、各会社がシステム子会社を作った&lt;/li&gt;
  &lt;li&gt;その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている&lt;/li&gt;
  &lt;li&gt;ソフトウェアは材料ではなく、垂直のビジネス構造と設計している&lt;/li&gt;
  &lt;li&gt;とくに業務システムでは、ビジネスとソフトウェアは切り分けられない&lt;/li&gt;
  &lt;li&gt;ソフトウェアの事業の中核である&lt;/li&gt;
  &lt;li&gt;ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも&lt;/li&gt;
  &lt;li&gt;作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう&lt;/li&gt;
  &lt;li&gt;対立するのではなく、協調することによって得られる価値に向かう時代&lt;/li&gt;
  &lt;li&gt;なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？&lt;/li&gt;
  &lt;li&gt;考え方の普及と、ビジネス構造の変革速度に差がある&lt;/li&gt;
  &lt;li&gt;ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している&lt;/li&gt;
  &lt;li&gt;就職で入りたいランキングにおいて、SIerは上位&lt;/li&gt;
  &lt;li&gt;20代の時期を何に投資するか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jbpress.ismedia.jp/articles/-/52264"&gt;企業内イノベーションの実現に向けた7つの提言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？&lt;/li&gt;
  &lt;li&gt;経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう&lt;/li&gt;
  &lt;li&gt;イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要&lt;/li&gt;
  &lt;li&gt;“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？&lt;/li&gt;
  &lt;li&gt;大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変&lt;/li&gt;
  &lt;li&gt;小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない&lt;/li&gt;
  &lt;li&gt;離れている時間が長い、成果が出ない場合は役員が意味を伝える&lt;/li&gt;
  &lt;li&gt;“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？&lt;/li&gt;
  &lt;li&gt;年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない&lt;/li&gt;
  &lt;li&gt;できないもんはできない&lt;/li&gt;
  &lt;li&gt;どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える&lt;/li&gt;
  &lt;li&gt;上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断&lt;/li&gt;
  &lt;li&gt;仕事をした気になって疲れる&lt;/li&gt;
  &lt;li&gt;お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか&lt;/li&gt;
  &lt;li&gt;“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？&lt;/li&gt;
  &lt;li&gt;本を読んでもアジャイルにできない&lt;/li&gt;
  &lt;li&gt;本を読んでも自転車に乗れない、暗黙知伝達の最たるところ&lt;/li&gt;
  &lt;li&gt;アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす&lt;/li&gt;
  &lt;li&gt;“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？&lt;/li&gt;
  &lt;li&gt;効率良くやるためには、形式的知識伝達もやる&lt;/li&gt;
  &lt;li&gt;全体的な体系をわかった上で実践に入る&lt;/li&gt;
  &lt;li&gt;“技術力のあるエンジニアを招集すること”&lt;/li&gt;
  &lt;li&gt;結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ&lt;/li&gt;
  &lt;li&gt;技術力のない人がものづくりをするのはおかしい&lt;/li&gt;
  &lt;li&gt;パワポという黒魔術にひっかからない&lt;/li&gt;
  &lt;li&gt;エンジニアの召集という言葉の意味&lt;/li&gt;
  &lt;li&gt;“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”&lt;/li&gt;
  &lt;li&gt;熱を受け取る場面&lt;/li&gt;
  &lt;li&gt;この人と出会った、この人の話を聞いて人生が変わったという転機&lt;/li&gt;
  &lt;li&gt;会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき&lt;/li&gt;
  &lt;li&gt;（イベント参加の）報告書は別にいらない、その人の中に溜まる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://slide.meguro.ryuzee.com/slides/50"&gt;ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社は度量を持つ&lt;/li&gt;
  &lt;li&gt;会社からの退職者数の傾きを見る&lt;/li&gt;
  &lt;li&gt;古くからいるマネージャーの役割はどうなっていくのか？&lt;/li&gt;
  &lt;li&gt;得意なことで、変化の中心になっている人を支援する&lt;/li&gt;
  &lt;li&gt;上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか&lt;/li&gt;
  &lt;li&gt;取締役からのメッセージも重要&lt;/li&gt;
  &lt;li&gt;バリューを出せる人は、どうやってもバリューを出せる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.asf.esm.co.jp/"&gt;アジャイルスタジオ福井&lt;/a&gt;で見学募集中&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;なぜ、&lt;a href="http://jbpress.ismedia.jp/articles/-/51448"&gt;企画と開発が責任を押し付け合う会社の前途は暗い&lt;/a&gt;のか？&lt;/li&gt;
  &lt;li&gt;計画が悪い vs 実装が悪い、というどっちが悪い論&lt;/li&gt;
  &lt;li&gt;問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる&lt;/li&gt;
  &lt;li&gt;市場、世界は悠長に回っていない&lt;/li&gt;
  &lt;li&gt;将棋でのメタファーとRTSでのメタファー&lt;/li&gt;
  &lt;li&gt;上手くいかないのは全体という前提をどこまで作れるか？&lt;/li&gt;
  &lt;li&gt;仕様が固まってから開発の後半で発生する変更を怖がる&lt;/li&gt;
  &lt;li&gt;あたかも世界の時間が止まっているように振る舞う&lt;/li&gt;
  &lt;li&gt;オーシャンズ11&lt;/li&gt;
  &lt;li&gt;その場の状況にあった計画を立て直していく、情報を得続ける&lt;/li&gt;
  &lt;li&gt;現代の戦争は火力戦・物量戦から変わってきている&lt;/li&gt;
  &lt;li&gt;企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない&lt;/li&gt;
  &lt;li&gt;ピラミッド構造は例外処理が役割の1つ&lt;/li&gt;
  &lt;li&gt;手順書はQ&amp;amp;Aに答えてくれない&lt;/li&gt;
  &lt;li&gt;Q&amp;amp;Aに答えられる人が現場にいない&lt;/li&gt;
  &lt;li&gt;リーンスタートアップやアジャイルなやり方が出てきた背景は？&lt;/li&gt;
  &lt;li&gt;ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409"&gt;Organizational Patterns of Agile Software Development &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf"&gt;Quattro Pro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者&lt;/li&gt;
  &lt;li&gt;開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化&lt;/li&gt;
  &lt;li&gt;オブジェクト指向の成熟&lt;/li&gt;
  &lt;li&gt;顧客開発と製品開発にあった別のループを統合した&lt;/li&gt;
  &lt;li&gt;未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか&lt;/li&gt;
  &lt;li&gt;クラウドやRails&lt;/li&gt;
  &lt;li&gt;売れてもいないのに、最大アクセスの条件で試算する&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jbpress.ismedia.jp/articles/-/52025"&gt;ビジネスに追いつけない日本のシステム開発の構造欠陥&lt;/a&gt;とは？&lt;/li&gt;
  &lt;li&gt;プライムをとれないSIをやると辛いことがある&lt;/li&gt;
  &lt;li&gt;「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる&lt;/li&gt;
  &lt;li&gt;ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる&lt;/li&gt;
  &lt;li&gt;本来であれば仕様書は動くもの&lt;/li&gt;
  &lt;li&gt;SIの調達モデルとは&lt;/li&gt;
  &lt;li&gt;イノベーションは調達できるの？って話&lt;/li&gt;
  &lt;li&gt;ソフトウェアは材料として変わっている&lt;/li&gt;
  &lt;li&gt;鉄鋼は産業の米&lt;/li&gt;
  &lt;li&gt;鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった&lt;/li&gt;
  &lt;li&gt;ソフトウェアも同様に考え、各会社がシステム子会社を作った&lt;/li&gt;
  &lt;li&gt;その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている&lt;/li&gt;
  &lt;li&gt;ソフトウェアは材料ではなく、垂直のビジネス構造と設計している&lt;/li&gt;
  &lt;li&gt;とくに業務システムでは、ビジネスとソフトウェアは切り分けられない&lt;/li&gt;
  &lt;li&gt;ソフトウェアの事業の中核である&lt;/li&gt;
  &lt;li&gt;ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも&lt;/li&gt;
  &lt;li&gt;作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう&lt;/li&gt;
  &lt;li&gt;対立するのではなく、協調することによって得られる価値に向かう時代&lt;/li&gt;
  &lt;li&gt;なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？&lt;/li&gt;
  &lt;li&gt;考え方の普及と、ビジネス構造の変革速度に差がある&lt;/li&gt;
  &lt;li&gt;ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している&lt;/li&gt;
  &lt;li&gt;就職で入りたいランキングにおいて、SIerは上位&lt;/li&gt;
  &lt;li&gt;20代の時期を何に投資するか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jbpress.ismedia.jp/articles/-/52264"&gt;企業内イノベーションの実現に向けた7つの提言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？&lt;/li&gt;
  &lt;li&gt;経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう&lt;/li&gt;
  &lt;li&gt;イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要&lt;/li&gt;
  &lt;li&gt;“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？&lt;/li&gt;
  &lt;li&gt;大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変&lt;/li&gt;
  &lt;li&gt;小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない&lt;/li&gt;
  &lt;li&gt;離れている時間が長い、成果が出ない場合は役員が意味を伝える&lt;/li&gt;
  &lt;li&gt;“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？&lt;/li&gt;
  &lt;li&gt;年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない&lt;/li&gt;
  &lt;li&gt;できないもんはできない&lt;/li&gt;
  &lt;li&gt;どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える&lt;/li&gt;
  &lt;li&gt;上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断&lt;/li&gt;
  &lt;li&gt;仕事をした気になって疲れる&lt;/li&gt;
  &lt;li&gt;お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか&lt;/li&gt;
  &lt;li&gt;“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？&lt;/li&gt;
  &lt;li&gt;本を読んでもアジャイルにできない&lt;/li&gt;
  &lt;li&gt;本を読んでも自転車に乗れない、暗黙知伝達の最たるところ&lt;/li&gt;
  &lt;li&gt;アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす&lt;/li&gt;
  &lt;li&gt;“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？&lt;/li&gt;
  &lt;li&gt;効率良くやるためには、形式的知識伝達もやる&lt;/li&gt;
  &lt;li&gt;全体的な体系をわかった上で実践に入る&lt;/li&gt;
  &lt;li&gt;“技術力のあるエンジニアを招集すること”&lt;/li&gt;
  &lt;li&gt;結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ&lt;/li&gt;
  &lt;li&gt;技術力のない人がものづくりをするのはおかしい&lt;/li&gt;
  &lt;li&gt;パワポという黒魔術にひっかからない&lt;/li&gt;
  &lt;li&gt;エンジニアの召集という言葉の意味&lt;/li&gt;
  &lt;li&gt;“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”&lt;/li&gt;
  &lt;li&gt;熱を受け取る場面&lt;/li&gt;
  &lt;li&gt;この人と出会った、この人の話を聞いて人生が変わったという転機&lt;/li&gt;
  &lt;li&gt;会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき&lt;/li&gt;
  &lt;li&gt;（イベント参加の）報告書は別にいらない、その人の中に溜まる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://slide.meguro.ryuzee.com/slides/50"&gt;ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;会社は度量を持つ&lt;/li&gt;
  &lt;li&gt;会社からの退職者数の傾きを見る&lt;/li&gt;
  &lt;li&gt;古くからいるマネージャーの役割はどうなっていくのか？&lt;/li&gt;
  &lt;li&gt;得意なことで、変化の中心になっている人を支援する&lt;/li&gt;
  &lt;li&gt;上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか&lt;/li&gt;
  &lt;li&gt;取締役からのメッセージも重要&lt;/li&gt;
  &lt;li&gt;バリューを出せる人は、どうやってもバリューを出せる&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.asf.esm.co.jp/"&gt;アジャイルスタジオ福井&lt;/a&gt;で見学募集中&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>14. なぜ、エンタープライズ業界でアジャイル・リーンは普及しないのか？</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>15</podcast:episode>
    </item>
    <item>
      <title>13. ペアプロやテストの疑問とか、ソフトウェアエンジニアの育成とか</title>
      <link>https://fukabori.fm/episode/13</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて&lt;/li&gt;
  &lt;li&gt;ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）&lt;/li&gt;
  &lt;li&gt;ベテランとベテランは、一番効果を発揮するペアである&lt;/li&gt;
  &lt;li&gt;意思決定をライブでできる重要性&lt;/li&gt;
  &lt;li&gt;設計上の妥協点をその場で合意できる&lt;/li&gt;
  &lt;li&gt;ビギナーとベテランで、ビギナーはナビゲーターをするのか？&lt;/li&gt;
  &lt;li&gt;コードを書いてるところを見てもらうのは大事なプラクティス&lt;/li&gt;
  &lt;li&gt;ベテランもプレッシャーを持ってコードを書ける&lt;/li&gt;
  &lt;li&gt;見られているだけでコードの質は高まる&lt;/li&gt;
  &lt;li&gt;リアルタイムでないコードレビューがあるだけで、コードの質は高まる&lt;/li&gt;
  &lt;li&gt;コードレビューのインフラに投資する&lt;/li&gt;
  &lt;li&gt;流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？&lt;/li&gt;
  &lt;li&gt;一番の学びは教えることから発生する&lt;/li&gt;
  &lt;li&gt;相手から、相手自身の学びを引き出す&lt;/li&gt;
  &lt;li&gt;チームの暗黙知を、暗黙知のまま伝える、強化していく&lt;/li&gt;
  &lt;li&gt;テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？&lt;/li&gt;
  &lt;li&gt;ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う&lt;/li&gt;
  &lt;li&gt;プライベート関数はテストするのか？&lt;/li&gt;
  &lt;li&gt;技術的には、プライベート関数のテストはパブリック関数からテストできる&lt;/li&gt;
  &lt;li&gt;プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち&lt;/li&gt;
  &lt;li&gt;フロントエンドのテストはどこまで書けばいいのか？&lt;/li&gt;
  &lt;li&gt;書くけど、書きすぎない&lt;/li&gt;
  &lt;li&gt;画面の構造が変わっても、影響にされにくいものをテストする&lt;/li&gt;
  &lt;li&gt;ビジュアルリグレッションテスト&lt;/li&gt;
  &lt;li&gt;魑魅魍魎のUIの世界&lt;/li&gt;
  &lt;li&gt;テストのカバレッジ、どの程度まで書けばいいのか？&lt;/li&gt;
  &lt;li&gt;ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい&lt;/li&gt;
  &lt;li&gt;カバレッジは何らかの管理の道具にすると、うまく回らない&lt;/li&gt;
  &lt;li&gt;不具合は思い違いから発生する&lt;/li&gt;
  &lt;li&gt;カバレッジ100%は誤った安心感を与えがち&lt;/li&gt;
  &lt;li&gt;カバレッジツールは自分達の見落とし・過信を見つけるために使う&lt;/li&gt;
  &lt;li&gt;カバレッジを絶対値ではなく傾きでみる&lt;/li&gt;
  &lt;li&gt;CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る&lt;/li&gt;
  &lt;li&gt;バグ収束曲線は、現代の開発ではFitしないことのが多い&lt;/li&gt;
  &lt;li&gt;品質指標の形骸化&lt;/li&gt;
  &lt;li&gt;外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？&lt;/li&gt;
  &lt;li&gt;内製にシフトするなら、技術者のhiringも必須&lt;/li&gt;
  &lt;li&gt;小さく始めて、大きく育てて勝つパターンを積み上げる&lt;/li&gt;
  &lt;li&gt;段階的に内製開発にシフトしていく&lt;/li&gt;
  &lt;li&gt;社内の特区、信頼貯金を使って展開していく&lt;/li&gt;
  &lt;li&gt;内製を全然していない会社が、内製にシフトするためには4-5年かかる&lt;/li&gt;
  &lt;li&gt;新人を育てるためにはどうしたらいいか？&lt;/li&gt;
  &lt;li&gt;配属ガチャ&lt;/li&gt;
  &lt;li&gt;技術力の高いエンジニア新人を孤立させない&lt;/li&gt;
  &lt;li&gt;事業部内に閉じた情報流通&lt;/li&gt;
  &lt;li&gt;全社Slackがないのはよくあるサイロ化&lt;/li&gt;
  &lt;li&gt;技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る&lt;/li&gt;
  &lt;li&gt;内製を始めるモードになったエンプラ企業はイメージ付けが必要&lt;/li&gt;
  &lt;li&gt;技術者が社名を背負ってアウトプット&lt;/li&gt;
  &lt;li&gt;大企業Hack&lt;/li&gt;
  &lt;li&gt;意思決定層にこれからのソフトウェア開発に認識を改めてもらう&lt;/li&gt;
  &lt;li&gt;組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？&lt;/li&gt;
  &lt;li&gt;再現可能にするのが大事&lt;/li&gt;
  &lt;li&gt;前提が違う、変動する中でソフトウェア企業としての強さを保つ&lt;/li&gt;
  &lt;li&gt;公開し検索可能にすることが大事&lt;/li&gt;
  &lt;li&gt;URL重要&lt;/li&gt;
  &lt;li&gt;心理的安全性の重要性&lt;/li&gt;
  &lt;li&gt;価値観から行動原則、品質基準を考えていく&lt;/li&gt;
  &lt;li&gt;経験していない場面にチェックリストは効かない&lt;/li&gt;
  &lt;li&gt;誤っていたこと、失敗は良いチャレンジとして評価されるように&lt;/li&gt;
  &lt;li&gt;社内でアンチパターンを共有できる組織は強い&lt;/li&gt;
  &lt;li&gt;社内FailCon&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/13</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nhaam36r2w7tmjcj6n.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 27 Feb 2019 14:45:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nhaam36r2w7tmjcj6n.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3990/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:56:17</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて&lt;/li&gt;
  &lt;li&gt;ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）&lt;/li&gt;
  &lt;li&gt;ベテランとベテランは、一番効果を発揮するペアである&lt;/li&gt;
  &lt;li&gt;意思決定をライブでできる重要性&lt;/li&gt;
  &lt;li&gt;設計上の妥協点をその場で合意できる&lt;/li&gt;
  &lt;li&gt;ビギナーとベテランで、ビギナーはナビゲーターをするのか？&lt;/li&gt;
  &lt;li&gt;コードを書いてるところを見てもらうのは大事なプラクティス&lt;/li&gt;
  &lt;li&gt;ベテランもプレッシャーを持ってコードを書ける&lt;/li&gt;
  &lt;li&gt;見られているだけでコードの質は高まる&lt;/li&gt;
  &lt;li&gt;リアルタイムでないコードレビューがあるだけで、コードの質は高まる&lt;/li&gt;
  &lt;li&gt;コードレビューのインフラに投資する&lt;/li&gt;
  &lt;li&gt;流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？&lt;/li&gt;
  &lt;li&gt;一番の学びは教えることから発生する&lt;/li&gt;
  &lt;li&gt;相手から、相手自身の学びを引き出す&lt;/li&gt;
  &lt;li&gt;チームの暗黙知を、暗黙知のまま伝える、強化していく&lt;/li&gt;
  &lt;li&gt;テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？&lt;/li&gt;
  &lt;li&gt;ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う&lt;/li&gt;
  &lt;li&gt;プライベート関数はテストするのか？&lt;/li&gt;
  &lt;li&gt;技術的には、プライベート関数のテストはパブリック関数からテストできる&lt;/li&gt;
  &lt;li&gt;プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち&lt;/li&gt;
  &lt;li&gt;フロントエンドのテストはどこまで書けばいいのか？&lt;/li&gt;
  &lt;li&gt;書くけど、書きすぎない&lt;/li&gt;
  &lt;li&gt;画面の構造が変わっても、影響にされにくいものをテストする&lt;/li&gt;
  &lt;li&gt;ビジュアルリグレッションテスト&lt;/li&gt;
  &lt;li&gt;魑魅魍魎のUIの世界&lt;/li&gt;
  &lt;li&gt;テストのカバレッジ、どの程度まで書けばいいのか？&lt;/li&gt;
  &lt;li&gt;ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい&lt;/li&gt;
  &lt;li&gt;カバレッジは何らかの管理の道具にすると、うまく回らない&lt;/li&gt;
  &lt;li&gt;不具合は思い違いから発生する&lt;/li&gt;
  &lt;li&gt;カバレッジ100%は誤った安心感を与えがち&lt;/li&gt;
  &lt;li&gt;カバレッジツールは自分達の見落とし・過信を見つけるために使う&lt;/li&gt;
  &lt;li&gt;カバレッジを絶対値ではなく傾きでみる&lt;/li&gt;
  &lt;li&gt;CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る&lt;/li&gt;
  &lt;li&gt;バグ収束曲線は、現代の開発ではFitしないことのが多い&lt;/li&gt;
  &lt;li&gt;品質指標の形骸化&lt;/li&gt;
  &lt;li&gt;外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？&lt;/li&gt;
  &lt;li&gt;内製にシフトするなら、技術者のhiringも必須&lt;/li&gt;
  &lt;li&gt;小さく始めて、大きく育てて勝つパターンを積み上げる&lt;/li&gt;
  &lt;li&gt;段階的に内製開発にシフトしていく&lt;/li&gt;
  &lt;li&gt;社内の特区、信頼貯金を使って展開していく&lt;/li&gt;
  &lt;li&gt;内製を全然していない会社が、内製にシフトするためには4-5年かかる&lt;/li&gt;
  &lt;li&gt;新人を育てるためにはどうしたらいいか？&lt;/li&gt;
  &lt;li&gt;配属ガチャ&lt;/li&gt;
  &lt;li&gt;技術力の高いエンジニア新人を孤立させない&lt;/li&gt;
  &lt;li&gt;事業部内に閉じた情報流通&lt;/li&gt;
  &lt;li&gt;全社Slackがないのはよくあるサイロ化&lt;/li&gt;
  &lt;li&gt;技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る&lt;/li&gt;
  &lt;li&gt;内製を始めるモードになったエンプラ企業はイメージ付けが必要&lt;/li&gt;
  &lt;li&gt;技術者が社名を背負ってアウトプット&lt;/li&gt;
  &lt;li&gt;大企業Hack&lt;/li&gt;
  &lt;li&gt;意思決定層にこれからのソフトウェア開発に認識を改めてもらう&lt;/li&gt;
  &lt;li&gt;組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？&lt;/li&gt;
  &lt;li&gt;再現可能にするのが大事&lt;/li&gt;
  &lt;li&gt;前提が違う、変動する中でソフトウェア企業としての強さを保つ&lt;/li&gt;
  &lt;li&gt;公開し検索可能にすることが大事&lt;/li&gt;
  &lt;li&gt;URL重要&lt;/li&gt;
  &lt;li&gt;心理的安全性の重要性&lt;/li&gt;
  &lt;li&gt;価値観から行動原則、品質基準を考えていく&lt;/li&gt;
  &lt;li&gt;経験していない場面にチェックリストは効かない&lt;/li&gt;
  &lt;li&gt;誤っていたこと、失敗は良いチャレンジとして評価されるように&lt;/li&gt;
  &lt;li&gt;社内でアンチパターンを共有できる組織は強い&lt;/li&gt;
  &lt;li&gt;社内FailCon&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて&lt;/li&gt;
  &lt;li&gt;ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）&lt;/li&gt;
  &lt;li&gt;ベテランとベテランは、一番効果を発揮するペアである&lt;/li&gt;
  &lt;li&gt;意思決定をライブでできる重要性&lt;/li&gt;
  &lt;li&gt;設計上の妥協点をその場で合意できる&lt;/li&gt;
  &lt;li&gt;ビギナーとベテランで、ビギナーはナビゲーターをするのか？&lt;/li&gt;
  &lt;li&gt;コードを書いてるところを見てもらうのは大事なプラクティス&lt;/li&gt;
  &lt;li&gt;ベテランもプレッシャーを持ってコードを書ける&lt;/li&gt;
  &lt;li&gt;見られているだけでコードの質は高まる&lt;/li&gt;
  &lt;li&gt;リアルタイムでないコードレビューがあるだけで、コードの質は高まる&lt;/li&gt;
  &lt;li&gt;コードレビューのインフラに投資する&lt;/li&gt;
  &lt;li&gt;流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？&lt;/li&gt;
  &lt;li&gt;一番の学びは教えることから発生する&lt;/li&gt;
  &lt;li&gt;相手から、相手自身の学びを引き出す&lt;/li&gt;
  &lt;li&gt;チームの暗黙知を、暗黙知のまま伝える、強化していく&lt;/li&gt;
  &lt;li&gt;テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？&lt;/li&gt;
  &lt;li&gt;ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う&lt;/li&gt;
  &lt;li&gt;プライベート関数はテストするのか？&lt;/li&gt;
  &lt;li&gt;技術的には、プライベート関数のテストはパブリック関数からテストできる&lt;/li&gt;
  &lt;li&gt;プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち&lt;/li&gt;
  &lt;li&gt;フロントエンドのテストはどこまで書けばいいのか？&lt;/li&gt;
  &lt;li&gt;書くけど、書きすぎない&lt;/li&gt;
  &lt;li&gt;画面の構造が変わっても、影響にされにくいものをテストする&lt;/li&gt;
  &lt;li&gt;ビジュアルリグレッションテスト&lt;/li&gt;
  &lt;li&gt;魑魅魍魎のUIの世界&lt;/li&gt;
  &lt;li&gt;テストのカバレッジ、どの程度まで書けばいいのか？&lt;/li&gt;
  &lt;li&gt;ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい&lt;/li&gt;
  &lt;li&gt;カバレッジは何らかの管理の道具にすると、うまく回らない&lt;/li&gt;
  &lt;li&gt;不具合は思い違いから発生する&lt;/li&gt;
  &lt;li&gt;カバレッジ100%は誤った安心感を与えがち&lt;/li&gt;
  &lt;li&gt;カバレッジツールは自分達の見落とし・過信を見つけるために使う&lt;/li&gt;
  &lt;li&gt;カバレッジを絶対値ではなく傾きでみる&lt;/li&gt;
  &lt;li&gt;CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る&lt;/li&gt;
  &lt;li&gt;バグ収束曲線は、現代の開発ではFitしないことのが多い&lt;/li&gt;
  &lt;li&gt;品質指標の形骸化&lt;/li&gt;
  &lt;li&gt;外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？&lt;/li&gt;
  &lt;li&gt;内製にシフトするなら、技術者のhiringも必須&lt;/li&gt;
  &lt;li&gt;小さく始めて、大きく育てて勝つパターンを積み上げる&lt;/li&gt;
  &lt;li&gt;段階的に内製開発にシフトしていく&lt;/li&gt;
  &lt;li&gt;社内の特区、信頼貯金を使って展開していく&lt;/li&gt;
  &lt;li&gt;内製を全然していない会社が、内製にシフトするためには4-5年かかる&lt;/li&gt;
  &lt;li&gt;新人を育てるためにはどうしたらいいか？&lt;/li&gt;
  &lt;li&gt;配属ガチャ&lt;/li&gt;
  &lt;li&gt;技術力の高いエンジニア新人を孤立させない&lt;/li&gt;
  &lt;li&gt;事業部内に閉じた情報流通&lt;/li&gt;
  &lt;li&gt;全社Slackがないのはよくあるサイロ化&lt;/li&gt;
  &lt;li&gt;技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る&lt;/li&gt;
  &lt;li&gt;内製を始めるモードになったエンプラ企業はイメージ付けが必要&lt;/li&gt;
  &lt;li&gt;技術者が社名を背負ってアウトプット&lt;/li&gt;
  &lt;li&gt;大企業Hack&lt;/li&gt;
  &lt;li&gt;意思決定層にこれからのソフトウェア開発に認識を改めてもらう&lt;/li&gt;
  &lt;li&gt;組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？&lt;/li&gt;
  &lt;li&gt;再現可能にするのが大事&lt;/li&gt;
  &lt;li&gt;前提が違う、変動する中でソフトウェア企業としての強さを保つ&lt;/li&gt;
  &lt;li&gt;公開し検索可能にすることが大事&lt;/li&gt;
  &lt;li&gt;URL重要&lt;/li&gt;
  &lt;li&gt;心理的安全性の重要性&lt;/li&gt;
  &lt;li&gt;価値観から行動原則、品質基準を考えていく&lt;/li&gt;
  &lt;li&gt;経験していない場面にチェックリストは効かない&lt;/li&gt;
  &lt;li&gt;誤っていたこと、失敗は良いチャレンジとして評価されるように&lt;/li&gt;
  &lt;li&gt;社内でアンチパターンを共有できる組織は強い&lt;/li&gt;
  &lt;li&gt;社内FailCon&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>13. ペアプロやテストの疑問とか、ソフトウェアエンジニアの育成とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>14</podcast:episode>
    </item>
    <item>
      <title>12. エンプラ向けの組織改革とか、スクラムでのチーム作り・人事評価とか</title>
      <link>https://fukabori.fm/episode/12</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？&lt;/li&gt;
  &lt;li&gt;現場だけで変えられる範囲には限界がある&lt;/li&gt;
  &lt;li&gt;組織改革を若手がやるのは厳しい&lt;/li&gt;
  &lt;li&gt;ボトムアップでやるには気の遠くなる話が多すぎる&lt;/li&gt;
  &lt;li&gt;ミドルマネージャーや意思決定の権限を持つ&lt;/li&gt;
  &lt;li&gt;改革の範囲を全社ではなく、自分の部だけにする&lt;/li&gt;
  &lt;li&gt;徐々に広げていくのは、ボトムアップでは鉄板&lt;/li&gt;
  &lt;li&gt;トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい&lt;/li&gt;
  &lt;li&gt;全社ルール・ガイドラインと、どう付き合っていけば良いのか？&lt;/li&gt;
  &lt;li&gt;複数のガイドライン/オプションを用意しておく&lt;/li&gt;
  &lt;li&gt;ガイドラインをかならず守らなきゃいけないのは思い込みなこともある&lt;/li&gt;
  &lt;li&gt;緩い、自由があるガイドラインだと進めやすい&lt;/li&gt;
  &lt;li&gt;権限委譲が非常に難しいのではないか？&lt;/li&gt;
  &lt;li&gt;権限のないプロダクトオーナー問題&lt;/li&gt;
  &lt;li&gt;プロジェクト開始の時点で、決められる範囲の線引き&lt;/li&gt;
  &lt;li&gt;大きな会社になればなるほど、スクラムマスターが重要&lt;/li&gt;
  &lt;li&gt;スクラムマスターの役割は半端じゃなく大変&lt;/li&gt;
  &lt;li&gt;大きな会社だとチームの外側に課題がある&lt;/li&gt;
  &lt;li&gt;スクラムマスターは大きな会社のプロパーがやるべき&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる&lt;/li&gt;
  &lt;li&gt;プロダクトが目に見える成果を出してないケース&lt;/li&gt;
  &lt;li&gt;プロダクトを売らずに、組織改革ばっかりしてもしょうがない&lt;/li&gt;
  &lt;li&gt;綺麗事ばっかり言ってるのはダメ&lt;/li&gt;
  &lt;li&gt;失敗することは是である&lt;/li&gt;
  &lt;li&gt;傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である&lt;/li&gt;
  &lt;li&gt;弾をたくさん投げるのが良いこと&lt;/li&gt;
  &lt;li&gt;出島とは？&lt;/li&gt;
  &lt;li&gt;全員同席、外部から雑音をシャットアウトする&lt;/li&gt;
  &lt;li&gt;エンドポイントを一箇所に絞る&lt;/li&gt;
  &lt;li&gt;治外法権&lt;/li&gt;
  &lt;li&gt;人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？&lt;/li&gt;
  &lt;li&gt;お金を稼いでるけど、不人気な部門の問題&lt;/li&gt;
  &lt;li&gt;辞めるにしてもいい関係で辞めてもらう&lt;/li&gt;
  &lt;li&gt;給与テーブルが自由に設定できない問題&lt;/li&gt;
  &lt;li&gt;やりたいことができるように、また仕事しやすい環境を与える&lt;/li&gt;
  &lt;li&gt;周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？&lt;/li&gt;
  &lt;li&gt;バックオフィスは、プロジェクト開始時に巻き込んでおく&lt;/li&gt;
  &lt;li&gt;たとえば品質管理部門の人に入ってもらって、完成の定義を考える&lt;/li&gt;
  &lt;li&gt;AWSでShip判断&lt;/li&gt;
  &lt;li&gt;us-east1から他リージョンへのロールアウト&lt;/li&gt;
  &lt;li&gt;開発チームはどの程度、顧客の声を知る必要があるのか？&lt;/li&gt;
  &lt;li&gt;チームが無関心なのは一番辛い&lt;/li&gt;
  &lt;li&gt;サポートエンジニアを一緒にやるプラクティス&lt;/li&gt;
  &lt;li&gt;開発と運用のチームは結局どうしていけばいいのか？&lt;/li&gt;
  &lt;li&gt;基本的には1チームが良く、部門が別れているならバーチャルチームで1つに&lt;/li&gt;
  &lt;li&gt;少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する&lt;/li&gt;
  &lt;li&gt;必ずしも新規技術を使う必要はない&lt;/li&gt;
  &lt;li&gt;チームの力量・状況にあわせて、技術や言語を選んでいく&lt;/li&gt;
  &lt;li&gt;1week sprintの振り返りだと、長期的な課題がでにくい？&lt;/li&gt;
  &lt;li&gt;ベロシティを1.5倍、2倍にするためには何したらいいの？&lt;/li&gt;
  &lt;li&gt;KPTは断面を切る振り返りであり、時間軸があまりない&lt;/li&gt;
  &lt;li&gt;振り返りは適度に変えていく&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ryuzee.com/contents/blog/7138"&gt;闇鍋&lt;/a&gt;という振り返りプラクティス&lt;/li&gt;
  &lt;li&gt;ドット投票における問題&lt;/li&gt;
  &lt;li&gt;給与査定という観点での人事評価はどうやればいいか？&lt;/li&gt;
  &lt;li&gt;プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？&lt;/li&gt;
  &lt;li&gt;チーム一律評価 + 360度評価 を組み合わせるのが落とし所&lt;/li&gt;
  &lt;li&gt;新サービスを出したばっかりのPOはどう評価するか？&lt;/li&gt;
  &lt;li&gt;人事部とエンジニアの採用プロセスの関わり？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.attractor.co.jp/contact/"&gt;アトラクタでお仕事募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/12</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nh5ca2cwnsqf3pxw70.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 30 Jan 2019 14:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nh5ca2cwnsqf3pxw70.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3989/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:50:44</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？&lt;/li&gt;
  &lt;li&gt;現場だけで変えられる範囲には限界がある&lt;/li&gt;
  &lt;li&gt;組織改革を若手がやるのは厳しい&lt;/li&gt;
  &lt;li&gt;ボトムアップでやるには気の遠くなる話が多すぎる&lt;/li&gt;
  &lt;li&gt;ミドルマネージャーや意思決定の権限を持つ&lt;/li&gt;
  &lt;li&gt;改革の範囲を全社ではなく、自分の部だけにする&lt;/li&gt;
  &lt;li&gt;徐々に広げていくのは、ボトムアップでは鉄板&lt;/li&gt;
  &lt;li&gt;トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい&lt;/li&gt;
  &lt;li&gt;全社ルール・ガイドラインと、どう付き合っていけば良いのか？&lt;/li&gt;
  &lt;li&gt;複数のガイドライン/オプションを用意しておく&lt;/li&gt;
  &lt;li&gt;ガイドラインをかならず守らなきゃいけないのは思い込みなこともある&lt;/li&gt;
  &lt;li&gt;緩い、自由があるガイドラインだと進めやすい&lt;/li&gt;
  &lt;li&gt;権限委譲が非常に難しいのではないか？&lt;/li&gt;
  &lt;li&gt;権限のないプロダクトオーナー問題&lt;/li&gt;
  &lt;li&gt;プロジェクト開始の時点で、決められる範囲の線引き&lt;/li&gt;
  &lt;li&gt;大きな会社になればなるほど、スクラムマスターが重要&lt;/li&gt;
  &lt;li&gt;スクラムマスターの役割は半端じゃなく大変&lt;/li&gt;
  &lt;li&gt;大きな会社だとチームの外側に課題がある&lt;/li&gt;
  &lt;li&gt;スクラムマスターは大きな会社のプロパーがやるべき&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる&lt;/li&gt;
  &lt;li&gt;プロダクトが目に見える成果を出してないケース&lt;/li&gt;
  &lt;li&gt;プロダクトを売らずに、組織改革ばっかりしてもしょうがない&lt;/li&gt;
  &lt;li&gt;綺麗事ばっかり言ってるのはダメ&lt;/li&gt;
  &lt;li&gt;失敗することは是である&lt;/li&gt;
  &lt;li&gt;傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である&lt;/li&gt;
  &lt;li&gt;弾をたくさん投げるのが良いこと&lt;/li&gt;
  &lt;li&gt;出島とは？&lt;/li&gt;
  &lt;li&gt;全員同席、外部から雑音をシャットアウトする&lt;/li&gt;
  &lt;li&gt;エンドポイントを一箇所に絞る&lt;/li&gt;
  &lt;li&gt;治外法権&lt;/li&gt;
  &lt;li&gt;人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？&lt;/li&gt;
  &lt;li&gt;お金を稼いでるけど、不人気な部門の問題&lt;/li&gt;
  &lt;li&gt;辞めるにしてもいい関係で辞めてもらう&lt;/li&gt;
  &lt;li&gt;給与テーブルが自由に設定できない問題&lt;/li&gt;
  &lt;li&gt;やりたいことができるように、また仕事しやすい環境を与える&lt;/li&gt;
  &lt;li&gt;周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？&lt;/li&gt;
  &lt;li&gt;バックオフィスは、プロジェクト開始時に巻き込んでおく&lt;/li&gt;
  &lt;li&gt;たとえば品質管理部門の人に入ってもらって、完成の定義を考える&lt;/li&gt;
  &lt;li&gt;AWSでShip判断&lt;/li&gt;
  &lt;li&gt;us-east1から他リージョンへのロールアウト&lt;/li&gt;
  &lt;li&gt;開発チームはどの程度、顧客の声を知る必要があるのか？&lt;/li&gt;
  &lt;li&gt;チームが無関心なのは一番辛い&lt;/li&gt;
  &lt;li&gt;サポートエンジニアを一緒にやるプラクティス&lt;/li&gt;
  &lt;li&gt;開発と運用のチームは結局どうしていけばいいのか？&lt;/li&gt;
  &lt;li&gt;基本的には1チームが良く、部門が別れているならバーチャルチームで1つに&lt;/li&gt;
  &lt;li&gt;少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する&lt;/li&gt;
  &lt;li&gt;必ずしも新規技術を使う必要はない&lt;/li&gt;
  &lt;li&gt;チームの力量・状況にあわせて、技術や言語を選んでいく&lt;/li&gt;
  &lt;li&gt;1week sprintの振り返りだと、長期的な課題がでにくい？&lt;/li&gt;
  &lt;li&gt;ベロシティを1.5倍、2倍にするためには何したらいいの？&lt;/li&gt;
  &lt;li&gt;KPTは断面を切る振り返りであり、時間軸があまりない&lt;/li&gt;
  &lt;li&gt;振り返りは適度に変えていく&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ryuzee.com/contents/blog/7138"&gt;闇鍋&lt;/a&gt;という振り返りプラクティス&lt;/li&gt;
  &lt;li&gt;ドット投票における問題&lt;/li&gt;
  &lt;li&gt;給与査定という観点での人事評価はどうやればいいか？&lt;/li&gt;
  &lt;li&gt;プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？&lt;/li&gt;
  &lt;li&gt;チーム一律評価 + 360度評価 を組み合わせるのが落とし所&lt;/li&gt;
  &lt;li&gt;新サービスを出したばっかりのPOはどう評価するか？&lt;/li&gt;
  &lt;li&gt;人事部とエンジニアの採用プロセスの関わり？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.attractor.co.jp/contact/"&gt;アトラクタでお仕事募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？&lt;/li&gt;
  &lt;li&gt;現場だけで変えられる範囲には限界がある&lt;/li&gt;
  &lt;li&gt;組織改革を若手がやるのは厳しい&lt;/li&gt;
  &lt;li&gt;ボトムアップでやるには気の遠くなる話が多すぎる&lt;/li&gt;
  &lt;li&gt;ミドルマネージャーや意思決定の権限を持つ&lt;/li&gt;
  &lt;li&gt;改革の範囲を全社ではなく、自分の部だけにする&lt;/li&gt;
  &lt;li&gt;徐々に広げていくのは、ボトムアップでは鉄板&lt;/li&gt;
  &lt;li&gt;トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい&lt;/li&gt;
  &lt;li&gt;全社ルール・ガイドラインと、どう付き合っていけば良いのか？&lt;/li&gt;
  &lt;li&gt;複数のガイドライン/オプションを用意しておく&lt;/li&gt;
  &lt;li&gt;ガイドラインをかならず守らなきゃいけないのは思い込みなこともある&lt;/li&gt;
  &lt;li&gt;緩い、自由があるガイドラインだと進めやすい&lt;/li&gt;
  &lt;li&gt;権限委譲が非常に難しいのではないか？&lt;/li&gt;
  &lt;li&gt;権限のないプロダクトオーナー問題&lt;/li&gt;
  &lt;li&gt;プロジェクト開始の時点で、決められる範囲の線引き&lt;/li&gt;
  &lt;li&gt;大きな会社になればなるほど、スクラムマスターが重要&lt;/li&gt;
  &lt;li&gt;スクラムマスターの役割は半端じゃなく大変&lt;/li&gt;
  &lt;li&gt;大きな会社だとチームの外側に課題がある&lt;/li&gt;
  &lt;li&gt;スクラムマスターは大きな会社のプロパーがやるべき&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる&lt;/li&gt;
  &lt;li&gt;プロダクトが目に見える成果を出してないケース&lt;/li&gt;
  &lt;li&gt;プロダクトを売らずに、組織改革ばっかりしてもしょうがない&lt;/li&gt;
  &lt;li&gt;綺麗事ばっかり言ってるのはダメ&lt;/li&gt;
  &lt;li&gt;失敗することは是である&lt;/li&gt;
  &lt;li&gt;傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である&lt;/li&gt;
  &lt;li&gt;弾をたくさん投げるのが良いこと&lt;/li&gt;
  &lt;li&gt;出島とは？&lt;/li&gt;
  &lt;li&gt;全員同席、外部から雑音をシャットアウトする&lt;/li&gt;
  &lt;li&gt;エンドポイントを一箇所に絞る&lt;/li&gt;
  &lt;li&gt;治外法権&lt;/li&gt;
  &lt;li&gt;人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？&lt;/li&gt;
  &lt;li&gt;お金を稼いでるけど、不人気な部門の問題&lt;/li&gt;
  &lt;li&gt;辞めるにしてもいい関係で辞めてもらう&lt;/li&gt;
  &lt;li&gt;給与テーブルが自由に設定できない問題&lt;/li&gt;
  &lt;li&gt;やりたいことができるように、また仕事しやすい環境を与える&lt;/li&gt;
  &lt;li&gt;周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？&lt;/li&gt;
  &lt;li&gt;バックオフィスは、プロジェクト開始時に巻き込んでおく&lt;/li&gt;
  &lt;li&gt;たとえば品質管理部門の人に入ってもらって、完成の定義を考える&lt;/li&gt;
  &lt;li&gt;AWSでShip判断&lt;/li&gt;
  &lt;li&gt;us-east1から他リージョンへのロールアウト&lt;/li&gt;
  &lt;li&gt;開発チームはどの程度、顧客の声を知る必要があるのか？&lt;/li&gt;
  &lt;li&gt;チームが無関心なのは一番辛い&lt;/li&gt;
  &lt;li&gt;サポートエンジニアを一緒にやるプラクティス&lt;/li&gt;
  &lt;li&gt;開発と運用のチームは結局どうしていけばいいのか？&lt;/li&gt;
  &lt;li&gt;基本的には1チームが良く、部門が別れているならバーチャルチームで1つに&lt;/li&gt;
  &lt;li&gt;少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する&lt;/li&gt;
  &lt;li&gt;必ずしも新規技術を使う必要はない&lt;/li&gt;
  &lt;li&gt;チームの力量・状況にあわせて、技術や言語を選んでいく&lt;/li&gt;
  &lt;li&gt;1week sprintの振り返りだと、長期的な課題がでにくい？&lt;/li&gt;
  &lt;li&gt;ベロシティを1.5倍、2倍にするためには何したらいいの？&lt;/li&gt;
  &lt;li&gt;KPTは断面を切る振り返りであり、時間軸があまりない&lt;/li&gt;
  &lt;li&gt;振り返りは適度に変えていく&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ryuzee.com/contents/blog/7138"&gt;闇鍋&lt;/a&gt;という振り返りプラクティス&lt;/li&gt;
  &lt;li&gt;ドット投票における問題&lt;/li&gt;
  &lt;li&gt;給与査定という観点での人事評価はどうやればいいか？&lt;/li&gt;
  &lt;li&gt;プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？&lt;/li&gt;
  &lt;li&gt;チーム一律評価 + 360度評価 を組み合わせるのが落とし所&lt;/li&gt;
  &lt;li&gt;新サービスを出したばっかりのPOはどう評価するか？&lt;/li&gt;
  &lt;li&gt;人事部とエンジニアの採用プロセスの関わり？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.attractor.co.jp/contact/"&gt;アトラクタでお仕事募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>12. エンプラ向けの組織改革とか、スクラムでのチーム作り・人事評価とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>13</podcast:episode>
    </item>
    <item>
      <title>11. dockerネットワーキングとか、kubernetesネットワーキングとか</title>
      <link>https://fukabori.fm/episode/11</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;dockerを立ち上げたときに、ネットワークに何が起こるのか？&lt;/li&gt;
  &lt;li&gt;iptablesでは何が起こるのか？&lt;/li&gt;
  &lt;li&gt;dockerのbridgeとは何なのか？&lt;/li&gt;
  &lt;li&gt;libnetworkとは何か？&lt;/li&gt;
  &lt;li&gt;docker network pluginを作るためには、何を書くのか？&lt;/li&gt;
  &lt;li&gt;dockerを使うと出てくるvethとは何なのか？&lt;/li&gt;
  &lt;li&gt;dockerコンテナのIPを誰が振っているのか？&lt;/li&gt;
  &lt;li&gt;IPAMとは？&lt;/li&gt;
  &lt;li&gt;dockerから出ていくとき、どういう要素を通って外に出ていくのか？&lt;/li&gt;
  &lt;li&gt;–network host の Host とは？&lt;/li&gt;
  &lt;li&gt;Overlayとは何か？&lt;/li&gt;
  &lt;li&gt;VXLANとは？&lt;/li&gt;
  &lt;li&gt;BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題&lt;/li&gt;
  &lt;li&gt;ARPプロキシ&lt;/li&gt;
  &lt;li&gt;ARPの情報をどうやって、あらかじめ知っておくのか？&lt;/li&gt;
  &lt;li&gt;VXLANはVLANの拡張か？&lt;/li&gt;
  &lt;li&gt;VXLANではどうやってカプセリングするか？&lt;/li&gt;
  &lt;li&gt;VXLANのオーバヘッドはどうなのか？&lt;/li&gt;
  &lt;li&gt;VXLANのオーバヘッドの解決策&lt;/li&gt;
  &lt;li&gt;CNMとCNIとはそれぞれ何か？&lt;/li&gt;
  &lt;li&gt;CNMとlibnetworkの関連性は？&lt;/li&gt;
  &lt;li&gt;kubernetesのネットワーク思想は？&lt;/li&gt;
  &lt;li&gt;CNIの代表的なものは？&lt;/li&gt;
  &lt;li&gt;flannelとCalico&lt;/li&gt;
  &lt;li&gt;flannelの特徴は？&lt;/li&gt;
  &lt;li&gt;Calicoの特徴は？&lt;/li&gt;
  &lt;li&gt;L3 Fabricとは？&lt;/li&gt;
  &lt;li&gt;CLOSネットワークについて&lt;/li&gt;
  &lt;li&gt;なぜBGPを使うのか？&lt;/li&gt;
  &lt;li&gt;kubernetes Serviceとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;Cluster IPとは何か？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/rafiror/status/1069217131495976960"&gt;収録後補足&lt;/a&gt;: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）&lt;/li&gt;
  &lt;li&gt;kube-proxyとは何か？何をしているのか？&lt;/li&gt;
  &lt;li&gt;iptablesを使ったkube-proxyのオーバーヘッド&lt;/li&gt;
  &lt;li&gt;IPVSとは何か？&lt;/li&gt;
  &lt;li&gt;IPVSを指定した場合に何が起きているのか？&lt;/li&gt;
  &lt;li&gt;IPVSはサイドカーで置かれるのか？&lt;/li&gt;
  &lt;li&gt;NodePortとは何か？&lt;/li&gt;
  &lt;li&gt;NodePortを実際のサービスで使うときは？&lt;/li&gt;
  &lt;li&gt;k8sのLoad Balancerとは？&lt;/li&gt;
  &lt;li&gt;ingressとは何か？&lt;/li&gt;
  &lt;li&gt;k8sにおける名前解決とは？&lt;/li&gt;
  &lt;li&gt;IPアドレスを意識して通信しない&lt;/li&gt;
  &lt;li&gt;iptablesの沼&lt;/li&gt;
  &lt;li&gt;ネットワーク屋さんがiptableを見なくてよくなる世界線はない&lt;/li&gt;
  &lt;li&gt;Network Policyとは？&lt;/li&gt;
  &lt;li&gt;OpenStackのネットワークと、k8sのネットワークの下回りは同じ&lt;/li&gt;
  &lt;li&gt;Linux namespacesとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://containerdays.jp/"&gt;JapanContainerDays v18.12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/11</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nh2bfa2cpv108z4hvq.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sat, 01 Dec 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nh2bfa2cpv108z4hvq.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3988/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:56:24</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;dockerを立ち上げたときに、ネットワークに何が起こるのか？&lt;/li&gt;
  &lt;li&gt;iptablesでは何が起こるのか？&lt;/li&gt;
  &lt;li&gt;dockerのbridgeとは何なのか？&lt;/li&gt;
  &lt;li&gt;libnetworkとは何か？&lt;/li&gt;
  &lt;li&gt;docker network pluginを作るためには、何を書くのか？&lt;/li&gt;
  &lt;li&gt;dockerを使うと出てくるvethとは何なのか？&lt;/li&gt;
  &lt;li&gt;dockerコンテナのIPを誰が振っているのか？&lt;/li&gt;
  &lt;li&gt;IPAMとは？&lt;/li&gt;
  &lt;li&gt;dockerから出ていくとき、どういう要素を通って外に出ていくのか？&lt;/li&gt;
  &lt;li&gt;–network host の Host とは？&lt;/li&gt;
  &lt;li&gt;Overlayとは何か？&lt;/li&gt;
  &lt;li&gt;VXLANとは？&lt;/li&gt;
  &lt;li&gt;BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題&lt;/li&gt;
  &lt;li&gt;ARPプロキシ&lt;/li&gt;
  &lt;li&gt;ARPの情報をどうやって、あらかじめ知っておくのか？&lt;/li&gt;
  &lt;li&gt;VXLANはVLANの拡張か？&lt;/li&gt;
  &lt;li&gt;VXLANではどうやってカプセリングするか？&lt;/li&gt;
  &lt;li&gt;VXLANのオーバヘッドはどうなのか？&lt;/li&gt;
  &lt;li&gt;VXLANのオーバヘッドの解決策&lt;/li&gt;
  &lt;li&gt;CNMとCNIとはそれぞれ何か？&lt;/li&gt;
  &lt;li&gt;CNMとlibnetworkの関連性は？&lt;/li&gt;
  &lt;li&gt;kubernetesのネットワーク思想は？&lt;/li&gt;
  &lt;li&gt;CNIの代表的なものは？&lt;/li&gt;
  &lt;li&gt;flannelとCalico&lt;/li&gt;
  &lt;li&gt;flannelの特徴は？&lt;/li&gt;
  &lt;li&gt;Calicoの特徴は？&lt;/li&gt;
  &lt;li&gt;L3 Fabricとは？&lt;/li&gt;
  &lt;li&gt;CLOSネットワークについて&lt;/li&gt;
  &lt;li&gt;なぜBGPを使うのか？&lt;/li&gt;
  &lt;li&gt;kubernetes Serviceとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;Cluster IPとは何か？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/rafiror/status/1069217131495976960"&gt;収録後補足&lt;/a&gt;: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）&lt;/li&gt;
  &lt;li&gt;kube-proxyとは何か？何をしているのか？&lt;/li&gt;
  &lt;li&gt;iptablesを使ったkube-proxyのオーバーヘッド&lt;/li&gt;
  &lt;li&gt;IPVSとは何か？&lt;/li&gt;
  &lt;li&gt;IPVSを指定した場合に何が起きているのか？&lt;/li&gt;
  &lt;li&gt;IPVSはサイドカーで置かれるのか？&lt;/li&gt;
  &lt;li&gt;NodePortとは何か？&lt;/li&gt;
  &lt;li&gt;NodePortを実際のサービスで使うときは？&lt;/li&gt;
  &lt;li&gt;k8sのLoad Balancerとは？&lt;/li&gt;
  &lt;li&gt;ingressとは何か？&lt;/li&gt;
  &lt;li&gt;k8sにおける名前解決とは？&lt;/li&gt;
  &lt;li&gt;IPアドレスを意識して通信しない&lt;/li&gt;
  &lt;li&gt;iptablesの沼&lt;/li&gt;
  &lt;li&gt;ネットワーク屋さんがiptableを見なくてよくなる世界線はない&lt;/li&gt;
  &lt;li&gt;Network Policyとは？&lt;/li&gt;
  &lt;li&gt;OpenStackのネットワークと、k8sのネットワークの下回りは同じ&lt;/li&gt;
  &lt;li&gt;Linux namespacesとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://containerdays.jp/"&gt;JapanContainerDays v18.12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;dockerを立ち上げたときに、ネットワークに何が起こるのか？&lt;/li&gt;
  &lt;li&gt;iptablesでは何が起こるのか？&lt;/li&gt;
  &lt;li&gt;dockerのbridgeとは何なのか？&lt;/li&gt;
  &lt;li&gt;libnetworkとは何か？&lt;/li&gt;
  &lt;li&gt;docker network pluginを作るためには、何を書くのか？&lt;/li&gt;
  &lt;li&gt;dockerを使うと出てくるvethとは何なのか？&lt;/li&gt;
  &lt;li&gt;dockerコンテナのIPを誰が振っているのか？&lt;/li&gt;
  &lt;li&gt;IPAMとは？&lt;/li&gt;
  &lt;li&gt;dockerから出ていくとき、どういう要素を通って外に出ていくのか？&lt;/li&gt;
  &lt;li&gt;–network host の Host とは？&lt;/li&gt;
  &lt;li&gt;Overlayとは何か？&lt;/li&gt;
  &lt;li&gt;VXLANとは？&lt;/li&gt;
  &lt;li&gt;BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題&lt;/li&gt;
  &lt;li&gt;ARPプロキシ&lt;/li&gt;
  &lt;li&gt;ARPの情報をどうやって、あらかじめ知っておくのか？&lt;/li&gt;
  &lt;li&gt;VXLANはVLANの拡張か？&lt;/li&gt;
  &lt;li&gt;VXLANではどうやってカプセリングするか？&lt;/li&gt;
  &lt;li&gt;VXLANのオーバヘッドはどうなのか？&lt;/li&gt;
  &lt;li&gt;VXLANのオーバヘッドの解決策&lt;/li&gt;
  &lt;li&gt;CNMとCNIとはそれぞれ何か？&lt;/li&gt;
  &lt;li&gt;CNMとlibnetworkの関連性は？&lt;/li&gt;
  &lt;li&gt;kubernetesのネットワーク思想は？&lt;/li&gt;
  &lt;li&gt;CNIの代表的なものは？&lt;/li&gt;
  &lt;li&gt;flannelとCalico&lt;/li&gt;
  &lt;li&gt;flannelの特徴は？&lt;/li&gt;
  &lt;li&gt;Calicoの特徴は？&lt;/li&gt;
  &lt;li&gt;L3 Fabricとは？&lt;/li&gt;
  &lt;li&gt;CLOSネットワークについて&lt;/li&gt;
  &lt;li&gt;なぜBGPを使うのか？&lt;/li&gt;
  &lt;li&gt;kubernetes Serviceとはそもそも何か？&lt;/li&gt;
  &lt;li&gt;Cluster IPとは何か？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/rafiror/status/1069217131495976960"&gt;収録後補足&lt;/a&gt;: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）&lt;/li&gt;
  &lt;li&gt;kube-proxyとは何か？何をしているのか？&lt;/li&gt;
  &lt;li&gt;iptablesを使ったkube-proxyのオーバーヘッド&lt;/li&gt;
  &lt;li&gt;IPVSとは何か？&lt;/li&gt;
  &lt;li&gt;IPVSを指定した場合に何が起きているのか？&lt;/li&gt;
  &lt;li&gt;IPVSはサイドカーで置かれるのか？&lt;/li&gt;
  &lt;li&gt;NodePortとは何か？&lt;/li&gt;
  &lt;li&gt;NodePortを実際のサービスで使うときは？&lt;/li&gt;
  &lt;li&gt;k8sのLoad Balancerとは？&lt;/li&gt;
  &lt;li&gt;ingressとは何か？&lt;/li&gt;
  &lt;li&gt;k8sにおける名前解決とは？&lt;/li&gt;
  &lt;li&gt;IPアドレスを意識して通信しない&lt;/li&gt;
  &lt;li&gt;iptablesの沼&lt;/li&gt;
  &lt;li&gt;ネットワーク屋さんがiptableを見なくてよくなる世界線はない&lt;/li&gt;
  &lt;li&gt;Network Policyとは？&lt;/li&gt;
  &lt;li&gt;OpenStackのネットワークと、k8sのネットワークの下回りは同じ&lt;/li&gt;
  &lt;li&gt;Linux namespacesとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://containerdays.jp/"&gt;JapanContainerDays v18.12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>11. dockerネットワーキングとか、kubernetesネットワーキングとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>12</podcast:episode>
    </item>
    <item>
      <title>10. 大企業HACKS! - 大企業で実現するイマドキのサービス開発</title>
      <link>https://fukabori.fm/episode/10</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;WebRTCとは？SkyWayとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/rotsuya/hacks-56126883"&gt;大企業HACKS! 大企業で実現するイマドキのサービス開発&lt;/a&gt;とは何か？その定義は？&lt;/li&gt;
  &lt;li&gt;大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く&lt;/li&gt;
  &lt;li&gt;大企業で何がやばいか？&lt;/li&gt;
  &lt;li&gt;世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い&lt;/li&gt;
  &lt;li&gt;なぜ、変化を恐れる人が多いのか？&lt;/li&gt;
  &lt;li&gt;守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから&lt;/li&gt;
  &lt;li&gt;制約条件がある中で、どう上手くいっていくのか？&lt;/li&gt;
  &lt;li&gt;守りと攻めを意識して分けていく&lt;/li&gt;
  &lt;li&gt;変態ミドル&lt;/li&gt;
  &lt;li&gt;理想的なチームとは何か？&lt;/li&gt;
  &lt;li&gt;相互作用がプラスに働いている状態&lt;/li&gt;
  &lt;li&gt;アジャイルマニフェストにある自己組織化するチームを目指すこと&lt;/li&gt;
  &lt;li&gt;勝手にチームが進化していく状態を目指す&lt;/li&gt;
  &lt;li&gt;オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと&lt;/li&gt;
  &lt;li&gt;目的・意義を示すこと&lt;/li&gt;
  &lt;li&gt;心理的安全性を拡大するための具体的な行動として何をしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm/"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミッション・ステートメントは、なぜ必要なのか？&lt;/li&gt;
  &lt;li&gt;内発的動機づけの3要素にある目的&lt;/li&gt;
  &lt;li&gt;ミッション・ステートメントは、誰がどう定義するのか？&lt;/li&gt;
  &lt;li&gt;ビジョンとミッション・ステートメントの違いは？&lt;/li&gt;
  &lt;li&gt;ビジョンは理想の状態を言語化したものである&lt;/li&gt;
  &lt;li&gt;言葉にするのは、夢を実行可能に行為である&lt;/li&gt;
  &lt;li&gt;いきなり若者にビジョンを考えろ、というのはアンチパターン&lt;/li&gt;
  &lt;li&gt;ビジョンを考えるのはむちゃくちゃ大変&lt;/li&gt;
  &lt;li&gt;飲み会や懇親会のビジョン&lt;/li&gt;
  &lt;li&gt;マネージャーがビジョンを考えないのはサボり&lt;/li&gt;
  &lt;li&gt;なぜ、若手に責任と権限を与えるのか？&lt;/li&gt;
  &lt;li&gt;Think Globally Act Locally はどういう意味で使っている？&lt;/li&gt;
  &lt;li&gt;会社を一生懸命変えるのは非常に時間がかかる&lt;/li&gt;
  &lt;li&gt;大企業をトップダウンで変化させるためのプラクティスは何があるか？&lt;/li&gt;
  &lt;li&gt;社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る&lt;/li&gt;
  &lt;li&gt;エンジニアの言語と経営者の言語の両方で話す&lt;/li&gt;
  &lt;li&gt;大企業で戦ってみたときの強みは？&lt;/li&gt;
  &lt;li&gt;経営者に情熱をぶつけるという方法&lt;/li&gt;
  &lt;li&gt;経験の学校、良い経験がしやすい&lt;/li&gt;
  &lt;li&gt;採用するに当たって、何か気をつけている・頑張っていることはあるか？&lt;/li&gt;
  &lt;li&gt;1人の人事と、多くの現場の社員が協力する&lt;/li&gt;
  &lt;li&gt;会議を上手くやるために、気をつけていることはあるか？&lt;/li&gt;
  &lt;li&gt;パワポはなぜダメなのか？&lt;/li&gt;
  &lt;li&gt;上から来る兼務の指示に対して、どう部下を守るのか？&lt;/li&gt;
  &lt;li&gt;共通業務・年貢からはできる限り部下を守る&lt;/li&gt;
  &lt;li&gt;なぜ内製しないといけないのか？&lt;/li&gt;
  &lt;li&gt;ソフトウェアの開発力が、企業の競争力の源泉である&lt;/li&gt;
  &lt;li&gt;R&amp;amp;D、プロダクト部門でキャズムを乗り越えるには？&lt;/li&gt;
  &lt;li&gt;大企業で製品を出すために、何が大変なのか？&lt;/li&gt;
  &lt;li&gt;社内には実証実験、外にはベータ版というHack&lt;/li&gt;
  &lt;li&gt;R&amp;amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる&lt;/li&gt;
  &lt;li&gt;チームビルディング合宿はなぜやるのか？&lt;/li&gt;
  &lt;li&gt;チームの中で意見のぶつかり合いが増えてきた&lt;/li&gt;
  &lt;li&gt;根本的な価値観が違うときに、表面的に話してもダメ&lt;/li&gt;
  &lt;li&gt;性格診断と価値観アンケートを使って全員でレビューしていく&lt;/li&gt;
  &lt;li&gt;アンカンファレンスで議論する&lt;/li&gt;
  &lt;li&gt;チームビルディング合宿の教科書は無く、自分たちで考える&lt;/li&gt;
  &lt;li&gt;日本の大企業はどうやって、この先生きのこっていくべきか？&lt;/li&gt;
  &lt;li&gt;R&amp;amp;Dと事業部門のいいとこ取りの組織を作る&lt;/li&gt;
  &lt;li&gt;失敗するのが苦手、認めない文化&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.mu/rotsuya"&gt;note.mu&lt;/a&gt;での記事&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/10</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nh207mffnqacreaxrj.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 06 Nov 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nh207mffnqacreaxrj.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3987/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:51:21</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;WebRTCとは？SkyWayとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/rotsuya/hacks-56126883"&gt;大企業HACKS! 大企業で実現するイマドキのサービス開発&lt;/a&gt;とは何か？その定義は？&lt;/li&gt;
  &lt;li&gt;大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く&lt;/li&gt;
  &lt;li&gt;大企業で何がやばいか？&lt;/li&gt;
  &lt;li&gt;世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い&lt;/li&gt;
  &lt;li&gt;なぜ、変化を恐れる人が多いのか？&lt;/li&gt;
  &lt;li&gt;守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから&lt;/li&gt;
  &lt;li&gt;制約条件がある中で、どう上手くいっていくのか？&lt;/li&gt;
  &lt;li&gt;守りと攻めを意識して分けていく&lt;/li&gt;
  &lt;li&gt;変態ミドル&lt;/li&gt;
  &lt;li&gt;理想的なチームとは何か？&lt;/li&gt;
  &lt;li&gt;相互作用がプラスに働いている状態&lt;/li&gt;
  &lt;li&gt;アジャイルマニフェストにある自己組織化するチームを目指すこと&lt;/li&gt;
  &lt;li&gt;勝手にチームが進化していく状態を目指す&lt;/li&gt;
  &lt;li&gt;オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと&lt;/li&gt;
  &lt;li&gt;目的・意義を示すこと&lt;/li&gt;
  &lt;li&gt;心理的安全性を拡大するための具体的な行動として何をしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm/"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミッション・ステートメントは、なぜ必要なのか？&lt;/li&gt;
  &lt;li&gt;内発的動機づけの3要素にある目的&lt;/li&gt;
  &lt;li&gt;ミッション・ステートメントは、誰がどう定義するのか？&lt;/li&gt;
  &lt;li&gt;ビジョンとミッション・ステートメントの違いは？&lt;/li&gt;
  &lt;li&gt;ビジョンは理想の状態を言語化したものである&lt;/li&gt;
  &lt;li&gt;言葉にするのは、夢を実行可能に行為である&lt;/li&gt;
  &lt;li&gt;いきなり若者にビジョンを考えろ、というのはアンチパターン&lt;/li&gt;
  &lt;li&gt;ビジョンを考えるのはむちゃくちゃ大変&lt;/li&gt;
  &lt;li&gt;飲み会や懇親会のビジョン&lt;/li&gt;
  &lt;li&gt;マネージャーがビジョンを考えないのはサボり&lt;/li&gt;
  &lt;li&gt;なぜ、若手に責任と権限を与えるのか？&lt;/li&gt;
  &lt;li&gt;Think Globally Act Locally はどういう意味で使っている？&lt;/li&gt;
  &lt;li&gt;会社を一生懸命変えるのは非常に時間がかかる&lt;/li&gt;
  &lt;li&gt;大企業をトップダウンで変化させるためのプラクティスは何があるか？&lt;/li&gt;
  &lt;li&gt;社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る&lt;/li&gt;
  &lt;li&gt;エンジニアの言語と経営者の言語の両方で話す&lt;/li&gt;
  &lt;li&gt;大企業で戦ってみたときの強みは？&lt;/li&gt;
  &lt;li&gt;経営者に情熱をぶつけるという方法&lt;/li&gt;
  &lt;li&gt;経験の学校、良い経験がしやすい&lt;/li&gt;
  &lt;li&gt;採用するに当たって、何か気をつけている・頑張っていることはあるか？&lt;/li&gt;
  &lt;li&gt;1人の人事と、多くの現場の社員が協力する&lt;/li&gt;
  &lt;li&gt;会議を上手くやるために、気をつけていることはあるか？&lt;/li&gt;
  &lt;li&gt;パワポはなぜダメなのか？&lt;/li&gt;
  &lt;li&gt;上から来る兼務の指示に対して、どう部下を守るのか？&lt;/li&gt;
  &lt;li&gt;共通業務・年貢からはできる限り部下を守る&lt;/li&gt;
  &lt;li&gt;なぜ内製しないといけないのか？&lt;/li&gt;
  &lt;li&gt;ソフトウェアの開発力が、企業の競争力の源泉である&lt;/li&gt;
  &lt;li&gt;R&amp;amp;D、プロダクト部門でキャズムを乗り越えるには？&lt;/li&gt;
  &lt;li&gt;大企業で製品を出すために、何が大変なのか？&lt;/li&gt;
  &lt;li&gt;社内には実証実験、外にはベータ版というHack&lt;/li&gt;
  &lt;li&gt;R&amp;amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる&lt;/li&gt;
  &lt;li&gt;チームビルディング合宿はなぜやるのか？&lt;/li&gt;
  &lt;li&gt;チームの中で意見のぶつかり合いが増えてきた&lt;/li&gt;
  &lt;li&gt;根本的な価値観が違うときに、表面的に話してもダメ&lt;/li&gt;
  &lt;li&gt;性格診断と価値観アンケートを使って全員でレビューしていく&lt;/li&gt;
  &lt;li&gt;アンカンファレンスで議論する&lt;/li&gt;
  &lt;li&gt;チームビルディング合宿の教科書は無く、自分たちで考える&lt;/li&gt;
  &lt;li&gt;日本の大企業はどうやって、この先生きのこっていくべきか？&lt;/li&gt;
  &lt;li&gt;R&amp;amp;Dと事業部門のいいとこ取りの組織を作る&lt;/li&gt;
  &lt;li&gt;失敗するのが苦手、認めない文化&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.mu/rotsuya"&gt;note.mu&lt;/a&gt;での記事&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;WebRTCとは？SkyWayとは？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.slideshare.net/rotsuya/hacks-56126883"&gt;大企業HACKS! 大企業で実現するイマドキのサービス開発&lt;/a&gt;とは何か？その定義は？&lt;/li&gt;
  &lt;li&gt;大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く&lt;/li&gt;
  &lt;li&gt;大企業で何がやばいか？&lt;/li&gt;
  &lt;li&gt;世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い&lt;/li&gt;
  &lt;li&gt;なぜ、変化を恐れる人が多いのか？&lt;/li&gt;
  &lt;li&gt;守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから&lt;/li&gt;
  &lt;li&gt;制約条件がある中で、どう上手くいっていくのか？&lt;/li&gt;
  &lt;li&gt;守りと攻めを意識して分けていく&lt;/li&gt;
  &lt;li&gt;変態ミドル&lt;/li&gt;
  &lt;li&gt;理想的なチームとは何か？&lt;/li&gt;
  &lt;li&gt;相互作用がプラスに働いている状態&lt;/li&gt;
  &lt;li&gt;アジャイルマニフェストにある自己組織化するチームを目指すこと&lt;/li&gt;
  &lt;li&gt;勝手にチームが進化していく状態を目指す&lt;/li&gt;
  &lt;li&gt;オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと&lt;/li&gt;
  &lt;li&gt;目的・意義を示すこと&lt;/li&gt;
  &lt;li&gt;心理的安全性を拡大するための具体的な行動として何をしているか？&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://anchor.fm/em-fm/"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ミッション・ステートメントは、なぜ必要なのか？&lt;/li&gt;
  &lt;li&gt;内発的動機づけの3要素にある目的&lt;/li&gt;
  &lt;li&gt;ミッション・ステートメントは、誰がどう定義するのか？&lt;/li&gt;
  &lt;li&gt;ビジョンとミッション・ステートメントの違いは？&lt;/li&gt;
  &lt;li&gt;ビジョンは理想の状態を言語化したものである&lt;/li&gt;
  &lt;li&gt;言葉にするのは、夢を実行可能に行為である&lt;/li&gt;
  &lt;li&gt;いきなり若者にビジョンを考えろ、というのはアンチパターン&lt;/li&gt;
  &lt;li&gt;ビジョンを考えるのはむちゃくちゃ大変&lt;/li&gt;
  &lt;li&gt;飲み会や懇親会のビジョン&lt;/li&gt;
  &lt;li&gt;マネージャーがビジョンを考えないのはサボり&lt;/li&gt;
  &lt;li&gt;なぜ、若手に責任と権限を与えるのか？&lt;/li&gt;
  &lt;li&gt;Think Globally Act Locally はどういう意味で使っている？&lt;/li&gt;
  &lt;li&gt;会社を一生懸命変えるのは非常に時間がかかる&lt;/li&gt;
  &lt;li&gt;大企業をトップダウンで変化させるためのプラクティスは何があるか？&lt;/li&gt;
  &lt;li&gt;社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る&lt;/li&gt;
  &lt;li&gt;エンジニアの言語と経営者の言語の両方で話す&lt;/li&gt;
  &lt;li&gt;大企業で戦ってみたときの強みは？&lt;/li&gt;
  &lt;li&gt;経営者に情熱をぶつけるという方法&lt;/li&gt;
  &lt;li&gt;経験の学校、良い経験がしやすい&lt;/li&gt;
  &lt;li&gt;採用するに当たって、何か気をつけている・頑張っていることはあるか？&lt;/li&gt;
  &lt;li&gt;1人の人事と、多くの現場の社員が協力する&lt;/li&gt;
  &lt;li&gt;会議を上手くやるために、気をつけていることはあるか？&lt;/li&gt;
  &lt;li&gt;パワポはなぜダメなのか？&lt;/li&gt;
  &lt;li&gt;上から来る兼務の指示に対して、どう部下を守るのか？&lt;/li&gt;
  &lt;li&gt;共通業務・年貢からはできる限り部下を守る&lt;/li&gt;
  &lt;li&gt;なぜ内製しないといけないのか？&lt;/li&gt;
  &lt;li&gt;ソフトウェアの開発力が、企業の競争力の源泉である&lt;/li&gt;
  &lt;li&gt;R&amp;amp;D、プロダクト部門でキャズムを乗り越えるには？&lt;/li&gt;
  &lt;li&gt;大企業で製品を出すために、何が大変なのか？&lt;/li&gt;
  &lt;li&gt;社内には実証実験、外にはベータ版というHack&lt;/li&gt;
  &lt;li&gt;R&amp;amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる&lt;/li&gt;
  &lt;li&gt;チームビルディング合宿はなぜやるのか？&lt;/li&gt;
  &lt;li&gt;チームの中で意見のぶつかり合いが増えてきた&lt;/li&gt;
  &lt;li&gt;根本的な価値観が違うときに、表面的に話してもダメ&lt;/li&gt;
  &lt;li&gt;性格診断と価値観アンケートを使って全員でレビューしていく&lt;/li&gt;
  &lt;li&gt;アンカンファレンスで議論する&lt;/li&gt;
  &lt;li&gt;チームビルディング合宿の教科書は無く、自分たちで考える&lt;/li&gt;
  &lt;li&gt;日本の大企業はどうやって、この先生きのこっていくべきか？&lt;/li&gt;
  &lt;li&gt;R&amp;amp;Dと事業部門のいいとこ取りの組織を作る&lt;/li&gt;
  &lt;li&gt;失敗するのが苦手、認めない文化&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://note.mu/rotsuya"&gt;note.mu&lt;/a&gt;での記事&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>10. 大企業HACKS! - 大企業で実現するイマドキのサービス開発</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>11</podcast:episode>
    </item>
    <item>
      <title>9. エンプラ業界でアジャイルになるためのプラクティスとか、社内/社外勉強会とか</title>
      <link>https://fukabori.fm/episode/9</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;エンプラでアジャイルをやろうとすると何が大変なのか？&lt;/li&gt;
  &lt;li&gt;内製開発がデファクトじゃない&lt;/li&gt;
  &lt;li&gt;なぜ内製はデファクトではなかったのか？&lt;/li&gt;
  &lt;li&gt;エンプラ業界で内製が増えてきたきっかけは何だろう？&lt;/li&gt;
  &lt;li&gt;通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターって何？&lt;/li&gt;
  &lt;li&gt;その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？&lt;/li&gt;
  &lt;li&gt;小さく成功を作って広げていく&lt;/li&gt;
  &lt;li&gt;既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？&lt;/li&gt;
  &lt;li&gt;意思決定をアジャイル開発センターに集めていく&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターの隔離&lt;/li&gt;
  &lt;li&gt;Cynefin Framework&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターをどう設立していったのか？&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターって名前はかっこよくないけど、実は意味がある&lt;/li&gt;
  &lt;li&gt;ニュースリリースの見出しにのる名前を狙う&lt;/li&gt;
  &lt;li&gt;(新しいもの入れる場合に)社外から社内を攻める&lt;/li&gt;
  &lt;li&gt;(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす&lt;/li&gt;
  &lt;li&gt;彼らのわかる言葉で説明する&lt;/li&gt;
  &lt;li&gt;エンプラはしがらみが多い&lt;/li&gt;
  &lt;li&gt;特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る&lt;/li&gt;
  &lt;li&gt;聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？&lt;/li&gt;
  &lt;li&gt;グレーです、と宣言して進める&lt;/li&gt;
  &lt;li&gt;謎のチェックリストが生まれる&lt;/li&gt;
  &lt;li&gt;失敗すると後続が死んでしまう&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターの場のデザインはどうしている？&lt;/li&gt;
  &lt;li&gt;うなぎの寝床みたいなチームスペース&lt;/li&gt;
  &lt;li&gt;Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？&lt;/li&gt;
  &lt;li&gt;運用の要件・要求によってOpsのスタイルを分ける&lt;/li&gt;
  &lt;li&gt;エンプラは標準化しようとする&lt;/li&gt;
  &lt;li&gt;標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる&lt;/li&gt;
  &lt;li&gt;大量のガイドライン・チェックリストとアジャイルの付き合い方&lt;/li&gt;
  &lt;li&gt;ガイドラインのHowをWhyに戻して考える&lt;/li&gt;
  &lt;li&gt;会社のルールを変えず、現代のやり方を適用する&lt;/li&gt;
  &lt;li&gt;障害が起きるとルールが増える&lt;/li&gt;
  &lt;li&gt;ルールを増やしても守れない&lt;/li&gt;
  &lt;li&gt;ルールを増やしてもシャドーが増えるだけで意味がない&lt;/li&gt;
  &lt;li&gt;半端じゃない数のチェックリスト&lt;/li&gt;
  &lt;li&gt;誰かが始めないと変わらない&lt;/li&gt;
  &lt;li&gt;運用へ渡すときに自動化しすぎない&lt;/li&gt;
  &lt;li&gt;承認フローをあえて挟む&lt;/li&gt;
  &lt;li&gt;内製をしていなかった企業で、内製エンジニアをどう集めるのか？&lt;/li&gt;
  &lt;li&gt;デベロッパーを集めたいなら、デベロッパーコミュニティに行く&lt;/li&gt;
  &lt;li&gt;Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？&lt;/li&gt;
  &lt;li&gt;前例があると突破できる&lt;/li&gt;
  &lt;li&gt;前例を知るために社内勉強会ネットワーキング&lt;/li&gt;
  &lt;li&gt;社内勉強会を実際に始めるとすごいパワーがある&lt;/li&gt;
  &lt;li&gt;会社に熱を持っている人は見えてない範囲にいる、隠れている&lt;/li&gt;
  &lt;li&gt;どうやって社内勉強会に巻き込んでいったのか？&lt;/li&gt;
  &lt;li&gt;会社の命令で参加させるのはダメ&lt;/li&gt;
  &lt;li&gt;影響力ある人から集める&lt;/li&gt;
  &lt;li&gt;ちゃんとした人は、ちゃんとした人を呼んでくる&lt;/li&gt;
  &lt;li&gt;ルール化しましょう、というアンチパターン&lt;/li&gt;
  &lt;li&gt;せっかく燃えていた火を消化させない&lt;/li&gt;
  &lt;li&gt;70回以上、続けているTechLunchという社内勉強会&lt;/li&gt;
  &lt;li&gt;運営側が燃え尽きない&lt;/li&gt;
  &lt;li&gt;社内勉強会をオープンな場所でやる&lt;/li&gt;
  &lt;li&gt;自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン&lt;/li&gt;
  &lt;li&gt;デベロッパーリレーションズを、なぜエンプラでやるのか？&lt;/li&gt;
  &lt;li&gt;社外勉強会で外のモノサシを知る&lt;/li&gt;
  &lt;li&gt;社外で話す、コミュニティ活動をどう社内で評価するのか？&lt;/li&gt;
  &lt;li&gt;エンプラだけど、使ってるツールや言語は普通にエッジなもの&lt;/li&gt;
  &lt;li&gt;メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？&lt;/li&gt;
  &lt;li&gt;お客様に価値を届けられる人間が対価を得るべき&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://techplay.jp/event/699906"&gt;2018/11/12 Tech-on Meet Up #03&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/9</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7ngkhpx0fdxzvga8e85.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Thu, 01 Nov 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7ngkhpx0fdxzvga8e85.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3986/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:59:20</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;エンプラでアジャイルをやろうとすると何が大変なのか？&lt;/li&gt;
  &lt;li&gt;内製開発がデファクトじゃない&lt;/li&gt;
  &lt;li&gt;なぜ内製はデファクトではなかったのか？&lt;/li&gt;
  &lt;li&gt;エンプラ業界で内製が増えてきたきっかけは何だろう？&lt;/li&gt;
  &lt;li&gt;通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターって何？&lt;/li&gt;
  &lt;li&gt;その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？&lt;/li&gt;
  &lt;li&gt;小さく成功を作って広げていく&lt;/li&gt;
  &lt;li&gt;既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？&lt;/li&gt;
  &lt;li&gt;意思決定をアジャイル開発センターに集めていく&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターの隔離&lt;/li&gt;
  &lt;li&gt;Cynefin Framework&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターをどう設立していったのか？&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターって名前はかっこよくないけど、実は意味がある&lt;/li&gt;
  &lt;li&gt;ニュースリリースの見出しにのる名前を狙う&lt;/li&gt;
  &lt;li&gt;(新しいもの入れる場合に)社外から社内を攻める&lt;/li&gt;
  &lt;li&gt;(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす&lt;/li&gt;
  &lt;li&gt;彼らのわかる言葉で説明する&lt;/li&gt;
  &lt;li&gt;エンプラはしがらみが多い&lt;/li&gt;
  &lt;li&gt;特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る&lt;/li&gt;
  &lt;li&gt;聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？&lt;/li&gt;
  &lt;li&gt;グレーです、と宣言して進める&lt;/li&gt;
  &lt;li&gt;謎のチェックリストが生まれる&lt;/li&gt;
  &lt;li&gt;失敗すると後続が死んでしまう&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターの場のデザインはどうしている？&lt;/li&gt;
  &lt;li&gt;うなぎの寝床みたいなチームスペース&lt;/li&gt;
  &lt;li&gt;Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？&lt;/li&gt;
  &lt;li&gt;運用の要件・要求によってOpsのスタイルを分ける&lt;/li&gt;
  &lt;li&gt;エンプラは標準化しようとする&lt;/li&gt;
  &lt;li&gt;標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる&lt;/li&gt;
  &lt;li&gt;大量のガイドライン・チェックリストとアジャイルの付き合い方&lt;/li&gt;
  &lt;li&gt;ガイドラインのHowをWhyに戻して考える&lt;/li&gt;
  &lt;li&gt;会社のルールを変えず、現代のやり方を適用する&lt;/li&gt;
  &lt;li&gt;障害が起きるとルールが増える&lt;/li&gt;
  &lt;li&gt;ルールを増やしても守れない&lt;/li&gt;
  &lt;li&gt;ルールを増やしてもシャドーが増えるだけで意味がない&lt;/li&gt;
  &lt;li&gt;半端じゃない数のチェックリスト&lt;/li&gt;
  &lt;li&gt;誰かが始めないと変わらない&lt;/li&gt;
  &lt;li&gt;運用へ渡すときに自動化しすぎない&lt;/li&gt;
  &lt;li&gt;承認フローをあえて挟む&lt;/li&gt;
  &lt;li&gt;内製をしていなかった企業で、内製エンジニアをどう集めるのか？&lt;/li&gt;
  &lt;li&gt;デベロッパーを集めたいなら、デベロッパーコミュニティに行く&lt;/li&gt;
  &lt;li&gt;Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？&lt;/li&gt;
  &lt;li&gt;前例があると突破できる&lt;/li&gt;
  &lt;li&gt;前例を知るために社内勉強会ネットワーキング&lt;/li&gt;
  &lt;li&gt;社内勉強会を実際に始めるとすごいパワーがある&lt;/li&gt;
  &lt;li&gt;会社に熱を持っている人は見えてない範囲にいる、隠れている&lt;/li&gt;
  &lt;li&gt;どうやって社内勉強会に巻き込んでいったのか？&lt;/li&gt;
  &lt;li&gt;会社の命令で参加させるのはダメ&lt;/li&gt;
  &lt;li&gt;影響力ある人から集める&lt;/li&gt;
  &lt;li&gt;ちゃんとした人は、ちゃんとした人を呼んでくる&lt;/li&gt;
  &lt;li&gt;ルール化しましょう、というアンチパターン&lt;/li&gt;
  &lt;li&gt;せっかく燃えていた火を消化させない&lt;/li&gt;
  &lt;li&gt;70回以上、続けているTechLunchという社内勉強会&lt;/li&gt;
  &lt;li&gt;運営側が燃え尽きない&lt;/li&gt;
  &lt;li&gt;社内勉強会をオープンな場所でやる&lt;/li&gt;
  &lt;li&gt;自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン&lt;/li&gt;
  &lt;li&gt;デベロッパーリレーションズを、なぜエンプラでやるのか？&lt;/li&gt;
  &lt;li&gt;社外勉強会で外のモノサシを知る&lt;/li&gt;
  &lt;li&gt;社外で話す、コミュニティ活動をどう社内で評価するのか？&lt;/li&gt;
  &lt;li&gt;エンプラだけど、使ってるツールや言語は普通にエッジなもの&lt;/li&gt;
  &lt;li&gt;メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？&lt;/li&gt;
  &lt;li&gt;お客様に価値を届けられる人間が対価を得るべき&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://techplay.jp/event/699906"&gt;2018/11/12 Tech-on Meet Up #03&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;エンプラでアジャイルをやろうとすると何が大変なのか？&lt;/li&gt;
  &lt;li&gt;内製開発がデファクトじゃない&lt;/li&gt;
  &lt;li&gt;なぜ内製はデファクトではなかったのか？&lt;/li&gt;
  &lt;li&gt;エンプラ業界で内製が増えてきたきっかけは何だろう？&lt;/li&gt;
  &lt;li&gt;通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターって何？&lt;/li&gt;
  &lt;li&gt;その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？&lt;/li&gt;
  &lt;li&gt;小さく成功を作って広げていく&lt;/li&gt;
  &lt;li&gt;既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？&lt;/li&gt;
  &lt;li&gt;意思決定をアジャイル開発センターに集めていく&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターの隔離&lt;/li&gt;
  &lt;li&gt;Cynefin Framework&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターをどう設立していったのか？&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターって名前はかっこよくないけど、実は意味がある&lt;/li&gt;
  &lt;li&gt;ニュースリリースの見出しにのる名前を狙う&lt;/li&gt;
  &lt;li&gt;(新しいもの入れる場合に)社外から社内を攻める&lt;/li&gt;
  &lt;li&gt;(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす&lt;/li&gt;
  &lt;li&gt;彼らのわかる言葉で説明する&lt;/li&gt;
  &lt;li&gt;エンプラはしがらみが多い&lt;/li&gt;
  &lt;li&gt;特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る&lt;/li&gt;
  &lt;li&gt;聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？&lt;/li&gt;
  &lt;li&gt;グレーです、と宣言して進める&lt;/li&gt;
  &lt;li&gt;謎のチェックリストが生まれる&lt;/li&gt;
  &lt;li&gt;失敗すると後続が死んでしまう&lt;/li&gt;
  &lt;li&gt;アジャイル開発センターの場のデザインはどうしている？&lt;/li&gt;
  &lt;li&gt;うなぎの寝床みたいなチームスペース&lt;/li&gt;
  &lt;li&gt;Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？&lt;/li&gt;
  &lt;li&gt;運用の要件・要求によってOpsのスタイルを分ける&lt;/li&gt;
  &lt;li&gt;エンプラは標準化しようとする&lt;/li&gt;
  &lt;li&gt;標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる&lt;/li&gt;
  &lt;li&gt;大量のガイドライン・チェックリストとアジャイルの付き合い方&lt;/li&gt;
  &lt;li&gt;ガイドラインのHowをWhyに戻して考える&lt;/li&gt;
  &lt;li&gt;会社のルールを変えず、現代のやり方を適用する&lt;/li&gt;
  &lt;li&gt;障害が起きるとルールが増える&lt;/li&gt;
  &lt;li&gt;ルールを増やしても守れない&lt;/li&gt;
  &lt;li&gt;ルールを増やしてもシャドーが増えるだけで意味がない&lt;/li&gt;
  &lt;li&gt;半端じゃない数のチェックリスト&lt;/li&gt;
  &lt;li&gt;誰かが始めないと変わらない&lt;/li&gt;
  &lt;li&gt;運用へ渡すときに自動化しすぎない&lt;/li&gt;
  &lt;li&gt;承認フローをあえて挟む&lt;/li&gt;
  &lt;li&gt;内製をしていなかった企業で、内製エンジニアをどう集めるのか？&lt;/li&gt;
  &lt;li&gt;デベロッパーを集めたいなら、デベロッパーコミュニティに行く&lt;/li&gt;
  &lt;li&gt;Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？&lt;/li&gt;
  &lt;li&gt;前例があると突破できる&lt;/li&gt;
  &lt;li&gt;前例を知るために社内勉強会ネットワーキング&lt;/li&gt;
  &lt;li&gt;社内勉強会を実際に始めるとすごいパワーがある&lt;/li&gt;
  &lt;li&gt;会社に熱を持っている人は見えてない範囲にいる、隠れている&lt;/li&gt;
  &lt;li&gt;どうやって社内勉強会に巻き込んでいったのか？&lt;/li&gt;
  &lt;li&gt;会社の命令で参加させるのはダメ&lt;/li&gt;
  &lt;li&gt;影響力ある人から集める&lt;/li&gt;
  &lt;li&gt;ちゃんとした人は、ちゃんとした人を呼んでくる&lt;/li&gt;
  &lt;li&gt;ルール化しましょう、というアンチパターン&lt;/li&gt;
  &lt;li&gt;せっかく燃えていた火を消化させない&lt;/li&gt;
  &lt;li&gt;70回以上、続けているTechLunchという社内勉強会&lt;/li&gt;
  &lt;li&gt;運営側が燃え尽きない&lt;/li&gt;
  &lt;li&gt;社内勉強会をオープンな場所でやる&lt;/li&gt;
  &lt;li&gt;自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン&lt;/li&gt;
  &lt;li&gt;デベロッパーリレーションズを、なぜエンプラでやるのか？&lt;/li&gt;
  &lt;li&gt;社外勉強会で外のモノサシを知る&lt;/li&gt;
  &lt;li&gt;社外で話す、コミュニティ活動をどう社内で評価するのか？&lt;/li&gt;
  &lt;li&gt;エンプラだけど、使ってるツールや言語は普通にエッジなもの&lt;/li&gt;
  &lt;li&gt;メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？&lt;/li&gt;
  &lt;li&gt;お客様に価値を届けられる人間が対価を得るべき&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://techplay.jp/event/699906"&gt;2018/11/12 Tech-on Meet Up #03&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>9. エンプラ業界でアジャイルになるためのプラクティスとか、社内/社外勉強会とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>10</podcast:episode>
    </item>
    <item>
      <title>8. AWS Aurora、GCP Spannerへ辿り着くまでのDBの進化</title>
      <link>https://fukabori.fm/episode/8</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;山喜旅館でたまたま会って急遽収録&lt;/li&gt;
  &lt;li&gt;これまでデータベースがぶつかってきた問題について&lt;/li&gt;
  &lt;li&gt;メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく&lt;/li&gt;
  &lt;li&gt;HDDはシーケンシャルアクセスならランダムアクセスより早い&lt;/li&gt;
  &lt;li&gt;IBMのInformation Management System(IMS)&lt;/li&gt;
  &lt;li&gt;CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？&lt;/li&gt;
  &lt;li&gt;バッファプールをHDDに対するキャッシュとして使う&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/kumagi/items/14b6593a2e8ae0c56546"&gt;IBM ARIES&lt;/a&gt;の公開&lt;/li&gt;
  &lt;li&gt;WAL / Write Ahead Logging&lt;/li&gt;
  &lt;li&gt;ログの中にundo/redoの両方が必要&lt;/li&gt;
  &lt;li&gt;ログシーケンスナンバによるリカバリ&lt;/li&gt;
  &lt;li&gt;バッファプールを食わせるデータ量を増やすのが最適化の一歩&lt;/li&gt;
  &lt;li&gt;マルチコア時代への突入、メモリのビット単価の低下&lt;/li&gt;
  &lt;li&gt;インメモリDBの問題&lt;/li&gt;
  &lt;li&gt;論文ジェネレータとは？&lt;/li&gt;
  &lt;li&gt;データベースは研究のトレンドとしては人気がなかった&lt;/li&gt;
  &lt;li&gt;Writeが増えたときのトランザクション性能が伸びない問題&lt;/li&gt;
  &lt;li&gt;垂直分散、水平分散でアプリケーションレイヤが辛くなる話&lt;/li&gt;
  &lt;li&gt;AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える&lt;/li&gt;
  &lt;li&gt;AuroraはUndoの情報をログに含めず、Redoを含める&lt;/li&gt;
  &lt;li&gt;Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド&lt;/li&gt;
  &lt;li&gt;ページの一貫性を担保する責任をクラウドへ押し付けた&lt;/li&gt;
  &lt;li&gt;メモリをディスクへ書き戻す必要がなくなる&lt;/li&gt;
  &lt;li&gt;Redoログ一辺倒になったのでチェックポイントがいらなくなった&lt;/li&gt;
  &lt;li&gt;データベースのチェックポイントについて&lt;/li&gt;
  &lt;li&gt;Auroraはマルチマスタ化？&lt;/li&gt;
  &lt;li&gt;Auroraのそもそもの思想はシングルマスタ&lt;/li&gt;
  &lt;li&gt;悲観的に巨大にロックを取る&lt;/li&gt;
  &lt;li&gt;SpannerはRDBではなく、分散KVSに近い&lt;/li&gt;
  &lt;li&gt;Spanサーバの役割&lt;/li&gt;
  &lt;li&gt;Spannerを支えるPaxosとは？&lt;/li&gt;
  &lt;li&gt;分散合意の難しさ&lt;/li&gt;
  &lt;li&gt;Cockroach DBはAuroraよりベンチマークで1000倍速い？&lt;/li&gt;
  &lt;li&gt;TPCCのレギュレーションについて&lt;/li&gt;
  &lt;li&gt;SpannerとAuroraの使い分けは？&lt;/li&gt;
  &lt;li&gt;今後のデータベース界隈の展望は？&lt;/li&gt;
  &lt;li&gt;クラウドのDBはOracleの牙城を崩しに行く&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)&lt;/p&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/8</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7ngjz8t3kp1zcaya7gy.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Fri, 26 Oct 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7ngjz8t3kp1zcaya7gy.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3985/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:33:57</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;山喜旅館でたまたま会って急遽収録&lt;/li&gt;
  &lt;li&gt;これまでデータベースがぶつかってきた問題について&lt;/li&gt;
  &lt;li&gt;メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく&lt;/li&gt;
  &lt;li&gt;HDDはシーケンシャルアクセスならランダムアクセスより早い&lt;/li&gt;
  &lt;li&gt;IBMのInformation Management System(IMS)&lt;/li&gt;
  &lt;li&gt;CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？&lt;/li&gt;
  &lt;li&gt;バッファプールをHDDに対するキャッシュとして使う&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/kumagi/items/14b6593a2e8ae0c56546"&gt;IBM ARIES&lt;/a&gt;の公開&lt;/li&gt;
  &lt;li&gt;WAL / Write Ahead Logging&lt;/li&gt;
  &lt;li&gt;ログの中にundo/redoの両方が必要&lt;/li&gt;
  &lt;li&gt;ログシーケンスナンバによるリカバリ&lt;/li&gt;
  &lt;li&gt;バッファプールを食わせるデータ量を増やすのが最適化の一歩&lt;/li&gt;
  &lt;li&gt;マルチコア時代への突入、メモリのビット単価の低下&lt;/li&gt;
  &lt;li&gt;インメモリDBの問題&lt;/li&gt;
  &lt;li&gt;論文ジェネレータとは？&lt;/li&gt;
  &lt;li&gt;データベースは研究のトレンドとしては人気がなかった&lt;/li&gt;
  &lt;li&gt;Writeが増えたときのトランザクション性能が伸びない問題&lt;/li&gt;
  &lt;li&gt;垂直分散、水平分散でアプリケーションレイヤが辛くなる話&lt;/li&gt;
  &lt;li&gt;AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える&lt;/li&gt;
  &lt;li&gt;AuroraはUndoの情報をログに含めず、Redoを含める&lt;/li&gt;
  &lt;li&gt;Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド&lt;/li&gt;
  &lt;li&gt;ページの一貫性を担保する責任をクラウドへ押し付けた&lt;/li&gt;
  &lt;li&gt;メモリをディスクへ書き戻す必要がなくなる&lt;/li&gt;
  &lt;li&gt;Redoログ一辺倒になったのでチェックポイントがいらなくなった&lt;/li&gt;
  &lt;li&gt;データベースのチェックポイントについて&lt;/li&gt;
  &lt;li&gt;Auroraはマルチマスタ化？&lt;/li&gt;
  &lt;li&gt;Auroraのそもそもの思想はシングルマスタ&lt;/li&gt;
  &lt;li&gt;悲観的に巨大にロックを取る&lt;/li&gt;
  &lt;li&gt;SpannerはRDBではなく、分散KVSに近い&lt;/li&gt;
  &lt;li&gt;Spanサーバの役割&lt;/li&gt;
  &lt;li&gt;Spannerを支えるPaxosとは？&lt;/li&gt;
  &lt;li&gt;分散合意の難しさ&lt;/li&gt;
  &lt;li&gt;Cockroach DBはAuroraよりベンチマークで1000倍速い？&lt;/li&gt;
  &lt;li&gt;TPCCのレギュレーションについて&lt;/li&gt;
  &lt;li&gt;SpannerとAuroraの使い分けは？&lt;/li&gt;
  &lt;li&gt;今後のデータベース界隈の展望は？&lt;/li&gt;
  &lt;li&gt;クラウドのDBはOracleの牙城を崩しに行く&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)&lt;/p&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;山喜旅館でたまたま会って急遽収録&lt;/li&gt;
  &lt;li&gt;これまでデータベースがぶつかってきた問題について&lt;/li&gt;
  &lt;li&gt;メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく&lt;/li&gt;
  &lt;li&gt;HDDはシーケンシャルアクセスならランダムアクセスより早い&lt;/li&gt;
  &lt;li&gt;IBMのInformation Management System(IMS)&lt;/li&gt;
  &lt;li&gt;CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？&lt;/li&gt;
  &lt;li&gt;バッファプールをHDDに対するキャッシュとして使う&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://qiita.com/kumagi/items/14b6593a2e8ae0c56546"&gt;IBM ARIES&lt;/a&gt;の公開&lt;/li&gt;
  &lt;li&gt;WAL / Write Ahead Logging&lt;/li&gt;
  &lt;li&gt;ログの中にundo/redoの両方が必要&lt;/li&gt;
  &lt;li&gt;ログシーケンスナンバによるリカバリ&lt;/li&gt;
  &lt;li&gt;バッファプールを食わせるデータ量を増やすのが最適化の一歩&lt;/li&gt;
  &lt;li&gt;マルチコア時代への突入、メモリのビット単価の低下&lt;/li&gt;
  &lt;li&gt;インメモリDBの問題&lt;/li&gt;
  &lt;li&gt;論文ジェネレータとは？&lt;/li&gt;
  &lt;li&gt;データベースは研究のトレンドとしては人気がなかった&lt;/li&gt;
  &lt;li&gt;Writeが増えたときのトランザクション性能が伸びない問題&lt;/li&gt;
  &lt;li&gt;垂直分散、水平分散でアプリケーションレイヤが辛くなる話&lt;/li&gt;
  &lt;li&gt;AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える&lt;/li&gt;
  &lt;li&gt;AuroraはUndoの情報をログに含めず、Redoを含める&lt;/li&gt;
  &lt;li&gt;Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド&lt;/li&gt;
  &lt;li&gt;ページの一貫性を担保する責任をクラウドへ押し付けた&lt;/li&gt;
  &lt;li&gt;メモリをディスクへ書き戻す必要がなくなる&lt;/li&gt;
  &lt;li&gt;Redoログ一辺倒になったのでチェックポイントがいらなくなった&lt;/li&gt;
  &lt;li&gt;データベースのチェックポイントについて&lt;/li&gt;
  &lt;li&gt;Auroraはマルチマスタ化？&lt;/li&gt;
  &lt;li&gt;Auroraのそもそもの思想はシングルマスタ&lt;/li&gt;
  &lt;li&gt;悲観的に巨大にロックを取る&lt;/li&gt;
  &lt;li&gt;SpannerはRDBではなく、分散KVSに近い&lt;/li&gt;
  &lt;li&gt;Spanサーバの役割&lt;/li&gt;
  &lt;li&gt;Spannerを支えるPaxosとは？&lt;/li&gt;
  &lt;li&gt;分散合意の難しさ&lt;/li&gt;
  &lt;li&gt;Cockroach DBはAuroraよりベンチマークで1000倍速い？&lt;/li&gt;
  &lt;li&gt;TPCCのレギュレーションについて&lt;/li&gt;
  &lt;li&gt;SpannerとAuroraの使い分けは？&lt;/li&gt;
  &lt;li&gt;今後のデータベース界隈の展望は？&lt;/li&gt;
  &lt;li&gt;クラウドのDBはOracleの牙城を崩しに行く&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)&lt;/p&gt;</itunes:summary>
      <itunes:title>8. AWS Aurora、GCP Spannerへ辿り着くまでのDBの進化</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>9</podcast:episode>
    </item>
    <item>
      <title>7. CI/CDとか、CircleCI自体の設計・開発プロセスとか</title>
      <link>https://fukabori.fm/episode/7</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;継続的インテグレーション(CI)とは何か？&lt;/li&gt;
  &lt;li&gt;継続的デリバリ(CD)とは何か？&lt;/li&gt;
  &lt;li&gt;おかんにCIを例えで説明する&lt;/li&gt;
  &lt;li&gt;CIをしていない場合、どこから始めればいいのか？&lt;/li&gt;
  &lt;li&gt;たくさんのテストがないとCIを使う意味がない、というよくある誤解&lt;/li&gt;
  &lt;li&gt;最初からクライマックス&lt;/li&gt;
  &lt;li&gt;継続的デリバリと継続的デプロイの定義と差異&lt;/li&gt;
  &lt;li&gt;CI/CDの真の力&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0とは？&lt;/li&gt;
  &lt;li&gt;LXCベースからDockerへの置き換え&lt;/li&gt;
  &lt;li&gt;CircleCIアーキテクチャの刷新について&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0以外の名前の候補&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0は爆速&lt;/li&gt;
  &lt;li&gt;gRPCを使いつつ非同期に&lt;/li&gt;
  &lt;li&gt;CircleCIはJenkinsと違って何が嬉しいのか？&lt;/li&gt;
  &lt;li&gt;Jenkinsのプラグイン運用辛い&lt;/li&gt;
  &lt;li&gt;野良Jenkins問題&lt;/li&gt;
  &lt;li&gt;CircleCIに限らずSaaS版のCI/CDで出来なくなることは？&lt;/li&gt;
  &lt;li&gt;GPUビルド&lt;/li&gt;
  &lt;li&gt;セキュリティおじさんに対する回答&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://circleci.com/enterprise/"&gt;CircleCI Enterprise&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コード自体がシークレットになってはいけない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.replicated.com/"&gt;Reprecated&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CircleCI EnterpriseのKubernetesへの移行について&lt;/li&gt;
  &lt;li&gt;CircleCI の内部設計とは？&lt;/li&gt;
  &lt;li&gt;自作スケジューラから&lt;a href="https://www.nomadproject.io/"&gt;Hashicorp Nomad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nomadはバッチ処理に向いている&lt;/li&gt;
  &lt;li&gt;CircleCIのQueueとして使われるRabbitMQ&lt;/li&gt;
  &lt;li&gt;RabbitMQの運用で困ったこと・苦労したことは？&lt;/li&gt;
  &lt;li&gt;CircleCIの内部で使われる言語はClojureについて&lt;/li&gt;
  &lt;li&gt;CircleCIも最初はRuby on Railsだった&lt;/li&gt;
  &lt;li&gt;CircleCIの開発運用で使うCI/CDはCircleCI&lt;/li&gt;
  &lt;li&gt;自分で自分の足を踏む&lt;/li&gt;
  &lt;li&gt;電動キックボードにハマっている&lt;/li&gt;
  &lt;li&gt;電動キックボードの原付き化&lt;/li&gt;
  &lt;li&gt;電動キックボードを日本で買うといくら？&lt;/li&gt;
  &lt;li&gt;CircleCIの開発はどうやっている？アジャイル？&lt;/li&gt;
  &lt;li&gt;プロダクトチームが、どういう機能が求められているか吸い上げる&lt;/li&gt;
  &lt;li&gt;Jiraを使った管理&lt;/li&gt;
  &lt;li&gt;CircleCIリリース時に承認は必要なのか？&lt;/li&gt;
  &lt;li&gt;Ship!Ship!Ship!&lt;/li&gt;
  &lt;li&gt;本番環境でテストする&lt;/li&gt;
  &lt;li&gt;継続的デプロイができれば、ロールバック(Revert)も簡単&lt;/li&gt;
  &lt;li&gt;品質管理おじさんが作りたがるチェックリストはある？&lt;/li&gt;
  &lt;li&gt;動いてるんだから良しとする、何かあればFixする&lt;/li&gt;
  &lt;li&gt;継続的デプロイは組織自体も変革する力がある&lt;/li&gt;
  &lt;li&gt;コンウェイの法則&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるコードレビューはどうやっているのか？&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるペアプロ&lt;/li&gt;
  &lt;li&gt;paring is caring&lt;/li&gt;
  &lt;li&gt;全世界に分散した開発&lt;/li&gt;
  &lt;li&gt;Remote Firstという文化&lt;/li&gt;
  &lt;li&gt;お互いに助け合うという文化&lt;/li&gt;
  &lt;li&gt;CTOが乱入するお客様対応&lt;/li&gt;
  &lt;li&gt;「今忙しいからできない」とは言わない&lt;/li&gt;
  &lt;li&gt;SlackよりZoomを使う&lt;/li&gt;
  &lt;li&gt;100の言葉よりも、1分のZoom&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるチームビルディング、All Hands&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/circlecijapan"&gt;Twitter CircleCIJapan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/circleci"&gt;We’re hiring at CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/7</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7ngfsfwrm39d4pj3zw5.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 09 Oct 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7ngfsfwrm39d4pj3zw5.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3984/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:51:53</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;継続的インテグレーション(CI)とは何か？&lt;/li&gt;
  &lt;li&gt;継続的デリバリ(CD)とは何か？&lt;/li&gt;
  &lt;li&gt;おかんにCIを例えで説明する&lt;/li&gt;
  &lt;li&gt;CIをしていない場合、どこから始めればいいのか？&lt;/li&gt;
  &lt;li&gt;たくさんのテストがないとCIを使う意味がない、というよくある誤解&lt;/li&gt;
  &lt;li&gt;最初からクライマックス&lt;/li&gt;
  &lt;li&gt;継続的デリバリと継続的デプロイの定義と差異&lt;/li&gt;
  &lt;li&gt;CI/CDの真の力&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0とは？&lt;/li&gt;
  &lt;li&gt;LXCベースからDockerへの置き換え&lt;/li&gt;
  &lt;li&gt;CircleCIアーキテクチャの刷新について&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0以外の名前の候補&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0は爆速&lt;/li&gt;
  &lt;li&gt;gRPCを使いつつ非同期に&lt;/li&gt;
  &lt;li&gt;CircleCIはJenkinsと違って何が嬉しいのか？&lt;/li&gt;
  &lt;li&gt;Jenkinsのプラグイン運用辛い&lt;/li&gt;
  &lt;li&gt;野良Jenkins問題&lt;/li&gt;
  &lt;li&gt;CircleCIに限らずSaaS版のCI/CDで出来なくなることは？&lt;/li&gt;
  &lt;li&gt;GPUビルド&lt;/li&gt;
  &lt;li&gt;セキュリティおじさんに対する回答&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://circleci.com/enterprise/"&gt;CircleCI Enterprise&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コード自体がシークレットになってはいけない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.replicated.com/"&gt;Reprecated&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CircleCI EnterpriseのKubernetesへの移行について&lt;/li&gt;
  &lt;li&gt;CircleCI の内部設計とは？&lt;/li&gt;
  &lt;li&gt;自作スケジューラから&lt;a href="https://www.nomadproject.io/"&gt;Hashicorp Nomad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nomadはバッチ処理に向いている&lt;/li&gt;
  &lt;li&gt;CircleCIのQueueとして使われるRabbitMQ&lt;/li&gt;
  &lt;li&gt;RabbitMQの運用で困ったこと・苦労したことは？&lt;/li&gt;
  &lt;li&gt;CircleCIの内部で使われる言語はClojureについて&lt;/li&gt;
  &lt;li&gt;CircleCIも最初はRuby on Railsだった&lt;/li&gt;
  &lt;li&gt;CircleCIの開発運用で使うCI/CDはCircleCI&lt;/li&gt;
  &lt;li&gt;自分で自分の足を踏む&lt;/li&gt;
  &lt;li&gt;電動キックボードにハマっている&lt;/li&gt;
  &lt;li&gt;電動キックボードの原付き化&lt;/li&gt;
  &lt;li&gt;電動キックボードを日本で買うといくら？&lt;/li&gt;
  &lt;li&gt;CircleCIの開発はどうやっている？アジャイル？&lt;/li&gt;
  &lt;li&gt;プロダクトチームが、どういう機能が求められているか吸い上げる&lt;/li&gt;
  &lt;li&gt;Jiraを使った管理&lt;/li&gt;
  &lt;li&gt;CircleCIリリース時に承認は必要なのか？&lt;/li&gt;
  &lt;li&gt;Ship!Ship!Ship!&lt;/li&gt;
  &lt;li&gt;本番環境でテストする&lt;/li&gt;
  &lt;li&gt;継続的デプロイができれば、ロールバック(Revert)も簡単&lt;/li&gt;
  &lt;li&gt;品質管理おじさんが作りたがるチェックリストはある？&lt;/li&gt;
  &lt;li&gt;動いてるんだから良しとする、何かあればFixする&lt;/li&gt;
  &lt;li&gt;継続的デプロイは組織自体も変革する力がある&lt;/li&gt;
  &lt;li&gt;コンウェイの法則&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるコードレビューはどうやっているのか？&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるペアプロ&lt;/li&gt;
  &lt;li&gt;paring is caring&lt;/li&gt;
  &lt;li&gt;全世界に分散した開発&lt;/li&gt;
  &lt;li&gt;Remote Firstという文化&lt;/li&gt;
  &lt;li&gt;お互いに助け合うという文化&lt;/li&gt;
  &lt;li&gt;CTOが乱入するお客様対応&lt;/li&gt;
  &lt;li&gt;「今忙しいからできない」とは言わない&lt;/li&gt;
  &lt;li&gt;SlackよりZoomを使う&lt;/li&gt;
  &lt;li&gt;100の言葉よりも、1分のZoom&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるチームビルディング、All Hands&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/circlecijapan"&gt;Twitter CircleCIJapan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/circleci"&gt;We’re hiring at CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;継続的インテグレーション(CI)とは何か？&lt;/li&gt;
  &lt;li&gt;継続的デリバリ(CD)とは何か？&lt;/li&gt;
  &lt;li&gt;おかんにCIを例えで説明する&lt;/li&gt;
  &lt;li&gt;CIをしていない場合、どこから始めればいいのか？&lt;/li&gt;
  &lt;li&gt;たくさんのテストがないとCIを使う意味がない、というよくある誤解&lt;/li&gt;
  &lt;li&gt;最初からクライマックス&lt;/li&gt;
  &lt;li&gt;継続的デリバリと継続的デプロイの定義と差異&lt;/li&gt;
  &lt;li&gt;CI/CDの真の力&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0とは？&lt;/li&gt;
  &lt;li&gt;LXCベースからDockerへの置き換え&lt;/li&gt;
  &lt;li&gt;CircleCIアーキテクチャの刷新について&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0以外の名前の候補&lt;/li&gt;
  &lt;li&gt;CircleCI 2.0は爆速&lt;/li&gt;
  &lt;li&gt;gRPCを使いつつ非同期に&lt;/li&gt;
  &lt;li&gt;CircleCIはJenkinsと違って何が嬉しいのか？&lt;/li&gt;
  &lt;li&gt;Jenkinsのプラグイン運用辛い&lt;/li&gt;
  &lt;li&gt;野良Jenkins問題&lt;/li&gt;
  &lt;li&gt;CircleCIに限らずSaaS版のCI/CDで出来なくなることは？&lt;/li&gt;
  &lt;li&gt;GPUビルド&lt;/li&gt;
  &lt;li&gt;セキュリティおじさんに対する回答&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://circleci.com/enterprise/"&gt;CircleCI Enterprise&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;コード自体がシークレットになってはいけない&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.replicated.com/"&gt;Reprecated&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CircleCI EnterpriseのKubernetesへの移行について&lt;/li&gt;
  &lt;li&gt;CircleCI の内部設計とは？&lt;/li&gt;
  &lt;li&gt;自作スケジューラから&lt;a href="https://www.nomadproject.io/"&gt;Hashicorp Nomad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nomadはバッチ処理に向いている&lt;/li&gt;
  &lt;li&gt;CircleCIのQueueとして使われるRabbitMQ&lt;/li&gt;
  &lt;li&gt;RabbitMQの運用で困ったこと・苦労したことは？&lt;/li&gt;
  &lt;li&gt;CircleCIの内部で使われる言語はClojureについて&lt;/li&gt;
  &lt;li&gt;CircleCIも最初はRuby on Railsだった&lt;/li&gt;
  &lt;li&gt;CircleCIの開発運用で使うCI/CDはCircleCI&lt;/li&gt;
  &lt;li&gt;自分で自分の足を踏む&lt;/li&gt;
  &lt;li&gt;電動キックボードにハマっている&lt;/li&gt;
  &lt;li&gt;電動キックボードの原付き化&lt;/li&gt;
  &lt;li&gt;電動キックボードを日本で買うといくら？&lt;/li&gt;
  &lt;li&gt;CircleCIの開発はどうやっている？アジャイル？&lt;/li&gt;
  &lt;li&gt;プロダクトチームが、どういう機能が求められているか吸い上げる&lt;/li&gt;
  &lt;li&gt;Jiraを使った管理&lt;/li&gt;
  &lt;li&gt;CircleCIリリース時に承認は必要なのか？&lt;/li&gt;
  &lt;li&gt;Ship!Ship!Ship!&lt;/li&gt;
  &lt;li&gt;本番環境でテストする&lt;/li&gt;
  &lt;li&gt;継続的デプロイができれば、ロールバック(Revert)も簡単&lt;/li&gt;
  &lt;li&gt;品質管理おじさんが作りたがるチェックリストはある？&lt;/li&gt;
  &lt;li&gt;動いてるんだから良しとする、何かあればFixする&lt;/li&gt;
  &lt;li&gt;継続的デプロイは組織自体も変革する力がある&lt;/li&gt;
  &lt;li&gt;コンウェイの法則&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるコードレビューはどうやっているのか？&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるペアプロ&lt;/li&gt;
  &lt;li&gt;paring is caring&lt;/li&gt;
  &lt;li&gt;全世界に分散した開発&lt;/li&gt;
  &lt;li&gt;Remote Firstという文化&lt;/li&gt;
  &lt;li&gt;お互いに助け合うという文化&lt;/li&gt;
  &lt;li&gt;CTOが乱入するお客様対応&lt;/li&gt;
  &lt;li&gt;「今忙しいからできない」とは言わない&lt;/li&gt;
  &lt;li&gt;SlackよりZoomを使う&lt;/li&gt;
  &lt;li&gt;100の言葉よりも、1分のZoom&lt;/li&gt;
  &lt;li&gt;CircleCIにおけるチームビルディング、All Hands&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/circlecijapan"&gt;Twitter CircleCIJapan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.wantedly.com/companies/circleci"&gt;We’re hiring at CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>7. CI/CDとか、CircleCI自体の設計・開発プロセスとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>8</podcast:episode>
    </item>
    <item>
      <title>6. モブプログラミング 60分間1本勝負</title>
      <link>https://fukabori.fm/episode/6</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.agileteam.jp/"&gt;一般社団法人 アジャイルチームを支える会&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;モブプログラミングとは？&lt;/li&gt;
  &lt;li&gt;1台のマシンを使うのは重要？&lt;/li&gt;
  &lt;li&gt;複数マシンのコードの同期はどうする？&lt;/li&gt;
  &lt;li&gt;各々のマシンの環境が微妙に違う問題をどう対応する？&lt;/li&gt;
  &lt;li&gt;ペアプログラミングとモブプログラミングの差分は？&lt;/li&gt;
  &lt;li&gt;Whole Team Approach&lt;/li&gt;
  &lt;li&gt;情報同期がキーポイント&lt;/li&gt;
  &lt;li&gt;新規メンバーのJoinやLeaveにどう対処する？&lt;/li&gt;
  &lt;li&gt;情報の足りないメンバーがドライバーをやる&lt;/li&gt;
  &lt;li&gt;ドライバーは仕事を止める権利をもっている&lt;/li&gt;
  &lt;li&gt;「わからない」と平気で言えるのが重要&lt;/li&gt;
  &lt;li&gt;「わからない」って言っても良いチームは素敵&lt;/li&gt;
  &lt;li&gt;モブプログラミングにオススメの環境は？&lt;/li&gt;
  &lt;li&gt;「うるさいな」って言う人は羨ましい&lt;/li&gt;
  &lt;li&gt;楽しそうに仕事をしているチームは会社全体に影響がある&lt;/li&gt;
  &lt;li&gt;名前をあげて、人を褒めるということ&lt;/li&gt;
  &lt;li&gt;チームでよく飛び交うワード&lt;/li&gt;
  &lt;li&gt;モブプログラミングはリモートで、できるのか？&lt;/li&gt;
  &lt;li&gt;コミュニケーションの不平等さ&lt;/li&gt;
  &lt;li&gt;あえて全員リモートで入る&lt;/li&gt;
  &lt;li&gt;ナビゲーターとドライバー間でスキル差がある場合はどうするのか？&lt;/li&gt;
  &lt;li&gt;知識の差がある場合にどう対応するか？&lt;/li&gt;
  &lt;li&gt;コミュニケーションの多寡の問題&lt;/li&gt;
  &lt;li&gt;チームのコミットメントを高めるきっかけとしてのモブプロによる可視化&lt;/li&gt;
  &lt;li&gt;モブプログラミングは問題を見えやすくするアプローチ&lt;/li&gt;
  &lt;li&gt;マネージャーに入って欲しいかどうか&lt;/li&gt;
  &lt;li&gt;モブプログラミングの生産性？&lt;/li&gt;
  &lt;li&gt;生産性を妨げる行動って何なのだろうか？&lt;/li&gt;
  &lt;li&gt;よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング&lt;/li&gt;
  &lt;li&gt;兼務も生産性を妨げる&lt;/li&gt;
  &lt;li&gt;モブプログラミングで向き不向きがあるタスク&lt;/li&gt;
  &lt;li&gt;結果の見通しが良いものはモブプログラミングでやる必要はない&lt;/li&gt;
  &lt;li&gt;一方で大体の仕事は問題解決であり、モブプログラミングに向いている&lt;/li&gt;
  &lt;li&gt;チームの状態、作業の質をみてモブプログラミングを使い分ける&lt;/li&gt;
  &lt;li&gt;分担するよりも一緒にやったほうが良い、という気付き&lt;/li&gt;
  &lt;li&gt;分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある&lt;/li&gt;
  &lt;li&gt;ドライバーとナビゲーターは、どういうタイミングで交代するのか？&lt;/li&gt;
  &lt;li&gt;我が家方式による交代&lt;/li&gt;
  &lt;li&gt;ドライバーってどれぐらい喋れば良いのか？&lt;/li&gt;
  &lt;li&gt;モブプロ、めっちゃ疲れる問題&lt;/li&gt;
  &lt;li&gt;どのように休憩(ブレイク)を入れるのが効果的か？&lt;/li&gt;
  &lt;li&gt;休憩の入れ方はチームのセンスが問われる&lt;/li&gt;
  &lt;li&gt;ポモドーロと組み合わせた休憩テクニック&lt;/li&gt;
  &lt;li&gt;モブコーヒー&lt;/li&gt;
  &lt;li&gt;どうやってサボるかを、真剣に考える&lt;/li&gt;
  &lt;li&gt;Deepで集中する、Deepで休憩する、Deepでサボる&lt;/li&gt;
  &lt;li&gt;モブプログラミングにて、振り返りをどの程度していくか？&lt;/li&gt;
  &lt;li&gt;手を止めて、仕事を俯瞰する振り返り&lt;/li&gt;
  &lt;li&gt;スクラムとモブプログラミングの組み合わせはどうやったらいいか？&lt;/li&gt;
  &lt;li&gt;モブプログラミングとスクラムは相性が良い&lt;/li&gt;
  &lt;li&gt;1Day Sprintというアプローチ&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い&lt;/li&gt;
  &lt;li&gt;お客様から直接Feedbackをもらうことに価値がある&lt;/li&gt;
  &lt;li&gt;モブプログラミングの中に、お客様に入ってもらう&lt;/li&gt;
  &lt;li&gt;全員プロダクトオーナー&lt;/li&gt;
  &lt;li&gt;管理職・マネージャーをどう説得するか？説得する必要があるのか？&lt;/li&gt;
  &lt;li&gt;モブプログラミング実施について説得する必要はない&lt;/li&gt;
  &lt;li&gt;より良い仕事をするためにモブプログラミングをしている&lt;/li&gt;
  &lt;li&gt;マネージャーはチームが上手く働けるようにサポートすること&lt;/li&gt;
  &lt;li&gt;チームの理想をWhatで提示、Howは権限委譲する&lt;/li&gt;
  &lt;li&gt;Howに興味があるのは子供扱いしている状態と同じ&lt;/li&gt;
  &lt;li&gt;1on1で上司をメンタリング&lt;/li&gt;
  &lt;li&gt;受け入れてくれるマネージャーは多い&lt;/li&gt;
  &lt;li&gt;双方向メンタリング&lt;/li&gt;
  &lt;li&gt;よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro"&gt;モブプログラミング スタートアップマニュアル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/6</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7ngfvqg5q2sjpqdhszj.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 25 Sep 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7ngfvqg5q2sjpqdhszj.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3983/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:58:37</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.agileteam.jp/"&gt;一般社団法人 アジャイルチームを支える会&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;モブプログラミングとは？&lt;/li&gt;
  &lt;li&gt;1台のマシンを使うのは重要？&lt;/li&gt;
  &lt;li&gt;複数マシンのコードの同期はどうする？&lt;/li&gt;
  &lt;li&gt;各々のマシンの環境が微妙に違う問題をどう対応する？&lt;/li&gt;
  &lt;li&gt;ペアプログラミングとモブプログラミングの差分は？&lt;/li&gt;
  &lt;li&gt;Whole Team Approach&lt;/li&gt;
  &lt;li&gt;情報同期がキーポイント&lt;/li&gt;
  &lt;li&gt;新規メンバーのJoinやLeaveにどう対処する？&lt;/li&gt;
  &lt;li&gt;情報の足りないメンバーがドライバーをやる&lt;/li&gt;
  &lt;li&gt;ドライバーは仕事を止める権利をもっている&lt;/li&gt;
  &lt;li&gt;「わからない」と平気で言えるのが重要&lt;/li&gt;
  &lt;li&gt;「わからない」って言っても良いチームは素敵&lt;/li&gt;
  &lt;li&gt;モブプログラミングにオススメの環境は？&lt;/li&gt;
  &lt;li&gt;「うるさいな」って言う人は羨ましい&lt;/li&gt;
  &lt;li&gt;楽しそうに仕事をしているチームは会社全体に影響がある&lt;/li&gt;
  &lt;li&gt;名前をあげて、人を褒めるということ&lt;/li&gt;
  &lt;li&gt;チームでよく飛び交うワード&lt;/li&gt;
  &lt;li&gt;モブプログラミングはリモートで、できるのか？&lt;/li&gt;
  &lt;li&gt;コミュニケーションの不平等さ&lt;/li&gt;
  &lt;li&gt;あえて全員リモートで入る&lt;/li&gt;
  &lt;li&gt;ナビゲーターとドライバー間でスキル差がある場合はどうするのか？&lt;/li&gt;
  &lt;li&gt;知識の差がある場合にどう対応するか？&lt;/li&gt;
  &lt;li&gt;コミュニケーションの多寡の問題&lt;/li&gt;
  &lt;li&gt;チームのコミットメントを高めるきっかけとしてのモブプロによる可視化&lt;/li&gt;
  &lt;li&gt;モブプログラミングは問題を見えやすくするアプローチ&lt;/li&gt;
  &lt;li&gt;マネージャーに入って欲しいかどうか&lt;/li&gt;
  &lt;li&gt;モブプログラミングの生産性？&lt;/li&gt;
  &lt;li&gt;生産性を妨げる行動って何なのだろうか？&lt;/li&gt;
  &lt;li&gt;よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング&lt;/li&gt;
  &lt;li&gt;兼務も生産性を妨げる&lt;/li&gt;
  &lt;li&gt;モブプログラミングで向き不向きがあるタスク&lt;/li&gt;
  &lt;li&gt;結果の見通しが良いものはモブプログラミングでやる必要はない&lt;/li&gt;
  &lt;li&gt;一方で大体の仕事は問題解決であり、モブプログラミングに向いている&lt;/li&gt;
  &lt;li&gt;チームの状態、作業の質をみてモブプログラミングを使い分ける&lt;/li&gt;
  &lt;li&gt;分担するよりも一緒にやったほうが良い、という気付き&lt;/li&gt;
  &lt;li&gt;分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある&lt;/li&gt;
  &lt;li&gt;ドライバーとナビゲーターは、どういうタイミングで交代するのか？&lt;/li&gt;
  &lt;li&gt;我が家方式による交代&lt;/li&gt;
  &lt;li&gt;ドライバーってどれぐらい喋れば良いのか？&lt;/li&gt;
  &lt;li&gt;モブプロ、めっちゃ疲れる問題&lt;/li&gt;
  &lt;li&gt;どのように休憩(ブレイク)を入れるのが効果的か？&lt;/li&gt;
  &lt;li&gt;休憩の入れ方はチームのセンスが問われる&lt;/li&gt;
  &lt;li&gt;ポモドーロと組み合わせた休憩テクニック&lt;/li&gt;
  &lt;li&gt;モブコーヒー&lt;/li&gt;
  &lt;li&gt;どうやってサボるかを、真剣に考える&lt;/li&gt;
  &lt;li&gt;Deepで集中する、Deepで休憩する、Deepでサボる&lt;/li&gt;
  &lt;li&gt;モブプログラミングにて、振り返りをどの程度していくか？&lt;/li&gt;
  &lt;li&gt;手を止めて、仕事を俯瞰する振り返り&lt;/li&gt;
  &lt;li&gt;スクラムとモブプログラミングの組み合わせはどうやったらいいか？&lt;/li&gt;
  &lt;li&gt;モブプログラミングとスクラムは相性が良い&lt;/li&gt;
  &lt;li&gt;1Day Sprintというアプローチ&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い&lt;/li&gt;
  &lt;li&gt;お客様から直接Feedbackをもらうことに価値がある&lt;/li&gt;
  &lt;li&gt;モブプログラミングの中に、お客様に入ってもらう&lt;/li&gt;
  &lt;li&gt;全員プロダクトオーナー&lt;/li&gt;
  &lt;li&gt;管理職・マネージャーをどう説得するか？説得する必要があるのか？&lt;/li&gt;
  &lt;li&gt;モブプログラミング実施について説得する必要はない&lt;/li&gt;
  &lt;li&gt;より良い仕事をするためにモブプログラミングをしている&lt;/li&gt;
  &lt;li&gt;マネージャーはチームが上手く働けるようにサポートすること&lt;/li&gt;
  &lt;li&gt;チームの理想をWhatで提示、Howは権限委譲する&lt;/li&gt;
  &lt;li&gt;Howに興味があるのは子供扱いしている状態と同じ&lt;/li&gt;
  &lt;li&gt;1on1で上司をメンタリング&lt;/li&gt;
  &lt;li&gt;受け入れてくれるマネージャーは多い&lt;/li&gt;
  &lt;li&gt;双方向メンタリング&lt;/li&gt;
  &lt;li&gt;よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro"&gt;モブプログラミング スタートアップマニュアル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.agileteam.jp/"&gt;一般社団法人 アジャイルチームを支える会&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;モブプログラミングとは？&lt;/li&gt;
  &lt;li&gt;1台のマシンを使うのは重要？&lt;/li&gt;
  &lt;li&gt;複数マシンのコードの同期はどうする？&lt;/li&gt;
  &lt;li&gt;各々のマシンの環境が微妙に違う問題をどう対応する？&lt;/li&gt;
  &lt;li&gt;ペアプログラミングとモブプログラミングの差分は？&lt;/li&gt;
  &lt;li&gt;Whole Team Approach&lt;/li&gt;
  &lt;li&gt;情報同期がキーポイント&lt;/li&gt;
  &lt;li&gt;新規メンバーのJoinやLeaveにどう対処する？&lt;/li&gt;
  &lt;li&gt;情報の足りないメンバーがドライバーをやる&lt;/li&gt;
  &lt;li&gt;ドライバーは仕事を止める権利をもっている&lt;/li&gt;
  &lt;li&gt;「わからない」と平気で言えるのが重要&lt;/li&gt;
  &lt;li&gt;「わからない」って言っても良いチームは素敵&lt;/li&gt;
  &lt;li&gt;モブプログラミングにオススメの環境は？&lt;/li&gt;
  &lt;li&gt;「うるさいな」って言う人は羨ましい&lt;/li&gt;
  &lt;li&gt;楽しそうに仕事をしているチームは会社全体に影響がある&lt;/li&gt;
  &lt;li&gt;名前をあげて、人を褒めるということ&lt;/li&gt;
  &lt;li&gt;チームでよく飛び交うワード&lt;/li&gt;
  &lt;li&gt;モブプログラミングはリモートで、できるのか？&lt;/li&gt;
  &lt;li&gt;コミュニケーションの不平等さ&lt;/li&gt;
  &lt;li&gt;あえて全員リモートで入る&lt;/li&gt;
  &lt;li&gt;ナビゲーターとドライバー間でスキル差がある場合はどうするのか？&lt;/li&gt;
  &lt;li&gt;知識の差がある場合にどう対応するか？&lt;/li&gt;
  &lt;li&gt;コミュニケーションの多寡の問題&lt;/li&gt;
  &lt;li&gt;チームのコミットメントを高めるきっかけとしてのモブプロによる可視化&lt;/li&gt;
  &lt;li&gt;モブプログラミングは問題を見えやすくするアプローチ&lt;/li&gt;
  &lt;li&gt;マネージャーに入って欲しいかどうか&lt;/li&gt;
  &lt;li&gt;モブプログラミングの生産性？&lt;/li&gt;
  &lt;li&gt;生産性を妨げる行動って何なのだろうか？&lt;/li&gt;
  &lt;li&gt;よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング&lt;/li&gt;
  &lt;li&gt;兼務も生産性を妨げる&lt;/li&gt;
  &lt;li&gt;モブプログラミングで向き不向きがあるタスク&lt;/li&gt;
  &lt;li&gt;結果の見通しが良いものはモブプログラミングでやる必要はない&lt;/li&gt;
  &lt;li&gt;一方で大体の仕事は問題解決であり、モブプログラミングに向いている&lt;/li&gt;
  &lt;li&gt;チームの状態、作業の質をみてモブプログラミングを使い分ける&lt;/li&gt;
  &lt;li&gt;分担するよりも一緒にやったほうが良い、という気付き&lt;/li&gt;
  &lt;li&gt;分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある&lt;/li&gt;
  &lt;li&gt;ドライバーとナビゲーターは、どういうタイミングで交代するのか？&lt;/li&gt;
  &lt;li&gt;我が家方式による交代&lt;/li&gt;
  &lt;li&gt;ドライバーってどれぐらい喋れば良いのか？&lt;/li&gt;
  &lt;li&gt;モブプロ、めっちゃ疲れる問題&lt;/li&gt;
  &lt;li&gt;どのように休憩(ブレイク)を入れるのが効果的か？&lt;/li&gt;
  &lt;li&gt;休憩の入れ方はチームのセンスが問われる&lt;/li&gt;
  &lt;li&gt;ポモドーロと組み合わせた休憩テクニック&lt;/li&gt;
  &lt;li&gt;モブコーヒー&lt;/li&gt;
  &lt;li&gt;どうやってサボるかを、真剣に考える&lt;/li&gt;
  &lt;li&gt;Deepで集中する、Deepで休憩する、Deepでサボる&lt;/li&gt;
  &lt;li&gt;モブプログラミングにて、振り返りをどの程度していくか？&lt;/li&gt;
  &lt;li&gt;手を止めて、仕事を俯瞰する振り返り&lt;/li&gt;
  &lt;li&gt;スクラムとモブプログラミングの組み合わせはどうやったらいいか？&lt;/li&gt;
  &lt;li&gt;モブプログラミングとスクラムは相性が良い&lt;/li&gt;
  &lt;li&gt;1Day Sprintというアプローチ&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い&lt;/li&gt;
  &lt;li&gt;お客様から直接Feedbackをもらうことに価値がある&lt;/li&gt;
  &lt;li&gt;モブプログラミングの中に、お客様に入ってもらう&lt;/li&gt;
  &lt;li&gt;全員プロダクトオーナー&lt;/li&gt;
  &lt;li&gt;管理職・マネージャーをどう説得するか？説得する必要があるのか？&lt;/li&gt;
  &lt;li&gt;モブプログラミング実施について説得する必要はない&lt;/li&gt;
  &lt;li&gt;より良い仕事をするためにモブプログラミングをしている&lt;/li&gt;
  &lt;li&gt;マネージャーはチームが上手く働けるようにサポートすること&lt;/li&gt;
  &lt;li&gt;チームの理想をWhatで提示、Howは権限委譲する&lt;/li&gt;
  &lt;li&gt;Howに興味があるのは子供扱いしている状態と同じ&lt;/li&gt;
  &lt;li&gt;1on1で上司をメンタリング&lt;/li&gt;
  &lt;li&gt;受け入れてくれるマネージャーは多い&lt;/li&gt;
  &lt;li&gt;双方向メンタリング&lt;/li&gt;
  &lt;li&gt;よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro"&gt;モブプログラミング スタートアップマニュアル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>6. モブプログラミング 60分間1本勝負</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>7</podcast:episode>
    </item>
    <item>
      <title>5. アジャイルコーチ、リーン・アジャイルの考え方、心理的安全性とか</title>
      <link>https://fukabori.fm/episode/5</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://lean-agile.fm/"&gt;omoiyari.fm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;アジャイルコーチという職種って何やってるの？&lt;/li&gt;
  &lt;li&gt;会社に対するオーナーシップ&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーシップが全員必須というわけではない&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーシップはあると何が嬉しいのか？&lt;/li&gt;
  &lt;li&gt;1on1におけるフレーミング&lt;/li&gt;
  &lt;li&gt;1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？&lt;/li&gt;
  &lt;li&gt;リーン、アジャイルとはそもそも何なのか？その関連は？&lt;/li&gt;
  &lt;li&gt;スクラムと開発速度の考え方&lt;/li&gt;
  &lt;li&gt;効果と効率&lt;/li&gt;
  &lt;li&gt;モブプログラミングは意外とベロシティが出る&lt;/li&gt;
  &lt;li&gt;モブプロで浮き彫りになるコミュニケーションの質&lt;/li&gt;
  &lt;li&gt;スクラムの何が好き？&lt;/li&gt;
  &lt;li&gt;omoiyari.fmのFearlessChangeネタは？&lt;/li&gt;
  &lt;li&gt;ykmc09の好きなFearlessChangeのパターン3つ&lt;/li&gt;
  &lt;li&gt;Face to Faceで話すことの効果&lt;/li&gt;
  &lt;li&gt;心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？&lt;/li&gt;
  &lt;li&gt;“雑”ということの重要性&lt;/li&gt;
  &lt;li&gt;大企業/組織における心理的安全性を高めるための社内Podcast&lt;/li&gt;
  &lt;li&gt;いつかSIerに戻ってみたい理由&lt;/li&gt;
  &lt;li&gt;生涯でやり遂げたいことはある？&lt;/li&gt;
  &lt;li&gt;アジャイル、モブプロにおける人事評価&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/5</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7ngrz79b9qynh0xn5vm.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 26 Aug 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7ngrz79b9qynh0xn5vm.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3982/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:58:38</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://lean-agile.fm/"&gt;omoiyari.fm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;アジャイルコーチという職種って何やってるの？&lt;/li&gt;
  &lt;li&gt;会社に対するオーナーシップ&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーシップが全員必須というわけではない&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーシップはあると何が嬉しいのか？&lt;/li&gt;
  &lt;li&gt;1on1におけるフレーミング&lt;/li&gt;
  &lt;li&gt;1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？&lt;/li&gt;
  &lt;li&gt;リーン、アジャイルとはそもそも何なのか？その関連は？&lt;/li&gt;
  &lt;li&gt;スクラムと開発速度の考え方&lt;/li&gt;
  &lt;li&gt;効果と効率&lt;/li&gt;
  &lt;li&gt;モブプログラミングは意外とベロシティが出る&lt;/li&gt;
  &lt;li&gt;モブプロで浮き彫りになるコミュニケーションの質&lt;/li&gt;
  &lt;li&gt;スクラムの何が好き？&lt;/li&gt;
  &lt;li&gt;omoiyari.fmのFearlessChangeネタは？&lt;/li&gt;
  &lt;li&gt;ykmc09の好きなFearlessChangeのパターン3つ&lt;/li&gt;
  &lt;li&gt;Face to Faceで話すことの効果&lt;/li&gt;
  &lt;li&gt;心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？&lt;/li&gt;
  &lt;li&gt;“雑”ということの重要性&lt;/li&gt;
  &lt;li&gt;大企業/組織における心理的安全性を高めるための社内Podcast&lt;/li&gt;
  &lt;li&gt;いつかSIerに戻ってみたい理由&lt;/li&gt;
  &lt;li&gt;生涯でやり遂げたいことはある？&lt;/li&gt;
  &lt;li&gt;アジャイル、モブプロにおける人事評価&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://lean-agile.fm/"&gt;omoiyari.fm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;アジャイルコーチという職種って何やってるの？&lt;/li&gt;
  &lt;li&gt;会社に対するオーナーシップ&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーシップが全員必須というわけではない&lt;/li&gt;
  &lt;li&gt;プロダクトオーナーシップはあると何が嬉しいのか？&lt;/li&gt;
  &lt;li&gt;1on1におけるフレーミング&lt;/li&gt;
  &lt;li&gt;1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？&lt;/li&gt;
  &lt;li&gt;リーン、アジャイルとはそもそも何なのか？その関連は？&lt;/li&gt;
  &lt;li&gt;スクラムと開発速度の考え方&lt;/li&gt;
  &lt;li&gt;効果と効率&lt;/li&gt;
  &lt;li&gt;モブプログラミングは意外とベロシティが出る&lt;/li&gt;
  &lt;li&gt;モブプロで浮き彫りになるコミュニケーションの質&lt;/li&gt;
  &lt;li&gt;スクラムの何が好き？&lt;/li&gt;
  &lt;li&gt;omoiyari.fmのFearlessChangeネタは？&lt;/li&gt;
  &lt;li&gt;ykmc09の好きなFearlessChangeのパターン3つ&lt;/li&gt;
  &lt;li&gt;Face to Faceで話すことの効果&lt;/li&gt;
  &lt;li&gt;心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？&lt;/li&gt;
  &lt;li&gt;“雑”ということの重要性&lt;/li&gt;
  &lt;li&gt;大企業/組織における心理的安全性を高めるための社内Podcast&lt;/li&gt;
  &lt;li&gt;いつかSIerに戻ってみたい理由&lt;/li&gt;
  &lt;li&gt;生涯でやり遂げたいことはある？&lt;/li&gt;
  &lt;li&gt;アジャイル、モブプロにおける人事評価&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>5. アジャイルコーチ、リーン・アジャイルの考え方、心理的安全性とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>6</podcast:episode>
    </item>
    <item>
      <title>4. Kamueeとか、Cuisharkとか</title>
      <link>https://fukabori.fm/episode/4</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html"&gt;Kamuee&lt;/a&gt;とは&lt;/li&gt;
  &lt;li&gt;NFV&lt;/li&gt;
  &lt;li&gt;ソフトウェアルータのメリット&lt;/li&gt;
  &lt;li&gt;Kamueeを作るモチベーション&lt;/li&gt;
  &lt;li&gt;既存のソフトウェアルータの限界、問題点&lt;/li&gt;
  &lt;li&gt;DPDKとは&lt;/li&gt;
  &lt;li&gt;Trieとは&lt;/li&gt;
  &lt;li&gt;ラストレベルキャッシュ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html"&gt;PopTrie&lt;/a&gt;とは&lt;/li&gt;
  &lt;li&gt;Kamueeが他に実装しているもの&lt;/li&gt;
  &lt;li&gt;InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ntt-developers.github.io/ntt-tech-conference/03/"&gt;NTT Tech Conference #3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/cuishark/cuishark"&gt;Cuishark&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cuisharkを作るモチベーション&lt;/li&gt;
  &lt;li&gt;Cuisharkの実装&lt;/li&gt;
  &lt;li&gt;Cursesを生で使うのは大変&lt;/li&gt;
  &lt;li&gt;未踏とは？&lt;/li&gt;
  &lt;li&gt;DPDKを使うのは大変&lt;/li&gt;
  &lt;li&gt;未踏2017テーマ&lt;a href="https://github.com/susanow"&gt;環境に対して自動最適化する高性能通信基盤の開発&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/4</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7ngpxp7s2gahmh2cc25.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Tue, 14 Aug 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7ngpxp7s2gahmh2cc25.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3981/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:51:54</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html"&gt;Kamuee&lt;/a&gt;とは&lt;/li&gt;
  &lt;li&gt;NFV&lt;/li&gt;
  &lt;li&gt;ソフトウェアルータのメリット&lt;/li&gt;
  &lt;li&gt;Kamueeを作るモチベーション&lt;/li&gt;
  &lt;li&gt;既存のソフトウェアルータの限界、問題点&lt;/li&gt;
  &lt;li&gt;DPDKとは&lt;/li&gt;
  &lt;li&gt;Trieとは&lt;/li&gt;
  &lt;li&gt;ラストレベルキャッシュ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html"&gt;PopTrie&lt;/a&gt;とは&lt;/li&gt;
  &lt;li&gt;Kamueeが他に実装しているもの&lt;/li&gt;
  &lt;li&gt;InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ntt-developers.github.io/ntt-tech-conference/03/"&gt;NTT Tech Conference #3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/cuishark/cuishark"&gt;Cuishark&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cuisharkを作るモチベーション&lt;/li&gt;
  &lt;li&gt;Cuisharkの実装&lt;/li&gt;
  &lt;li&gt;Cursesを生で使うのは大変&lt;/li&gt;
  &lt;li&gt;未踏とは？&lt;/li&gt;
  &lt;li&gt;DPDKを使うのは大変&lt;/li&gt;
  &lt;li&gt;未踏2017テーマ&lt;a href="https://github.com/susanow"&gt;環境に対して自動最適化する高性能通信基盤の開発&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html"&gt;Kamuee&lt;/a&gt;とは&lt;/li&gt;
  &lt;li&gt;NFV&lt;/li&gt;
  &lt;li&gt;ソフトウェアルータのメリット&lt;/li&gt;
  &lt;li&gt;Kamueeを作るモチベーション&lt;/li&gt;
  &lt;li&gt;既存のソフトウェアルータの限界、問題点&lt;/li&gt;
  &lt;li&gt;DPDKとは&lt;/li&gt;
  &lt;li&gt;Trieとは&lt;/li&gt;
  &lt;li&gt;ラストレベルキャッシュ&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html"&gt;PopTrie&lt;/a&gt;とは&lt;/li&gt;
  &lt;li&gt;Kamueeが他に実装しているもの&lt;/li&gt;
  &lt;li&gt;InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ntt-developers.github.io/ntt-tech-conference/03/"&gt;NTT Tech Conference #3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/cuishark/cuishark"&gt;Cuishark&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cuisharkを作るモチベーション&lt;/li&gt;
  &lt;li&gt;Cuisharkの実装&lt;/li&gt;
  &lt;li&gt;Cursesを生で使うのは大変&lt;/li&gt;
  &lt;li&gt;未踏とは？&lt;/li&gt;
  &lt;li&gt;DPDKを使うのは大変&lt;/li&gt;
  &lt;li&gt;未踏2017テーマ&lt;a href="https://github.com/susanow"&gt;環境に対して自動最適化する高性能通信基盤の開発&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>4. Kamueeとか、Cuisharkとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>5</podcast:episode>
    </item>
    <item>
      <title>3. botnetとか、CTFとか</title>
      <link>https://fukabori.fm/episode/3</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;botnetとは？&lt;/li&gt;
  &lt;li&gt;Herderとは？&lt;/li&gt;
  &lt;li&gt;どうやって感染するのか？&lt;/li&gt;
  &lt;li&gt;どうやってbot化していることを発見するのか？&lt;/li&gt;
  &lt;li&gt;リスニングポストとは？&lt;/li&gt;
  &lt;li&gt;botnetって買えるの？&lt;/li&gt;
  &lt;li&gt;イスラエル軍が凄い&lt;/li&gt;
  &lt;li&gt;DDoSを使う動機？&lt;/li&gt;
  &lt;li&gt;DDoSってどうやって対策していくのか？&lt;/li&gt;
  &lt;li&gt;セキュリティの勉強ってどうやるの？&lt;/li&gt;
  &lt;li&gt;CTFとは？&lt;/li&gt;
  &lt;li&gt;CTFtime (エピソード中のCTFTimesは誤りです)&lt;/li&gt;
  &lt;li&gt;通信事業者ってbotnet対策に何かしているの？&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/3</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7ngyfgz3m3g5wj0jd1m.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sat, 21 Jul 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7ngyfgz3m3g5wj0jd1m.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3980/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:49:12</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;botnetとは？&lt;/li&gt;
  &lt;li&gt;Herderとは？&lt;/li&gt;
  &lt;li&gt;どうやって感染するのか？&lt;/li&gt;
  &lt;li&gt;どうやってbot化していることを発見するのか？&lt;/li&gt;
  &lt;li&gt;リスニングポストとは？&lt;/li&gt;
  &lt;li&gt;botnetって買えるの？&lt;/li&gt;
  &lt;li&gt;イスラエル軍が凄い&lt;/li&gt;
  &lt;li&gt;DDoSを使う動機？&lt;/li&gt;
  &lt;li&gt;DDoSってどうやって対策していくのか？&lt;/li&gt;
  &lt;li&gt;セキュリティの勉強ってどうやるの？&lt;/li&gt;
  &lt;li&gt;CTFとは？&lt;/li&gt;
  &lt;li&gt;CTFtime (エピソード中のCTFTimesは誤りです)&lt;/li&gt;
  &lt;li&gt;通信事業者ってbotnet対策に何かしているの？&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;botnetとは？&lt;/li&gt;
  &lt;li&gt;Herderとは？&lt;/li&gt;
  &lt;li&gt;どうやって感染するのか？&lt;/li&gt;
  &lt;li&gt;どうやってbot化していることを発見するのか？&lt;/li&gt;
  &lt;li&gt;リスニングポストとは？&lt;/li&gt;
  &lt;li&gt;botnetって買えるの？&lt;/li&gt;
  &lt;li&gt;イスラエル軍が凄い&lt;/li&gt;
  &lt;li&gt;DDoSを使う動機？&lt;/li&gt;
  &lt;li&gt;DDoSってどうやって対策していくのか？&lt;/li&gt;
  &lt;li&gt;セキュリティの勉強ってどうやるの？&lt;/li&gt;
  &lt;li&gt;CTFとは？&lt;/li&gt;
  &lt;li&gt;CTFtime (エピソード中のCTFTimesは誤りです)&lt;/li&gt;
  &lt;li&gt;通信事業者ってbotnet対策に何かしているの？&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>3. botnetとか、CTFとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>4</podcast:episode>
    </item>
    <item>
      <title>2. 仕事よりブログが大事、ブログは自分の子供</title>
      <link>https://fukabori.fm/episode/2</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;なぜブログを書くのか？&lt;/li&gt;
  &lt;li&gt;食欲、睡眠欲、ブログ欲&lt;/li&gt;
  &lt;li&gt;3大ブログ書けない理由とは&lt;/li&gt;
  &lt;li&gt;ブログメンタリング&lt;/li&gt;
  &lt;li&gt;相互メンタリング&lt;/li&gt;
  &lt;li&gt;1日24時間しかな事実は知られていない&lt;/li&gt;
  &lt;li&gt;プログラミング講師&lt;/li&gt;
  &lt;li&gt;初心者にRailsを教えるコツ&lt;/li&gt;
  &lt;li&gt;知の高速道路を突き抜けるスピードを加速する&lt;/li&gt;
  &lt;li&gt;モブプログラミング&lt;/li&gt;
  &lt;li&gt;モブプログラミングに向いているお題&lt;/li&gt;
  &lt;li&gt;雑談をしましょう&lt;/li&gt;
  &lt;li&gt;オートクラインとは&lt;/li&gt;
  &lt;li&gt;トランザクティブメモリーとは&lt;/li&gt;
  &lt;li&gt;スウォーミングとは&lt;/li&gt;
  &lt;li&gt;チームビルディング&lt;/li&gt;
  &lt;li&gt;結局リーダは笑顔でいる&lt;/li&gt;
  &lt;li&gt;kakakakkuさんの再現性&lt;/li&gt;
  &lt;li&gt;仕事よりブログが大事&lt;/li&gt;
  &lt;li&gt;ブログも自分の子供&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;訂正: ダックタイピング -&amp;gt; ラバーダッキング&lt;/p&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/2</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nfmvca2jhmbz2nejkj.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Thu, 12 Jul 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nfmvca2jhmbz2nejkj.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3979/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>01:00:38</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;なぜブログを書くのか？&lt;/li&gt;
  &lt;li&gt;食欲、睡眠欲、ブログ欲&lt;/li&gt;
  &lt;li&gt;3大ブログ書けない理由とは&lt;/li&gt;
  &lt;li&gt;ブログメンタリング&lt;/li&gt;
  &lt;li&gt;相互メンタリング&lt;/li&gt;
  &lt;li&gt;1日24時間しかな事実は知られていない&lt;/li&gt;
  &lt;li&gt;プログラミング講師&lt;/li&gt;
  &lt;li&gt;初心者にRailsを教えるコツ&lt;/li&gt;
  &lt;li&gt;知の高速道路を突き抜けるスピードを加速する&lt;/li&gt;
  &lt;li&gt;モブプログラミング&lt;/li&gt;
  &lt;li&gt;モブプログラミングに向いているお題&lt;/li&gt;
  &lt;li&gt;雑談をしましょう&lt;/li&gt;
  &lt;li&gt;オートクラインとは&lt;/li&gt;
  &lt;li&gt;トランザクティブメモリーとは&lt;/li&gt;
  &lt;li&gt;スウォーミングとは&lt;/li&gt;
  &lt;li&gt;チームビルディング&lt;/li&gt;
  &lt;li&gt;結局リーダは笑顔でいる&lt;/li&gt;
  &lt;li&gt;kakakakkuさんの再現性&lt;/li&gt;
  &lt;li&gt;仕事よりブログが大事&lt;/li&gt;
  &lt;li&gt;ブログも自分の子供&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;訂正: ダックタイピング -&amp;gt; ラバーダッキング&lt;/p&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;なぜブログを書くのか？&lt;/li&gt;
  &lt;li&gt;食欲、睡眠欲、ブログ欲&lt;/li&gt;
  &lt;li&gt;3大ブログ書けない理由とは&lt;/li&gt;
  &lt;li&gt;ブログメンタリング&lt;/li&gt;
  &lt;li&gt;相互メンタリング&lt;/li&gt;
  &lt;li&gt;1日24時間しかな事実は知られていない&lt;/li&gt;
  &lt;li&gt;プログラミング講師&lt;/li&gt;
  &lt;li&gt;初心者にRailsを教えるコツ&lt;/li&gt;
  &lt;li&gt;知の高速道路を突き抜けるスピードを加速する&lt;/li&gt;
  &lt;li&gt;モブプログラミング&lt;/li&gt;
  &lt;li&gt;モブプログラミングに向いているお題&lt;/li&gt;
  &lt;li&gt;雑談をしましょう&lt;/li&gt;
  &lt;li&gt;オートクラインとは&lt;/li&gt;
  &lt;li&gt;トランザクティブメモリーとは&lt;/li&gt;
  &lt;li&gt;スウォーミングとは&lt;/li&gt;
  &lt;li&gt;チームビルディング&lt;/li&gt;
  &lt;li&gt;結局リーダは笑顔でいる&lt;/li&gt;
  &lt;li&gt;kakakakkuさんの再現性&lt;/li&gt;
  &lt;li&gt;仕事よりブログが大事&lt;/li&gt;
  &lt;li&gt;ブログも自分の子供&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;訂正: ダックタイピング -&amp;gt; ラバーダッキング&lt;/p&gt;</itunes:summary>
      <itunes:title>2. 仕事よりブログが大事、ブログは自分の子供</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>3</podcast:episode>
    </item>
    <item>
      <title>1. IETFとか、QUICとか</title>
      <link>https://fukabori.fm/episode/1</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;IETFって何？どんなところ？&lt;/li&gt;
  &lt;li&gt;RFCとは？&lt;/li&gt;
  &lt;li&gt;ハミングによるコンセンサス&lt;/li&gt;
  &lt;li&gt;IETFに参加するのはどんな人たちがいる？&lt;/li&gt;
  &lt;li&gt;個人で参加するには？&lt;/li&gt;
  &lt;li&gt;IETFでの雑談、ロビーイングの重要性&lt;/li&gt;
  &lt;li&gt;QUICって何？なぜ生まれたの？&lt;/li&gt;
  &lt;li&gt;Google QUICとIETF QUIC&lt;/li&gt;
  &lt;li&gt;HoL とは？&lt;/li&gt;
  &lt;li&gt;なぜQUICは、ユーザランドで実装しているのか？&lt;/li&gt;
  &lt;li&gt;TCP既存プロトコル vs QUIC(UDP)プロトコル&lt;/li&gt;
  &lt;li&gt;QUICが効果的に効くところ&lt;/li&gt;
  &lt;li&gt;通信事業者のミドルボックスの負荷、コネクション残存&lt;/li&gt;
  &lt;li&gt;通信事業者はQUICをどう見る？&lt;/li&gt;
  &lt;li&gt;ネットワークの硬直化(Ossification)&lt;/li&gt;
  &lt;li&gt;QUICの折り合いの付け所&lt;/li&gt;
  &lt;li&gt;QUICの将来の展望&lt;/li&gt;
  &lt;li&gt;QUICを追っかけるにはどうすればいい？&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/1</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nftzp7cxjvxs5ex73w.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Wed, 23 May 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nftzp7cxjvxs5ex73w.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3978/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:55:48</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;IETFって何？どんなところ？&lt;/li&gt;
  &lt;li&gt;RFCとは？&lt;/li&gt;
  &lt;li&gt;ハミングによるコンセンサス&lt;/li&gt;
  &lt;li&gt;IETFに参加するのはどんな人たちがいる？&lt;/li&gt;
  &lt;li&gt;個人で参加するには？&lt;/li&gt;
  &lt;li&gt;IETFでの雑談、ロビーイングの重要性&lt;/li&gt;
  &lt;li&gt;QUICって何？なぜ生まれたの？&lt;/li&gt;
  &lt;li&gt;Google QUICとIETF QUIC&lt;/li&gt;
  &lt;li&gt;HoL とは？&lt;/li&gt;
  &lt;li&gt;なぜQUICは、ユーザランドで実装しているのか？&lt;/li&gt;
  &lt;li&gt;TCP既存プロトコル vs QUIC(UDP)プロトコル&lt;/li&gt;
  &lt;li&gt;QUICが効果的に効くところ&lt;/li&gt;
  &lt;li&gt;通信事業者のミドルボックスの負荷、コネクション残存&lt;/li&gt;
  &lt;li&gt;通信事業者はQUICをどう見る？&lt;/li&gt;
  &lt;li&gt;ネットワークの硬直化(Ossification)&lt;/li&gt;
  &lt;li&gt;QUICの折り合いの付け所&lt;/li&gt;
  &lt;li&gt;QUICの将来の展望&lt;/li&gt;
  &lt;li&gt;QUICを追っかけるにはどうすればいい？&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;IETFって何？どんなところ？&lt;/li&gt;
  &lt;li&gt;RFCとは？&lt;/li&gt;
  &lt;li&gt;ハミングによるコンセンサス&lt;/li&gt;
  &lt;li&gt;IETFに参加するのはどんな人たちがいる？&lt;/li&gt;
  &lt;li&gt;個人で参加するには？&lt;/li&gt;
  &lt;li&gt;IETFでの雑談、ロビーイングの重要性&lt;/li&gt;
  &lt;li&gt;QUICって何？なぜ生まれたの？&lt;/li&gt;
  &lt;li&gt;Google QUICとIETF QUIC&lt;/li&gt;
  &lt;li&gt;HoL とは？&lt;/li&gt;
  &lt;li&gt;なぜQUICは、ユーザランドで実装しているのか？&lt;/li&gt;
  &lt;li&gt;TCP既存プロトコル vs QUIC(UDP)プロトコル&lt;/li&gt;
  &lt;li&gt;QUICが効果的に効くところ&lt;/li&gt;
  &lt;li&gt;通信事業者のミドルボックスの負荷、コネクション残存&lt;/li&gt;
  &lt;li&gt;通信事業者はQUICをどう見る？&lt;/li&gt;
  &lt;li&gt;ネットワークの硬直化(Ossification)&lt;/li&gt;
  &lt;li&gt;QUICの折り合いの付け所&lt;/li&gt;
  &lt;li&gt;QUICの将来の展望&lt;/li&gt;
  &lt;li&gt;QUICを追っかけるにはどうすればいい？&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>1. IETFとか、QUICとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>2</podcast:episode>
    </item>
    <item>
      <title>0. Fukabori.fmについて</title>
      <link>https://fukabori.fm/episode/0</link>
      <description>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;自己紹介&lt;/li&gt;
  &lt;li&gt;Podcastで今後話していくコンテンツについて&lt;/li&gt;
&lt;/ul&gt;</description>
      <guid isPermaLink="false">https://fukabori.fm/episode/0</guid>
      <enclosure url="https://r.pitpa.jp/episodes/01fhj2t7nfkw0k83446hwrna70.mp3" length="0" type="audio/mpeg"/>
      <pubDate>Sun, 13 May 2018 15:00:00 +0900</pubDate>
      <media:content url="https://r.pitpa.jp/episodes/01fhj2t7nfkw0k83446hwrna70.mp3" type="audio/mpeg">
        <media:player url="https://pitpa.jp/player/fukabori/episodes/3977/embedded"/>
      </media:content>
      <media:content url="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png" type="image/png"/>
      <itunes:author>iwashi</itunes:author>
      <itunes:image href="https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/image/logo.png"/>
      <itunes:duration>00:01:30</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;自己紹介&lt;/li&gt;
  &lt;li&gt;Podcastで今後話していくコンテンツについて&lt;/li&gt;
&lt;/ul&gt;</itunes:subtitle>
      <itunes:summary>&lt;h2 id="話したネタ"&gt;話したネタ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;自己紹介&lt;/li&gt;
  &lt;li&gt;Podcastで今後話していくコンテンツについて&lt;/li&gt;
&lt;/ul&gt;</itunes:summary>
      <itunes:title>0. Fukabori.fmについて</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <podcast:episode>1</podcast:episode>
    </item>
  </channel>
</rss>
