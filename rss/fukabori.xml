<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:art19="https://art19.com/xmlns/rss-extensions/1.0" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0/" version="2.0">
  <channel>
    <title>fukabori.fm</title>
    <description>
      <![CDATA[<p>技術・組織・マネジメントなどを深掘りして楽しむPodcastです。</p>]]>
    </description>
    <managingEditor>fukabori.fm@gmail.com (iwashi)</managingEditor>
    <copyright>© fukabori.fm</copyright>
    <generator>ART19</generator>
    <atom:link href="https://rss.art19.com/fukabori" rel="self" type="application/rss+xml"/>
    <link>https://art19.com/shows/fukabori</link>
    <itunes:new-feed-url>https://rss.art19.com/fukabori</itunes:new-feed-url>
    <itunes:owner>
      <itunes:name>iwashi</itunes:name>
      <itunes:email>fukabori.fm@gmail.com</itunes:email>
    </itunes:owner>
    <itunes:author>iwashi</itunes:author>
    <itunes:summary>
      <![CDATA[<p>技術・組織・マネジメントなどを深掘りして楽しむPodcastです。</p>]]>
    </itunes:summary>
    <language>ja</language>
    <itunes:explicit>no</itunes:explicit>
    <itunes:category text="Technology"/>
    <itunes:type>episodic</itunes:type>
    <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
    <image>
      <url>https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg</url>
      <link>https://art19.com/shows/fukabori</link>
      <title>fukabori.fm</title>
    </image>
    <item>
      <title>99. Podcastを編集する技術 w/ tomiyama</title>
      <description>
        <![CDATA[<p>PitPaの富山さんに、Podcastの編集、構成、音声品質の高め方、編集で使うエフェクトなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>Podcastの編集とは何か？</li><li>収録前の編集と収録後の編集</li><li>パンチラインを考える</li><li>収録後の編集はなぜ必要なのか？</li><li>聞きやすいPodcastとは？</li><li>具体的に編集では何をするのか？</li><li>編集で削る時間の目安</li><li>Podcastの冒頭にハイライトをつけるべきか、否か</li><li>フィラーをどれぐらい削るか？</li><li>「なんか」</li><li>プロとしてPodcastをどれぐらい聴いている？</li><li>間の切り方・残し方・付け加え方</li><li>編集に使うソフトウェア</li><li>コンプレッサー、ノイズ処理の順番</li><li>イコライザの適用有無</li><li>ラウドネスの調整</li><li>Podcastを収録する機材</li><li>機材よりも環境</li><li>iPhoneで収録する場合に気をつけること</li><li><a href="https://pitpa.jp/" rel="noopener noreferrer" target="_blank">PitPa</a></li><li><a href="https://podcasts.apple.com/us/podcast/id1631989007" rel="noopener noreferrer" target="_blank">オウンドポッドキャストインタビュー by PitPa</a></li><li><a href="https://connpass.com/event/288913/" rel="noopener noreferrer" target="_blank">fukabori.fm ep.100 公開収録(2023/7/24)の募集ページ</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>99. Podcastを編集する技術 w/ tomiyama</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>PitPaの富山さんに、Podcastの編集、構成、音声品質の高め方、編集で使うエフェクトなどについて語っていただいたエピソードです。

話したネタPodcastの編集とは何か？収録前の編集と収録後の編集パンチラインを考える収録後の編集はなぜ必要なのか？聞きやすいPodcastとは？具体的に編集では何をするのか？編集で削る時間の目安Podcastの冒頭にハイライトをつけるべきか、否かフィラーをどれぐらい削るか？「なんか」プロとしてPodcastをどれぐらい聴いている？間の切り方・残し方・付け加え方編集に使うソフトウェアコンプレッサー、ノイズ処理の順番イコライザの適用有無ラウドネスの調整Podcastを収録する機材機材よりも環境iPhoneで収録する場合に気をつけることPitPaオウンドポッドキャストインタビュー by PitPafukabori.fm ep.100 公開収録(2023/7/24)の募集ページ


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>PitPaの富山さんに、Podcastの編集、構成、音声品質の高め方、編集で使うエフェクトなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>Podcastの編集とは何か？</li><li>収録前の編集と収録後の編集</li><li>パンチラインを考える</li><li>収録後の編集はなぜ必要なのか？</li><li>聞きやすいPodcastとは？</li><li>具体的に編集では何をするのか？</li><li>編集で削る時間の目安</li><li>Podcastの冒頭にハイライトをつけるべきか、否か</li><li>フィラーをどれぐらい削るか？</li><li>「なんか」</li><li>プロとしてPodcastをどれぐらい聴いている？</li><li>間の切り方・残し方・付け加え方</li><li>編集に使うソフトウェア</li><li>コンプレッサー、ノイズ処理の順番</li><li>イコライザの適用有無</li><li>ラウドネスの調整</li><li>Podcastを収録する機材</li><li>機材よりも環境</li><li>iPhoneで収録する場合に気をつけること</li><li><a href="https://pitpa.jp/" rel="noopener noreferrer" target="_blank">PitPa</a></li><li><a href="https://podcasts.apple.com/us/podcast/id1631989007" rel="noopener noreferrer" target="_blank">オウンドポッドキャストインタビュー by PitPa</a></li><li><a href="https://connpass.com/event/288913/" rel="noopener noreferrer" target="_blank">fukabori.fm ep.100 公開収録(2023/7/24)の募集ページ</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/V1MHY9bcTM1yys7yW9eY8cmhOMOmSiEqyDgar7k81Ww</guid>
      <pubDate>Tue, 11 Jul 2023 12:09:16 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:40:27</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/e9c04b5f-8e84-442d-9fd4-403ca56351a8.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="38838439"/>
    </item>
    <item>
      <title> 98. LLMを活用したソフトウェアアーキテクチャと代表的なユースケース w/ ryohtaka</title>
      <description>
        <![CDATA[<p>マイクロソフトの大髙さんに、LLMを活用したソフトウェアアーキテクチャ、langchain、LLM活用のコスト、代表的なユースケースなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>LLMを活用したソフトウェアアーキテクチャ</li><li><a href="https://zenn.dev/microsoft/articles/8974330fb534ef" rel="noopener noreferrer" target="_blank">Copilot Stack</a></li><li>Model/Orchestrator/Copilot</li><li>代表的なOrchestratorのフレームワーク</li><li><a href="https://github.com/hwchase17/langchain" rel="noopener noreferrer" target="_blank">langchaing</a></li><li><a href="https://github.com/microsoft/semantic-kernel" rel="noopener noreferrer" target="_blank">semantic-kernel</a></li><li>フレームワークの抽象度</li><li>デグレ探し・リグレッションテスト大変問題</li><li>GPT-4 のコストの話</li><li>チャット検索である必要性</li><li>クエリとチャットの逆転現象</li><li>検索の下地にあるデータが結局重要</li><li>参考：<a href="https://zenn.dev/microsoft/articles/ad14d45121abe7" rel="noopener noreferrer" target="_blank">チャット検索やRAGの話</a></li><li>エンベディングとコサイン類似度</li><li>参考：<a href="https://zenn.dev/microsoft/articles/6d4a04a6f45d4d" rel="noopener noreferrer" target="_blank">LangChain の Vectorstore として Azure Cache for Redis を使ってベクトルの格納と検索を行う</a></li><li>抽象化すると、LLMを活用したユースケースはどういうものが多い？</li><li>情報検索、情報分類、情報抽出</li><li>非構造化データから構造化データへ</li><li><a href="https://zenn.dev/microsoft/articles/b5fc78d3275b33" rel="noopener noreferrer" target="_blank">Azure OpenAI Service の GPT-4 を使ってギリシア神話に登場する神々の関係性を抽出してグラフデータベースに格納する</a></li><li><a href="https://build.microsoft.com/en-US/home" rel="noopener noreferrer" target="_blank">Microsoft Build 2023</a></li><li><a href="https://info.microsoft.com/JA-ADAI-CATALOG-FY23-06Jun-28-Microsoft-Build-Japan-Day2-SREVM14500_Catalog-Display-Page.html" rel="noopener noreferrer" target="_blank">Microsoft Build Japan</a></li><li><a href="https://zenn.dev/ryo117" rel="noopener noreferrer" target="_blank">ryohtakaのZenn</a></li><li><a href="https://zenn.dev/p/microsoft" rel="noopener noreferrer" target="_blank">ZennのMicrosoft Publication</a></li><li><a href="https://qiita.com/organizations/microsoft" rel="noopener noreferrer" target="_blank">QiitaのMicrosoft Organization</a></li></ul><p><br></p><p><strong>公開収録</strong></p><ul><li><a href="https://connpass.com/event/288913/" rel="noopener noreferrer" target="_blank">fukabori.fm ep.100 公開収録(2023/7/24)の募集ページ</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title> 98. LLMを活用したソフトウェアアーキテクチャと代表的なユースケース w/ ryohtaka</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>マイクロソフトの大髙さんに、LLMを活用したソフトウェアアーキテクチャ、langchain、LLM活用のコスト、代表的なユースケースなどについて語っていただいたエピソードです。

話したネタLLMを活用したソフトウェアアーキテクチャCopilot StackModel/Orchestrator/Copilot代表的なOrchestratorのフレームワークlangchaingsemantic-kernelフレームワークの抽象度デグレ探し・リグレッションテスト大変問題GPT-4 のコストの話チャット検索である必要性クエリとチャットの逆転現象検索の下地にあるデータが結局重要参考：チャット検索やRAGの話エンベディングとコサイン類似度参考：LangChain の Vectorstore として Azure Cache for Redis を使ってベクトルの格納と検索を行う抽象化すると、LLMを活用したユースケースはどういうものが多い？情報検索、情報分類、情報抽出非構造化データから構造化データへAzure OpenAI Service の GPT-4 を使ってギリシア神話に登場する神々の関係性を抽出してグラフデータベースに格納するMicrosoft Build 2023Microsoft Build JapanryohtakaのZennZennのMicrosoft PublicationQiitaのMicrosoft Organization


公開収録fukabori.fm ep.100 公開収録(2023/7/24)の募集ページ


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>マイクロソフトの大髙さんに、LLMを活用したソフトウェアアーキテクチャ、langchain、LLM活用のコスト、代表的なユースケースなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>LLMを活用したソフトウェアアーキテクチャ</li><li><a href="https://zenn.dev/microsoft/articles/8974330fb534ef" rel="noopener noreferrer" target="_blank">Copilot Stack</a></li><li>Model/Orchestrator/Copilot</li><li>代表的なOrchestratorのフレームワーク</li><li><a href="https://github.com/hwchase17/langchain" rel="noopener noreferrer" target="_blank">langchaing</a></li><li><a href="https://github.com/microsoft/semantic-kernel" rel="noopener noreferrer" target="_blank">semantic-kernel</a></li><li>フレームワークの抽象度</li><li>デグレ探し・リグレッションテスト大変問題</li><li>GPT-4 のコストの話</li><li>チャット検索である必要性</li><li>クエリとチャットの逆転現象</li><li>検索の下地にあるデータが結局重要</li><li>参考：<a href="https://zenn.dev/microsoft/articles/ad14d45121abe7" rel="noopener noreferrer" target="_blank">チャット検索やRAGの話</a></li><li>エンベディングとコサイン類似度</li><li>参考：<a href="https://zenn.dev/microsoft/articles/6d4a04a6f45d4d" rel="noopener noreferrer" target="_blank">LangChain の Vectorstore として Azure Cache for Redis を使ってベクトルの格納と検索を行う</a></li><li>抽象化すると、LLMを活用したユースケースはどういうものが多い？</li><li>情報検索、情報分類、情報抽出</li><li>非構造化データから構造化データへ</li><li><a href="https://zenn.dev/microsoft/articles/b5fc78d3275b33" rel="noopener noreferrer" target="_blank">Azure OpenAI Service の GPT-4 を使ってギリシア神話に登場する神々の関係性を抽出してグラフデータベースに格納する</a></li><li><a href="https://build.microsoft.com/en-US/home" rel="noopener noreferrer" target="_blank">Microsoft Build 2023</a></li><li><a href="https://info.microsoft.com/JA-ADAI-CATALOG-FY23-06Jun-28-Microsoft-Build-Japan-Day2-SREVM14500_Catalog-Display-Page.html" rel="noopener noreferrer" target="_blank">Microsoft Build Japan</a></li><li><a href="https://zenn.dev/ryo117" rel="noopener noreferrer" target="_blank">ryohtakaのZenn</a></li><li><a href="https://zenn.dev/p/microsoft" rel="noopener noreferrer" target="_blank">ZennのMicrosoft Publication</a></li><li><a href="https://qiita.com/organizations/microsoft" rel="noopener noreferrer" target="_blank">QiitaのMicrosoft Organization</a></li></ul><p><br></p><p><strong>公開収録</strong></p><ul><li><a href="https://connpass.com/event/288913/" rel="noopener noreferrer" target="_blank">fukabori.fm ep.100 公開収録(2023/7/24)の募集ページ</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/A8QdVN63_WlvQ8nDXQbt_itzltQVU5wv9E0OM7I4xMY</guid>
      <pubDate>Sun, 02 Jul 2023 20:55:31 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:30:07</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/271ba557-f6e1-4a85-a72b-d0f74cadf38e.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="28916924"/>
    </item>
    <item>
      <title>97. プロンプトエンジニアリング w/ ryohtaka</title>
      <description>
        <![CDATA[<p>マイクロソフトの大髙さんに、プロンプトエンジニアリング、In-Context Learning、Chain of Thought、ReAct などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>おさらい：ChatGPTの裏側</li><li>プロンプトエンジニアリングとは？</li><li>In-Context Learning</li><li>X-Shot Learning (Zero-shot, One-shot, Few-shot)</li><li>Few-shot の例</li><li>Chain of Thought (CoT)</li><li>Few-shot CoT</li><li><a href="https://arxiv.org/abs/2303.08774" rel="noopener noreferrer" target="_blank">GPT-4 Technical Report</a></li><li>プロンプトエンジニアリングの根幹で共通していること</li><li>Self Consistency</li><li>Reasoning and Acting (ReAct)</li><li>ChatGPT Plugin</li><li>Retrieval Augmented Generation (RAG)</li></ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>97. プロンプトエンジニアリング w/ ryohtaka</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>マイクロソフトの大髙さんに、プロンプトエンジニアリング、In-Context Learning、Chain of Thought、ReAct などについて語っていただいたエピソードです。

話したネタおさらい：ChatGPTの裏側プロンプトエンジニアリングとは？In-Context LearningX-Shot Learning (Zero-shot, One-shot, Few-shot)Few-shot の例Chain of Thought (CoT)Few-shot CoTGPT-4 Technical Reportプロンプトエンジニアリングの根幹で共通していることSelf ConsistencyReasoning and Acting (ReAct)ChatGPT PluginRetrieval Augmented Generation (RAG)

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>マイクロソフトの大髙さんに、プロンプトエンジニアリング、In-Context Learning、Chain of Thought、ReAct などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>おさらい：ChatGPTの裏側</li><li>プロンプトエンジニアリングとは？</li><li>In-Context Learning</li><li>X-Shot Learning (Zero-shot, One-shot, Few-shot)</li><li>Few-shot の例</li><li>Chain of Thought (CoT)</li><li>Few-shot CoT</li><li><a href="https://arxiv.org/abs/2303.08774" rel="noopener noreferrer" target="_blank">GPT-4 Technical Report</a></li><li>プロンプトエンジニアリングの根幹で共通していること</li><li>Self Consistency</li><li>Reasoning and Acting (ReAct)</li><li>ChatGPT Plugin</li><li>Retrieval Augmented Generation (RAG)</li></ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/POeMQrBilJ0hGJKgZFaTLMHYpCi-oVTCaKUt-rHA5yQ</guid>
      <pubDate>Sun, 25 Jun 2023 20:53:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:30:20</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/c492887a-79f2-4eb6-9479-90bedadc46ad.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="29124231"/>
    </item>
    <item>
      <title>96. 組織デザイン w/ hamaken119</title>
      <description>
        <![CDATA[<p>MIMIGURIの濱脇さんに、組織デザイン、CULTIBASE School、能力定義表、報酬・評価制度との関連などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>組織デザインとは何か？</li><li>組織のハード面とソフト面は表裏一体</li><li>なぜ組織デザインは重要なのか？</li><li>組織課題の捉え方、言語化のためのアプローチ</li><li><a href="https://school.cultibase.jp/" rel="noopener noreferrer" target="_blank">CULTIBASE School</a>&nbsp;組織デザインコースの感想</li><li>組織デザイン研修の裏にある想いとは？</li><li>学びを抑圧しない研修進行</li><li>組織デザインコースの到達点とは？</li><li>能力定義表とは何か？</li><li>スキルマップ</li><li>能力定義・報酬・評価制度はなぜ分けて考えるべきか？</li><li>なぜ能力定義表が誕生するのか？</li><li>職能ごとのアンフェアさをどう解消するか？</li><li>能力定義表から事業戦略・中期経営計画までの背骨を通す</li><li>戦略・人員計画について、従業員全員が納得する必要があるのか？</li><li>能力定義表が上手く運用されている企業の特徴は？</li><li>能力定義表の見直し、はどのように進めるのか？</li><li>能力定義表へのValueの組み込み</li><li><a href="https://school.cultibase.jp/" rel="noopener noreferrer" target="_blank">CULTIBASE School</a></li><li>イベント:&nbsp;<a href="https://webinar-mimiguri.studio.site/" rel="noopener noreferrer" target="_blank">ヒトと組織に強い経営人材になるための『新時代の組織づくり』</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>96. 組織デザイン w/ hamaken119</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>MIMIGURIの濱脇さんに、組織デザイン、CULTIBASE School、能力定義表、報酬・評価制度との関連などについて語っていただいたエピソードです。

話したネタ組織デザインとは何か？組織のハード面とソフト面は表裏一体なぜ組織デザインは重要なのか？組織課題の捉え方、言語化のためのアプローチCULTIBASE School 組織デザインコースの感想組織デザイン研修の裏にある想いとは？学びを抑圧しない研修進行組織デザインコースの到達点とは？能力定義表とは何か？スキルマップ能力定義・報酬・評価制度はなぜ分けて考えるべきか？なぜ能力定義表が誕生するのか？職能ごとのアンフェアさをどう解消するか？能力定義表から事業戦略・中期経営計画までの背骨を通す戦略・人員計画について、従業員全員が納得する必要があるのか？能力定義表が上手く運用されている企業の特徴は？能力定義表の見直し、はどのように進めるのか？能力定義表へのValueの組み込みCULTIBASE Schoolイベント: ヒトと組織に強い経営人材になるための『新時代の組織づくり』


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>MIMIGURIの濱脇さんに、組織デザイン、CULTIBASE School、能力定義表、報酬・評価制度との関連などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>組織デザインとは何か？</li><li>組織のハード面とソフト面は表裏一体</li><li>なぜ組織デザインは重要なのか？</li><li>組織課題の捉え方、言語化のためのアプローチ</li><li><a href="https://school.cultibase.jp/" rel="noopener noreferrer" target="_blank">CULTIBASE School</a>&nbsp;組織デザインコースの感想</li><li>組織デザイン研修の裏にある想いとは？</li><li>学びを抑圧しない研修進行</li><li>組織デザインコースの到達点とは？</li><li>能力定義表とは何か？</li><li>スキルマップ</li><li>能力定義・報酬・評価制度はなぜ分けて考えるべきか？</li><li>なぜ能力定義表が誕生するのか？</li><li>職能ごとのアンフェアさをどう解消するか？</li><li>能力定義表から事業戦略・中期経営計画までの背骨を通す</li><li>戦略・人員計画について、従業員全員が納得する必要があるのか？</li><li>能力定義表が上手く運用されている企業の特徴は？</li><li>能力定義表の見直し、はどのように進めるのか？</li><li>能力定義表へのValueの組み込み</li><li><a href="https://school.cultibase.jp/" rel="noopener noreferrer" target="_blank">CULTIBASE School</a></li><li>イベント:&nbsp;<a href="https://webinar-mimiguri.studio.site/" rel="noopener noreferrer" target="_blank">ヒトと組織に強い経営人材になるための『新時代の組織づくり』</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/V5bCZM20pCN_AKOcria0kh0uT80-N4wHEMLBw-3oWms</guid>
      <pubDate>Thu, 01 Jun 2023 13:07:42 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:51:48</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/8afa4b87-78e6-4bca-bf4b-93c875151686.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="49737142"/>
    </item>
    <item>
      <title>95. Weights &amp; Biases and Organization Management w/ l2k</title>
      <description>
        <![CDATA[<p>Weights &amp; Biases 創業者であるLukas Biewaldさんをゲストに、MLOpsプラットフォーム、起業のきっかけ、GPT-4の活用例、多くの従業員の考えを合わせる方法、OKR運用、全社オフサイトイベントなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>What is “Weights &amp; Biases” as product?</li><li>MLOps Platform</li><li>Use "Weights &amp; Biases" for Kaggle</li><li>Why did you start “Weights &amp; Biases”? / Motivation?</li><li>To make ML in production easier</li><li>ML doesn't give you errors; quietly fails</li><li>Is there anything to find errors in ML?</li><li>How do you think of a hype about generative AI?</li><li>GPT-4 for code debugging</li><li>Any integration GPT-4 and "Weights &amp; Biases"</li><li>WandBot (<a href="https://wandb.ai/wandbot/wandbot_public/reports/WandBot-GPT-4-Powered-Chat-Support--Vmlldzo0MTE5MDM5" rel="noopener noreferrer" target="_blank">Report</a>,&nbsp;<a href="https://discord.com/invite/RgB8CPk2ce" rel="noopener noreferrer" target="_blank">Discord</a>)</li><li>Which way do you use to improve documentation, fine tuning or few shots?</li><li>Why "Weights &amp; Biases" boost the business in Japan?</li><li>How do you align your idea among employees?</li><li>Goal setting and OKR</li><li>How long do you spend OKR?</li><li>Blameless retrospectives</li><li>How do you prioritize things?</li><li>Fighting in goal planning</li><li>Book:&nbsp;<a href="https://amzn.to/3HQYgF8" rel="noopener noreferrer" target="_blank">The Five Dysfunctions of a Team: A Leadership Fable, 20th Anniversary Edition</a></li><li>翻訳書籍:&nbsp;<a href="https://amzn.to/44GpEzc" rel="noopener noreferrer" target="_blank">あなたのチームは、機能してますか？</a></li><li>How to build trust in company?</li><li>A lot of trusts comes from by knowing each other</li><li>Slack channel for gratitude</li><li>Company-wide of offsite event</li><li>Programs of the event</li><li>What's the most amazing thing you have learned in management or entrepreneurship?</li><li><a href="https://www.nextech-week.jp/spring/ja-jp.html" rel="noopener noreferrer" target="_blank">AI Expo (東京ビッグサイト 1F, 8-36, 5月10-12日)</a></li><li><a href="https://www.linkedin.com/company/weights-biases" rel="noopener noreferrer" target="_blank">Linkedin, Weights &amp; Biases</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>95. Weights &amp; Biases and Organization Management w/ l2k</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Weights &amp;amp; Biases 創業者であるLukas Biewaldさんをゲストに、MLOpsプラットフォーム、起業のきっかけ、GPT-4の活用例、多くの従業員の考えを合わせる方法、OKR運用、全社オフサイトイベントなどについて語っていただいたエピソードです。

話したネタWhat is “Weights &amp;amp; Biases” as product?MLOps PlatformUse "Weights &amp;amp; Biases" for KaggleWhy did you start “Weights &amp;amp; Biases”? / Motivation?To make ML in production easierML doesn't give you errors; quietly failsIs there anything to find errors in ML?How do you think of a hype about generative AI?GPT-4 for code debuggingAny integration GPT-4 and "Weights &amp;amp; Biases"WandBot (Report, Discord)Which way do you use to improve documentation, fine tuning or few shots?Why "Weights &amp;amp; Biases" boost the business in Japan?How do you align your idea among employees?Goal setting and OKRHow long do you spend OKR?Blameless retrospectivesHow do you prioritize things?Fighting in goal planningBook: The Five Dysfunctions of a Team: A Leadership Fable, 20th Anniversary Edition翻訳書籍: あなたのチームは、機能してますか？How to build trust in company?A lot of trusts comes from by knowing each otherSlack channel for gratitudeCompany-wide of offsite eventPrograms of the eventWhat's the most amazing thing you have learned in management or entrepreneurship?AI Expo (東京ビッグサイト 1F, 8-36, 5月10-12日)Linkedin, Weights &amp;amp; Biases


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Weights &amp; Biases 創業者であるLukas Biewaldさんをゲストに、MLOpsプラットフォーム、起業のきっかけ、GPT-4の活用例、多くの従業員の考えを合わせる方法、OKR運用、全社オフサイトイベントなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>What is “Weights &amp; Biases” as product?</li><li>MLOps Platform</li><li>Use "Weights &amp; Biases" for Kaggle</li><li>Why did you start “Weights &amp; Biases”? / Motivation?</li><li>To make ML in production easier</li><li>ML doesn't give you errors; quietly fails</li><li>Is there anything to find errors in ML?</li><li>How do you think of a hype about generative AI?</li><li>GPT-4 for code debugging</li><li>Any integration GPT-4 and "Weights &amp; Biases"</li><li>WandBot (<a href="https://wandb.ai/wandbot/wandbot_public/reports/WandBot-GPT-4-Powered-Chat-Support--Vmlldzo0MTE5MDM5" rel="noopener noreferrer" target="_blank">Report</a>,&nbsp;<a href="https://discord.com/invite/RgB8CPk2ce" rel="noopener noreferrer" target="_blank">Discord</a>)</li><li>Which way do you use to improve documentation, fine tuning or few shots?</li><li>Why "Weights &amp; Biases" boost the business in Japan?</li><li>How do you align your idea among employees?</li><li>Goal setting and OKR</li><li>How long do you spend OKR?</li><li>Blameless retrospectives</li><li>How do you prioritize things?</li><li>Fighting in goal planning</li><li>Book:&nbsp;<a href="https://amzn.to/3HQYgF8" rel="noopener noreferrer" target="_blank">The Five Dysfunctions of a Team: A Leadership Fable, 20th Anniversary Edition</a></li><li>翻訳書籍:&nbsp;<a href="https://amzn.to/44GpEzc" rel="noopener noreferrer" target="_blank">あなたのチームは、機能してますか？</a></li><li>How to build trust in company?</li><li>A lot of trusts comes from by knowing each other</li><li>Slack channel for gratitude</li><li>Company-wide of offsite event</li><li>Programs of the event</li><li>What's the most amazing thing you have learned in management or entrepreneurship?</li><li><a href="https://www.nextech-week.jp/spring/ja-jp.html" rel="noopener noreferrer" target="_blank">AI Expo (東京ビッグサイト 1F, 8-36, 5月10-12日)</a></li><li><a href="https://www.linkedin.com/company/weights-biases" rel="noopener noreferrer" target="_blank">Linkedin, Weights &amp; Biases</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/5EqWUb2GJKYxU4jupAk4Gb7TUeeQ00rtJcWAsndzd9c</guid>
      <pubDate>Mon, 08 May 2023 14:29:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:36:17</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/874ce34c-9cc8-48ac-aa90-4bc3713d499b.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="34833554"/>
    </item>
    <item>
      <title>94. エンジニアとビジネスの距離感の難しさ と データの民主化とこれからのAI組織 w/ vaaaaanquish</title>
      <description>
        <![CDATA[<p>vaaaaanquishさんをゲストに、エンジニアとビジネスの距離感の難しさ、データの民主化とこれからのAI組織、GPT-4による変化などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li><a href="https://note.com/vaaaaanquish/n/n22d5e8b067d9" rel="noopener noreferrer" target="_blank">エンジニアとビジネスの距離感の難しさ</a></li><li>記事を書いたモチベーションは？</li><li>要因としてのコモディティ化</li><li>ビジネスの変化による、個人の役割の変化</li><li>書籍:&nbsp;<a href="https://amzn.to/3ZSJ7cG" rel="noopener noreferrer" target="_blank">Engineering Management for the Rest of Us</a>&nbsp;// 訂正、発言で「Rest of Management」と言ってますが、本概要のタイトルが正しいです</li><li>書籍:&nbsp;<a href="https://amzn.to/41af94Q" rel="noopener noreferrer" target="_blank">経営×人材の超プロが教える人を選ぶ技術</a></li><li>ソース・オブ・エナジーと劣等感</li><li>負の側面を整理できていることの重要性</li><li><a href="https://note.com/vaaaaanquish/n/n228744f30bf3" rel="noopener noreferrer" target="_blank">データの民主化とこれからのAI組織</a></li><li>そもそも、多くのAI屋はこれまでに何をやってきたのか？</li><li>データエンジニア、データサイエンティスト、運用する人という役割</li><li>GPT-4の登場に伴い、2023年3月の時点で何が起きているのか？</li><li>大規模言語モデルによる変化</li><li>ドメインスペシフィックなモデルから汎用的なモデルへ</li><li>ペーパープロトなどの仮説検証の変化</li><li><a href="https://github.com/ggerganov/llama.cpp" rel="noopener noreferrer" target="_blank">llama.cpp</a></li><li>chatGPTによる既存のロールへの影響</li><li>投資するタイミングの変化</li><li>Transformer と スケーリング則</li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>94. エンジニアとビジネスの距離感の難しさ と データの民主化とこれからのAI組織 w/ vaaaaanquish</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>vaaaaanquishさんをゲストに、エンジニアとビジネスの距離感の難しさ、データの民主化とこれからのAI組織、GPT-4による変化などについて語っていただいたエピソードです。

話したネタエンジニアとビジネスの距離感の難しさ記事を書いたモチベーションは？要因としてのコモディティ化ビジネスの変化による、個人の役割の変化書籍: Engineering Management for the Rest of Us // 訂正、発言で「Rest of Management」と言ってますが、本概要のタイトルが正しいです書籍: 経営×人材の超プロが教える人を選ぶ技術ソース・オブ・エナジーと劣等感負の側面を整理できていることの重要性データの民主化とこれからのAI組織そもそも、多くのAI屋はこれまでに何をやってきたのか？データエンジニア、データサイエンティスト、運用する人という役割GPT-4の登場に伴い、2023年3月の時点で何が起きているのか？大規模言語モデルによる変化ドメインスペシフィックなモデルから汎用的なモデルへペーパープロトなどの仮説検証の変化llama.cppchatGPTによる既存のロールへの影響投資するタイミングの変化Transformer と スケーリング則


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>vaaaaanquishさんをゲストに、エンジニアとビジネスの距離感の難しさ、データの民主化とこれからのAI組織、GPT-4による変化などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li><a href="https://note.com/vaaaaanquish/n/n22d5e8b067d9" rel="noopener noreferrer" target="_blank">エンジニアとビジネスの距離感の難しさ</a></li><li>記事を書いたモチベーションは？</li><li>要因としてのコモディティ化</li><li>ビジネスの変化による、個人の役割の変化</li><li>書籍:&nbsp;<a href="https://amzn.to/3ZSJ7cG" rel="noopener noreferrer" target="_blank">Engineering Management for the Rest of Us</a>&nbsp;// 訂正、発言で「Rest of Management」と言ってますが、本概要のタイトルが正しいです</li><li>書籍:&nbsp;<a href="https://amzn.to/41af94Q" rel="noopener noreferrer" target="_blank">経営×人材の超プロが教える人を選ぶ技術</a></li><li>ソース・オブ・エナジーと劣等感</li><li>負の側面を整理できていることの重要性</li><li><a href="https://note.com/vaaaaanquish/n/n228744f30bf3" rel="noopener noreferrer" target="_blank">データの民主化とこれからのAI組織</a></li><li>そもそも、多くのAI屋はこれまでに何をやってきたのか？</li><li>データエンジニア、データサイエンティスト、運用する人という役割</li><li>GPT-4の登場に伴い、2023年3月の時点で何が起きているのか？</li><li>大規模言語モデルによる変化</li><li>ドメインスペシフィックなモデルから汎用的なモデルへ</li><li>ペーパープロトなどの仮説検証の変化</li><li><a href="https://github.com/ggerganov/llama.cpp" rel="noopener noreferrer" target="_blank">llama.cpp</a></li><li>chatGPTによる既存のロールへの影響</li><li>投資するタイミングの変化</li><li>Transformer と スケーリング則</li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/Sq_t05vQBKvP21hyQtW79x8lktJ_h4hZiEVoz0KPJhs</guid>
      <pubDate>Sun, 09 Apr 2023 20:49:33 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:30:20</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/b32e3761-c722-4ad7-9734-a568d2533c46.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="29130919"/>
    </item>
    <item>
      <title>93. エンジニア組織の熱量 w/ vaaaaanquish</title>
      <description>
        <![CDATA[<p>vaaaaanquishさんをゲストに、エンジニア組織の熱量とその重要性、熱量の高い組織の作り方などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li><a href="https://note.com/vaaaaanquish/n/n57bcccabd5e8" rel="noopener noreferrer" target="_blank">HRとして熱量を上げる</a></li><li>エンジニア組織の熱量とは何か？</li><li>技術とお金とハート</li><li>熱量はなぜ重要なのか？</li><li>熱量が高い組織では何が起こるのか？</li><li>反対に熱量が低い組織で起こること</li><li>熱量が低い組織で起こる典型的な症状</li><li>スタンスのない否定 と 無関心</li><li>熱量が伝播する、とは？</li><li>停滞して良いことは会社においてはない</li><li>熱量が高い組織・チームをどうやって作るのか？</li><li>個人としてやれること、組織としてやれること</li><li>実験的にやることを当たり前に</li><li>着火しているのか、消化しているのか定量的な指標でわかりにくい</li><li>モチベーションサーベイと熱量との関連</li><li>マネージャーとして着火させるための行動</li><li>即時性の重要性</li><li>個人が「改善したい」というタイミングをどう拾い上げるか？</li><li>人を入れ替えられない場合にどうする？</li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>93. エンジニア組織の熱量 w/ vaaaaanquish</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>vaaaaanquishさんをゲストに、エンジニア組織の熱量とその重要性、熱量の高い組織の作り方などについて語っていただいたエピソードです。

話したネタHRとして熱量を上げるエンジニア組織の熱量とは何か？技術とお金とハート熱量はなぜ重要なのか？熱量が高い組織では何が起こるのか？反対に熱量が低い組織で起こること熱量が低い組織で起こる典型的な症状スタンスのない否定 と 無関心熱量が伝播する、とは？停滞して良いことは会社においてはない熱量が高い組織・チームをどうやって作るのか？個人としてやれること、組織としてやれること実験的にやることを当たり前に着火しているのか、消化しているのか定量的な指標でわかりにくいモチベーションサーベイと熱量との関連マネージャーとして着火させるための行動即時性の重要性個人が「改善したい」というタイミングをどう拾い上げるか？人を入れ替えられない場合にどうする？


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>vaaaaanquishさんをゲストに、エンジニア組織の熱量とその重要性、熱量の高い組織の作り方などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li><a href="https://note.com/vaaaaanquish/n/n57bcccabd5e8" rel="noopener noreferrer" target="_blank">HRとして熱量を上げる</a></li><li>エンジニア組織の熱量とは何か？</li><li>技術とお金とハート</li><li>熱量はなぜ重要なのか？</li><li>熱量が高い組織では何が起こるのか？</li><li>反対に熱量が低い組織で起こること</li><li>熱量が低い組織で起こる典型的な症状</li><li>スタンスのない否定 と 無関心</li><li>熱量が伝播する、とは？</li><li>停滞して良いことは会社においてはない</li><li>熱量が高い組織・チームをどうやって作るのか？</li><li>個人としてやれること、組織としてやれること</li><li>実験的にやることを当たり前に</li><li>着火しているのか、消化しているのか定量的な指標でわかりにくい</li><li>モチベーションサーベイと熱量との関連</li><li>マネージャーとして着火させるための行動</li><li>即時性の重要性</li><li>個人が「改善したい」というタイミングをどう拾い上げるか？</li><li>人を入れ替えられない場合にどうする？</li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/aSYPo8B2mH-Ey8zkfPBY6mO0eO3r5ZvvFDj7mfrT1_s</guid>
      <pubDate>Sun, 02 Apr 2023 14:50:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:37:56</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/273e63ad-6ffe-418a-85ea-c5982b578ff3.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="36417619"/>
    </item>
    <item>
      <title>92. AWS上でモバイルコアネットワークを実装するということ w/ Oguma</title>
      <description>
        <![CDATA[<p>SORACOMの小熊さんをゲストに、SORACOMにおけるモバイルコアネットワークの自前実装 on AWSについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>ソラコムではモバイルネットワークコンポーネントをどのように自前で実装していったのか？</li><li>P-GW 、HSS、SMSC の順で実装していった</li><li>GTP(GPRS Tunneling Protocol) とは</li><li>パケットを転送する役割</li><li>P-GW をAWS上で構築するということ</li><li>HSS(3GではHLR)はどのように実装していった？</li><li>海外事業社との接続試験</li><li>golang実装によるHLRの開発</li><li>HLRで実装するプロトコル</li><li>IPの上にSCTP</li><li>SCTPの上に、SCCP、TCAP、MAP</li><li>ソラコムはSCTP上のプロトコルスタックも自前で書いている</li><li>ここまでのコンポーネントはすべてAWS上で開発している</li><li>AWS上でキャリアネットワークを開発する上で大変だったこと</li><li>ソラコムで利用している言語</li><li><a href="https://careers.soracom.jp/event" rel="noopener noreferrer" target="_blank">SORACOM オープンハウス</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>92. AWS上でモバイルコアネットワークを実装するということ w/ Oguma</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>SORACOMの小熊さんをゲストに、SORACOMにおけるモバイルコアネットワークの自前実装 on AWSについて語っていただいたエピソードです。

話したネタソラコムではモバイルネットワークコンポーネントをどのように自前で実装していったのか？P-GW 、HSS、SMSC の順で実装していったGTP(GPRS Tunneling Protocol) とはパケットを転送する役割P-GW をAWS上で構築するということHSS(3GではHLR)はどのように実装していった？海外事業社との接続試験golang実装によるHLRの開発HLRで実装するプロトコルIPの上にSCTPSCTPの上に、SCCP、TCAP、MAPソラコムはSCTP上のプロトコルスタックも自前で書いているここまでのコンポーネントはすべてAWS上で開発しているAWS上でキャリアネットワークを開発する上で大変だったことソラコムで利用している言語SORACOM オープンハウス


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>SORACOMの小熊さんをゲストに、SORACOMにおけるモバイルコアネットワークの自前実装 on AWSについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>ソラコムではモバイルネットワークコンポーネントをどのように自前で実装していったのか？</li><li>P-GW 、HSS、SMSC の順で実装していった</li><li>GTP(GPRS Tunneling Protocol) とは</li><li>パケットを転送する役割</li><li>P-GW をAWS上で構築するということ</li><li>HSS(3GではHLR)はどのように実装していった？</li><li>海外事業社との接続試験</li><li>golang実装によるHLRの開発</li><li>HLRで実装するプロトコル</li><li>IPの上にSCTP</li><li>SCTPの上に、SCCP、TCAP、MAP</li><li>ソラコムはSCTP上のプロトコルスタックも自前で書いている</li><li>ここまでのコンポーネントはすべてAWS上で開発している</li><li>AWS上でキャリアネットワークを開発する上で大変だったこと</li><li>ソラコムで利用している言語</li><li><a href="https://careers.soracom.jp/event" rel="noopener noreferrer" target="_blank">SORACOM オープンハウス</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/UdWHlkddn-z2osaeMoSDKOLEwSAhR8SLH3WemvWMts8</guid>
      <pubDate>Sun, 19 Mar 2023 21:45:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:26:28</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/82bdba70-57ea-4e8c-b78d-c789a160cdd4.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="25421949"/>
    </item>
    <item>
      <title> 91. モバイルコアネットワークの仕組み w/ Oguma</title>
      <description>
        <![CDATA[<p>SORACOMの小熊さんをゲストに、モバイルコアネットワークの概要、構成要素、トラフィックフロー、認証プロトコルなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>モバイルコアネットワークとは何か？</li><li>アクセスネットワークとコアネットワーク</li><li>モバイルコアネットワークの構成要素は？</li><li>MME (Mobility Management Entity)</li><li>SIM と eSIM</li><li>HSS (Home Subscriber Server)</li><li>SMSC (Short Message Service Center)</li><li>Packet Data Network</li><li>P-GW (PDN Gateway)</li><li>MVNO と MNO との違いは？</li><li>SIM発行の裏側で起きていることは？</li><li>SIM番号の製造番号</li><li>P-GW の処理能力は？</li><li>SORACOMのトラフィック特性</li><li>SIMの認証プロトコル・手順</li><li>インターネットトラフィックはMMEを経由する？</li><li>S-GW(Serving Gateway) と P-GW</li><li>APN(Access Point Name) とは何者？</li><li><a href="https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=3145" rel="noopener noreferrer" target="_blank">Procedures for the 5G System (5GS)</a></li><li>仕様書ごとに機能の名前は変わる</li><li>5Gアーキテクチャの方向性</li><li><a href="https://careers.soracom.jp/event" rel="noopener noreferrer" target="_blank">SORACOM オープンハウス</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title> 91. モバイルコアネットワークの仕組み w/ Oguma</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>SORACOMの小熊さんをゲストに、モバイルコアネットワークの概要、構成要素、トラフィックフロー、認証プロトコルなどについて語っていただいたエピソードです。

話したネタモバイルコアネットワークとは何か？アクセスネットワークとコアネットワークモバイルコアネットワークの構成要素は？MME (Mobility Management Entity)SIM と eSIMHSS (Home Subscriber Server)SMSC (Short Message Service Center)Packet Data NetworkP-GW (PDN Gateway)MVNO と MNO との違いは？SIM発行の裏側で起きていることは？SIM番号の製造番号P-GW の処理能力は？SORACOMのトラフィック特性SIMの認証プロトコル・手順インターネットトラフィックはMMEを経由する？S-GW(Serving Gateway) と P-GWAPN(Access Point Name) とは何者？Procedures for the 5G System (5GS)仕様書ごとに機能の名前は変わる5Gアーキテクチャの方向性SORACOM オープンハウス


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>SORACOMの小熊さんをゲストに、モバイルコアネットワークの概要、構成要素、トラフィックフロー、認証プロトコルなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>モバイルコアネットワークとは何か？</li><li>アクセスネットワークとコアネットワーク</li><li>モバイルコアネットワークの構成要素は？</li><li>MME (Mobility Management Entity)</li><li>SIM と eSIM</li><li>HSS (Home Subscriber Server)</li><li>SMSC (Short Message Service Center)</li><li>Packet Data Network</li><li>P-GW (PDN Gateway)</li><li>MVNO と MNO との違いは？</li><li>SIM発行の裏側で起きていることは？</li><li>SIM番号の製造番号</li><li>P-GW の処理能力は？</li><li>SORACOMのトラフィック特性</li><li>SIMの認証プロトコル・手順</li><li>インターネットトラフィックはMMEを経由する？</li><li>S-GW(Serving Gateway) と P-GW</li><li>APN(Access Point Name) とは何者？</li><li><a href="https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=3145" rel="noopener noreferrer" target="_blank">Procedures for the 5G System (5GS)</a></li><li>仕様書ごとに機能の名前は変わる</li><li>5Gアーキテクチャの方向性</li><li><a href="https://careers.soracom.jp/event" rel="noopener noreferrer" target="_blank">SORACOM オープンハウス</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xjpqJW_L5k_BqB36E5dmR5IzSRwiPXbIUV2bhJ9YbgA</guid>
      <pubDate>Fri, 10 Mar 2023 10:59:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:27:33</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/70685ddb-21aa-415d-90d0-6298f91a04ae.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="26460995"/>
    </item>
    <item>
      <title>90. Docs for Developers w/ Zachary Sarah Corleissen </title>
      <description>
        <![CDATA[<p>Docs for Developersの著者の1人であるSarahさんをゲストに、書籍の概要、書籍が解決する課題、テクニカルライティングの上達方法などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>翻訳書籍:&nbsp;<a href="https://www.amazon.co.jp/dp/4800590833" rel="noopener noreferrer" target="_blank">ユーザーの問題解決とプロダクトの成功を導く　エンジニアのためのドキュメントライティング</a></li><li>原著:&nbsp;<a href="https://amzn.to/3ELZW12" rel="noopener noreferrer" target="_blank">Docs for Developers: An Engineer’s Field Guide to Technical Writing</a></li><li>Abstract of "Docs for Developers"</li><li>Is there any training for students about tech writing in US?</li><li>What is Technical Communication?</li><li>What problems is this book going to solve?</li><li>Why is writing so hard for developers?</li><li>How to get out of the curse of knowledge</li><li>Examples of frictions</li><li>What's the best way to improve writing skill?</li><li>After reading this book, how to get skilled more?</li><li>Who did think of the story in this book?</li><li>Ein from Cowboy bebop</li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>90. Docs for Developers w/ Zachary Sarah Corleissen </itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>Docs for Developersの著者の1人であるSarahさんをゲストに、書籍の概要、書籍が解決する課題、テクニカルライティングの上達方法などについて語っていただいたエピソードです。

話したネタ翻訳書籍: ユーザーの問題解決とプロダクトの成功を導く　エンジニアのためのドキュメントライティング原著: Docs for Developers: An Engineer’s Field Guide to Technical WritingAbstract of "Docs for Developers"Is there any training for students about tech writing in US?What is Technical Communication?What problems is this book going to solve?Why is writing so hard for developers?How to get out of the curse of knowledgeExamples of frictionsWhat's the best way to improve writing skill?After reading this book, how to get skilled more?Who did think of the story in this book?Ein from Cowboy bebop


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Docs for Developersの著者の1人であるSarahさんをゲストに、書籍の概要、書籍が解決する課題、テクニカルライティングの上達方法などについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li>翻訳書籍:&nbsp;<a href="https://www.amazon.co.jp/dp/4800590833" rel="noopener noreferrer" target="_blank">ユーザーの問題解決とプロダクトの成功を導く　エンジニアのためのドキュメントライティング</a></li><li>原著:&nbsp;<a href="https://amzn.to/3ELZW12" rel="noopener noreferrer" target="_blank">Docs for Developers: An Engineer’s Field Guide to Technical Writing</a></li><li>Abstract of "Docs for Developers"</li><li>Is there any training for students about tech writing in US?</li><li>What is Technical Communication?</li><li>What problems is this book going to solve?</li><li>Why is writing so hard for developers?</li><li>How to get out of the curse of knowledge</li><li>Examples of frictions</li><li>What's the best way to improve writing skill?</li><li>After reading this book, how to get skilled more?</li><li>Who did think of the story in this book?</li><li>Ein from Cowboy bebop</li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/7Um8Wrga1gTY5tkcQIlm3MSsFWcR_w1PzjeBIoQlmGA</guid>
      <pubDate>Thu, 02 Mar 2023 15:59:55 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:29:36</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/1be2dbd4-5291-4afd-90e4-a8ec87166ff3.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="28416626"/>
    </item>
    <item>
      <title>89. 複数社のCTO経験から学ぶエンジニア組織マネジメント w/ BTO</title>
      <description>
        <![CDATA[<p>オープンロジCTOのBTOさんをゲストに複数社のCTO経験から学んだこと、エンジニア組織のマネジメント、大規模リファクタリングなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li><a href="https://speakerdeck.com/bto/shi-bai-karaxue-huensiniazu-zhi-lun" rel="noopener noreferrer" target="_blank">失敗から学ぶエンジニア組織論</a></li><li>1社目のCTOでの環境は？</li><li>1社目ではCTOとしてどういう業務をしていた？</li><li>エンジニア組織ではどのような事象が発生していた？</li><li>マネジメントをふりかえるきっかけは？</li><li>経験学習の実践 と 再現性</li><li>どうすれば経験学習ができるようになるか？</li><li>2社目で自身を取り巻く環境はどのような状況だったか？</li><li>エンジニア組織づくりで具体的にやっていたこととは？</li><li>役割の定義・分割、1on1、採用</li><li>1on1の目的は？</li><li>経験学習の促進、信頼関係の構築、課題の早期発見</li><li>ザイオンス効果</li><li>課題を上手く引き出すコツは？</li><li>「何か気になっていることはありますか？」</li><li>1on1の頻度は？</li><li>2社目のCTO経験として上手くいかなかったことは？</li><li>3社目では、CTOとしての活動は何を？</li><li>途中からエンジニア組織に入ったときに何からはじめるのか？</li><li>制約理論</li><li>書籍:&nbsp;ザ<a href="https://amzn.to/3m18AT2" rel="noopener noreferrer" target="_blank">・ゴール ― 企業の究極の目的とは何か</a></li><li>ボトルネックの特定が重要</li><li>どのように、課題を優先度付けしていくか？</li><li>カッツモデル</li><li>WIPの状態で周りに共有する</li><li>現職(4社目)のオープンロジに入社した理由は？</li><li>倉庫に関する業界課題とは？</li><li>オープンロジ社の技術課題は？</li><li>大きく複雑なクラスをどのように紐解いていくのか？</li><li>大掛かりなリファクタリングをやりきるコツは？</li><li>ゲリラ戦はだいたい上手くいかない</li><li>過去のCTO経験から、オープンロジで活かせていることは？</li><li><a href="https://corp.openlogi.com/recruit/" rel="noopener noreferrer" target="_blank">オープンロジ 採用サイト</a></li><li>カジュアル面談先:&nbsp;<a href="https://twitter.com/bto" rel="noopener noreferrer" target="_blank">@bto</a></li></ul><p><br></p><p><strong>エピソードスポンサー</strong></p><p><a href="https://corp.openlogi.com/" rel="noopener noreferrer" target="_blank">株式会社オープンロジ</a></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>89. 複数社のCTO経験から学ぶエンジニア組織マネジメント w/ BTO</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>オープンロジCTOのBTOさんをゲストに複数社のCTO経験から学んだこと、エンジニア組織のマネジメント、大規模リファクタリングなどについて語っていただいたエピソードです。

話したネタ失敗から学ぶエンジニア組織論1社目のCTOでの環境は？1社目ではCTOとしてどういう業務をしていた？エンジニア組織ではどのような事象が発生していた？マネジメントをふりかえるきっかけは？経験学習の実践 と 再現性どうすれば経験学習ができるようになるか？2社目で自身を取り巻く環境はどのような状況だったか？エンジニア組織づくりで具体的にやっていたこととは？役割の定義・分割、1on1、採用1on1の目的は？経験学習の促進、信頼関係の構築、課題の早期発見ザイオンス効果課題を上手く引き出すコツは？「何か気になっていることはありますか？」1on1の頻度は？2社目のCTO経験として上手くいかなかったことは？3社目では、CTOとしての活動は何を？途中からエンジニア組織に入ったときに何からはじめるのか？制約理論書籍: ザ・ゴール ― 企業の究極の目的とは何かボトルネックの特定が重要どのように、課題を優先度付けしていくか？カッツモデルWIPの状態で周りに共有する現職(4社目)のオープンロジに入社した理由は？倉庫に関する業界課題とは？オープンロジ社の技術課題は？大きく複雑なクラスをどのように紐解いていくのか？大掛かりなリファクタリングをやりきるコツは？ゲリラ戦はだいたい上手くいかない過去のCTO経験から、オープンロジで活かせていることは？オープンロジ 採用サイトカジュアル面談先: @bto


エピソードスポンサー

株式会社オープンロジ

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>オープンロジCTOのBTOさんをゲストに複数社のCTO経験から学んだこと、エンジニア組織のマネジメント、大規模リファクタリングなどについて語っていただいたエピソードです。</p><p><strong>話したネタ</strong></p><ul><li><a href="https://speakerdeck.com/bto/shi-bai-karaxue-huensiniazu-zhi-lun" rel="noopener noreferrer" target="_blank">失敗から学ぶエンジニア組織論</a></li><li>1社目のCTOでの環境は？</li><li>1社目ではCTOとしてどういう業務をしていた？</li><li>エンジニア組織ではどのような事象が発生していた？</li><li>マネジメントをふりかえるきっかけは？</li><li>経験学習の実践 と 再現性</li><li>どうすれば経験学習ができるようになるか？</li><li>2社目で自身を取り巻く環境はどのような状況だったか？</li><li>エンジニア組織づくりで具体的にやっていたこととは？</li><li>役割の定義・分割、1on1、採用</li><li>1on1の目的は？</li><li>経験学習の促進、信頼関係の構築、課題の早期発見</li><li>ザイオンス効果</li><li>課題を上手く引き出すコツは？</li><li>「何か気になっていることはありますか？」</li><li>1on1の頻度は？</li><li>2社目のCTO経験として上手くいかなかったことは？</li><li>3社目では、CTOとしての活動は何を？</li><li>途中からエンジニア組織に入ったときに何からはじめるのか？</li><li>制約理論</li><li>書籍:&nbsp;ザ<a href="https://amzn.to/3m18AT2" rel="noopener noreferrer" target="_blank">・ゴール ― 企業の究極の目的とは何か</a></li><li>ボトルネックの特定が重要</li><li>どのように、課題を優先度付けしていくか？</li><li>カッツモデル</li><li>WIPの状態で周りに共有する</li><li>現職(4社目)のオープンロジに入社した理由は？</li><li>倉庫に関する業界課題とは？</li><li>オープンロジ社の技術課題は？</li><li>大きく複雑なクラスをどのように紐解いていくのか？</li><li>大掛かりなリファクタリングをやりきるコツは？</li><li>ゲリラ戦はだいたい上手くいかない</li><li>過去のCTO経験から、オープンロジで活かせていることは？</li><li><a href="https://corp.openlogi.com/recruit/" rel="noopener noreferrer" target="_blank">オープンロジ 採用サイト</a></li><li>カジュアル面談先:&nbsp;<a href="https://twitter.com/bto" rel="noopener noreferrer" target="_blank">@bto</a></li></ul><p><br></p><p><strong>エピソードスポンサー</strong></p><p><a href="https://corp.openlogi.com/" rel="noopener noreferrer" target="_blank">株式会社オープンロジ</a></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/sJRdvu452hrwQ0pzRfgMorvGybrac4KeELZC2XOMQSs</guid>
      <pubDate>Wed, 22 Feb 2023 08:51:12 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:47:12</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/b41e4a2b-8710-48b0-a783-e3b0fe3a629e.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="45319314"/>
    </item>
    <item>
      <title>88. 数理モデル思考で紐解く RULE DESIGN - 組織と人の行動を科学する w/ 江崎貴裕</title>
      <description>
        <![CDATA[<p>江崎貴裕さんをゲストに、数理モデル思考で紐解くRULE DESIGNの概要、ルールデザインの失敗要因、ルールが機能する条件、などについて語っていただいたエピソードです。</p><p><br></p><p>話したネタ</p><ul><li>書籍:&nbsp;<a href="https://amzn.to/3E5iEk5" rel="noopener noreferrer" target="_blank">数理モデル思考で紐解く RULE DESIGN - 組織と人の行動を科学する</a></li><li>書籍の概要は？</li><li>なぜ、本書を書くに至ったのか？モチベーションはどこから？</li><li>本書で最も伝えたかったことは？</li><li>ルールは何のために必要なのか？</li><li>問題解決しようとすると最終的にルールが必要になる</li><li>放っておくと悪い状態になる、背景は？</li><li>囚人のジレンマ、投票行動</li><li>ルールデザインの失敗要因とは？</li><li>ルール内的要因とは？</li><li>個人的要因とは？</li><li>外発的動機づけを狙った結果、内発的動機が損なわれる事象</li><li>会社内でどのように人を報奨すればよいのか？</li><li>集団的要因とは？</li><li>環境的要因とは？</li><li>どうすれば上手く機能するルールを作れるのか？</li><li>目的、介入方法、ロジック、運用 の4要素が必要</li><li>課題提起をした人の業務が増えてしんどくなる問題にどう対応する？</li><li>情報を作る側、従う人側で一緒にルールを作るのが重要</li><li>ルールの策定経緯が見える状態になることが重要</li><li>ルールの策定経緯が分からないと、上手くいかない状態でも直しにくい</li><li>大量に増えすぎたチェック項目への対応</li><li>社内でITリテラシに差がある場合のルールデザイン</li><li>定量指標に対する考え方</li><li>KPIに対する抜け道がないこと</li><li><a href="https://infonerv.com/recruit/" rel="noopener noreferrer" target="_blank">株式会社infonervの求人情報</a></li></ul><p><br></p><p>訂正：冒頭で「89回」といっておりますが、「88回」の誤りです。</p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>88. 数理モデル思考で紐解く RULE DESIGN - 組織と人の行動を科学する w/ 江崎貴裕</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>江崎貴裕さんをゲストに、数理モデル思考で紐解くRULE DESIGNの概要、ルールデザインの失敗要因、ルールが機能する条件、などについて語っていただいたエピソードです。




話したネタ書籍: 数理モデル思考で紐解く RULE DESIGN - 組織と人の行動を科学する書籍の概要は？なぜ、本書を書くに至ったのか？モチベーションはどこから？本書で最も伝えたかったことは？ルールは何のために必要なのか？問題解決しようとすると最終的にルールが必要になる放っておくと悪い状態になる、背景は？囚人のジレンマ、投票行動ルールデザインの失敗要因とは？ルール内的要因とは？個人的要因とは？外発的動機づけを狙った結果、内発的動機が損なわれる事象会社内でどのように人を報奨すればよいのか？集団的要因とは？環境的要因とは？どうすれば上手く機能するルールを作れるのか？目的、介入方法、ロジック、運用 の4要素が必要課題提起をした人の業務が増えてしんどくなる問題にどう対応する？情報を作る側、従う人側で一緒にルールを作るのが重要ルールの策定経緯が見える状態になることが重要ルールの策定経緯が分からないと、上手くいかない状態でも直しにくい大量に増えすぎたチェック項目への対応社内でITリテラシに差がある場合のルールデザイン定量指標に対する考え方KPIに対する抜け道がないこと株式会社infonervの求人情報


訂正：冒頭で「89回」といっておりますが、「88回」の誤りです。

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>江崎貴裕さんをゲストに、数理モデル思考で紐解くRULE DESIGNの概要、ルールデザインの失敗要因、ルールが機能する条件、などについて語っていただいたエピソードです。</p><p><br></p><p>話したネタ</p><ul><li>書籍:&nbsp;<a href="https://amzn.to/3E5iEk5" rel="noopener noreferrer" target="_blank">数理モデル思考で紐解く RULE DESIGN - 組織と人の行動を科学する</a></li><li>書籍の概要は？</li><li>なぜ、本書を書くに至ったのか？モチベーションはどこから？</li><li>本書で最も伝えたかったことは？</li><li>ルールは何のために必要なのか？</li><li>問題解決しようとすると最終的にルールが必要になる</li><li>放っておくと悪い状態になる、背景は？</li><li>囚人のジレンマ、投票行動</li><li>ルールデザインの失敗要因とは？</li><li>ルール内的要因とは？</li><li>個人的要因とは？</li><li>外発的動機づけを狙った結果、内発的動機が損なわれる事象</li><li>会社内でどのように人を報奨すればよいのか？</li><li>集団的要因とは？</li><li>環境的要因とは？</li><li>どうすれば上手く機能するルールを作れるのか？</li><li>目的、介入方法、ロジック、運用 の4要素が必要</li><li>課題提起をした人の業務が増えてしんどくなる問題にどう対応する？</li><li>情報を作る側、従う人側で一緒にルールを作るのが重要</li><li>ルールの策定経緯が見える状態になることが重要</li><li>ルールの策定経緯が分からないと、上手くいかない状態でも直しにくい</li><li>大量に増えすぎたチェック項目への対応</li><li>社内でITリテラシに差がある場合のルールデザイン</li><li>定量指標に対する考え方</li><li>KPIに対する抜け道がないこと</li><li><a href="https://infonerv.com/recruit/" rel="noopener noreferrer" target="_blank">株式会社infonervの求人情報</a></li></ul><p><br></p><p>訂正：冒頭で「89回」といっておりますが、「88回」の誤りです。</p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/NwAqJanc6k_vLGzjdx2_1kaAYKQEgR8_Axhi9ah-30A</guid>
      <pubDate>Mon, 13 Feb 2023 21:24:40 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:44:13</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/9e441ce2-91ff-4e8e-a5e7-f5f012b4d0ff.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="42461309"/>
    </item>
    <item>
      <title>87. Streaming Telemetry w/ watal_i27e </title>
      <description>
        <![CDATA[<p>watal_i27eさんをゲストに、Telemetryの種類、SNMPの課題、Streaming Telemetryなどについて語っていただいたエピソードです。</p><ul><li>なぜネットワーク監視が必要なのか？</li><li>Telemetryの3種類</li><li>従来はどのようにネットワーク監視をしていたのか？</li><li>SNMP (Simple Network Management Protocol)</li><li>SNMPでは機器の管理・情報収集はどうやっていた？</li><li>trapとpolling</li><li>MIB (Management Information Base)</li><li>標準MIBと拡張MIB</li><li>SNMPは何が課題だったのか？</li><li>そもそもTelemtryとは？</li><li>遠隔からなにかを測定すること</li><li>Streaming Telemtryの特徴とは？</li><li>トランスポートレイヤのプロトコルは何を使う？</li><li>Pub/Sub モデル</li><li>疎結合によるアーキテクチャ上の利点</li><li><a href="https://datatracker.ietf.org/doc/rfc9232/" rel="noopener noreferrer" target="_blank">RFC9232</a></li><li>ネットワーク機器側もgRPC実装が進んでいる</li><li>Subscriber側の実装はどうなっている？</li><li>OpenConfigとは？</li><li>YANG(Yet Another Next Generation)とは？</li><li>watalさんは今日のようなテーマをどう情報収集されている？</li><li><a href="https://www.janog.gr.jp/" rel="noopener noreferrer" target="_blank">JANOG(JApan Network Operators' Group)</a></li><li>今後の展望</li><li><a href="https://hrmos.co/pages/nttcom0033/jobs/1692786" rel="noopener noreferrer" target="_blank">一緒に働ける方を募集中: 次世代キャリアネットワークサービスの開発エンジニア</a></li><li><a href="https://enog.jp/archives/2657" rel="noopener noreferrer" target="_blank">ENOG(Echigo Network Operators' Group)</a></li></ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>87. Streaming Telemetry w/ watal_i27e </itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>watal_i27eさんをゲストに、Telemetryの種類、SNMPの課題、Streaming Telemetryなどについて語っていただいたエピソードです。なぜネットワーク監視が必要なのか？Telemetryの3種類従来はどのようにネットワーク監視をしていたのか？SNMP (Simple Network Management Protocol)SNMPでは機器の管理・情報収集はどうやっていた？trapとpollingMIB (Management Information Base)標準MIBと拡張MIBSNMPは何が課題だったのか？そもそもTelemtryとは？遠隔からなにかを測定することStreaming Telemtryの特徴とは？トランスポートレイヤのプロトコルは何を使う？Pub/Sub モデル疎結合によるアーキテクチャ上の利点RFC9232ネットワーク機器側もgRPC実装が進んでいるSubscriber側の実装はどうなっている？OpenConfigとは？YANG(Yet Another Next Generation)とは？watalさんは今日のようなテーマをどう情報収集されている？JANOG(JApan Network Operators' Group)今後の展望一緒に働ける方を募集中: 次世代キャリアネットワークサービスの開発エンジニアENOG(Echigo Network Operators' Group)

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>watal_i27eさんをゲストに、Telemetryの種類、SNMPの課題、Streaming Telemetryなどについて語っていただいたエピソードです。</p><ul><li>なぜネットワーク監視が必要なのか？</li><li>Telemetryの3種類</li><li>従来はどのようにネットワーク監視をしていたのか？</li><li>SNMP (Simple Network Management Protocol)</li><li>SNMPでは機器の管理・情報収集はどうやっていた？</li><li>trapとpolling</li><li>MIB (Management Information Base)</li><li>標準MIBと拡張MIB</li><li>SNMPは何が課題だったのか？</li><li>そもそもTelemtryとは？</li><li>遠隔からなにかを測定すること</li><li>Streaming Telemtryの特徴とは？</li><li>トランスポートレイヤのプロトコルは何を使う？</li><li>Pub/Sub モデル</li><li>疎結合によるアーキテクチャ上の利点</li><li><a href="https://datatracker.ietf.org/doc/rfc9232/" rel="noopener noreferrer" target="_blank">RFC9232</a></li><li>ネットワーク機器側もgRPC実装が進んでいる</li><li>Subscriber側の実装はどうなっている？</li><li>OpenConfigとは？</li><li>YANG(Yet Another Next Generation)とは？</li><li>watalさんは今日のようなテーマをどう情報収集されている？</li><li><a href="https://www.janog.gr.jp/" rel="noopener noreferrer" target="_blank">JANOG(JApan Network Operators' Group)</a></li><li>今後の展望</li><li><a href="https://hrmos.co/pages/nttcom0033/jobs/1692786" rel="noopener noreferrer" target="_blank">一緒に働ける方を募集中: 次世代キャリアネットワークサービスの開発エンジニア</a></li><li><a href="https://enog.jp/archives/2657" rel="noopener noreferrer" target="_blank">ENOG(Echigo Network Operators' Group)</a></li></ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/xr_ObVv21N3sOCBfyEWfOx9hPxR-rshh4FZKzD1ZdYA</guid>
      <pubDate>Mon, 06 Feb 2023 19:36:37 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:32:33</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/319421e5-1b2f-4b5b-8eee-c079cd22c928.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="31249554"/>
    </item>
    <item>
      <title>86. 技術広報 w/ hsbt</title>
      <description>
        <![CDATA[<p><br></p><ul><li><a href="https://www.hsbt.org/diary/20221207.html" rel="noopener noreferrer" target="_blank">技術広報とは何か、について自分なりのまとめ</a></li><li>技術広報とは何か？</li><li>プロダクトの広報と技術広報との違い</li><li>ブランドを確立する嬉しさとは？</li><li>ブランドは複利である</li><li>技術組織に対するブランドとは何か？</li><li>技術広報が増えている背景とは？</li><li>技術広報はやることが多く、形式化・体系化されていない</li><li>広報とのスキルセットの違いは？</li><li>プロダクト広報と同じ手段を用いてしまうと危うい</li><li>技術広報の具体的な活動例とは？</li><li>開発組織のMission/Vision/Value</li><li>外に発信する前に社内を確認する</li><li>良い組織を作るために意識されていたことは？</li><li>プロダクト・ユーザーと向き合う</li><li>人の素直さ</li><li>ブランディングモンスターとは？</li><li><a href="https://andpad.co.jp/recruit/" rel="noopener noreferrer" target="_blank">株式会社アンドパッド 採用情報</a></li><li><a href="https://engineer.andpad.co.jp/" rel="noopener noreferrer" target="_blank">株式会社アンドパッド エンジニア採用サイト</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>86. 技術広報 w/ hsbt</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>
技術広報とは何か、について自分なりのまとめ技術広報とは何か？プロダクトの広報と技術広報との違いブランドを確立する嬉しさとは？ブランドは複利である技術組織に対するブランドとは何か？技術広報が増えている背景とは？技術広報はやることが多く、形式化・体系化されていない広報とのスキルセットの違いは？プロダクト広報と同じ手段を用いてしまうと危うい技術広報の具体的な活動例とは？開発組織のMission/Vision/Value外に発信する前に社内を確認する良い組織を作るために意識されていたことは？プロダクト・ユーザーと向き合う人の素直さブランディングモンスターとは？株式会社アンドパッド 採用情報株式会社アンドパッド エンジニア採用サイト


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p><br></p><ul><li><a href="https://www.hsbt.org/diary/20221207.html" rel="noopener noreferrer" target="_blank">技術広報とは何か、について自分なりのまとめ</a></li><li>技術広報とは何か？</li><li>プロダクトの広報と技術広報との違い</li><li>ブランドを確立する嬉しさとは？</li><li>ブランドは複利である</li><li>技術組織に対するブランドとは何か？</li><li>技術広報が増えている背景とは？</li><li>技術広報はやることが多く、形式化・体系化されていない</li><li>広報とのスキルセットの違いは？</li><li>プロダクト広報と同じ手段を用いてしまうと危うい</li><li>技術広報の具体的な活動例とは？</li><li>開発組織のMission/Vision/Value</li><li>外に発信する前に社内を確認する</li><li>良い組織を作るために意識されていたことは？</li><li>プロダクト・ユーザーと向き合う</li><li>人の素直さ</li><li>ブランディングモンスターとは？</li><li><a href="https://andpad.co.jp/recruit/" rel="noopener noreferrer" target="_blank">株式会社アンドパッド 採用情報</a></li><li><a href="https://engineer.andpad.co.jp/" rel="noopener noreferrer" target="_blank">株式会社アンドパッド エンジニア採用サイト</a></li></ul><p><br></p><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">gid://art19-episode-locator/V0/D97tx1IwQPJO6L81NZoiMB1Mq8g86dY8i5Wyh6ncARE</guid>
      <pubDate>Thu, 05 Jan 2023 23:33:26 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:41:27</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/f983314d-15d9-41a6-9687-4c05d9aa854b.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="39800999"/>
    </item>
    <item>
      <title>85. サーバーレス w/ Keisuke69</title>
      <description>
        <![CDATA[<p>Keisuke69さんをゲストに、サーバーレス、サーバーレスやFaaSの使い所、コミュニティの盛り上げ方、AWS re:invent 2022 などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>サーバーレスとは何か？</li>
<li>AWS サーバーレススペシャリスト 第1号</li>
<li>西谷さんがサーバーレスに感銘を受けたポイント</li>
<li>Function as a Service</li>
<li>IaaS、CaaS、FaaS の違い</li>
<li>AWS Lambda の裏側の実装</li>
<li>Edgeで動作するサーバーレスコンピューティング</li>
<li>Aurora Serverless と OpenSearch Serverless</li>
<li>サーバーレスが有効なパターン、アーキテクチャ</li>
<li>イベントドリブンなシステム</li>
<li>サービス間をつなぐGlue Code</li>
<li>関数的に使うのがわかりやすい</li>
<li>ピタゴラスイッチでのメタファー</li>
<li>ピタゴラ装置153番のマーチ</li>
<li>サーバーレスで実装しないほうが良いものは？</li>
<li>日本でサーバーレス(FaaS)を扱えるエンジニアの数は多い？</li>
<li>情報量は技術選定の要素となる</li>
<li>コミュニテイを盛り上げる方法は？</li>
<li>AWS re:Invent 2022</li>
<li>AWS Lambda SnapStart と AWS Application Composer</li>
<li>サーバーレス(FaaS)での開発を取り巻く課題</li>
<li>Serverless Framework や AWS Chalice</li>
<li>FaaSのCI/CDやテスト周りはどうしている？</li>
<li>サーバーレスに残るミッシングピースとは？</li>
<li>今後のサーバーレスはどのように進化していく？</li>
<li>サーバーレスとSaaSとの境界</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>85. サーバーレス w/ Keisuke69</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;Keisuke69さんをゲストに、サーバーレス、サーバーレスやFaaSの使い所、コミュニティの盛り上げ方、AWS re:invent 2022 などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;サーバーレスとは何か？&lt;/li&gt;
&lt;li&gt;AWS サーバーレススペシャリスト 第1号&lt;/li&gt;
&lt;li&gt;西谷さんがサーバーレスに感銘を受けたポイント&lt;/li&gt;
&lt;li&gt;Function as a Service&lt;/li&gt;
&lt;li&gt;IaaS、CaaS、FaaS の違い&lt;/li&gt;
&lt;li&gt;AWS Lambda の裏側の実装&lt;/li&gt;
&lt;li&gt;Edgeで動作するサーバーレスコンピューティング&lt;/li&gt;
&lt;li&gt;Aurora Serverless と OpenSearch Serverless&lt;/li&gt;
&lt;li&gt;サーバーレスが有効なパターン、アーキテクチャ&lt;/li&gt;
&lt;li&gt;イベントドリブンなシステム&lt;/li&gt;
&lt;li&gt;サービス間をつなぐGlue Code&lt;/li&gt;
&lt;li&gt;関数的に使うのがわかりやすい&lt;/li&gt;
&lt;li&gt;ピタゴラスイッチでのメタファー&lt;/li&gt;
&lt;li&gt;ピタゴラ装置153番のマーチ&lt;/li&gt;
&lt;li&gt;サーバーレスで実装しないほうが良いものは？&lt;/li&gt;
&lt;li&gt;日本でサーバーレス(FaaS)を扱えるエンジニアの数は多い？&lt;/li&gt;
&lt;li&gt;情報量は技術選定の要素となる&lt;/li&gt;
&lt;li&gt;コミュニテイを盛り上げる方法は？&lt;/li&gt;
&lt;li&gt;AWS re:Invent 2022&lt;/li&gt;
&lt;li&gt;AWS Lambda SnapStart と AWS Application Composer&lt;/li&gt;
&lt;li&gt;サーバーレス(FaaS)での開発を取り巻く課題&lt;/li&gt;
&lt;li&gt;Serverless Framework や AWS Chalice&lt;/li&gt;
&lt;li&gt;FaaSのCI/CDやテスト周りはどうしている？&lt;/li&gt;
&lt;li&gt;サーバーレスに残るミッシングピースとは？&lt;/li&gt;
&lt;li&gt;今後のサーバーレスはどのように進化していく？&lt;/li&gt;
&lt;li&gt;サーバーレスとSaaSとの境界&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>Keisuke69さんをゲストに、サーバーレス、サーバーレスやFaaSの使い所、コミュニティの盛り上げ方、AWS re:invent 2022 などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>サーバーレスとは何か？</li>
<li>AWS サーバーレススペシャリスト 第1号</li>
<li>西谷さんがサーバーレスに感銘を受けたポイント</li>
<li>Function as a Service</li>
<li>IaaS、CaaS、FaaS の違い</li>
<li>AWS Lambda の裏側の実装</li>
<li>Edgeで動作するサーバーレスコンピューティング</li>
<li>Aurora Serverless と OpenSearch Serverless</li>
<li>サーバーレスが有効なパターン、アーキテクチャ</li>
<li>イベントドリブンなシステム</li>
<li>サービス間をつなぐGlue Code</li>
<li>関数的に使うのがわかりやすい</li>
<li>ピタゴラスイッチでのメタファー</li>
<li>ピタゴラ装置153番のマーチ</li>
<li>サーバーレスで実装しないほうが良いものは？</li>
<li>日本でサーバーレス(FaaS)を扱えるエンジニアの数は多い？</li>
<li>情報量は技術選定の要素となる</li>
<li>コミュニテイを盛り上げる方法は？</li>
<li>AWS re:Invent 2022</li>
<li>AWS Lambda SnapStart と AWS Application Composer</li>
<li>サーバーレス(FaaS)での開発を取り巻く課題</li>
<li>Serverless Framework や AWS Chalice</li>
<li>FaaSのCI/CDやテスト周りはどうしている？</li>
<li>サーバーレスに残るミッシングピースとは？</li>
<li>今後のサーバーレスはどのように進化していく？</li>
<li>サーバーレスとSaaSとの境界</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/086_ebZYb.mp3</guid>
      <pubDate>Tue, 13 Dec 2022 22:11:30 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:50:37</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/0154171e-8b07-4a06-8db1-f5c849cd4f37.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="48593188"/>
    </item>
    <item>
      <title>84. 技術の教え方・技術研修 w/ kakakakakku</title>
      <description>
        <![CDATA[<p>kakakakakkuさんをゲストに、技術研修、成人教育、研修中の場・雰囲気作り、研修コンテンツの設計などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>難解な技術を教えるときに何を考えているか？</li>
<li>成人教育と幼児教育の違いは？</li>
<li>依存型の学び、経験学習、課題中心</li>
<li>インストラクショナルデザイン</li>
<li>経験学習とは何か？</li>
<li>オンラインで静まりかえることへの対応</li>
<li>雰囲気を作る、クローズドクエスチョンを利用する</li>
<li>研修の雰囲気をどうやって作るか？</li>
<li>質問のチャネルを複数用意する</li>
<li>研修の場があったまっていることをどう判断するか？</li>
<li>研修講師側のデバイス、IT環境</li>
<li>研修へ参加する生徒は主体的な人ばかりではないのでは？</li>
<li>高速道路という役割</li>
<li>周りに感化されて主体的になってくる</li>
<li>研修が終わった後に学びが続くようにするためには？</li>
<li>反転学習とする、上司と参加目的を調整・会話しておく</li>
<li>講義のアジェンダ、ストーリー、内容の設計で気をつけていることは？</li>
<li>講義、ハンズオン、経験から引き出す時間の配分は？</li>
<li>オンライン研修参加者の集中を保つこつは？</li>
<li>kakkuさんの研修の評価が高い要因は？</li>
<li>実務経験、知識の幅、心地よい研修</li>
<li>研修設計は、初日、2日目などでスタイルを変えていく？</li>
<li>過去の研修で、研修途中で教え方を大幅に変えたことは？</li>
<li>4年間、ブログを毎週かかさずに書き続けられた要因は？</li>
<li>新しい技術の種をどうやって見つけている？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>84. 技術の教え方・技術研修 w/ kakakakakku</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;kakakakakkuさんをゲストに、技術研修、成人教育、研修中の場・雰囲気作り、研修コンテンツの設計などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;難解な技術を教えるときに何を考えているか？&lt;/li&gt;
&lt;li&gt;成人教育と幼児教育の違いは？&lt;/li&gt;
&lt;li&gt;依存型の学び、経験学習、課題中心&lt;/li&gt;
&lt;li&gt;インストラクショナルデザイン&lt;/li&gt;
&lt;li&gt;経験学習とは何か？&lt;/li&gt;
&lt;li&gt;オンラインで静まりかえることへの対応&lt;/li&gt;
&lt;li&gt;雰囲気を作る、クローズドクエスチョンを利用する&lt;/li&gt;
&lt;li&gt;研修の雰囲気をどうやって作るか？&lt;/li&gt;
&lt;li&gt;質問のチャネルを複数用意する&lt;/li&gt;
&lt;li&gt;研修の場があったまっていることをどう判断するか？&lt;/li&gt;
&lt;li&gt;研修講師側のデバイス、IT環境&lt;/li&gt;
&lt;li&gt;研修へ参加する生徒は主体的な人ばかりではないのでは？&lt;/li&gt;
&lt;li&gt;高速道路という役割&lt;/li&gt;
&lt;li&gt;周りに感化されて主体的になってくる&lt;/li&gt;
&lt;li&gt;研修が終わった後に学びが続くようにするためには？&lt;/li&gt;
&lt;li&gt;反転学習とする、上司と参加目的を調整・会話しておく&lt;/li&gt;
&lt;li&gt;講義のアジェンダ、ストーリー、内容の設計で気をつけていることは？&lt;/li&gt;
&lt;li&gt;講義、ハンズオン、経験から引き出す時間の配分は？&lt;/li&gt;
&lt;li&gt;オンライン研修参加者の集中を保つこつは？&lt;/li&gt;
&lt;li&gt;kakkuさんの研修の評価が高い要因は？&lt;/li&gt;
&lt;li&gt;実務経験、知識の幅、心地よい研修&lt;/li&gt;
&lt;li&gt;研修設計は、初日、2日目などでスタイルを変えていく？&lt;/li&gt;
&lt;li&gt;過去の研修で、研修途中で教え方を大幅に変えたことは？&lt;/li&gt;
&lt;li&gt;4年間、ブログを毎週かかさずに書き続けられた要因は？&lt;/li&gt;
&lt;li&gt;新しい技術の種をどうやって見つけている？&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>kakakakakkuさんをゲストに、技術研修、成人教育、研修中の場・雰囲気作り、研修コンテンツの設計などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>難解な技術を教えるときに何を考えているか？</li>
<li>成人教育と幼児教育の違いは？</li>
<li>依存型の学び、経験学習、課題中心</li>
<li>インストラクショナルデザイン</li>
<li>経験学習とは何か？</li>
<li>オンラインで静まりかえることへの対応</li>
<li>雰囲気を作る、クローズドクエスチョンを利用する</li>
<li>研修の雰囲気をどうやって作るか？</li>
<li>質問のチャネルを複数用意する</li>
<li>研修の場があったまっていることをどう判断するか？</li>
<li>研修講師側のデバイス、IT環境</li>
<li>研修へ参加する生徒は主体的な人ばかりではないのでは？</li>
<li>高速道路という役割</li>
<li>周りに感化されて主体的になってくる</li>
<li>研修が終わった後に学びが続くようにするためには？</li>
<li>反転学習とする、上司と参加目的を調整・会話しておく</li>
<li>講義のアジェンダ、ストーリー、内容の設計で気をつけていることは？</li>
<li>講義、ハンズオン、経験から引き出す時間の配分は？</li>
<li>オンライン研修参加者の集中を保つこつは？</li>
<li>kakkuさんの研修の評価が高い要因は？</li>
<li>実務経験、知識の幅、心地よい研修</li>
<li>研修設計は、初日、2日目などでスタイルを変えていく？</li>
<li>過去の研修で、研修途中で教え方を大幅に変えたことは？</li>
<li>4年間、ブログを毎週かかさずに書き続けられた要因は？</li>
<li>新しい技術の種をどうやって見つけている？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/085_vQPHx.mp3</guid>
      <pubDate>Mon, 14 Nov 2022 21:16:02 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:48:44</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/d176916b-858b-45bf-b398-ccef28980ff1.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="46798471"/>
    </item>
    <item>
      <title>83. Node.js、Deno、Bun（後編） w/ yosuke_furukawa</title>
      <description>
        <![CDATA[<p>yosuke_furukawaさんをゲストに、Bunの狙い、Bunのパフォーマンス比較、Node.jsとBunとのIO実装の違いなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>Bunはどういう課題感を持って登場してきた？</li>
<li>Node.jsの3倍速いという主張</li>
<li>パフォーマンス比較時におけるZigとJavaScript実装の差</li>
<li>ライブラリのマーケティング戦略</li>
<li>libuv とは？</li>
<li>OS の違いにおける実装隠ぺい戦略</li>
<li>Bun は libuv を利用していない</li>
<li>Mac向けにkqueue、Linux向けにio_uring</li>
<li>Bun のProduction利用は?</li>
<li><a href="https://github.com/honojs/hono" target="_blank">honojs/hono</a></li>
<li>この後、業界はどのように変わっていく？</li>
<li>三国志</li>
<li><a href="https://jsconf.jp/2022/" target="_blank">JSConf JP</a></li>
<li>採用: <a href="https://recruit.nijibox.jp/" target="_blank">NIJIBOX</a>
</li>
<li>採用: <a href="https://www.recruit.co.jp/employment/" target="_blank">リクルート</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>83. Node.js、Deno、Bun（後編） w/ yosuke_furukawa</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;yosuke_furukawaさんをゲストに、Bunの狙い、Bunのパフォーマンス比較、Node.jsとBunとのIO実装の違いなどについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;Bunはどういう課題感を持って登場してきた？&lt;/li&gt;
&lt;li&gt;Node.jsの3倍速いという主張&lt;/li&gt;
&lt;li&gt;パフォーマンス比較時におけるZigとJavaScript実装の差&lt;/li&gt;
&lt;li&gt;ライブラリのマーケティング戦略&lt;/li&gt;
&lt;li&gt;libuv とは？&lt;/li&gt;
&lt;li&gt;OS の違いにおける実装隠ぺい戦略&lt;/li&gt;
&lt;li&gt;Bun は libuv を利用していない&lt;/li&gt;
&lt;li&gt;Mac向けにkqueue、Linux向けにio_uring&lt;/li&gt;
&lt;li&gt;Bun のProduction利用は?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honojs/hono" target="_blank"&gt;honojs/hono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;この後、業界はどのように変わっていく？&lt;/li&gt;
&lt;li&gt;三国志&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsconf.jp/2022/" target="_blank"&gt;JSConf JP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用: &lt;a href="https://recruit.nijibox.jp/" target="_blank"&gt;NIJIBOX&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;採用: &lt;a href="https://www.recruit.co.jp/employment/" target="_blank"&gt;リクルート&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>yosuke_furukawaさんをゲストに、Bunの狙い、Bunのパフォーマンス比較、Node.jsとBunとのIO実装の違いなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>Bunはどういう課題感を持って登場してきた？</li>
<li>Node.jsの3倍速いという主張</li>
<li>パフォーマンス比較時におけるZigとJavaScript実装の差</li>
<li>ライブラリのマーケティング戦略</li>
<li>libuv とは？</li>
<li>OS の違いにおける実装隠ぺい戦略</li>
<li>Bun は libuv を利用していない</li>
<li>Mac向けにkqueue、Linux向けにio_uring</li>
<li>Bun のProduction利用は?</li>
<li><a href="https://github.com/honojs/hono" target="_blank">honojs/hono</a></li>
<li>この後、業界はどのように変わっていく？</li>
<li>三国志</li>
<li><a href="https://jsconf.jp/2022/" target="_blank">JSConf JP</a></li>
<li>採用: <a href="https://recruit.nijibox.jp/" target="_blank">NIJIBOX</a>
</li>
<li>採用: <a href="https://www.recruit.co.jp/employment/" target="_blank">リクルート</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/084_UpQdY.mp3</guid>
      <pubDate>Mon, 17 Oct 2022 09:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:22:21</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/6d23b0b2-dedb-4535-9825-ca70c04b9857.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="21470563"/>
    </item>
    <item>
      <title>82. Node.js、Deno、Bun （前編） w/ yosuke_furukawa</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/yosuke_furukawa/denofalsehua" target="_blank">denoの話</a></li>
<li><a href="https://speakerdeck.com/yosuke_furukawa/bun-first-impressions" target="_blank">Bun first impressions</a></li>
<li>Node.js、Deno、Bunとは何か？</li>
<li>JavaScriptランタイムとは何か？</li>
<li>サーバーサイドJavaScript</li>
<li>expressを利用してWebサーバーを立てるコードは、Node.js以外でも動くのか？</li>
<li>ECMAScript と ランタイム との関係は？</li>
<li>TC39</li>
<li>Node.js はどんな経緯で生まれてきた？</li>
<li>Rubyを書くタイミングと、JavaScriptを書くタイミングでのコンテキストスイッチ</li>
<li>netv8</li>
<li>イベントループモデルとは何か？</li>
<li>ブロッキング処理、for文やJSON.parse()</li>
<li>なぜ、Node.jsはここまで人気が出たのか？</li>
<li>V8(JavaScriptエンジン)とは何か？</li>
<li>JavaScriptCore</li>
<li>Edge Workerとの相性の良さ</li>
<li>JITコンパイラ</li>
<li>Denoはどういう背景で生まれてきているのか？</li>
<li>モジュールを取り巻く課題</li>
<li><a href="https://jsconf.jp/2022/" target="_blank">JSConf JP</a></li>
</ul>
訂正
<ul>
<li>冒頭で第81回と話しておりますが、82回の誤りです。</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>82. Node.js、Deno、Bun （前編） w/ yosuke_furukawa</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/yosuke_furukawa/denofalsehua" target="_blank"&gt;denoの話&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/yosuke_furukawa/bun-first-impressions" target="_blank"&gt;Bun first impressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Node.js、Deno、Bunとは何か？&lt;/li&gt;
&lt;li&gt;JavaScriptランタイムとは何か？&lt;/li&gt;
&lt;li&gt;サーバーサイドJavaScript&lt;/li&gt;
&lt;li&gt;expressを利用してWebサーバーを立てるコードは、Node.js以外でも動くのか？&lt;/li&gt;
&lt;li&gt;ECMAScript と ランタイム との関係は？&lt;/li&gt;
&lt;li&gt;TC39&lt;/li&gt;
&lt;li&gt;Node.js はどんな経緯で生まれてきた？&lt;/li&gt;
&lt;li&gt;Rubyを書くタイミングと、JavaScriptを書くタイミングでのコンテキストスイッチ&lt;/li&gt;
&lt;li&gt;netv8&lt;/li&gt;
&lt;li&gt;イベントループモデルとは何か？&lt;/li&gt;
&lt;li&gt;ブロッキング処理、for文やJSON.parse()&lt;/li&gt;
&lt;li&gt;なぜ、Node.jsはここまで人気が出たのか？&lt;/li&gt;
&lt;li&gt;V8(JavaScriptエンジン)とは何か？&lt;/li&gt;
&lt;li&gt;JavaScriptCore&lt;/li&gt;
&lt;li&gt;Edge Workerとの相性の良さ&lt;/li&gt;
&lt;li&gt;JITコンパイラ&lt;/li&gt;
&lt;li&gt;Denoはどういう背景で生まれてきているのか？&lt;/li&gt;
&lt;li&gt;モジュールを取り巻く課題&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsconf.jp/2022/" target="_blank"&gt;JSConf JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
訂正
&lt;ul&gt;
&lt;li&gt;冒頭で第81回と話しておりますが、82回の誤りです。&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/yosuke_furukawa/denofalsehua" target="_blank">denoの話</a></li>
<li><a href="https://speakerdeck.com/yosuke_furukawa/bun-first-impressions" target="_blank">Bun first impressions</a></li>
<li>Node.js、Deno、Bunとは何か？</li>
<li>JavaScriptランタイムとは何か？</li>
<li>サーバーサイドJavaScript</li>
<li>expressを利用してWebサーバーを立てるコードは、Node.js以外でも動くのか？</li>
<li>ECMAScript と ランタイム との関係は？</li>
<li>TC39</li>
<li>Node.js はどんな経緯で生まれてきた？</li>
<li>Rubyを書くタイミングと、JavaScriptを書くタイミングでのコンテキストスイッチ</li>
<li>netv8</li>
<li>イベントループモデルとは何か？</li>
<li>ブロッキング処理、for文やJSON.parse()</li>
<li>なぜ、Node.jsはここまで人気が出たのか？</li>
<li>V8(JavaScriptエンジン)とは何か？</li>
<li>JavaScriptCore</li>
<li>Edge Workerとの相性の良さ</li>
<li>JITコンパイラ</li>
<li>Denoはどういう背景で生まれてきているのか？</li>
<li>モジュールを取り巻く課題</li>
<li><a href="https://jsconf.jp/2022/" target="_blank">JSConf JP</a></li>
</ul>
訂正
<ul>
<li>冒頭で第81回と話しておりますが、82回の誤りです。</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/083_LaKUD.mp3</guid>
      <pubDate>Mon, 10 Oct 2022 02:35:22 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:39:57</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/fdba06a8-ae65-41cd-91cf-8840a28edeb5.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="38352770"/>
    </item>
    <item>
      <title>81. 低遅延ライブ配信を支える技術 w/ mmasaki</title>
      <description>
        <![CDATA[<p>mmasakiさんをゲストに、HLSやRTMPなどの配信技術、WebRTCを利用した配信技術とアーキテクチャ、そのスケーラビリティとトレードオフなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://nttcom.connpass.com/event/257675/" target="_blank">低遅延ライブ配信を支える技術 - NTT Com Open TechLunch #1</a></li>
<li><a href="https://www.ntt.com/business/services/voice-visual-communication/business-support/smartvlive.html" target="_blank">Smart vLive</a></li>
<li>配信とは？</li>
<li>YouTube や Twitch</li>
<li>古くはどういう技術で、どのような仕組みで配信が行われていた？</li>
<li>RTMP、MPEG-DASH、HLS</li>
<li>HTTPストリーミングでパケットが落ちたらどうなる？</li>
<li>キャッシュ、HTTPにのっかることのメリット</li>
<li>HTTPベースストリーミングにおける進化</li>
<li>HTTP Rangeリクエスト</li>
<li>CMAF、Ultra Low Latency</li>
<li>HTTPベースによる遅延限界は何秒ぐらい？</li>
<li>Sub Secondを狙った WebRTCによる配信</li>
<li>なぜ、HTTPベースの配信は遅延が大きいのか？</li>
<li>超低遅延配信って、ビジネス的なユースケースってあるの？</li>
<li>End-End はどのような技術で使われている</li>
<li>Upstream としてRTMP、クラウド内転送のSRT、DownStreamにWebRTC</li>
<li>RTMPってどういうプロトコル？</li>
<li>WebRTCの負荷とスケーラビリティ</li>
<li>スケーラビリティと遅延とのトレードオフ</li>
<li>実績では10,000クライアントまで、puppeteerにより確認済み</li>
<li>負荷試験の負荷が難しい</li>
<li>
<a href="https://gstreamer.freedesktop.org/" target="_blank">GStreamer</a> をRustから制御</li>
<li>FECやRTXは利用している？</li>
<li>WebRTCでプロキシを通す工夫、TURNサーバーの利用</li>
<li>環境が異なるクライアントに対して、体験を高める工夫は？</li>
<li>WebTransport、WebCodecsの現状</li>
<li><a href="https://fukabori.fm/episode/43" target="_blank">43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</a></li>
<li>中途採用募集中: <a href="https://hrmos.co/pages/nttcom0033/jobs/1692897" target="_blank">低遅延ライブ配信サービス「Smart vLive」や、これに続く新たなプラットフォームを開発するソフトウェアエンジニア</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>81. 低遅延ライブ配信を支える技術 w/ mmasaki</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;mmasakiさんをゲストに、HLSやRTMPなどの配信技術、WebRTCを利用した配信技術とアーキテクチャ、そのスケーラビリティとトレードオフなどについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nttcom.connpass.com/event/257675/" target="_blank"&gt;低遅延ライブ配信を支える技術 - NTT Com Open TechLunch #1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ntt.com/business/services/voice-visual-communication/business-support/smartvlive.html" target="_blank"&gt;Smart vLive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;配信とは？&lt;/li&gt;
&lt;li&gt;YouTube や Twitch&lt;/li&gt;
&lt;li&gt;古くはどういう技術で、どのような仕組みで配信が行われていた？&lt;/li&gt;
&lt;li&gt;RTMP、MPEG-DASH、HLS&lt;/li&gt;
&lt;li&gt;HTTPストリーミングでパケットが落ちたらどうなる？&lt;/li&gt;
&lt;li&gt;キャッシュ、HTTPにのっかることのメリット&lt;/li&gt;
&lt;li&gt;HTTPベースストリーミングにおける進化&lt;/li&gt;
&lt;li&gt;HTTP Rangeリクエスト&lt;/li&gt;
&lt;li&gt;CMAF、Ultra Low Latency&lt;/li&gt;
&lt;li&gt;HTTPベースによる遅延限界は何秒ぐらい？&lt;/li&gt;
&lt;li&gt;Sub Secondを狙った WebRTCによる配信&lt;/li&gt;
&lt;li&gt;なぜ、HTTPベースの配信は遅延が大きいのか？&lt;/li&gt;
&lt;li&gt;超低遅延配信って、ビジネス的なユースケースってあるの？&lt;/li&gt;
&lt;li&gt;End-End はどのような技術で使われている&lt;/li&gt;
&lt;li&gt;Upstream としてRTMP、クラウド内転送のSRT、DownStreamにWebRTC&lt;/li&gt;
&lt;li&gt;RTMPってどういうプロトコル？&lt;/li&gt;
&lt;li&gt;WebRTCの負荷とスケーラビリティ&lt;/li&gt;
&lt;li&gt;スケーラビリティと遅延とのトレードオフ&lt;/li&gt;
&lt;li&gt;実績では10,000クライアントまで、puppeteerにより確認済み&lt;/li&gt;
&lt;li&gt;負荷試験の負荷が難しい&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gstreamer.freedesktop.org/" target="_blank"&gt;GStreamer&lt;/a&gt; をRustから制御&lt;/li&gt;
&lt;li&gt;FECやRTXは利用している？&lt;/li&gt;
&lt;li&gt;WebRTCでプロキシを通す工夫、TURNサーバーの利用&lt;/li&gt;
&lt;li&gt;環境が異なるクライアントに対して、体験を高める工夫は？&lt;/li&gt;
&lt;li&gt;WebTransport、WebCodecsの現状&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/43" target="_blank"&gt;43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;中途採用募集中: &lt;a href="https://hrmos.co/pages/nttcom0033/jobs/1692897" target="_blank"&gt;低遅延ライブ配信サービス「Smart vLive」や、これに続く新たなプラットフォームを開発するソフトウェアエンジニア&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>mmasakiさんをゲストに、HLSやRTMPなどの配信技術、WebRTCを利用した配信技術とアーキテクチャ、そのスケーラビリティとトレードオフなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://nttcom.connpass.com/event/257675/" target="_blank">低遅延ライブ配信を支える技術 - NTT Com Open TechLunch #1</a></li>
<li><a href="https://www.ntt.com/business/services/voice-visual-communication/business-support/smartvlive.html" target="_blank">Smart vLive</a></li>
<li>配信とは？</li>
<li>YouTube や Twitch</li>
<li>古くはどういう技術で、どのような仕組みで配信が行われていた？</li>
<li>RTMP、MPEG-DASH、HLS</li>
<li>HTTPストリーミングでパケットが落ちたらどうなる？</li>
<li>キャッシュ、HTTPにのっかることのメリット</li>
<li>HTTPベースストリーミングにおける進化</li>
<li>HTTP Rangeリクエスト</li>
<li>CMAF、Ultra Low Latency</li>
<li>HTTPベースによる遅延限界は何秒ぐらい？</li>
<li>Sub Secondを狙った WebRTCによる配信</li>
<li>なぜ、HTTPベースの配信は遅延が大きいのか？</li>
<li>超低遅延配信って、ビジネス的なユースケースってあるの？</li>
<li>End-End はどのような技術で使われている</li>
<li>Upstream としてRTMP、クラウド内転送のSRT、DownStreamにWebRTC</li>
<li>RTMPってどういうプロトコル？</li>
<li>WebRTCの負荷とスケーラビリティ</li>
<li>スケーラビリティと遅延とのトレードオフ</li>
<li>実績では10,000クライアントまで、puppeteerにより確認済み</li>
<li>負荷試験の負荷が難しい</li>
<li>
<a href="https://gstreamer.freedesktop.org/" target="_blank">GStreamer</a> をRustから制御</li>
<li>FECやRTXは利用している？</li>
<li>WebRTCでプロキシを通す工夫、TURNサーバーの利用</li>
<li>環境が異なるクライアントに対して、体験を高める工夫は？</li>
<li>WebTransport、WebCodecsの現状</li>
<li><a href="https://fukabori.fm/episode/43" target="_blank">43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</a></li>
<li>中途採用募集中: <a href="https://hrmos.co/pages/nttcom0033/jobs/1692897" target="_blank">低遅延ライブ配信サービス「Smart vLive」や、これに続く新たなプラットフォームを開発するソフトウェアエンジニア</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/082_KJAZI.mp3</guid>
      <pubDate>Thu, 29 Sep 2022 09:18:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:35:07</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/9f149338-2c7e-4dd4-a9b6-8486ee433ae4.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="33726798"/>
    </item>
    <item>
      <title>80. PRと広報、エンジニア向け採用広報 w/ r1ccha</title>
      <description>
        <![CDATA[<p>r1cchaさんをゲストに、PR・広報の定義、公聴の役割、ストーリーの重要性、PRとプロダクト開発との関連、エンジニア採用過熱問題、採用広報などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>PRと広報ってそもそも何のためにあるのか？</li>
<li>PRの定義、広報の定義</li>
<li>公聴とは</li>
<li>公聴の具体的業務は？</li>
<li>外からの自社の見え方が、なぜ重要なのか？</li>
<li>ステークホルダーとの関係性構築がなぜ重要なのか？</li>
<li>どのように広報メッセージの優先度をつけていくのか？</li>
<li><a href="https://yamotty.tokyo/zerotopic" target="_blank">Zero Topic | yamottyさんのPodcast</a></li>
<li>同じことでも何度いってもいい</li>
<li>なぜ、何度もいう必要があるのか？</li>
<li>わかりやすいストーリーの重要性</li>
<li>プロダクト開発への応用</li>
<li>書籍: <a href="https://amzn.to/3DikzSt" target="_blank">ユーザーストーリーマッピング</a>
</li>
<li>守りの情報発信とは何か？</li>
<li>エンジニア採用過熱問題</li>
<li>なぜ採用広報のニーズが高まっているのか？</li>
<li>どのように採用広報として振る舞っているか？</li>
<li>採用広報向けの発信とメディア向けの情報発信は異なる</li>
<li>サーフィンとマラソンによるメタファー</li>
<li>どうすれば、情報発信を継続できるのか？（ランナーズハイに到れるのか？）</li>
<li>その会社が楽しそうだからこそ「いいな」と思う</li>
<li><a href="https://twitter.com/yaiyai_radio" target="_blank">やいやいラジオ</a></li>
<li><a href="https://10x.co.jp/recruit/" target="_blank">RECRUIT | 株式会社10X</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>80. PRと広報、エンジニア向け採用広報 w/ r1ccha</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;r1cchaさんをゲストに、PR・広報の定義、公聴の役割、ストーリーの重要性、PRとプロダクト開発との関連、エンジニア採用過熱問題、採用広報などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;PRと広報ってそもそも何のためにあるのか？&lt;/li&gt;
&lt;li&gt;PRの定義、広報の定義&lt;/li&gt;
&lt;li&gt;公聴とは&lt;/li&gt;
&lt;li&gt;公聴の具体的業務は？&lt;/li&gt;
&lt;li&gt;外からの自社の見え方が、なぜ重要なのか？&lt;/li&gt;
&lt;li&gt;ステークホルダーとの関係性構築がなぜ重要なのか？&lt;/li&gt;
&lt;li&gt;どのように広報メッセージの優先度をつけていくのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yamotty.tokyo/zerotopic" target="_blank"&gt;Zero Topic | yamottyさんのPodcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;同じことでも何度いってもいい&lt;/li&gt;
&lt;li&gt;なぜ、何度もいう必要があるのか？&lt;/li&gt;
&lt;li&gt;わかりやすいストーリーの重要性&lt;/li&gt;
&lt;li&gt;プロダクト開発への応用&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3DikzSt" target="_blank"&gt;ユーザーストーリーマッピング&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;守りの情報発信とは何か？&lt;/li&gt;
&lt;li&gt;エンジニア採用過熱問題&lt;/li&gt;
&lt;li&gt;なぜ採用広報のニーズが高まっているのか？&lt;/li&gt;
&lt;li&gt;どのように採用広報として振る舞っているか？&lt;/li&gt;
&lt;li&gt;採用広報向けの発信とメディア向けの情報発信は異なる&lt;/li&gt;
&lt;li&gt;サーフィンとマラソンによるメタファー&lt;/li&gt;
&lt;li&gt;どうすれば、情報発信を継続できるのか？（ランナーズハイに到れるのか？）&lt;/li&gt;
&lt;li&gt;その会社が楽しそうだからこそ「いいな」と思う&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/yaiyai_radio" target="_blank"&gt;やいやいラジオ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://10x.co.jp/recruit/" target="_blank"&gt;RECRUIT | 株式会社10X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>r1cchaさんをゲストに、PR・広報の定義、公聴の役割、ストーリーの重要性、PRとプロダクト開発との関連、エンジニア採用過熱問題、採用広報などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>PRと広報ってそもそも何のためにあるのか？</li>
<li>PRの定義、広報の定義</li>
<li>公聴とは</li>
<li>公聴の具体的業務は？</li>
<li>外からの自社の見え方が、なぜ重要なのか？</li>
<li>ステークホルダーとの関係性構築がなぜ重要なのか？</li>
<li>どのように広報メッセージの優先度をつけていくのか？</li>
<li><a href="https://yamotty.tokyo/zerotopic" target="_blank">Zero Topic | yamottyさんのPodcast</a></li>
<li>同じことでも何度いってもいい</li>
<li>なぜ、何度もいう必要があるのか？</li>
<li>わかりやすいストーリーの重要性</li>
<li>プロダクト開発への応用</li>
<li>書籍: <a href="https://amzn.to/3DikzSt" target="_blank">ユーザーストーリーマッピング</a>
</li>
<li>守りの情報発信とは何か？</li>
<li>エンジニア採用過熱問題</li>
<li>なぜ採用広報のニーズが高まっているのか？</li>
<li>どのように採用広報として振る舞っているか？</li>
<li>採用広報向けの発信とメディア向けの情報発信は異なる</li>
<li>サーフィンとマラソンによるメタファー</li>
<li>どうすれば、情報発信を継続できるのか？（ランナーズハイに到れるのか？）</li>
<li>その会社が楽しそうだからこそ「いいな」と思う</li>
<li><a href="https://twitter.com/yaiyai_radio" target="_blank">やいやいラジオ</a></li>
<li><a href="https://10x.co.jp/recruit/" target="_blank">RECRUIT | 株式会社10X</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/081_XazAQ.mp3</guid>
      <pubDate>Mon, 12 Sep 2022 14:19:27 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:40:18</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/577dace3-816e-4d92-b65d-a790810cc5f3.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="38698840"/>
    </item>
    <item>
      <title>79. BigQuery と D.Node w/ g_suzutatsu</title>
      <description>
        <![CDATA[<p>D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>BigQueryとは？</li>
<li>データウェアハウス(DWH)とは？</li>
<li>データウェアハウスとRDBとの違いは？</li>
<li>BigQueryの利用フロー・方法</li>
<li>RDBの変更をBigQueryに反映するユースケース</li>
<li>BigQueryと併用されるBIツール</li>
<li>Tableau</li>
<li>Google データポータル</li>
<li>BigQuery の内部アーキテクチャは？</li>
<li>Compute と Storage</li>
<li>
<a href="https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system" target="_blank">Colossus</a> とは？</li>
<li>
<a href="https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64" target="_blank">Dremel</a> とは？</li>
<li>Slot というCPUとメモリを抽象化した単位</li>
<li>分散メモリとは？</li>
<li>分割統治法</li>
<li>最近の BiqQuery の進化で面白いところは？</li>
<li><a href="https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja" target="_blank">BigQuery の マテリアライズドビュー</a></li>
<li>そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？</li>
<li>マテリアライズドビュー利用時の注意点とは？</li>
<li>
<a href="https://www.dnode.cloud/join" target="_blank">D.Node</a> とは？</li>
<li>suzutatsuさんのお仕事内容</li>
<li>社内にはどんな人が多い？</li>
<li><a href="https://www.dnode.cloud/join" target="_blank">D.Node 採用ページ</a></li>
</ul>
エピソード提供スポンサー
<ul>
<li><a href="https://www.dnode.cloud/join" target="_blank">デロイト トーマツ ノード合同会社(D.Node)</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>79. BigQuery と D.Node w/ g_suzutatsu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;BigQueryとは？&lt;/li&gt;
&lt;li&gt;データウェアハウス(DWH)とは？&lt;/li&gt;
&lt;li&gt;データウェアハウスとRDBとの違いは？&lt;/li&gt;
&lt;li&gt;BigQueryの利用フロー・方法&lt;/li&gt;
&lt;li&gt;RDBの変更をBigQueryに反映するユースケース&lt;/li&gt;
&lt;li&gt;BigQueryと併用されるBIツール&lt;/li&gt;
&lt;li&gt;Tableau&lt;/li&gt;
&lt;li&gt;Google データポータル&lt;/li&gt;
&lt;li&gt;BigQuery の内部アーキテクチャは？&lt;/li&gt;
&lt;li&gt;Compute と Storage&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system" target="_blank"&gt;Colossus&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64" target="_blank"&gt;Dremel&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;Slot というCPUとメモリを抽象化した単位&lt;/li&gt;
&lt;li&gt;分散メモリとは？&lt;/li&gt;
&lt;li&gt;分割統治法&lt;/li&gt;
&lt;li&gt;最近の BiqQuery の進化で面白いところは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja" target="_blank"&gt;BigQuery の マテリアライズドビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？&lt;/li&gt;
&lt;li&gt;マテリアライズドビュー利用時の注意点とは？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.dnode.cloud/join" target="_blank"&gt;D.Node&lt;/a&gt; とは？&lt;/li&gt;
&lt;li&gt;suzutatsuさんのお仕事内容&lt;/li&gt;
&lt;li&gt;社内にはどんな人が多い？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join" target="_blank"&gt;D.Node 採用ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
エピソード提供スポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dnode.cloud/join" target="_blank"&gt;デロイト トーマツ ノード合同会社(D.Node)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>D.Nodeのsuzutatsuさんをゲストに、BigQueryの基本、BigQueryの内部、最近のアップデート、D.Nodeなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>BigQueryとは？</li>
<li>データウェアハウス(DWH)とは？</li>
<li>データウェアハウスとRDBとの違いは？</li>
<li>BigQueryの利用フロー・方法</li>
<li>RDBの変更をBigQueryに反映するユースケース</li>
<li>BigQueryと併用されるBIツール</li>
<li>Tableau</li>
<li>Google データポータル</li>
<li>BigQuery の内部アーキテクチャは？</li>
<li>Compute と Storage</li>
<li>
<a href="https://cloud.google.com/blog/ja/products/storage-data-transfer/a-peek-behind-colossus-googles-file-system" target="_blank">Colossus</a> とは？</li>
<li>
<a href="https://www.notion.so/fukabori-dnote-shownote-f69e7d45d3d44a64a7cbf2072f9f3c64" target="_blank">Dremel</a> とは？</li>
<li>Slot というCPUとメモリを抽象化した単位</li>
<li>分散メモリとは？</li>
<li>分割統治法</li>
<li>最近の BiqQuery の進化で面白いところは？</li>
<li><a href="https://cloud.google.com/bigquery/docs/materialized-views-intro?hl=ja" target="_blank">BigQuery の マテリアライズドビュー</a></li>
<li>そもそもマテリアライズドビュー（マテビュー）の一般的な意味とは？</li>
<li>マテリアライズドビュー利用時の注意点とは？</li>
<li>
<a href="https://www.dnode.cloud/join" target="_blank">D.Node</a> とは？</li>
<li>suzutatsuさんのお仕事内容</li>
<li>社内にはどんな人が多い？</li>
<li><a href="https://www.dnode.cloud/join" target="_blank">D.Node 採用ページ</a></li>
</ul>
エピソード提供スポンサー
<ul>
<li><a href="https://www.dnode.cloud/join" target="_blank">デロイト トーマツ ノード合同会社(D.Node)</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/080_qEHby.mp3</guid>
      <pubDate>Sun, 04 Sep 2022 23:50:18 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:39:21</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/9398f820-95b5-4373-8793-de8160351a43.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37778912"/>
    </item>
    <item>
      <title>78. プロジェクトスプリント（後編）w/ motoi, kedamatti</title>
      <description>
        <![CDATA[<p>プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。</p>
<ul>
<li><a href="https://www.projectsprint.org/">プロジェクトスプリント</a>とは？</li>
<li>プロジェクトスプリントの作成経緯</li>
<li>プロジェクトが上手く進んでいる兆候が定例会議にあった</li>
<li>ホラクラシーとスクラム</li>
<li>ホラクラシーとは？</li>
<li>役割（ロール）と違和感（テンション）</li>
<li>タクティカルミーティングとは</li>
<li>役職（権限）と役割は関係がある？</li>
<li>ホラクラシーとスクラムとの共通点は？</li>
<li>自律的な行動を生まれやすくする仕組みを作る</li>
<li>変化し続けるものを切り取ることで改善しやすくする</li>
<li>上手くいっている定例会議とは何か？</li>
<li>チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。</li>
<li>会議の分類（4目的 x 人数)</li>
<li>書籍: <a href="https://amzn.to/3e2eUWi">会議の進め方 / 高橋 誠</a></li>
<li>プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある</li>
<li>プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？</li>
<li>関係性によって「共有」のやり方を変える</li>
<li>書籍: <a href="https://amzn.to/3CGf7bR">センスメーキング イン オーガニゼーションズ / カール.E.ワイク</a></li>
<li>プロジェクトスプリントを具体的にどう進めていくのか？</li>
<li>書籍: <a href="https://amzn.to/3QUvaHu">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>
<li>会議体をAPIとして捉える</li>
<li><a href="https://blog.copilot.jp/">COPILOT BLOG</a></li>
<li>RPC: Remote Procedure Call</li>
<li>会議の伴走方法は？</li>
<li>会議体の変更めんどくさい問題</li>
<li>会議体を見直す変更タイミングはいつ？</li>
<li>テンショントリアージ</li>
<li>「お尻が痛い」</li>
<li>「何が必要ですか？」 / What do you need?”</li>
<li>プロジェクトスプリントは <a href="https://github.com/copilot-jp/project-sprint">OSS公開中</a></li>
<li><a href="https://copilot.jp/recruit/">採用 株式会社コパイロツト</a></li>
<li><a href="https://supergoodmeetings.com/">SuperGoodMeetings</a></li>
<li><a href="https://uniba.jp/join.html">採用 ユニバ株式会社</a></li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>78. プロジェクトスプリント（後編）w/ motoi, kedamatti</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。

プロジェクトスプリントとは？
プロジェクトスプリントの作成経緯
プロジェクトが上手く進んでいる兆候が定例会議にあった
ホラクラシーとスクラム
ホラクラシーとは？
役割（ロール）と違和感（テンション）
タクティカルミーティングとは
役職（権限）と役割は関係がある？
ホラクラシーとスクラムとの共通点は？
自律的な行動を生まれやすくする仕組みを作る
変化し続けるものを切り取ることで改善しやすくする
上手くいっている定例会議とは何か？
チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。
会議の分類（4目的 x 人数)
書籍: 会議の進め方 / 高橋 誠
プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある
プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？
関係性によって「共有」のやり方を変える
書籍: センスメーキング イン オーガニゼーションズ / カール.E.ワイク
プロジェクトスプリントを具体的にどう進めていくのか？
書籍: チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計
会議体をAPIとして捉える
COPILOT BLOG
RPC: Remote Procedure Call
会議の伴走方法は？
会議体の変更めんどくさい問題
会議体を見直す変更タイミングはいつ？
テンショントリアージ
「お尻が痛い」
「何が必要ですか？」 / What do you need?”
プロジェクトスプリントは OSS公開中
採用 株式会社コパイロツト
SuperGoodMeetings
採用 ユニバ株式会社


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>プロジェクトスプリント、ホラクラシー、定例会議の進め方、「お尻が痛い」からつながる改善などについて語っていただいたエピソードです。</p>
<ul>
<li><a href="https://www.projectsprint.org/">プロジェクトスプリント</a>とは？</li>
<li>プロジェクトスプリントの作成経緯</li>
<li>プロジェクトが上手く進んでいる兆候が定例会議にあった</li>
<li>ホラクラシーとスクラム</li>
<li>ホラクラシーとは？</li>
<li>役割（ロール）と違和感（テンション）</li>
<li>タクティカルミーティングとは</li>
<li>役職（権限）と役割は関係がある？</li>
<li>ホラクラシーとスクラムとの共通点は？</li>
<li>自律的な行動を生まれやすくする仕組みを作る</li>
<li>変化し続けるものを切り取ることで改善しやすくする</li>
<li>上手くいっている定例会議とは何か？</li>
<li>チームメンバの認識が揃って、次の行動が出る。次の行動にはメンバーの意見が反映されている。</li>
<li>会議の分類（4目的 x 人数)</li>
<li>書籍: <a href="https://amzn.to/3e2eUWi">会議の進め方 / 高橋 誠</a></li>
<li>プロジェクトのライフサイクルにどこにいるかで、会議の進め方にグラデーションがある</li>
<li>プロジェクトの流れ・メンバーの腹落ち感をどうやって作るか？</li>
<li>関係性によって「共有」のやり方を変える</li>
<li>書籍: <a href="https://amzn.to/3CGf7bR">センスメーキング イン オーガニゼーションズ / カール.E.ワイク</a></li>
<li>プロジェクトスプリントを具体的にどう進めていくのか？</li>
<li>書籍: <a href="https://amzn.to/3QUvaHu">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a></li>
<li>会議体をAPIとして捉える</li>
<li><a href="https://blog.copilot.jp/">COPILOT BLOG</a></li>
<li>RPC: Remote Procedure Call</li>
<li>会議の伴走方法は？</li>
<li>会議体の変更めんどくさい問題</li>
<li>会議体を見直す変更タイミングはいつ？</li>
<li>テンショントリアージ</li>
<li>「お尻が痛い」</li>
<li>「何が必要ですか？」 / What do you need?”</li>
<li>プロジェクトスプリントは <a href="https://github.com/copilot-jp/project-sprint">OSS公開中</a></li>
<li><a href="https://copilot.jp/recruit/">採用 株式会社コパイロツト</a></li>
<li><a href="https://supergoodmeetings.com/">SuperGoodMeetings</a></li>
<li><a href="https://uniba.jp/join.html">採用 ユニバ株式会社</a></li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/079_YNwya.mp3</guid>
      <pubDate>Sun, 28 Aug 2022 04:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:39:30</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/e5cde327-9ea8-4119-908c-be72c643a478.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37922690"/>
    </item>
    <item>
      <title>77. リモートワークにおけるファシリテーション（前編）</title>
      <description>
        <![CDATA[<p>リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12" target="_blank">リモートワークにおけるファシリテーションの方法論</a></li>
<li><a href="https://blog.copilot.jp/entry/remote-facilitation" target="_blank">リモートワークにおけるファシリテーションの方法論を公開します！</a></li>
<li>リモートファシリテーションのスライドを作ったきっかけは？</li>
<li>ファシリテーションとは何か？</li>
<li>書籍: <a href="https://amzn.to/3Ay6EWR" target="_blank">ファシリテーション入門〈第2版〉</a>
</li>
<li>コンテントとプロセス</li>
<li>
<a href="https://note.com/yuki_anzai/n/n1cd936d56c51" target="_blank">組織開発の氷山モデルが言及される記事</a> </li>
<li>なぜ全員でファシリテーターをする必要があるのか？</li>
<li>リモートワークのファシリテーションで、特に何を意識するといいのか？</li>
<li>地域における合意形成の難しさ</li>
<li>なぜ合意形成はこんなに難しいのか？</li>
<li>自分の理解、自分自身の考えをどうやって把握すればいいのか？</li>
<li>点ではなく、範囲で考えるのが大事</li>
<li>発話することによって初めて認識する</li>
<li>オートクライン効果</li>
<li>口頭で読み上げるとロジックの破綻に気づく</li>
<li>（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）</li>
<li>TOC(制約理論)が説明される書籍: <a href="https://amzn.to/3R4a8pd" target="_blank">ザ・ゴール２</a>
</li>
<li>言語化することによって、客観的に見れる状態になる</li>
<li>なぜ、参加人数を絞るべきなのか？</li>
<li>短時間で複数のミーティングを開催したほうが良い理由は何か？</li>
<li>メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける</li>
<li>環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる</li>
<li>環境が固定していない、変化しているとは具体的には？</li>
<li>チャットでの書きづらさは、どこからやってくるのか？</li>
<li>個人ワーク重要説</li>
<li>ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？</li>
<li>最低限、何を事前に準備すればよいのか？</li>
<li>Doneの定義</li>
<li>ミーティングで共有する時間をとるべきなのか？</li>
<li>getting on the same page </li>
<li>発散・収束・共有の順序性は？</li>
<li>収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？</li>
<li>合意形成のレベル・ラインを確認する・下げる</li>
<li><a href="https://fukabori.fm/episode/66" target="_blank">ep.66から"アイデアの決め方を事前に合意しておく"</a></li>
<li>「あれば言ってください」というのは難しい。どうやって対応するか？</li>
<li>画面に注目してもらいやすくなった</li>
<li>議事録は、どうやって作っていけばいいのか？</li>
<li>議事録をみんなで書くためのコツは？</li>
<li><a href="https://copilot.jp/recruit/" target="_blank">採用 | 株式会社コパイロツト</a></li>
<li><a href="https://blog.copilot.jp/" target="_blank">COPILOT BLOG</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>77. リモートワークにおけるファシリテーション（前編）</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12" target="_blank"&gt;リモートワークにおけるファシリテーションの方法論&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/entry/remote-facilitation" target="_blank"&gt;リモートワークにおけるファシリテーションの方法論を公開します！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;リモートファシリテーションのスライドを作ったきっかけは？&lt;/li&gt;
&lt;li&gt;ファシリテーションとは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3Ay6EWR" target="_blank"&gt;ファシリテーション入門〈第2版〉&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;コンテントとプロセス&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://note.com/yuki_anzai/n/n1cd936d56c51" target="_blank"&gt;組織開発の氷山モデルが言及される記事&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;なぜ全員でファシリテーターをする必要があるのか？&lt;/li&gt;
&lt;li&gt;リモートワークのファシリテーションで、特に何を意識するといいのか？&lt;/li&gt;
&lt;li&gt;地域における合意形成の難しさ&lt;/li&gt;
&lt;li&gt;なぜ合意形成はこんなに難しいのか？&lt;/li&gt;
&lt;li&gt;自分の理解、自分自身の考えをどうやって把握すればいいのか？&lt;/li&gt;
&lt;li&gt;点ではなく、範囲で考えるのが大事&lt;/li&gt;
&lt;li&gt;発話することによって初めて認識する&lt;/li&gt;
&lt;li&gt;オートクライン効果&lt;/li&gt;
&lt;li&gt;口頭で読み上げるとロジックの破綻に気づく&lt;/li&gt;
&lt;li&gt;（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）&lt;/li&gt;
&lt;li&gt;TOC(制約理論)が説明される書籍: &lt;a href="https://amzn.to/3R4a8pd" target="_blank"&gt;ザ・ゴール２&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;言語化することによって、客観的に見れる状態になる&lt;/li&gt;
&lt;li&gt;なぜ、参加人数を絞るべきなのか？&lt;/li&gt;
&lt;li&gt;短時間で複数のミーティングを開催したほうが良い理由は何か？&lt;/li&gt;
&lt;li&gt;メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける&lt;/li&gt;
&lt;li&gt;環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる&lt;/li&gt;
&lt;li&gt;環境が固定していない、変化しているとは具体的には？&lt;/li&gt;
&lt;li&gt;チャットでの書きづらさは、どこからやってくるのか？&lt;/li&gt;
&lt;li&gt;個人ワーク重要説&lt;/li&gt;
&lt;li&gt;ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？&lt;/li&gt;
&lt;li&gt;最低限、何を事前に準備すればよいのか？&lt;/li&gt;
&lt;li&gt;Doneの定義&lt;/li&gt;
&lt;li&gt;ミーティングで共有する時間をとるべきなのか？&lt;/li&gt;
&lt;li&gt;getting on the same page &lt;/li&gt;
&lt;li&gt;発散・収束・共有の順序性は？&lt;/li&gt;
&lt;li&gt;収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？&lt;/li&gt;
&lt;li&gt;合意形成のレベル・ラインを確認する・下げる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/66" target="_blank"&gt;ep.66から"アイデアの決め方を事前に合意しておく"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「あれば言ってください」というのは難しい。どうやって対応するか？&lt;/li&gt;
&lt;li&gt;画面に注目してもらいやすくなった&lt;/li&gt;
&lt;li&gt;議事録は、どうやって作っていけばいいのか？&lt;/li&gt;
&lt;li&gt;議事録をみんなで書くためのコツは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copilot.jp/recruit/" target="_blank"&gt;採用 | 株式会社コパイロツト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.copilot.jp/" target="_blank"&gt;COPILOT BLOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>リモートワークにおけるファシリテーションの難しさ・上手くやる方法（合意形成・人数・頻度・目的の設定のコツ）などを語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://docs.google.com/presentation/d/1dQgbxB6_0kosazzgfk0Gmoa8c7dInfOy_NvZejfpneo/edit#slide=id.g814b63fdb8_0_12" target="_blank">リモートワークにおけるファシリテーションの方法論</a></li>
<li><a href="https://blog.copilot.jp/entry/remote-facilitation" target="_blank">リモートワークにおけるファシリテーションの方法論を公開します！</a></li>
<li>リモートファシリテーションのスライドを作ったきっかけは？</li>
<li>ファシリテーションとは何か？</li>
<li>書籍: <a href="https://amzn.to/3Ay6EWR" target="_blank">ファシリテーション入門〈第2版〉</a>
</li>
<li>コンテントとプロセス</li>
<li>
<a href="https://note.com/yuki_anzai/n/n1cd936d56c51" target="_blank">組織開発の氷山モデルが言及される記事</a> </li>
<li>なぜ全員でファシリテーターをする必要があるのか？</li>
<li>リモートワークのファシリテーションで、特に何を意識するといいのか？</li>
<li>地域における合意形成の難しさ</li>
<li>なぜ合意形成はこんなに難しいのか？</li>
<li>自分の理解、自分自身の考えをどうやって把握すればいいのか？</li>
<li>点ではなく、範囲で考えるのが大事</li>
<li>発話することによって初めて認識する</li>
<li>オートクライン効果</li>
<li>口頭で読み上げるとロジックの破綻に気づく</li>
<li>（2022/8/22 修正: 最初のShowNoteに書いていたザ・ゴールではなく、ザ・ゴール２が正しいとコメントいただき、ShowNoteを修正してあります。）</li>
<li>TOC(制約理論)が説明される書籍: <a href="https://amzn.to/3R4a8pd" target="_blank">ザ・ゴール２</a>
</li>
<li>言語化することによって、客観的に見れる状態になる</li>
<li>なぜ、参加人数を絞るべきなのか？</li>
<li>短時間で複数のミーティングを開催したほうが良い理由は何か？</li>
<li>メンバーの関係性や、プロジェクトの緊急度によって頻度・時間を使い分ける</li>
<li>環境の認識が固定しないときに、非同期なコミュニケーションはやりにくくなる</li>
<li>環境が固定していない、変化しているとは具体的には？</li>
<li>チャットでの書きづらさは、どこからやってくるのか？</li>
<li>個人ワーク重要説</li>
<li>ファシリテーターは何を準備するのか？なぜ準備しなければいけないのか？</li>
<li>最低限、何を事前に準備すればよいのか？</li>
<li>Doneの定義</li>
<li>ミーティングで共有する時間をとるべきなのか？</li>
<li>getting on the same page </li>
<li>発散・収束・共有の順序性は？</li>
<li>収束させるのが難しい問題に対して、ファシリテーターとしてどう振る舞うか？</li>
<li>合意形成のレベル・ラインを確認する・下げる</li>
<li><a href="https://fukabori.fm/episode/66" target="_blank">ep.66から"アイデアの決め方を事前に合意しておく"</a></li>
<li>「あれば言ってください」というのは難しい。どうやって対応するか？</li>
<li>画面に注目してもらいやすくなった</li>
<li>議事録は、どうやって作っていけばいいのか？</li>
<li>議事録をみんなで書くためのコツは？</li>
<li><a href="https://copilot.jp/recruit/" target="_blank">採用 | 株式会社コパイロツト</a></li>
<li><a href="https://blog.copilot.jp/" target="_blank">COPILOT BLOG</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/078_SgumA.mp3</guid>
      <pubDate>Sat, 20 Aug 2022 00:18:47 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:49:02</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/431de3cd-e3b0-429a-ae2b-e6b907519afc.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="47086863"/>
    </item>
    <item>
      <title>76. モダンウェブフロントエンド(2022)に至る歴史 - React Server Component、SSR Streaming w/ morishin127</title>
      <description>
        <![CDATA[<p>2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://techlife.cookpad.com/entry/2022/06/21/130736" target="_blank">モダンウェブフロントエンド勉強会を開催しました</a></li>
<li>そもそもWebページのダウンロードって、どう始まった？</li>
<li>JavaScriptがマウスカーソルをキラキラさせていた時代</li>
<li>Ajaxの登場や、jQuery</li>
<li>フロントエンドMVC、Backbone.js、Knockout.js</li>
<li>Reactは何が革命的だったのか？</li>
<li>手続き型の実装は何が辛かったのか？</li>
<li>SPA(Single Page Application)</li>
<li>MPA(Multi Page Application)</li>
<li>CSR(Client Side Rendering)</li>
<li>サーバーサイドがJSONを返す時代へ</li>
<li>History API</li>
<li>SPAが抱える課題は？</li>
<li><a href="https://techlife.cookpad.com/entry/dynamic-og-image" target="_blank">レシピページのOGP画像を動的に生成する</a></li>
<li>SSR(Server Side Rendering) と Next.js</li>
<li>Hydrate は何を意味する？</li>
<li>SSG(Static Site Generation) とは？</li>
<li>Jekyll と Hugo</li>
<li>ISR(Incremental Static Regeneration) とは？</li>
<li>Vercel へのデプロイ</li>
<li>SSR が抱える課題は？</li>
<li>SSR Streaming とは？</li>
<li>Streaming HTML と Selective Hydration</li>
<li>Suspense Component</li>
<li>
<a href="https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/" target="_blank">algebraic effects</a> とは</li>
<li>React Hooks とは？</li>
<li>Class Component の課題は何だったのか？</li>
<li><a href="https://morishin.hatenablog.com/entry/impressions-of-react-hooks" target="_blank">React Hooks のモチベーション</a></li>
<li>React Server Component とは何か？</li>
<li>今Webアプリを作るならどんな構成にするか？</li>
<li><a href="https://meety.net/matches/IqkoOYweMjDq" target="_blank">Meety</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>76. モダンウェブフロントエンド(2022)に至る歴史 - React Server Component、SSR Streaming w/ morishin127</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/2022/06/21/130736" target="_blank"&gt;モダンウェブフロントエンド勉強会を開催しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもWebページのダウンロードって、どう始まった？&lt;/li&gt;
&lt;li&gt;JavaScriptがマウスカーソルをキラキラさせていた時代&lt;/li&gt;
&lt;li&gt;Ajaxの登場や、jQuery&lt;/li&gt;
&lt;li&gt;フロントエンドMVC、Backbone.js、Knockout.js&lt;/li&gt;
&lt;li&gt;Reactは何が革命的だったのか？&lt;/li&gt;
&lt;li&gt;手続き型の実装は何が辛かったのか？&lt;/li&gt;
&lt;li&gt;SPA(Single Page Application)&lt;/li&gt;
&lt;li&gt;MPA(Multi Page Application)&lt;/li&gt;
&lt;li&gt;CSR(Client Side Rendering)&lt;/li&gt;
&lt;li&gt;サーバーサイドがJSONを返す時代へ&lt;/li&gt;
&lt;li&gt;History API&lt;/li&gt;
&lt;li&gt;SPAが抱える課題は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techlife.cookpad.com/entry/dynamic-og-image" target="_blank"&gt;レシピページのOGP画像を動的に生成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSR(Server Side Rendering) と Next.js&lt;/li&gt;
&lt;li&gt;Hydrate は何を意味する？&lt;/li&gt;
&lt;li&gt;SSG(Static Site Generation) とは？&lt;/li&gt;
&lt;li&gt;Jekyll と Hugo&lt;/li&gt;
&lt;li&gt;ISR(Incremental Static Regeneration) とは？&lt;/li&gt;
&lt;li&gt;Vercel へのデプロイ&lt;/li&gt;
&lt;li&gt;SSR が抱える課題は？&lt;/li&gt;
&lt;li&gt;SSR Streaming とは？&lt;/li&gt;
&lt;li&gt;Streaming HTML と Selective Hydration&lt;/li&gt;
&lt;li&gt;Suspense Component&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/" target="_blank"&gt;algebraic effects&lt;/a&gt; とは&lt;/li&gt;
&lt;li&gt;React Hooks とは？&lt;/li&gt;
&lt;li&gt;Class Component の課題は何だったのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morishin.hatenablog.com/entry/impressions-of-react-hooks" target="_blank"&gt;React Hooks のモチベーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;React Server Component とは何か？&lt;/li&gt;
&lt;li&gt;今Webアプリを作るならどんな構成にするか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/IqkoOYweMjDq" target="_blank"&gt;Meety&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>2022年のモダンウェブフロントエンドまでに至る歴史、SPA、CSR、SSR、SSR Streaming、React Server Component などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://techlife.cookpad.com/entry/2022/06/21/130736" target="_blank">モダンウェブフロントエンド勉強会を開催しました</a></li>
<li>そもそもWebページのダウンロードって、どう始まった？</li>
<li>JavaScriptがマウスカーソルをキラキラさせていた時代</li>
<li>Ajaxの登場や、jQuery</li>
<li>フロントエンドMVC、Backbone.js、Knockout.js</li>
<li>Reactは何が革命的だったのか？</li>
<li>手続き型の実装は何が辛かったのか？</li>
<li>SPA(Single Page Application)</li>
<li>MPA(Multi Page Application)</li>
<li>CSR(Client Side Rendering)</li>
<li>サーバーサイドがJSONを返す時代へ</li>
<li>History API</li>
<li>SPAが抱える課題は？</li>
<li><a href="https://techlife.cookpad.com/entry/dynamic-og-image" target="_blank">レシピページのOGP画像を動的に生成する</a></li>
<li>SSR(Server Side Rendering) と Next.js</li>
<li>Hydrate は何を意味する？</li>
<li>SSG(Static Site Generation) とは？</li>
<li>Jekyll と Hugo</li>
<li>ISR(Incremental Static Regeneration) とは？</li>
<li>Vercel へのデプロイ</li>
<li>SSR が抱える課題は？</li>
<li>SSR Streaming とは？</li>
<li>Streaming HTML と Selective Hydration</li>
<li>Suspense Component</li>
<li>
<a href="https://overreacted.io/ja/algebraic-effects-for-the-rest-of-us/" target="_blank">algebraic effects</a> とは</li>
<li>React Hooks とは？</li>
<li>Class Component の課題は何だったのか？</li>
<li><a href="https://morishin.hatenablog.com/entry/impressions-of-react-hooks" target="_blank">React Hooks のモチベーション</a></li>
<li>React Server Component とは何か？</li>
<li>今Webアプリを作るならどんな構成にするか？</li>
<li><a href="https://meety.net/matches/IqkoOYweMjDq" target="_blank">Meety</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/077_sPtgl.mp3</guid>
      <pubDate>Tue, 05 Jul 2022 16:24:11 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:38:44</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/00aed795-f370-491e-a61b-cb5f06852962.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37195441"/>
    </item>
    <item>
      <title>75. GitHub Copilotの裏側 と 難解なテーマをわかりやすく説明する方法 w/ AIcia_Solid</title>
      <description>
        <![CDATA[<p>GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured" target="_blank">AIcia Solid Project</a></li>
<li>
<a href="https://github.com/features/copilot/" target="_blank">GitHub Copilot</a> とは？(補足: 本ep公開時点でGA)</li>
<li>GitHub Copilot の裏側で何が動いているのか？</li>
<li>GPT(Generative Pre-trained Transformer) とは何か？</li>
<li>言語モデルのパラメータとは？</li>
<li>パラメータって GPT では、どのぐらいの数があるのか？</li>
<li>パラメータとは数が多ければいいもの？</li>
<li>Youtube: <a href="https://www.youtube.com/watch?v=n1QYofU3_hY" target="_blank">【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】</a>
</li>
<li>論文: <a href="https://arxiv.org/abs/2001.08361" target="_blank">Scaling Laws for Neural Language Models</a>
</li>
<li>学習の計算量と時間量</li>
<li><a href="https://openai.com/dall-e-2/" target="_blank">DALL·E 2</a></li>
<li>Transformer は並列が得意、とあるがもともとはできなかった？</li>
<li>LSTM(Long Short Term Memory)</li>
<li>Multi-head Attention とは？</li>
<li>GPT -&gt; GPT-2 -&gt; GPT-3 と進化するときに何が変わった？</li>
<li>GPT-3 の弱点は？</li>
<li><a href="https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/" target="_blank">The Google engineer who thinks the company’s AI has come to life</a></li>
<li>GPT-3 を使う側は何をすればいい？</li>
<li>Fine Tuning と <a href="https://huggingface.co/" target="_blank">Hugging Face</a>
</li>
<li>YouTube: <a href="https://www.youtube.com/watch?v=hMQG-oF9pgw" target="_blank">【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】</a>
</li>
<li>Few-Shot、 One-Shot、 Zero-Shot</li>
<li>動画でわかりやすく説明するために何を意識している？</li>
<li>数式にこもっている魂を抜き出して説明する</li>
<li>非専門領域の人にわかりやすく伝える方法</li>
<li>なぜこの活動(AIcia Solid Project)を続けられている？</li>
<li>(収録で間に合わなかった重大告知) 2022/7/26に書籍 <a href="https://amzn.to/3yhE4YI" target="_blank">分析モデル入門</a> が発売開始！</li>
</ul>
訂正
<p>冒頭で "fukabori.fm の76回です" と言っていますが "75回" の間違いです。</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>75. GitHub Copilotの裏側 と 難解なテーマをわかりやすく説明する方法 w/ AIcia_Solid</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured" target="_blank"&gt;AIcia Solid Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/features/copilot/" target="_blank"&gt;GitHub Copilot&lt;/a&gt; とは？(補足: 本ep公開時点でGA)&lt;/li&gt;
&lt;li&gt;GitHub Copilot の裏側で何が動いているのか？&lt;/li&gt;
&lt;li&gt;GPT(Generative Pre-trained Transformer) とは何か？&lt;/li&gt;
&lt;li&gt;言語モデルのパラメータとは？&lt;/li&gt;
&lt;li&gt;パラメータって GPT では、どのぐらいの数があるのか？&lt;/li&gt;
&lt;li&gt;パラメータとは数が多ければいいもの？&lt;/li&gt;
&lt;li&gt;Youtube: &lt;a href="https://www.youtube.com/watch?v=n1QYofU3_hY" target="_blank"&gt;【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;論文: &lt;a href="https://arxiv.org/abs/2001.08361" target="_blank"&gt;Scaling Laws for Neural Language Models&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;学習の計算量と時間量&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openai.com/dall-e-2/" target="_blank"&gt;DALL·E 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Transformer は並列が得意、とあるがもともとはできなかった？&lt;/li&gt;
&lt;li&gt;LSTM(Long Short Term Memory)&lt;/li&gt;
&lt;li&gt;Multi-head Attention とは？&lt;/li&gt;
&lt;li&gt;GPT -&amp;gt; GPT-2 -&amp;gt; GPT-3 と進化するときに何が変わった？&lt;/li&gt;
&lt;li&gt;GPT-3 の弱点は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/" target="_blank"&gt;The Google engineer who thinks the company’s AI has come to life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GPT-3 を使う側は何をすればいい？&lt;/li&gt;
&lt;li&gt;Fine Tuning と &lt;a href="https://huggingface.co/" target="_blank"&gt;Hugging Face&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;YouTube: &lt;a href="https://www.youtube.com/watch?v=hMQG-oF9pgw" target="_blank"&gt;【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Few-Shot、 One-Shot、 Zero-Shot&lt;/li&gt;
&lt;li&gt;動画でわかりやすく説明するために何を意識している？&lt;/li&gt;
&lt;li&gt;数式にこもっている魂を抜き出して説明する&lt;/li&gt;
&lt;li&gt;非専門領域の人にわかりやすく伝える方法&lt;/li&gt;
&lt;li&gt;なぜこの活動(AIcia Solid Project)を続けられている？&lt;/li&gt;
&lt;li&gt;(収録で間に合わなかった重大告知) 2022/7/26に書籍 &lt;a href="https://amzn.to/3yhE4YI" target="_blank"&gt;分析モデル入門&lt;/a&gt; が発売開始！&lt;/li&gt;
&lt;/ul&gt;
訂正
&lt;p&gt;冒頭で "fukabori.fm の76回です" と言っていますが "75回" の間違いです。&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>GitHub Copilotの裏側、GPT、GPT-3、Scaling Law、Multi-head Attention、難解なトピックをわかりやすくする説明する方法などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://www.youtube.com/channel/UC2lJYodMaAfFeFQrGUwhlaQ/featured" target="_blank">AIcia Solid Project</a></li>
<li>
<a href="https://github.com/features/copilot/" target="_blank">GitHub Copilot</a> とは？(補足: 本ep公開時点でGA)</li>
<li>GitHub Copilot の裏側で何が動いているのか？</li>
<li>GPT(Generative Pre-trained Transformer) とは何か？</li>
<li>言語モデルのパラメータとは？</li>
<li>パラメータって GPT では、どのぐらいの数があるのか？</li>
<li>パラメータとは数が多ければいいもの？</li>
<li>Youtube: <a href="https://www.youtube.com/watch?v=n1QYofU3_hY" target="_blank">【深層学習】Scaling Law - 大きい Transformer は強い【ディープラーニングの世界vol.38】</a>
</li>
<li>論文: <a href="https://arxiv.org/abs/2001.08361" target="_blank">Scaling Laws for Neural Language Models</a>
</li>
<li>学習の計算量と時間量</li>
<li><a href="https://openai.com/dall-e-2/" target="_blank">DALL·E 2</a></li>
<li>Transformer は並列が得意、とあるがもともとはできなかった？</li>
<li>LSTM(Long Short Term Memory)</li>
<li>Multi-head Attention とは？</li>
<li>GPT -&gt; GPT-2 -&gt; GPT-3 と進化するときに何が変わった？</li>
<li>GPT-3 の弱点は？</li>
<li><a href="https://www.washingtonpost.com/technology/2022/06/11/google-ai-lamda-blake-lemoine/" target="_blank">The Google engineer who thinks the company’s AI has come to life</a></li>
<li>GPT-3 を使う側は何をすればいい？</li>
<li>Fine Tuning と <a href="https://huggingface.co/" target="_blank">Hugging Face</a>
</li>
<li>YouTube: <a href="https://www.youtube.com/watch?v=hMQG-oF9pgw" target="_blank">【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】</a>
</li>
<li>Few-Shot、 One-Shot、 Zero-Shot</li>
<li>動画でわかりやすく説明するために何を意識している？</li>
<li>数式にこもっている魂を抜き出して説明する</li>
<li>非専門領域の人にわかりやすく伝える方法</li>
<li>なぜこの活動(AIcia Solid Project)を続けられている？</li>
<li>(収録で間に合わなかった重大告知) 2022/7/26に書籍 <a href="https://amzn.to/3yhE4YI" target="_blank">分析モデル入門</a> が発売開始！</li>
</ul>
訂正
<p>冒頭で "fukabori.fm の76回です" と言っていますが "75回" の間違いです。</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/076_uKSat.mp3</guid>
      <pubDate>Fri, 24 Jun 2022 21:39:28 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/50/94/a6/87/5094a687-2db8-4aa2-8c3e-1e76c7efa684/7612604563a9d9d08a6fbe899b18fd94b0f1f5b0c7edf545ce7aaba336d8b2cdbccada79eda6cba544e6b0cc0a444185ebb88956a17be71c9a2bd11a426cb943.jpeg"/>
      <itunes:duration>00:40:29</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/95e96337-7737-42d1-9aca-306e1ca1e3f9.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="38878981"/>
    </item>
    <item>
      <title>74. PMFしているスタートアップがスケールする上での組織課題と解法 w/ kameike</title>
      <description>
        <![CDATA[<p>タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>タイミーのプロダクトとは</li>
<li>スタートアップがスケールするにあたっての組織課題とは？</li>
<li>プロダクトの優先順位を決める上で意識していることは？</li>
<li>プロダクトバックログの優先順位の判断はどのようにしている？</li>
<li>CTOとしてのビジョン、未来の組織とは？</li>
<li>専門性を分化させて、プロセスを高速化させる</li>
<li>採用は答え合わせ</li>
<li>Engineering Manager の責務と Tech Lead の責務</li>
<li><a href="https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/" target="_blank">Google re:Work</a></li>
<li>プロダクトHRとは何をしている？</li>
<li>セールスの採用とエンジニアの採用との違いは？</li>
<li>タイミーにおけるエンジニアの目標設計・評価とは？</li>
<li>キャリアラダーの上げ下げは、誰が・どのように判断している？</li>
<li><a href="https://www.youtube.com/watch?v=uJL3M7R8MLc" target="_blank">チームトポロジーを成功させる実践方法の探求 - Team Topologies Study</a></li>
<li>タイミーにおける採用戦略とは？</li>
<li>採用で必要な人数はどのように決定している？</li>
<li>タイミーにおけるコミュニケーション設計とは？</li>
<li>コミュニケーションで上手くいかなかったこと・上手くいったこと</li>
<li>伝わらないと透明性は出ない</li>
<li>組織としてドキュメントを書く力をどのようにつけていくか？</li>
<li><a href="https://twitter.com/TimeeDev" target="_blank">タイミーエンジニア公式Twitter</a></li>
<li><a href="https://twitter.com/kameike" target="_blank">kameikeさんのTwitter</a></li>
<li><a href="https://meety.net/matches/AXfZQZhoWeBe" target="_blank">fukabori用のmeety</a></li>
<li><a href="https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1" target="_blank">エントランスブック</a></li>
</ul>
エピソード提供スポンサー
<ul>
<li><a href="https://timee.co.jp/" target="_blank">株式会社タイミー</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>74. PMFしているスタートアップがスケールする上での組織課題と解法 w/ kameike</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;タイミーのプロダクトとは&lt;/li&gt;
&lt;li&gt;スタートアップがスケールするにあたっての組織課題とは？&lt;/li&gt;
&lt;li&gt;プロダクトの優先順位を決める上で意識していることは？&lt;/li&gt;
&lt;li&gt;プロダクトバックログの優先順位の判断はどのようにしている？&lt;/li&gt;
&lt;li&gt;CTOとしてのビジョン、未来の組織とは？&lt;/li&gt;
&lt;li&gt;専門性を分化させて、プロセスを高速化させる&lt;/li&gt;
&lt;li&gt;採用は答え合わせ&lt;/li&gt;
&lt;li&gt;Engineering Manager の責務と Tech Lead の責務&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/" target="_blank"&gt;Google re:Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクトHRとは何をしている？&lt;/li&gt;
&lt;li&gt;セールスの採用とエンジニアの採用との違いは？&lt;/li&gt;
&lt;li&gt;タイミーにおけるエンジニアの目標設計・評価とは？&lt;/li&gt;
&lt;li&gt;キャリアラダーの上げ下げは、誰が・どのように判断している？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uJL3M7R8MLc" target="_blank"&gt;チームトポロジーを成功させる実践方法の探求 - Team Topologies Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;タイミーにおける採用戦略とは？&lt;/li&gt;
&lt;li&gt;採用で必要な人数はどのように決定している？&lt;/li&gt;
&lt;li&gt;タイミーにおけるコミュニケーション設計とは？&lt;/li&gt;
&lt;li&gt;コミュニケーションで上手くいかなかったこと・上手くいったこと&lt;/li&gt;
&lt;li&gt;伝わらないと透明性は出ない&lt;/li&gt;
&lt;li&gt;組織としてドキュメントを書く力をどのようにつけていくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/TimeeDev" target="_blank"&gt;タイミーエンジニア公式Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kameike" target="_blank"&gt;kameikeさんのTwitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meety.net/matches/AXfZQZhoWeBe" target="_blank"&gt;fukabori用のmeety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1" target="_blank"&gt;エントランスブック&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
エピソード提供スポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://timee.co.jp/" target="_blank"&gt;株式会社タイミー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>タイミーCTOのkameike さんをゲストに、PMFしているスタートアップがスケールする上での組織課題と解法、プロダクトHR、エンジニアの目標・評価設計、コミュニケーション設計などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>タイミーのプロダクトとは</li>
<li>スタートアップがスケールするにあたっての組織課題とは？</li>
<li>プロダクトの優先順位を決める上で意識していることは？</li>
<li>プロダクトバックログの優先順位の判断はどのようにしている？</li>
<li>CTOとしてのビジョン、未来の組織とは？</li>
<li>専門性を分化させて、プロセスを高速化させる</li>
<li>採用は答え合わせ</li>
<li>Engineering Manager の責務と Tech Lead の責務</li>
<li><a href="https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/define-effectiveness/" target="_blank">Google re:Work</a></li>
<li>プロダクトHRとは何をしている？</li>
<li>セールスの採用とエンジニアの採用との違いは？</li>
<li>タイミーにおけるエンジニアの目標設計・評価とは？</li>
<li>キャリアラダーの上げ下げは、誰が・どのように判断している？</li>
<li><a href="https://www.youtube.com/watch?v=uJL3M7R8MLc" target="_blank">チームトポロジーを成功させる実践方法の探求 - Team Topologies Study</a></li>
<li>タイミーにおける採用戦略とは？</li>
<li>採用で必要な人数はどのように決定している？</li>
<li>タイミーにおけるコミュニケーション設計とは？</li>
<li>コミュニケーションで上手くいかなかったこと・上手くいったこと</li>
<li>伝わらないと透明性は出ない</li>
<li>組織としてドキュメントを書く力をどのようにつけていくか？</li>
<li><a href="https://twitter.com/TimeeDev" target="_blank">タイミーエンジニア公式Twitter</a></li>
<li><a href="https://twitter.com/kameike" target="_blank">kameikeさんのTwitter</a></li>
<li><a href="https://meety.net/matches/AXfZQZhoWeBe" target="_blank">fukabori用のmeety</a></li>
<li><a href="https://timee.notion.site/Team-Topologies-Study-98b49ec983c64965a98595456873e6f1" target="_blank">エントランスブック</a></li>
</ul>
エピソード提供スポンサー
<ul>
<li><a href="https://timee.co.jp/" target="_blank">株式会社タイミー</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/075_eFUfv.mp3</guid>
      <pubDate>Tue, 14 Jun 2022 16:50:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:52:47</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/e8fee33c-9d40-44fd-a052-f9fb0dd2a7fe.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="50683820"/>
    </item>
    <item>
      <title>73. Value Object w/ kumagi</title>
      <description>
        <![CDATA[<p>kumagi さんをゲストに、Value Object について語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://kumagi.hatenablog.com/entry/value-object" target="_blank">Value Objectについて整理しよう</a></li>
<li>Value Object とは何か？</li>
<li>Value Object で複数の値をくるむcompoundの具体例は？</li>
<li>Value Object のメリット・デメリットは？</li>
<li>別名参照問題</li>
<li>Value Object は何でないか？</li>
<li>YAGNI原則</li>
<li>不変オブジェクト (Immutable Object)</li>
<li>書籍: <a href="https://amzn.to/3a3AlnV" target="_blank">リファクタリング 既存のコードを安全に改善する（第2版）</a>
</li>
<li><a href="https://martinfowler.com/bliki/ValueObject.html" target="_blank">マーチン・ファウラー氏のblog記事 - ValueObject</a></li>
<li>Value Object Obsession と Primitive Obsession</li>
<li>Primitive Obsession のメリットは？</li>
<li>Value Objectの言説はどこから生まれてきたのか？</li>
<li><a href="https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/" target="_blank">「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう</a></li>
<li>書籍: <a href="https://amzn.to/3sE2vw5" target="_blank">Effective C++ 第3版</a>
</li>
<li>書籍: <a href="https://amzn.to/3wflbod" target="_blank">Effective Java 第3版</a>
</li>
<li>書籍: <a href="https://amzn.to/38uNc1Y" target="_blank">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a>
</li>
<li>書籍: <a href="https://amzn.to/3wspQlu" target="_blank">CODE COMPLETE 第2版 下 完全なプログラミングを目指して</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>73. Value Object w/ kumagi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;kumagi さんをゲストに、Value Object について語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kumagi.hatenablog.com/entry/value-object" target="_blank"&gt;Value Objectについて整理しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object とは何か？&lt;/li&gt;
&lt;li&gt;Value Object で複数の値をくるむcompoundの具体例は？&lt;/li&gt;
&lt;li&gt;Value Object のメリット・デメリットは？&lt;/li&gt;
&lt;li&gt;別名参照問題&lt;/li&gt;
&lt;li&gt;Value Object は何でないか？&lt;/li&gt;
&lt;li&gt;YAGNI原則&lt;/li&gt;
&lt;li&gt;不変オブジェクト (Immutable Object)&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3a3AlnV" target="_blank"&gt;リファクタリング 既存のコードを安全に改善する（第2版）&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/bliki/ValueObject.html" target="_blank"&gt;マーチン・ファウラー氏のblog記事 - ValueObject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Value Object Obsession と Primitive Obsession&lt;/li&gt;
&lt;li&gt;Primitive Obsession のメリットは？&lt;/li&gt;
&lt;li&gt;Value Objectの言説はどこから生まれてきたのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/" target="_blank"&gt;「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3sE2vw5" target="_blank"&gt;Effective C++ 第3版&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wflbod" target="_blank"&gt;Effective Java 第3版&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/38uNc1Y" target="_blank"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3wspQlu" target="_blank"&gt;CODE COMPLETE 第2版 下 完全なプログラミングを目指して&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>kumagi さんをゲストに、Value Object について語っていただいたエピソードです。</p>
話したネタ
<ul>
<li><a href="https://kumagi.hatenablog.com/entry/value-object" target="_blank">Value Objectについて整理しよう</a></li>
<li>Value Object とは何か？</li>
<li>Value Object で複数の値をくるむcompoundの具体例は？</li>
<li>Value Object のメリット・デメリットは？</li>
<li>別名参照問題</li>
<li>Value Object は何でないか？</li>
<li>YAGNI原則</li>
<li>不変オブジェクト (Immutable Object)</li>
<li>書籍: <a href="https://amzn.to/3a3AlnV" target="_blank">リファクタリング 既存のコードを安全に改善する（第2版）</a>
</li>
<li><a href="https://martinfowler.com/bliki/ValueObject.html" target="_blank">マーチン・ファウラー氏のblog記事 - ValueObject</a></li>
<li>Value Object Obsession と Primitive Obsession</li>
<li>Primitive Obsession のメリットは？</li>
<li>Value Objectの言説はどこから生まれてきたのか？</li>
<li><a href="https://www.altus5.co.jp/blog/programming/2019/09/24/object-oriented-programming-exercise/" target="_blank">「オブジェクト指向エクササイズ」でクセの強いコードを矯正しよう</a></li>
<li>書籍: <a href="https://amzn.to/3sE2vw5" target="_blank">Effective C++ 第3版</a>
</li>
<li>書籍: <a href="https://amzn.to/3wflbod" target="_blank">Effective Java 第3版</a>
</li>
<li>書籍: <a href="https://amzn.to/38uNc1Y" target="_blank">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a>
</li>
<li>書籍: <a href="https://amzn.to/3wspQlu" target="_blank">CODE COMPLETE 第2版 下 完全なプログラミングを目指して</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/074_joNbx.mp3</guid>
      <pubDate>Sun, 15 May 2022 16:20:19 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:26:38</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/982877ef-f0a6-411a-9fe4-03bceee6025d.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="25576176"/>
    </item>
    <item>
      <title>72. 2022年のフロントエンド開発、特にCSS事情 w/ tsukkee</title>
      <description>
        <![CDATA[<p>tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>最近のフロントエンド開発ってどんな感じ？</li>
<li>なぜ、 transpile などの変換が必要なのか？</li>
<li>CSS Grid とは？ 何が良いのか？</li>
<li>もともと昔はどうやってレイアウトしていた？</li>
<li>Table から Float へ</li>
<li><a href="http://abehiroshi.la.coocan.jp/" target="_blank">阿部 寛のホームページ</a></li>
<li>Flexbox とは</li>
<li><a href="https://ja.wikipedia.org/wiki/XUL" target="_blank">XUL</a></li>
<li>Grid と Flexbox の違いは？</li>
<li>HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？</li>
<li>CSSで変数利用って、どう進化してきた？</li>
<li>
<a href="https://sass-lang.com/" target="_blank">Sass</a> や SCSS</li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties" target="_blank">Custom Properties</a></li>
<li>Custom Properties のメリットとは？</li>
<li>Web Component との関連</li>
<li>この先、SassやSCSSはこの先どうなっていく？</li>
<li><a href="https://www.w3.org/TR/css-nesting-1/" target="_blank">CSS Nesting Module</a></li>
<li>CSS Animation / Transition の進化</li>
<li>JSでアニメーション実装をすると、何が難しいのか？</li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/" target="_blank">Apple Interface Guideline</a></li>
<li>アニメーションの使い時はいつか？</li>
<li>アニメーション習いたてで使いたくなっちゃう問題</li>
<li>Animation と SVG との組み合わせが便利</li>
<li>CSS の仕様を、どうやって追っかけているか？</li>
<li><a href="https://web.dev/" target="_blank">web.dev</a></li>
<li>チームでフロントエンド情報をどうやって学習しているか？</li>
<li>CSS設計をどうやって決めている？</li>
<li>Shadow DOM と スコープ</li>
<li>実際のプロダクト開発では何を使っている？</li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/@layer" target="_blank">CSS Layer</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/:has" target="_blank">:has() 疑似クラス</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/Guide/Houdini" target="_blank">CSS Houdini</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide" target="_blank">Painting API</a></li>
<li><a href="https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md" target="_blank">Layout API</a></li>
<li>採用: <a href="https://herp.careers/v1/stockmark" target="_blank">ストックマーク社 エンジニア募集中</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>72. 2022年のフロントエンド開発、特にCSS事情 w/ tsukkee</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;最近のフロントエンド開発ってどんな感じ？&lt;/li&gt;
&lt;li&gt;なぜ、 transpile などの変換が必要なのか？&lt;/li&gt;
&lt;li&gt;CSS Grid とは？ 何が良いのか？&lt;/li&gt;
&lt;li&gt;もともと昔はどうやってレイアウトしていた？&lt;/li&gt;
&lt;li&gt;Table から Float へ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://abehiroshi.la.coocan.jp/" target="_blank"&gt;阿部 寛のホームページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flexbox とは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/XUL" target="_blank"&gt;XUL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Grid と Flexbox の違いは？&lt;/li&gt;
&lt;li&gt;HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？&lt;/li&gt;
&lt;li&gt;CSSで変数利用って、どう進化してきた？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sass-lang.com/" target="_blank"&gt;Sass&lt;/a&gt; や SCSS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties" target="_blank"&gt;Custom Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Custom Properties のメリットとは？&lt;/li&gt;
&lt;li&gt;Web Component との関連&lt;/li&gt;
&lt;li&gt;この先、SassやSCSSはこの先どうなっていく？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/css-nesting-1/" target="_blank"&gt;CSS Nesting Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS Animation / Transition の進化&lt;/li&gt;
&lt;li&gt;JSでアニメーション実装をすると、何が難しいのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/design/human-interface-guidelines/" target="_blank"&gt;Apple Interface Guideline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アニメーションの使い時はいつか？&lt;/li&gt;
&lt;li&gt;アニメーション習いたてで使いたくなっちゃう問題&lt;/li&gt;
&lt;li&gt;Animation と SVG との組み合わせが便利&lt;/li&gt;
&lt;li&gt;CSS の仕様を、どうやって追っかけているか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/" target="_blank"&gt;web.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;チームでフロントエンド情報をどうやって学習しているか？&lt;/li&gt;
&lt;li&gt;CSS設計をどうやって決めている？&lt;/li&gt;
&lt;li&gt;Shadow DOM と スコープ&lt;/li&gt;
&lt;li&gt;実際のプロダクト開発では何を使っている？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/@layer" target="_blank"&gt;CSS Layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/CSS/:has" target="_blank"&gt;:has() 疑似クラス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/Guide/Houdini" target="_blank"&gt;CSS Houdini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide" target="_blank"&gt;Painting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md" target="_blank"&gt;Layout API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用: &lt;a href="https://herp.careers/v1/stockmark" target="_blank"&gt;ストックマーク社 エンジニア募集中&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>tsukkee さんをゲストに、CSS Grid、Custom Properties、CSS Transitionなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>最近のフロントエンド開発ってどんな感じ？</li>
<li>なぜ、 transpile などの変換が必要なのか？</li>
<li>CSS Grid とは？ 何が良いのか？</li>
<li>もともと昔はどうやってレイアウトしていた？</li>
<li>Table から Float へ</li>
<li><a href="http://abehiroshi.la.coocan.jp/" target="_blank">阿部 寛のホームページ</a></li>
<li>Flexbox とは</li>
<li><a href="https://ja.wikipedia.org/wiki/XUL" target="_blank">XUL</a></li>
<li>Grid と Flexbox の違いは？</li>
<li>HTML(意味) と CSS(スタイル) の分離って、実際の開発ではどう？</li>
<li>CSSで変数利用って、どう進化してきた？</li>
<li>
<a href="https://sass-lang.com/" target="_blank">Sass</a> や SCSS</li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/Using_CSS_custom_properties" target="_blank">Custom Properties</a></li>
<li>Custom Properties のメリットとは？</li>
<li>Web Component との関連</li>
<li>この先、SassやSCSSはこの先どうなっていく？</li>
<li><a href="https://www.w3.org/TR/css-nesting-1/" target="_blank">CSS Nesting Module</a></li>
<li>CSS Animation / Transition の進化</li>
<li>JSでアニメーション実装をすると、何が難しいのか？</li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/" target="_blank">Apple Interface Guideline</a></li>
<li>アニメーションの使い時はいつか？</li>
<li>アニメーション習いたてで使いたくなっちゃう問題</li>
<li>Animation と SVG との組み合わせが便利</li>
<li>CSS の仕様を、どうやって追っかけているか？</li>
<li><a href="https://web.dev/" target="_blank">web.dev</a></li>
<li>チームでフロントエンド情報をどうやって学習しているか？</li>
<li>CSS設計をどうやって決めている？</li>
<li>Shadow DOM と スコープ</li>
<li>実際のプロダクト開発では何を使っている？</li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/@layer" target="_blank">CSS Layer</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/:has" target="_blank">:has() 疑似クラス</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/Guide/Houdini" target="_blank">CSS Houdini</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/API/CSS_Painting_API/Guide" target="_blank">Painting API</a></li>
<li><a href="https://github.com/w3c/css-houdini-drafts/blob/main/css-layout-api/EXPLAINER.md" target="_blank">Layout API</a></li>
<li>採用: <a href="https://herp.careers/v1/stockmark" target="_blank">ストックマーク社 エンジニア募集中</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/073_aysdL.mp3</guid>
      <pubDate>Mon, 02 May 2022 14:53:54 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:45:49</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/935af622-6f38-4611-ac67-aaed0df11143.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="43995637"/>
    </item>
    <item>
      <title>71. アジャイルソフトウェア開発と統計的品質管理 w/ sakata_akinori</title>
      <description>
        <![CDATA[<p>sakata_akinori さんに &quot;アジャイル開発は品質が悪い&quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。</p>
<ul>
<li><a href="https://www.slideshare.net/sakataakinori/jasst-tokyo-2022">JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用</a></li>
<li>書籍: <a href="https://amzn.to/3uKDSzf">エクストリームプログラミング</a></li>
<li>「アジャイル開発は品質が悪い？」という風評・言説</li>
<li>この言説はどこからやってきたのか？なぜ生まれたのか？</li>
<li>ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール</li>
<li>コードの複雑性をマネジメントできない状態</li>
<li>マネジメントプロセスの原因はどこにあるのか？</li>
<li>絶対イヤだ or 偉くなる</li>
<li>バグ密度曲線などの指標は、どこからきて、何がしたかったのか？</li>
<li>品質指標は、いつもと同じかどうかを見ていただけ</li>
<li>メインフレーム や COBOL</li>
<li>いつもと同じかどうか、を見るのは過去において意味があったのではないか</li>
<li>ウォーターフォールのメトリクスはコストに由来しているのではないか</li>
<li>2022年において、いつもと同じかどうかを見る手法は意味があるのか？</li>
<li>統計的品質管理の考え方自体は現代でも有効</li>
<li>アジャイル開発では、何を指標として追えばいいのか？</li>
<li>スピードに着目したメトリクス</li>
<li>リードタイム、サイクルタイム</li>
<li>審議プロセスにおける納得感とは？</li>
<li>そもそもリスクを小さくしている、ということで納得する</li>
<li>常に上限値におさまるというのは統計的にありえない</li>
<li>代用特性とは？ と 温度計での例</li>
<li>ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)</li>
<li><a href="https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB">狩野モデル</a></li>
<li>&quot;品質は誰かにとっての価値である&quot; / ワインバーグ</li>
<li><a href="http://www.juse.or.jp/sqip/squbok/index.html">SQuBOK</a></li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93">ホーソン実験</a></li>
<li>魅了的品質をどう高めていくか？</li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>71. アジャイルソフトウェア開発と統計的品質管理 w/ sakata_akinori</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>sakata_akinori さんに "アジャイル開発は品質が悪い" という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。

JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用
書籍: エクストリームプログラミング
「アジャイル開発は品質が悪い？」という風評・言説
この言説はどこからやってきたのか？なぜ生まれたのか？
ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール
コードの複雑性をマネジメントできない状態
マネジメントプロセスの原因はどこにあるのか？
絶対イヤだ or 偉くなる
バグ密度曲線などの指標は、どこからきて、何がしたかったのか？
品質指標は、いつもと同じかどうかを見ていただけ
メインフレーム や COBOL
いつもと同じかどうか、を見るのは過去において意味があったのではないか
ウォーターフォールのメトリクスはコストに由来しているのではないか
2022年において、いつもと同じかどうかを見る手法は意味があるのか？
統計的品質管理の考え方自体は現代でも有効
アジャイル開発では、何を指標として追えばいいのか？
スピードに着目したメトリクス
リードタイム、サイクルタイム
審議プロセスにおける納得感とは？
そもそもリスクを小さくしている、ということで納得する
常に上限値におさまるというのは統計的にありえない
代用特性とは？ と 温度計での例
ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)
狩野モデル
"品質は誰かにとっての価値である" / ワインバーグ
SQuBOK
ホーソン実験
魅了的品質をどう高めていくか？


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>sakata_akinori さんに &quot;アジャイル開発は品質が悪い&quot; という言説、統計的品質管理、ウォーターフォールで利用されるバグ密度などの指標の有効性、代用特性などについて語っていただいたエピソードです。</p>
<ul>
<li><a href="https://www.slideshare.net/sakataakinori/jasst-tokyo-2022">JaSST Tokyo 2022 アジャイルソフトウェア開発への統計的品質管理の応用</a></li>
<li>書籍: <a href="https://amzn.to/3uKDSzf">エクストリームプログラミング</a></li>
<li>「アジャイル開発は品質が悪い？」という風評・言説</li>
<li>この言説はどこからやってきたのか？なぜ生まれたのか？</li>
<li>ハイブリッドアジャイル、ハイブリッドウォーターフォール、ウォータースクラムフォール</li>
<li>コードの複雑性をマネジメントできない状態</li>
<li>マネジメントプロセスの原因はどこにあるのか？</li>
<li>絶対イヤだ or 偉くなる</li>
<li>バグ密度曲線などの指標は、どこからきて、何がしたかったのか？</li>
<li>品質指標は、いつもと同じかどうかを見ていただけ</li>
<li>メインフレーム や COBOL</li>
<li>いつもと同じかどうか、を見るのは過去において意味があったのではないか</li>
<li>ウォーターフォールのメトリクスはコストに由来しているのではないか</li>
<li>2022年において、いつもと同じかどうかを見る手法は意味があるのか？</li>
<li>統計的品質管理の考え方自体は現代でも有効</li>
<li>アジャイル開発では、何を指標として追えばいいのか？</li>
<li>スピードに着目したメトリクス</li>
<li>リードタイム、サイクルタイム</li>
<li>審議プロセスにおける納得感とは？</li>
<li>そもそもリスクを小さくしている、ということで納得する</li>
<li>常に上限値におさまるというのは統計的にありえない</li>
<li>代用特性とは？ と 温度計での例</li>
<li>ソフトウェアにおける品質特性(国際規格ISO/IEC 9126)</li>
<li><a href="https://ja.wikipedia.org/wiki/%E7%8B%A9%E9%87%8E%E3%83%A2%E3%83%87%E3%83%AB">狩野モデル</a></li>
<li>&quot;品質は誰かにとっての価値である&quot; / ワインバーグ</li>
<li><a href="http://www.juse.or.jp/sqip/squbok/index.html">SQuBOK</a></li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%82%BD%E3%83%B3%E5%AE%9F%E9%A8%93">ホーソン実験</a></li>
<li>魅了的品質をどう高めていくか？</li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/072_XpTik.mp3</guid>
      <pubDate>Sun, 17 Apr 2022 08:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:46:12</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/638b2da6-65db-4d85-8556-33ed920f36cf.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="44359262"/>
    </item>
    <item>
      <title>70. チームトポロジー(後編) w/ miholovesq</title>
      <description>
        <![CDATA[<p>書籍"チームトポロジー" 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3vLiz1C" target="_blank">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a>
</li>
<li>チーム間のインタラクションの3モードについて</li>
<li>コラボレーションモードとは？</li>
<li>XaaSモードとは？</li>
<li>ファシリテーションモードとは？</li>
<li>認知負荷を下げるのが重要</li>
<li>サービス境界をどう設定するかがポイント</li>
<li>組織設計をするためにエンジニアリング能力が必要</li>
<li>認知負荷(cognitive load)とは何か？</li>
<li>チームサイズを認知負荷に合わせて設計する</li>
<li>ダンバー数</li>
<li>設計は人を驚かせるべきじゃない</li>
<li><a href="https://amzn.to/3wbEGOX" target="_blank">Clean Code　アジャイルソフトウェア達人の技</a></li>
<li>スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事</li>
<li>モブプログラミング・モブワーク</li>
<li><a href="https://amzn.to/3I9Luip" target="_blank">Amazon audible</a></li>
<li>書籍翻訳の裏話</li>
</ul>
リスナーの皆様へのお願い
<p><a href="https://pitpa.cc/3pfSweB" target="_blank">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>70. チームトポロジー(後編) w/ miholovesq</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;書籍"チームトポロジー" 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C" target="_blank"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;チーム間のインタラクションの3モードについて&lt;/li&gt;
&lt;li&gt;コラボレーションモードとは？&lt;/li&gt;
&lt;li&gt;XaaSモードとは？&lt;/li&gt;
&lt;li&gt;ファシリテーションモードとは？&lt;/li&gt;
&lt;li&gt;認知負荷を下げるのが重要&lt;/li&gt;
&lt;li&gt;サービス境界をどう設定するかがポイント&lt;/li&gt;
&lt;li&gt;組織設計をするためにエンジニアリング能力が必要&lt;/li&gt;
&lt;li&gt;認知負荷(cognitive load)とは何か？&lt;/li&gt;
&lt;li&gt;チームサイズを認知負荷に合わせて設計する&lt;/li&gt;
&lt;li&gt;ダンバー数&lt;/li&gt;
&lt;li&gt;設計は人を驚かせるべきじゃない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3wbEGOX" target="_blank"&gt;Clean Code　アジャイルソフトウェア達人の技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事&lt;/li&gt;
&lt;li&gt;モブプログラミング・モブワーク&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3I9Luip" target="_blank"&gt;Amazon audible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍翻訳の裏話&lt;/li&gt;
&lt;/ul&gt;
リスナーの皆様へのお願い
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB" target="_blank"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>書籍"チームトポロジー" 訳者の miholovesq さんに、3つのインタラクションモード(コラボレーションモード、XaaSモード、ファシリテーションモード)、認知負荷などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3vLiz1C" target="_blank">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a>
</li>
<li>チーム間のインタラクションの3モードについて</li>
<li>コラボレーションモードとは？</li>
<li>XaaSモードとは？</li>
<li>ファシリテーションモードとは？</li>
<li>認知負荷を下げるのが重要</li>
<li>サービス境界をどう設定するかがポイント</li>
<li>組織設計をするためにエンジニアリング能力が必要</li>
<li>認知負荷(cognitive load)とは何か？</li>
<li>チームサイズを認知負荷に合わせて設計する</li>
<li>ダンバー数</li>
<li>設計は人を驚かせるべきじゃない</li>
<li><a href="https://amzn.to/3wbEGOX" target="_blank">Clean Code　アジャイルソフトウェア達人の技</a></li>
<li>スモールチームで小さくて良いのでフィーチャーをデリバリできるのが大事</li>
<li>モブプログラミング・モブワーク</li>
<li><a href="https://amzn.to/3I9Luip" target="_blank">Amazon audible</a></li>
<li>書籍翻訳の裏話</li>
</ul>
リスナーの皆様へのお願い
<p><a href="https://pitpa.cc/3pfSweB" target="_blank">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/071_XlkUu.mp3</guid>
      <pubDate>Wed, 16 Mar 2022 09:39:44 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:19:32</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/bc48a78a-e70d-45a9-a7bf-198c8fcae366.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="18765531"/>
    </item>
    <item>
      <title>69. チームトポロジー(前編) w/ miholovesq</title>
      <description>
        <![CDATA[<p>書籍 "チームトポロジー" 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3vLiz1C" target="_blank">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a>
</li>
<li>書籍: <a href="https://amzn.to/35WSi5y" target="_blank">SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発</a>
</li>
<li>チームトポロジーという書籍の概要</li>
<li>コンウェイの法則とは？</li>
<li><a href="https://en.wikipedia.org/wiki/Conway%27s_law" target="_blank">wikipedia: Conway's law</a></li>
<li>逆コンウェイ戦略とは？</li>
<li>ソフトウェアを設計するように組織を設計する</li>
<li>ストリームアラインドチーム とは？</li>
<li>プラットフォームチーム とは？</li>
<li>イネイブリングチーム とは？</li>
<li>コンプリケイテッドサブシステムチーム とは？</li>
<li>ストリームアラインドチーム と プロダクトチームとの違いは？</li>
<li>アジャイル開発とチームトポロジーとの関連は？</li>
<li>書籍: <a href="https://amzn.to/3hPVh25" target="_blank">LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する</a>
</li>
<li>現代型マネジメントと人間関係論</li>
<li>マインドセットがなくてもアジリティを出せるのではないか</li>
<li><a href="https://agilepbl.org/" target="_blank">Agile PBL祭り 2022</a></li>
<li><a href="https://confengine.com/conferences/agile-pbl-2022/sponsor" target="_blank">Agile PBL祭り 2022 スポンサー募集中</a></li>
<li>Agile PBL祭り での最大のアンラーニングとは？</li>
</ul>
リスナーの皆様へのお願い
<p><a href="https://pitpa.cc/3pfSweB" target="_blank">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>69. チームトポロジー(前編) w/ miholovesq</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;書籍 "チームトポロジー" 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vLiz1C" target="_blank"&gt;チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/35WSi5y" target="_blank"&gt;SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;チームトポロジーという書籍の概要&lt;/li&gt;
&lt;li&gt;コンウェイの法則とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Conway%27s_law" target="_blank"&gt;wikipedia: Conway's law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;逆コンウェイ戦略とは？&lt;/li&gt;
&lt;li&gt;ソフトウェアを設計するように組織を設計する&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム とは？&lt;/li&gt;
&lt;li&gt;プラットフォームチーム とは？&lt;/li&gt;
&lt;li&gt;イネイブリングチーム とは？&lt;/li&gt;
&lt;li&gt;コンプリケイテッドサブシステムチーム とは？&lt;/li&gt;
&lt;li&gt;ストリームアラインドチーム と プロダクトチームとの違いは？&lt;/li&gt;
&lt;li&gt;アジャイル開発とチームトポロジーとの関連は？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3hPVh25" target="_blank"&gt;LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;現代型マネジメントと人間関係論&lt;/li&gt;
&lt;li&gt;マインドセットがなくてもアジリティを出せるのではないか&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agilepbl.org/" target="_blank"&gt;Agile PBL祭り 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confengine.com/conferences/agile-pbl-2022/sponsor" target="_blank"&gt;Agile PBL祭り 2022 スポンサー募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Agile PBL祭り での最大のアンラーニングとは？&lt;/li&gt;
&lt;/ul&gt;
リスナーの皆様へのお願い
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB" target="_blank"&gt;fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！&lt;/a&gt; (2022/3/31 まで)&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>書籍 "チームトポロジー" 訳者の miholovesq さんに、チームトポロジー、4つのチームタイプ、アジャイル開発との関連、Agile PBL祭り などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3vLiz1C" target="_blank">チームトポロジー　価値あるソフトウェアをすばやく届ける適応型組織設計</a>
</li>
<li>書籍: <a href="https://amzn.to/35WSi5y" target="_blank">SCRUM BOOT CAMP THE BOOK【増補改訂版】 スクラムチームではじめるアジャイル開発</a>
</li>
<li>チームトポロジーという書籍の概要</li>
<li>コンウェイの法則とは？</li>
<li><a href="https://en.wikipedia.org/wiki/Conway%27s_law" target="_blank">wikipedia: Conway's law</a></li>
<li>逆コンウェイ戦略とは？</li>
<li>ソフトウェアを設計するように組織を設計する</li>
<li>ストリームアラインドチーム とは？</li>
<li>プラットフォームチーム とは？</li>
<li>イネイブリングチーム とは？</li>
<li>コンプリケイテッドサブシステムチーム とは？</li>
<li>ストリームアラインドチーム と プロダクトチームとの違いは？</li>
<li>アジャイル開発とチームトポロジーとの関連は？</li>
<li>書籍: <a href="https://amzn.to/3hPVh25" target="_blank">LeanとDevOpsの科学［Accelerate］ テクノロジーの戦略的活用が組織変革を加速する</a>
</li>
<li>現代型マネジメントと人間関係論</li>
<li>マインドセットがなくてもアジリティを出せるのではないか</li>
<li><a href="https://agilepbl.org/" target="_blank">Agile PBL祭り 2022</a></li>
<li><a href="https://confengine.com/conferences/agile-pbl-2022/sponsor" target="_blank">Agile PBL祭り 2022 スポンサー募集中</a></li>
<li>Agile PBL祭り での最大のアンラーニングとは？</li>
</ul>
リスナーの皆様へのお願い
<p><a href="https://pitpa.cc/3pfSweB" target="_blank">fukabori.fm リスナーアンケートを実施中です！ぜひ回答お願いします！</a> (2022/3/31 まで)</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/070_piSrY.mp3</guid>
      <pubDate>Mon, 07 Mar 2022 08:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:40:17</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/7a3584da-a334-4585-9e11-456c0040a8ec.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="38677942"/>
    </item>
    <item>
      <title>68. エンジニアリング組織に溶け込むHRBP w/ yamamuteking</title>
      <description>
        <![CDATA[<p>エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>HRBP(Human Resource Business Partner)とは何か？</li>
<li>HRBPの登場背景とは？</li>
<li><a href="https://amzn.to/3vvLd6O" target="_blank">ハーバード･ビジネス･レビュー21年12月号 これからの人事</a></li>
<li>プロダクト開発組織におけるHRBP</li>
<li>プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成</li>
<li>人事がプロダクトチームになぜ入る必要があるのか？</li>
<li>役割1. 採用の加速</li>
<li>候補者体験を最大化するためのルート整備</li>
<li>社内のエンジニアに対する深い理解</li>
<li>役割2. リテンション</li>
<li>エンジニアでは見落としがちな課題を早めに拾う</li>
<li>人事がエンジニアの朝会に入って課題設定する</li>
<li>スクラムマスターに近い振る舞い</li>
<li>エンジニア オンボーディングでの期待値調整</li>
<li>役割3. チャレンジマネジメント</li>
<li>HRBPが深く入るチームの優先度付けは？ </li>
<li><a href="https://open.talentio.com/r/1/c/m3-inc/pages/57566" target="_blank">m3 HRBP募集ページ</a></li>
<li>(退職を検知する)人事的センサーとは？</li>
<li>多様性がチームを強くする</li>
<li>どうやってHRBPをスケールさせるか？</li>
<li>スタートアップでHRBPを置くならいつが良いか？</li>
<li>エンジニアリングマネジメントを「ちゃんと」やる？とは</li>
<li>エンジニアリングの成果 と 経営 を接続する</li>
<li><a href="https://corporate.m3.com/recruit/" target="_blank">m3 採用情報ページ</a></li>
</ul>
<p><a href="https://pitpa.cc/3pfSweB" target="_blank">fukabori.fm リスナーアンケートを実施中です！</a></p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>68. エンジニアリング組織に溶け込むHRBP w/ yamamuteking</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;HRBP(Human Resource Business Partner)とは何か？&lt;/li&gt;
&lt;li&gt;HRBPの登場背景とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3vvLd6O" target="_blank"&gt;ハーバード･ビジネス･レビュー21年12月号 これからの人事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクト開発組織におけるHRBP&lt;/li&gt;
&lt;li&gt;プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成&lt;/li&gt;
&lt;li&gt;人事がプロダクトチームになぜ入る必要があるのか？&lt;/li&gt;
&lt;li&gt;役割1. 採用の加速&lt;/li&gt;
&lt;li&gt;候補者体験を最大化するためのルート整備&lt;/li&gt;
&lt;li&gt;社内のエンジニアに対する深い理解&lt;/li&gt;
&lt;li&gt;役割2. リテンション&lt;/li&gt;
&lt;li&gt;エンジニアでは見落としがちな課題を早めに拾う&lt;/li&gt;
&lt;li&gt;人事がエンジニアの朝会に入って課題設定する&lt;/li&gt;
&lt;li&gt;スクラムマスターに近い振る舞い&lt;/li&gt;
&lt;li&gt;エンジニア オンボーディングでの期待値調整&lt;/li&gt;
&lt;li&gt;役割3. チャレンジマネジメント&lt;/li&gt;
&lt;li&gt;HRBPが深く入るチームの優先度付けは？ &lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.talentio.com/r/1/c/m3-inc/pages/57566" target="_blank"&gt;m3 HRBP募集ページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(退職を検知する)人事的センサーとは？&lt;/li&gt;
&lt;li&gt;多様性がチームを強くする&lt;/li&gt;
&lt;li&gt;どうやってHRBPをスケールさせるか？&lt;/li&gt;
&lt;li&gt;スタートアップでHRBPを置くならいつが良いか？&lt;/li&gt;
&lt;li&gt;エンジニアリングマネジメントを「ちゃんと」やる？とは&lt;/li&gt;
&lt;li&gt;エンジニアリングの成果 と 経営 を接続する&lt;/li&gt;
&lt;li&gt;&lt;a href="https://corporate.m3.com/recruit/" target="_blank"&gt;m3 採用情報ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://pitpa.cc/3pfSweB" target="_blank"&gt;fukabori.fm リスナーアンケートを実施中です！&lt;/a&gt;&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>エムスリー VPoEの山崎さんに、エンジニア組織におけるHRBPの役割（採用、リテンション、チャレンジマネジメント）や、エンジニアマネジメントなどについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>HRBP(Human Resource Business Partner)とは何か？</li>
<li>HRBPの登場背景とは？</li>
<li><a href="https://amzn.to/3vvLd6O" target="_blank">ハーバード･ビジネス･レビュー21年12月号 これからの人事</a></li>
<li>プロダクト開発組織におけるHRBP</li>
<li>プロダクトマネージャー、エンジニア、デザイナー、QAというチーム構成</li>
<li>人事がプロダクトチームになぜ入る必要があるのか？</li>
<li>役割1. 採用の加速</li>
<li>候補者体験を最大化するためのルート整備</li>
<li>社内のエンジニアに対する深い理解</li>
<li>役割2. リテンション</li>
<li>エンジニアでは見落としがちな課題を早めに拾う</li>
<li>人事がエンジニアの朝会に入って課題設定する</li>
<li>スクラムマスターに近い振る舞い</li>
<li>エンジニア オンボーディングでの期待値調整</li>
<li>役割3. チャレンジマネジメント</li>
<li>HRBPが深く入るチームの優先度付けは？ </li>
<li><a href="https://open.talentio.com/r/1/c/m3-inc/pages/57566" target="_blank">m3 HRBP募集ページ</a></li>
<li>(退職を検知する)人事的センサーとは？</li>
<li>多様性がチームを強くする</li>
<li>どうやってHRBPをスケールさせるか？</li>
<li>スタートアップでHRBPを置くならいつが良いか？</li>
<li>エンジニアリングマネジメントを「ちゃんと」やる？とは</li>
<li>エンジニアリングの成果 と 経営 を接続する</li>
<li><a href="https://corporate.m3.com/recruit/" target="_blank">m3 採用情報ページ</a></li>
</ul>
<p><a href="https://pitpa.cc/3pfSweB" target="_blank">fukabori.fm リスナーアンケートを実施中です！</a></p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/069_gAVbY.mp3</guid>
      <pubDate>Wed, 02 Mar 2022 00:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:39:38</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/1192b2ec-707f-4a0c-bc22-f0bc0dda17c9.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="38053929"/>
    </item>
    <item>
      <title>67. 命名規則 と heyのエンジニア組織 w/ ffu_</title>
      <description>
        <![CDATA[<p>hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>プログラミングにおける命名規則になぜこだわるのか？</li>
<li>名前のないプログラミング言語</li>
<li>
<a href="https://amzn.to/3gaeuLm" target="_blank">WEB+DB PRESS Vol.110</a> もしくは <a href="https://amzn.to/3Gew23g" target="_blank">WEB+DB PRESS総集編[Vol.1~120] </a>
</li>
<li><a href="https://speakerdeck.com/fujimura/ru-men-ming-qian" target="_blank">入門 名前</a></li>
<li>命名規則における「良い」とは何か？</li>
<li><a href="https://amzn.to/3AGEA1Y" target="_blank">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>
<li>名前の意味と挙動が一致していること</li>
<li>parse という関数命名における例</li>
<li>primary と primal</li>
<li>全体の名前のルーツになる命名は丁寧につける</li>
<li>日本語を、命名規則に使うのはどうか？</li>
<li>関数・変数名を短くすべきか？長くすべきか？</li>
<li><a href="https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names" target="_blank">Clarity over brevity in variable and method names</a></li>
<li>Haskell での命名</li>
<li>紛らわしい動詞をやめる、例: check()</li>
<li>値を返すのか、副作用があるのか分からない</li>
<li>Ruby の predicate メソッド</li>
<li>hey のプロダクト開発組織デザインとは？</li>
<li>横断チームとプロダクトチームを作り分ける判断基準は？</li>
<li>チーム・組織が遠くなると、話にいくハードルが上がらないか？</li>
<li>オンラインで話しかけやすいようにするための工夫は？</li>
<li>全社ミーティングでの愛のあるいじり</li>
<li>CTO本部って何をしている？どの課題を解こうとしている？</li>
<li>エンジニア組織のマネジメントをチームで進める</li>
<li>得意な人・知見がある人がファイナルアンサーを持っている</li>
<li>権限委譲をどのように進めているか？</li>
<li>8象限 と <a href="https://ja.wikipedia.org/wiki/RACI%E5%9B%B3" target="_blank">RACI</a>
</li>
<li><a href="https://nuworks.jp/ja/product/del-poker/" target="_blank">デリゲーションポーカー</a></li>
<li>heyの評価制度は？</li>
<li>heyのエンジニア採用戦略は？</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0" target="_blank">ABM</a></li>
<li>採用でやらないと決めていることは？</li>
<li><a href="https://pitpa.cc/33R7S1X" target="_blank">採用サイト</a></li>
<li><a href="https://pitpa.cc/3AH6ElW" target="_blank">hey BOOK for Engineers</a></li>
</ul>
エピソード提供スポンサー
<p><a href="https://www.hey.jp/company" target="_blank">ヘイ株式会社</a></p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>67. 命名規則 と heyのエンジニア組織 w/ ffu_</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;プログラミングにおける命名規則になぜこだわるのか？&lt;/li&gt;
&lt;li&gt;名前のないプログラミング言語&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/3gaeuLm" target="_blank"&gt;WEB+DB PRESS Vol.110&lt;/a&gt; もしくは &lt;a href="https://amzn.to/3Gew23g" target="_blank"&gt;WEB+DB PRESS総集編[Vol.1~120] &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/fujimura/ru-men-ming-qian" target="_blank"&gt;入門 名前&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;命名規則における「良い」とは何か？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3AGEA1Y" target="_blank"&gt;CODE COMPLETE 第2版 上 完全なプログラミングを目指して&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;名前の意味と挙動が一致していること&lt;/li&gt;
&lt;li&gt;parse という関数命名における例&lt;/li&gt;
&lt;li&gt;primary と primal&lt;/li&gt;
&lt;li&gt;全体の名前のルーツになる命名は丁寧につける&lt;/li&gt;
&lt;li&gt;日本語を、命名規則に使うのはどうか？&lt;/li&gt;
&lt;li&gt;関数・変数名を短くすべきか？長くすべきか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names" target="_blank"&gt;Clarity over brevity in variable and method names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Haskell での命名&lt;/li&gt;
&lt;li&gt;紛らわしい動詞をやめる、例: check()&lt;/li&gt;
&lt;li&gt;値を返すのか、副作用があるのか分からない&lt;/li&gt;
&lt;li&gt;Ruby の predicate メソッド&lt;/li&gt;
&lt;li&gt;hey のプロダクト開発組織デザインとは？&lt;/li&gt;
&lt;li&gt;横断チームとプロダクトチームを作り分ける判断基準は？&lt;/li&gt;
&lt;li&gt;チーム・組織が遠くなると、話にいくハードルが上がらないか？&lt;/li&gt;
&lt;li&gt;オンラインで話しかけやすいようにするための工夫は？&lt;/li&gt;
&lt;li&gt;全社ミーティングでの愛のあるいじり&lt;/li&gt;
&lt;li&gt;CTO本部って何をしている？どの課題を解こうとしている？&lt;/li&gt;
&lt;li&gt;エンジニア組織のマネジメントをチームで進める&lt;/li&gt;
&lt;li&gt;得意な人・知見がある人がファイナルアンサーを持っている&lt;/li&gt;
&lt;li&gt;権限委譲をどのように進めているか？&lt;/li&gt;
&lt;li&gt;8象限 と &lt;a href="https://ja.wikipedia.org/wiki/RACI%E5%9B%B3" target="_blank"&gt;RACI&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nuworks.jp/ja/product/del-poker/" target="_blank"&gt;デリゲーションポーカー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;heyの評価制度は？&lt;/li&gt;
&lt;li&gt;heyのエンジニア採用戦略は？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0" target="_blank"&gt;ABM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;採用でやらないと決めていることは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/33R7S1X" target="_blank"&gt;採用サイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pitpa.cc/3AH6ElW" target="_blank"&gt;hey BOOK for Engineers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
エピソード提供スポンサー
&lt;p&gt;&lt;a href="https://www.hey.jp/company" target="_blank"&gt;ヘイ株式会社&lt;/a&gt;&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>hey CTOの藤村さんに、プログラミングにおける命名規則、heyのエンジニア組織設計・戦略などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>プログラミングにおける命名規則になぜこだわるのか？</li>
<li>名前のないプログラミング言語</li>
<li>
<a href="https://amzn.to/3gaeuLm" target="_blank">WEB+DB PRESS Vol.110</a> もしくは <a href="https://amzn.to/3Gew23g" target="_blank">WEB+DB PRESS総集編[Vol.1~120] </a>
</li>
<li><a href="https://speakerdeck.com/fujimura/ru-men-ming-qian" target="_blank">入門 名前</a></li>
<li>命名規則における「良い」とは何か？</li>
<li><a href="https://amzn.to/3AGEA1Y" target="_blank">CODE COMPLETE 第2版 上 完全なプログラミングを目指して</a></li>
<li>名前の意味と挙動が一致していること</li>
<li>parse という関数命名における例</li>
<li>primary と primal</li>
<li>全体の名前のルーツになる命名は丁寧につける</li>
<li>日本語を、命名規則に使うのはどうか？</li>
<li>関数・変数名を短くすべきか？長くすべきか？</li>
<li><a href="https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names" target="_blank">Clarity over brevity in variable and method names</a></li>
<li>Haskell での命名</li>
<li>紛らわしい動詞をやめる、例: check()</li>
<li>値を返すのか、副作用があるのか分からない</li>
<li>Ruby の predicate メソッド</li>
<li>hey のプロダクト開発組織デザインとは？</li>
<li>横断チームとプロダクトチームを作り分ける判断基準は？</li>
<li>チーム・組織が遠くなると、話にいくハードルが上がらないか？</li>
<li>オンラインで話しかけやすいようにするための工夫は？</li>
<li>全社ミーティングでの愛のあるいじり</li>
<li>CTO本部って何をしている？どの課題を解こうとしている？</li>
<li>エンジニア組織のマネジメントをチームで進める</li>
<li>得意な人・知見がある人がファイナルアンサーを持っている</li>
<li>権限委譲をどのように進めているか？</li>
<li>8象限 と <a href="https://ja.wikipedia.org/wiki/RACI%E5%9B%B3" target="_blank">RACI</a>
</li>
<li><a href="https://nuworks.jp/ja/product/del-poker/" target="_blank">デリゲーションポーカー</a></li>
<li>heyの評価制度は？</li>
<li>heyのエンジニア採用戦略は？</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%83%99%E3%83%BC%E3%82%B9%E3%83%89%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0" target="_blank">ABM</a></li>
<li>採用でやらないと決めていることは？</li>
<li><a href="https://pitpa.cc/33R7S1X" target="_blank">採用サイト</a></li>
<li><a href="https://pitpa.cc/3AH6ElW" target="_blank">hey BOOK for Engineers</a></li>
</ul>
エピソード提供スポンサー
<p><a href="https://www.hey.jp/company" target="_blank">ヘイ株式会社</a></p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/068_fZPbk.mp3</guid>
      <pubDate>Sun, 30 Jan 2022 21:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:43:41</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/be888789-6e18-449a-a569-af2426db5ced.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="41950981"/>
    </item>
    <item>
      <title>66. 問いかけの作法(後編) w/ YukiAnzai</title>
      <description>
        <![CDATA[<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3GbSLxV" target="_blank">問いかけの作法:チームの魅力と才能を引き出す技術</a>
</li>
<li>問いを引き出す基本定石とは？</li>
<li>上司が至らなさに光を当ててしまう</li>
<li>問いかけは相手の意見・個性を引き出すために使う</li>
<li>いたらなさになぜ、スポットライトをあててしまうのか？</li>
<li>「何か良いアイデアはありますか？なんでもよいので」</li>
<li>「これまでのボツネタのなかでもったいない、と思うものはありましたか？」</li>
<li>質問のスポットライトの良い角度をどのように探すか？</li>
<li>同じものをみているふりして違う意味で使っている</li>
<li>定義されていない言葉は とらわれ の可能性が高い</li>
<li>理念を良い意味で各現場が解釈していく</li>
<li>現場の理念のすれ違いをどうやって、すり合わせしていくのか？</li>
<li>パラフレーズという問いかけのパターン</li>
<li>ブレストのアイデアをどのように収束させるか？</li>
<li>アイデアの決め方を事前に合意しておく</li>
<li>多数決と多様決</li>
<li>組織の創造性を引き出すエンジニアリングとは</li>
<li><a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank">MIMIGURI 採用・求人</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>66. 問いかけの作法(後編) w/ YukiAnzai</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV" target="_blank"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;問いを引き出す基本定石とは？&lt;/li&gt;
&lt;li&gt;上司が至らなさに光を当ててしまう&lt;/li&gt;
&lt;li&gt;問いかけは相手の意見・個性を引き出すために使う&lt;/li&gt;
&lt;li&gt;いたらなさになぜ、スポットライトをあててしまうのか？&lt;/li&gt;
&lt;li&gt;「何か良いアイデアはありますか？なんでもよいので」&lt;/li&gt;
&lt;li&gt;「これまでのボツネタのなかでもったいない、と思うものはありましたか？」&lt;/li&gt;
&lt;li&gt;質問のスポットライトの良い角度をどのように探すか？&lt;/li&gt;
&lt;li&gt;同じものをみているふりして違う意味で使っている&lt;/li&gt;
&lt;li&gt;定義されていない言葉は とらわれ の可能性が高い&lt;/li&gt;
&lt;li&gt;理念を良い意味で各現場が解釈していく&lt;/li&gt;
&lt;li&gt;現場の理念のすれ違いをどうやって、すり合わせしていくのか？&lt;/li&gt;
&lt;li&gt;パラフレーズという問いかけのパターン&lt;/li&gt;
&lt;li&gt;ブレストのアイデアをどのように収束させるか？&lt;/li&gt;
&lt;li&gt;アイデアの決め方を事前に合意しておく&lt;/li&gt;
&lt;li&gt;多数決と多様決&lt;/li&gt;
&lt;li&gt;組織の創造性を引き出すエンジニアリングとは&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、問いを引き出す基本定石、良い質問の角度の探し方、アイデアの収束方法などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3GbSLxV" target="_blank">問いかけの作法:チームの魅力と才能を引き出す技術</a>
</li>
<li>問いを引き出す基本定石とは？</li>
<li>上司が至らなさに光を当ててしまう</li>
<li>問いかけは相手の意見・個性を引き出すために使う</li>
<li>いたらなさになぜ、スポットライトをあててしまうのか？</li>
<li>「何か良いアイデアはありますか？なんでもよいので」</li>
<li>「これまでのボツネタのなかでもったいない、と思うものはありましたか？」</li>
<li>質問のスポットライトの良い角度をどのように探すか？</li>
<li>同じものをみているふりして違う意味で使っている</li>
<li>定義されていない言葉は とらわれ の可能性が高い</li>
<li>理念を良い意味で各現場が解釈していく</li>
<li>現場の理念のすれ違いをどうやって、すり合わせしていくのか？</li>
<li>パラフレーズという問いかけのパターン</li>
<li>ブレストのアイデアをどのように収束させるか？</li>
<li>アイデアの決め方を事前に合意しておく</li>
<li>多数決と多様決</li>
<li>組織の創造性を引き出すエンジニアリングとは</li>
<li><a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank">MIMIGURI 採用・求人</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/067_HVpBI.mp3</guid>
      <pubDate>Sun, 16 Jan 2022 21:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:19:41</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/4e6e79de-9256-429b-ac2d-abef47f6d8c7.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="18909309"/>
    </item>
    <item>
      <title>65. 問いかけの作法(前編) w/ YukiAnzai</title>
      <description>
        <![CDATA[<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、"問いかけの作法"の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3GbSLxV" target="_blank">問いかけの作法:チームの魅力と才能を引き出す技術</a>
</li>
<li>"問いかけの作法" の概要について</li>
<li>書籍: <a href="https://amzn.to/3t9e6o5" target="_blank">問いのデザイン: 創造的対話のファシリテーション</a>
</li>
<li>書籍: <a href="https://amzn.to/3zQ9u7G" target="_blank">リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する</a>
</li>
<li>前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？</li>
<li>両利きの経営とサクセストラップ</li>
<li>孤軍奮闘の悪循環 とは？</li>
<li>誰も意見を言ってくれないお通夜のようなミーティング</li>
<li>孤軍奮闘の悪循環は、どのような起点で生まれてくる？</li>
<li>学校の先生にファシリテーションの方法を伝えると、教育効果が悪い</li>
<li>ファシリテーションで、介入するタイミングは？</li>
<li>相手の思考のステータスを観察する・見立てる</li>
<li>オンラインで観察するコツ・工夫は？</li>
<li>コミュニケーションのチャネルを複数にしておく</li>
<li>ハードルが低い方から段階的にアウトプットしてもらう</li>
<li><a href="https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html" target="_blank">【エッセイ】どうして日本人は質問しなくなるのか</a></li>
<li>意見・質問を出せる環境を作っていくのが大事</li>
<li>「問いかけの作法」で言及される4つの現代病とは？</li>
<li>認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化</li>
<li>関係性が固定されている状況では、非常に意見が言いにくい</li>
<li>のび太がこんなに優秀なはずがない</li>
<li>3人のレンガ職人のメタファーにおける1人目の凄さ</li>
<li>現代病に対して、我々はどう振る舞っていくべきなのか？</li>
<li>「うちの会社って、伝統があるのでリセットできないんですよ」</li>
<li>固定観念は、昨日までの強力な武器である</li>
<li>こだわりと、とらわれの二項対立を往復する</li>
<li>知の探索と知の深化との両方をやり続ける大変さ</li>
<li>構造的に分担するアプローチ と 文脈的両利きのアプローチ</li>
<li>個人で探索と深化のループを回すにはどうしたらいいか？</li>
<li>評価制度と連動させるのが重要</li>
<li>MIMIGURIにおける制度での連動例</li>
<li><a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank">MIMIGURI 採用・求人</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>65. 問いかけの作法(前編) w/ YukiAnzai</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>&lt;p&gt;MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、"問いかけの作法"の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。&lt;/p&gt;
話したネタ
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3GbSLxV" target="_blank"&gt;問いかけの作法:チームの魅力と才能を引き出す技術&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"問いかけの作法" の概要について&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3t9e6o5" target="_blank"&gt;問いのデザイン: 創造的対話のファシリテーション&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3zQ9u7G" target="_blank"&gt;リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？&lt;/li&gt;
&lt;li&gt;両利きの経営とサクセストラップ&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環 とは？&lt;/li&gt;
&lt;li&gt;誰も意見を言ってくれないお通夜のようなミーティング&lt;/li&gt;
&lt;li&gt;孤軍奮闘の悪循環は、どのような起点で生まれてくる？&lt;/li&gt;
&lt;li&gt;学校の先生にファシリテーションの方法を伝えると、教育効果が悪い&lt;/li&gt;
&lt;li&gt;ファシリテーションで、介入するタイミングは？&lt;/li&gt;
&lt;li&gt;相手の思考のステータスを観察する・見立てる&lt;/li&gt;
&lt;li&gt;オンラインで観察するコツ・工夫は？&lt;/li&gt;
&lt;li&gt;コミュニケーションのチャネルを複数にしておく&lt;/li&gt;
&lt;li&gt;ハードルが低い方から段階的にアウトプットしてもらう&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html" target="_blank"&gt;【エッセイ】どうして日本人は質問しなくなるのか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;意見・質問を出せる環境を作っていくのが大事&lt;/li&gt;
&lt;li&gt;「問いかけの作法」で言及される4つの現代病とは？&lt;/li&gt;
&lt;li&gt;認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化&lt;/li&gt;
&lt;li&gt;関係性が固定されている状況では、非常に意見が言いにくい&lt;/li&gt;
&lt;li&gt;のび太がこんなに優秀なはずがない&lt;/li&gt;
&lt;li&gt;3人のレンガ職人のメタファーにおける1人目の凄さ&lt;/li&gt;
&lt;li&gt;現代病に対して、我々はどう振る舞っていくべきなのか？&lt;/li&gt;
&lt;li&gt;「うちの会社って、伝統があるのでリセットできないんですよ」&lt;/li&gt;
&lt;li&gt;固定観念は、昨日までの強力な武器である&lt;/li&gt;
&lt;li&gt;こだわりと、とらわれの二項対立を往復する&lt;/li&gt;
&lt;li&gt;知の探索と知の深化との両方をやり続ける大変さ&lt;/li&gt;
&lt;li&gt;構造的に分担するアプローチ と 文脈的両利きのアプローチ&lt;/li&gt;
&lt;li&gt;個人で探索と深化のループを回すにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;評価制度と連動させるのが重要&lt;/li&gt;
&lt;li&gt;MIMIGURIにおける制度での連動例&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank"&gt;MIMIGURI 採用・求人&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>MIMIGURI Co-CEO のYukiAnzaiさんをゲストに、"問いかけの作法"の概要、オンラインファシリテーション、４つの現代病、知の探索と深化、などについて語っていただいたエピソードです。</p>
話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3GbSLxV" target="_blank">問いかけの作法:チームの魅力と才能を引き出す技術</a>
</li>
<li>"問いかけの作法" の概要について</li>
<li>書籍: <a href="https://amzn.to/3t9e6o5" target="_blank">問いのデザイン: 創造的対話のファシリテーション</a>
</li>
<li>書籍: <a href="https://amzn.to/3zQ9u7G" target="_blank">リサーチ・ドリブン・イノベーション 「問い」を起点にアイデアを探究する</a>
</li>
<li>前著2冊との関係性は？ なぜ問いかけの作法を執筆したのか？</li>
<li>両利きの経営とサクセストラップ</li>
<li>孤軍奮闘の悪循環 とは？</li>
<li>誰も意見を言ってくれないお通夜のようなミーティング</li>
<li>孤軍奮闘の悪循環は、どのような起点で生まれてくる？</li>
<li>学校の先生にファシリテーションの方法を伝えると、教育効果が悪い</li>
<li>ファシリテーションで、介入するタイミングは？</li>
<li>相手の思考のステータスを観察する・見立てる</li>
<li>オンラインで観察するコツ・工夫は？</li>
<li>コミュニケーションのチャネルを複数にしておく</li>
<li>ハードルが低い方から段階的にアウトプットしてもらう</li>
<li><a href="https://fukutake.iii.u-tokyo.ac.jp/ylab/2010/02/post-213.html" target="_blank">【エッセイ】どうして日本人は質問しなくなるのか</a></li>
<li>意見・質問を出せる環境を作っていくのが大事</li>
<li>「問いかけの作法」で言及される4つの現代病とは？</li>
<li>認識の固定化・関係性の固定化・衝動の枯渇・目的の形骸化</li>
<li>関係性が固定されている状況では、非常に意見が言いにくい</li>
<li>のび太がこんなに優秀なはずがない</li>
<li>3人のレンガ職人のメタファーにおける1人目の凄さ</li>
<li>現代病に対して、我々はどう振る舞っていくべきなのか？</li>
<li>「うちの会社って、伝統があるのでリセットできないんですよ」</li>
<li>固定観念は、昨日までの強力な武器である</li>
<li>こだわりと、とらわれの二項対立を往復する</li>
<li>知の探索と知の深化との両方をやり続ける大変さ</li>
<li>構造的に分担するアプローチ と 文脈的両利きのアプローチ</li>
<li>個人で探索と深化のループを回すにはどうしたらいいか？</li>
<li>評価制度と連動させるのが重要</li>
<li>MIMIGURIにおける制度での連動例</li>
<li><a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank">MIMIGURI 採用・求人</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/066_TlYxi.mp3</guid>
      <pubDate>Mon, 10 Jan 2022 21:21:38 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:43:24</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/62a378d2-5cd5-4915-a98e-801ac9caedbd.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="41677217"/>
    </item>
    <item>
      <title>64. ロボット x スキル w/ nakakura, kmat</title>
      <description>
        <![CDATA[<p>前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。</p>
<ul>
<li>ROSとは何か？</li>
<li>ロボット x スキル</li>
<li><a href="https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing">AIが判断してロボットを動かしている動画</a></li>
<li>ロボットの身体構造におけるネックとは</li>
<li>ロボット業界における車輪の再発明</li>
<li>強化学習とニューラルネットの応用</li>
<li>ROS上で動作するロボットが持つ身体構造情報の活用</li>
<li>ロボットの動作を作り込むときの苦労とは？何が大変なのか？</li>
<li>最も大変なのは、ロボット周辺の環境が変化すること</li>
<li>シーケンス的作業の実装</li>
<li>ドアを開ける場合の実装例</li>
<li>ロボットプログラミングに対するテストはめちゃめちゃ大変？</li>
<li>テストのフィードバックサイクル</li>
<li>物理シミュレータの利用</li>
<li>ハードウェアの劣化・故障</li>
<li><a href="https://www.ntt.com/about-us/recruit/event/event01.html">インターンシップ募集中</a></li>
<li><a href="https://hrmos.co/pages/nttcom0033/jobs/0011314">中途採用も募集中</a></li>
<li>チームを一言で表現すると？</li>
<li>プロフェッショナル集団</li>
<li>攻殻機動隊 - Stand Alone Complex</li>
<li><a href="https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener">第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム</a></li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>64. ロボット x スキル w/ nakakura, kmat</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。

ROSとは何か？
ロボット x スキル
AIが判断してロボットを動かしている動画
ロボットの身体構造におけるネックとは
ロボット業界における車輪の再発明
強化学習とニューラルネットの応用
ROS上で動作するロボットが持つ身体構造情報の活用
ロボットの動作を作り込むときの苦労とは？何が大変なのか？
最も大変なのは、ロボット周辺の環境が変化すること
シーケンス的作業の実装
ドアを開ける場合の実装例
ロボットプログラミングに対するテストはめちゃめちゃ大変？
テストのフィードバックサイクル
物理シミュレータの利用
ハードウェアの劣化・故障
インターンシップ募集中
中途採用も募集中
チームを一言で表現すると？
プロフェッショナル集団
攻殻機動隊 - Stand Alone Complex
第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム


See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<p>前回に続きnakakuraさんとkmatさんをゲストに、ROS(Robot Operating System)、ロボット x スキル、ロボットに対するプログラミングの課題、テストフィードバックサイクル、などについて語っていただいたエピソードです。</p>
<ul>
<li>ROSとは何か？</li>
<li>ロボット x スキル</li>
<li><a href="https://drive.google.com/file/d/11TMMHUMRf3ppzKEwlQtF6RAB0Ff0G0CL/view?usp=sharing">AIが判断してロボットを動かしている動画</a></li>
<li>ロボットの身体構造におけるネックとは</li>
<li>ロボット業界における車輪の再発明</li>
<li>強化学習とニューラルネットの応用</li>
<li>ROS上で動作するロボットが持つ身体構造情報の活用</li>
<li>ロボットの動作を作り込むときの苦労とは？何が大変なのか？</li>
<li>最も大変なのは、ロボット周辺の環境が変化すること</li>
<li>シーケンス的作業の実装</li>
<li>ドアを開ける場合の実装例</li>
<li>ロボットプログラミングに対するテストはめちゃめちゃ大変？</li>
<li>テストのフィードバックサイクル</li>
<li>物理シミュレータの利用</li>
<li>ハードウェアの劣化・故障</li>
<li><a href="https://www.ntt.com/about-us/recruit/event/event01.html">インターンシップ募集中</a></li>
<li><a href="https://hrmos.co/pages/nttcom0033/jobs/0011314">中途採用も募集中</a></li>
<li>チームを一言で表現すると？</li>
<li>プロフェッショナル集団</li>
<li>攻殻機動隊 - Stand Alone Complex</li>
<li><a href="https://ssl.1242.com/aplform/form/aplform.php?fcode=jpa2021_listener">第3回 JAPAN PODCAST AWARDS「リスナーズ・チョイス」の投票フォーム</a></li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/065_KPHCL.mp3</guid>
      <pubDate>Mon, 03 Jan 2022 21:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:20:42</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/aceefbd9-f9a9-4937-9e81-078522aa6c27.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="19873541"/>
    </item>
    <item>
      <title>63. テレプレゼンス・ロボット・最後にRust w/ nakakura, kmat</title>
      <description>
        <![CDATA[<ul>
<li>テレプレゼンスとは？</li>
<li><a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view">参考: テレプレゼンスのイメージがわかる動画</a></li>
<li>攻殻機動隊の義体</li>
<li>学術的にはいつから？</li>
<li>何回かあるVR元年</li>
<li>テレプレゼンスが解決しようとしている課題とは？</li>
<li>VR酔い</li>
<li>HMD(Head Mounted Display)</li>
<li>テレプレゼンスとメタバースとの関連は？</li>
<li>メタバースが現実を侵食する</li>
<li>現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス</li>
<li>テレプレゼンスにおける技術的課題とビジネス的課題</li>
<li>ロボット費に比べて人件費が安すぎる問題</li>
<li>データセンターにおけるロボット利用のユースケース</li>
<li>ヒューマノイドはなぜ人型である必要があるのか？</li>
<li>脳に直結したときには、人間に近い形じゃないと動かせない</li>
<li>ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？</li>
<li>遅延、パケットロス、ジッター(jitter)</li>
<li>Zoom飲みで友達の猫を触りたい</li>
<li>触原色</li>
<li><a href="https://www.w3.org/wiki/TPAC/2021">W3C TPAC</a></li>
<li>テレプレゼンスビジネスの活性に必要な通信エンジンの開発</li>
<li>WebRTCを拡張した通信エンジン提供</li>
<li><a href="https://janus.conf.meetecho.com/">Janus</a></li>
<li>Rustはロボット開発でメリットがある</li>
<li><a href="https://www.ntt.com/about-us/recruit/event/event01.html">インターンシップ募集中</a></li>
<li><a href="https://hrmos.co/pages/nttcom0033/jobs/0011314">中途採用も募集中</a></li>
<li>参考動画<ul>
<li><a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing">XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー</a></li>
<li><a href="https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing">遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)</a> </li>
</ul>
</li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </description>
      <itunes:title>63. テレプレゼンス・ロボット・最後にRust w/ nakakura, kmat</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>
テレプレゼンスとは？
参考: テレプレゼンスのイメージがわかる動画
攻殻機動隊の義体
学術的にはいつから？
何回かあるVR元年
テレプレゼンスが解決しようとしている課題とは？
VR酔い
HMD(Head Mounted Display)
テレプレゼンスとメタバースとの関連は？
メタバースが現実を侵食する
現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス
テレプレゼンスにおける技術的課題とビジネス的課題
ロボット費に比べて人件費が安すぎる問題
データセンターにおけるロボット利用のユースケース
ヒューマノイドはなぜ人型である必要があるのか？
脳に直結したときには、人間に近い形じゃないと動かせない
ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？
遅延、パケットロス、ジッター(jitter)
Zoom飲みで友達の猫を触りたい
触原色
W3C TPAC
テレプレゼンスビジネスの活性に必要な通信エンジンの開発
WebRTCを拡張した通信エンジン提供
Janus
Rustはロボット開発でメリットがある
インターンシップ募集中
中途採用も募集中
参考動画
XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー
遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影) 




See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[<ul>
<li>テレプレゼンスとは？</li>
<li><a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view">参考: テレプレゼンスのイメージがわかる動画</a></li>
<li>攻殻機動隊の義体</li>
<li>学術的にはいつから？</li>
<li>何回かあるVR元年</li>
<li>テレプレゼンスが解決しようとしている課題とは？</li>
<li>VR酔い</li>
<li>HMD(Head Mounted Display)</li>
<li>テレプレゼンスとメタバースとの関連は？</li>
<li>メタバースが現実を侵食する</li>
<li>現実とバーチャルの両方にスコープにいれたのがテレイグジスタンス</li>
<li>テレプレゼンスにおける技術的課題とビジネス的課題</li>
<li>ロボット費に比べて人件費が安すぎる問題</li>
<li>データセンターにおけるロボット利用のユースケース</li>
<li>ヒューマノイドはなぜ人型である必要があるのか？</li>
<li>脳に直結したときには、人間に近い形じゃないと動かせない</li>
<li>ロボットを遠隔地で動かすにあたり、通信の影響はどんなものがある？</li>
<li>遅延、パケットロス、ジッター(jitter)</li>
<li>Zoom飲みで友達の猫を触りたい</li>
<li>触原色</li>
<li><a href="https://www.w3.org/wiki/TPAC/2021">W3C TPAC</a></li>
<li>テレプレゼンスビジネスの活性に必要な通信エンジンの開発</li>
<li>WebRTCを拡張した通信エンジン提供</li>
<li><a href="https://janus.conf.meetecho.com/">Janus</a></li>
<li>Rustはロボット開発でメリットがある</li>
<li><a href="https://www.ntt.com/about-us/recruit/event/event01.html">インターンシップ募集中</a></li>
<li><a href="https://hrmos.co/pages/nttcom0033/jobs/0011314">中途採用も募集中</a></li>
<li>参考動画<ul>
<li><a href="https://drive.google.com/file/d/1eUBXLT9ZX08NWFskBJqOEeyUIhU5scSJ/view?usp=sharing">XPRIZEというコンテストのビデオ審査時に撮影した、遠隔作業タスクをこなしているムービー</a></li>
<li><a href="https://drive.google.com/file/d/13Fxy8v8ngMk69-CJ7wEH25fj4t2VVDfh/view?usp=sharing">遠隔地での力覚転送という技術を紹介するために作成した、エイプリルフール動画の映像(サービス化はネタだが技術的には実装されており、実機で撮影)</a> </li>
</ul>
</li>
</ul><p>See Privacy Policy at <a href="https://art19.com/privacy" rel="noopener noreferrer" target="_blank">https://art19.com/privacy</a> and California Privacy Notice at <a href="https://art19.com/privacy#do-not-sell-my-info" rel="noopener noreferrer" target="_blank">https://art19.com/privacy#do-not-sell-my-info</a>.</p>]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/064_reshT.mp3</guid>
      <pubDate>Mon, 27 Dec 2021 01:01:24 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:36:58</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/83ecefbc-3ad0-436a-9fbc-2cc3ecd156f7.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="35491840"/>
    </item>
    <item>
      <title>62. プロダクト・レッド・オーガニゼーション w/ ykmc09</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3yF5juO" target="_blank">プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築</a>
</li>
<li>プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？</li>
<li>書籍: <a href="https://amzn.to/3p9qvWs" target="_blank">PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」</a>
</li>
<li>プロダクト自体がプロダクトを売るためにはどうしたらいいか？</li>
<li>書籍Part1/2/3でどのようなコンテンツがあるか？</li>
<li>データ インフォームド とは？</li>
<li>定量データと定性データをどのように組み合わせて使えばいいのか？</li>
<li>参考: <a href="https://note.com/hiroko_nozawa/n/n96fc42d4370f" target="_blank">UXリサーチャーのための「Mixed Methods」読書会を開催しました</a>
</li>
<li>"最悪なのは、フィードバックを求めておきながら、それを無視することだ"</li>
<li>コミュニケーションを決着させる</li>
<li>遅行指標と先行指標</li>
<li>ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？</li>
<li>ProductOpsとは何か？</li>
<li>"プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。"</li>
<li>ykmc09さんにとって、良いプロダクトマネージャとは何か？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>62. プロダクト・レッド・オーガニゼーション w/ ykmc09</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3yF5juO" target="_blank"&gt;プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3p9qvWs" target="_blank"&gt;PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;プロダクト自体がプロダクトを売るためにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;書籍Part1/2/3でどのようなコンテンツがあるか？&lt;/li&gt;
&lt;li&gt;データ インフォームド とは？&lt;/li&gt;
&lt;li&gt;定量データと定性データをどのように組み合わせて使えばいいのか？&lt;/li&gt;
&lt;li&gt;参考: &lt;a href="https://note.com/hiroko_nozawa/n/n96fc42d4370f" target="_blank"&gt;UXリサーチャーのための「Mixed Methods」読書会を開催しました&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"最悪なのは、フィードバックを求めておきながら、それを無視することだ"&lt;/li&gt;
&lt;li&gt;コミュニケーションを決着させる&lt;/li&gt;
&lt;li&gt;遅行指標と先行指標&lt;/li&gt;
&lt;li&gt;ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？&lt;/li&gt;
&lt;li&gt;ProductOpsとは何か？&lt;/li&gt;
&lt;li&gt;"プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。"&lt;/li&gt;
&lt;li&gt;ykmc09さんにとって、良いプロダクトマネージャとは何か？&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>書籍: <a href="https://amzn.to/3yF5juO" target="_blank">プロダクト・レッド・オーガニゼーション 顧客と組織と成長をつなぐプロダクト主導型の構築</a>
</li>
<li>プロダクト・レッド・オーガニゼーション(Product Led Organization)とは何か？</li>
<li>書籍: <a href="https://amzn.to/3p9qvWs" target="_blank">PLG プロダクト・レッド・グロース「セールスがプロダクトを売る時代」から「プロダクトでプロダクトを売る時代」</a>
</li>
<li>プロダクト自体がプロダクトを売るためにはどうしたらいいか？</li>
<li>書籍Part1/2/3でどのようなコンテンツがあるか？</li>
<li>データ インフォームド とは？</li>
<li>定量データと定性データをどのように組み合わせて使えばいいのか？</li>
<li>参考: <a href="https://note.com/hiroko_nozawa/n/n96fc42d4370f" target="_blank">UXリサーチャーのための「Mixed Methods」読書会を開催しました</a>
</li>
<li>"最悪なのは、フィードバックを求めておきながら、それを無視することだ"</li>
<li>コミュニケーションを決着させる</li>
<li>遅行指標と先行指標</li>
<li>ブレストして出た先行指標から、良い・適切な指標をどう選ぶか？</li>
<li>ProductOpsとは何か？</li>
<li>"プロダクトマネージャーは、おそらく組織内の他のどの役割よりも、自分自身の仕事の功績だけではなく、他の人に影響を与え、モチベーションを高める能力によって成功するか失敗するかが決まる。"</li>
<li>ykmc09さんにとって、良いプロダクトマネージャとは何か？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/063_GqKBR.mp3</guid>
      <pubDate>Sun, 19 Dec 2021 20:11:06 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:42:57</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/78f2218e-d7cf-4836-a17a-7612db7a7262.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="41245884"/>
    </item>
    <item>
      <title>61. 電動マイクロモビリティのプロダクト開発 w/ 7omich, t-kurimura</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>LUUPのプロダクトって？</li>
<li>電動キックボードへのソフトウェアによる速度制限</li>
<li>Over The Air Update</li>
<li>ハードとソフトウェア混合のシステムアーキテクチャとは？</li>
<li>IoTデバイスとIoTサーバの通信内容</li>
<li>MQTT と接続が切れたら？</li>
<li>電動マイクロモビリティデバイスのポートをどうやって決めているか？</li>
<li>屋外の置かれるIoTデバイスにおきる障害とは？</li>
<li>IoTデバイスの車体はどのように調達している？設計から自社？</li>
<li>中国のODM先はどのように発見する？</li>
<li>IoTサービスのエラー設計とは？</li>
<li>キックボードの技師がいまはほとんどいない</li>
<li>LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？</li>
<li>実際にユーザ意見を反映して開発した例は？</li>
<li>Twitterからのユーザーの声を収集</li>
<li>開発機能の優先度付けの順序をどのように決めるか？</li>
<li>課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける</li>
<li>どのようにして情報の透明性を高めているか？</li>
<li>バックログを、何で管理しているか？</li>
<li>経営陣の経営方針をどのように現場に伝えていくか？</li>
<li>高頻度な1on1</li>
<li>開発チームの文化は？</li>
<li>技術者の採用プロセス</li>
<li>技術的に面白いチャレンジには何がある？</li>
<li>今後のプロダクトの方向性をどうしていく？</li>
</ul>
エピソード提供スポンサー
<p><a href="https://pitpa.cc/3ozy7RI" target="_blank">株式会社Luup</a> </p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>61. 電動マイクロモビリティのプロダクト開発 w/ 7omich, t-kurimura</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;LUUPのプロダクトって？&lt;/li&gt;
&lt;li&gt;電動キックボードへのソフトウェアによる速度制限&lt;/li&gt;
&lt;li&gt;Over The Air Update&lt;/li&gt;
&lt;li&gt;ハードとソフトウェア混合のシステムアーキテクチャとは？&lt;/li&gt;
&lt;li&gt;IoTデバイスとIoTサーバの通信内容&lt;/li&gt;
&lt;li&gt;MQTT と接続が切れたら？&lt;/li&gt;
&lt;li&gt;電動マイクロモビリティデバイスのポートをどうやって決めているか？&lt;/li&gt;
&lt;li&gt;屋外の置かれるIoTデバイスにおきる障害とは？&lt;/li&gt;
&lt;li&gt;IoTデバイスの車体はどのように調達している？設計から自社？&lt;/li&gt;
&lt;li&gt;中国のODM先はどのように発見する？&lt;/li&gt;
&lt;li&gt;IoTサービスのエラー設計とは？&lt;/li&gt;
&lt;li&gt;キックボードの技師がいまはほとんどいない&lt;/li&gt;
&lt;li&gt;LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？&lt;/li&gt;
&lt;li&gt;実際にユーザ意見を反映して開発した例は？&lt;/li&gt;
&lt;li&gt;Twitterからのユーザーの声を収集&lt;/li&gt;
&lt;li&gt;開発機能の優先度付けの順序をどのように決めるか？&lt;/li&gt;
&lt;li&gt;課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける&lt;/li&gt;
&lt;li&gt;どのようにして情報の透明性を高めているか？&lt;/li&gt;
&lt;li&gt;バックログを、何で管理しているか？&lt;/li&gt;
&lt;li&gt;経営陣の経営方針をどのように現場に伝えていくか？&lt;/li&gt;
&lt;li&gt;高頻度な1on1&lt;/li&gt;
&lt;li&gt;開発チームの文化は？&lt;/li&gt;
&lt;li&gt;技術者の採用プロセス&lt;/li&gt;
&lt;li&gt;技術的に面白いチャレンジには何がある？&lt;/li&gt;
&lt;li&gt;今後のプロダクトの方向性をどうしていく？&lt;/li&gt;
&lt;/ul&gt;
エピソード提供スポンサー
&lt;p&gt;&lt;a href="https://pitpa.cc/3ozy7RI" target="_blank"&gt;株式会社Luup&lt;/a&gt; &lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>LUUPのプロダクトって？</li>
<li>電動キックボードへのソフトウェアによる速度制限</li>
<li>Over The Air Update</li>
<li>ハードとソフトウェア混合のシステムアーキテクチャとは？</li>
<li>IoTデバイスとIoTサーバの通信内容</li>
<li>MQTT と接続が切れたら？</li>
<li>電動マイクロモビリティデバイスのポートをどうやって決めているか？</li>
<li>屋外の置かれるIoTデバイスにおきる障害とは？</li>
<li>IoTデバイスの車体はどのように調達している？設計から自社？</li>
<li>中国のODM先はどのように発見する？</li>
<li>IoTサービスのエラー設計とは？</li>
<li>キックボードの技師がいまはほとんどいない</li>
<li>LUUPのプロダクト開発のプロセス全般は？Issue Discoveryはどうする？</li>
<li>実際にユーザ意見を反映して開発した例は？</li>
<li>Twitterからのユーザーの声を収集</li>
<li>開発機能の優先度付けの順序をどのように決めるか？</li>
<li>課題一覧は見えるところに置いておいて、議論の方向を同じ方向に向ける</li>
<li>どのようにして情報の透明性を高めているか？</li>
<li>バックログを、何で管理しているか？</li>
<li>経営陣の経営方針をどのように現場に伝えていくか？</li>
<li>高頻度な1on1</li>
<li>開発チームの文化は？</li>
<li>技術者の採用プロセス</li>
<li>技術的に面白いチャレンジには何がある？</li>
<li>今後のプロダクトの方向性をどうしていく？</li>
</ul>
エピソード提供スポンサー
<p><a href="https://pitpa.cc/3ozy7RI" target="_blank">株式会社Luup</a> </p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/062_IAino.mp3</guid>
      <pubDate>Mon, 13 Dec 2021 03:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:41:16</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/ced7c757-3985-44f3-b1fd-ee743e1dd57f.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="39618351"/>
    </item>
    <item>
      <title>60. エムスリーにおけるエンジニアリングマネジメント・リーダーの役割・1on1 w/ yamamuteking</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020" target="_blank">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>
<li>山崎さんがエムスリーで実施した、最大の組織変更は？</li>
<li>小さいチーム・数多くのリーダー</li>
<li>マネジメントチームが見る範囲は？</li>
<li>マネジメントチームに所属するHRBPの役割は？</li>
<li>エンジニアのチャレンジをどのように管理しているか？</li>
<li>チームのチャレンジとは、具体的にどのようなものか？</li>
<li>どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？</li>
<li>オンボーディングで何を選ぶかが重要</li>
<li>オンボーディングで3連発の成功を目指す</li>
<li>エムスリーにおける、エンジニアリングリーダーに求められるものは？</li>
<li>目標設定・評価・採用への貢献</li>
<li>山崎さんであれば、どのように目標設定をするか？</li>
<li>「正しく」評価するために何を気をつけているか？</li>
<li>Cross 1on1 とは？</li>
<li>評価に直接関与しないグループリーダーとの新入社員との1on1</li>
<li>Cross 1on1 は、社員から申請して実施するのか？</li>
<li>Cross 1on1 の実施頻度は？</li>
<li>エムスリーにおける1on1の目的は？</li>
<li>山崎さんの1on1スタイルは？</li>
<li><a href="https://twitter.com/m3_engineering" target="_blank">M3 エンジニア公式 Twitter</a></li>
<li><a href="https://www.m3tech.blog/" target="_blank">M3 Tech Blog</a></li>
<li><a href="https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ" target="_blank">エムスリー公式テックチャンネル 【M3 Tech Channel】</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>60. エムスリーにおけるエンジニアリングマネジメント・リーダーの役割・1on1 w/ yamamuteking</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020" target="_blank"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんがエムスリーで実施した、最大の組織変更は？&lt;/li&gt;
&lt;li&gt;小さいチーム・数多くのリーダー&lt;/li&gt;
&lt;li&gt;マネジメントチームが見る範囲は？&lt;/li&gt;
&lt;li&gt;マネジメントチームに所属するHRBPの役割は？&lt;/li&gt;
&lt;li&gt;エンジニアのチャレンジをどのように管理しているか？&lt;/li&gt;
&lt;li&gt;チームのチャレンジとは、具体的にどのようなものか？&lt;/li&gt;
&lt;li&gt;どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？&lt;/li&gt;
&lt;li&gt;オンボーディングで何を選ぶかが重要&lt;/li&gt;
&lt;li&gt;オンボーディングで3連発の成功を目指す&lt;/li&gt;
&lt;li&gt;エムスリーにおける、エンジニアリングリーダーに求められるものは？&lt;/li&gt;
&lt;li&gt;目標設定・評価・採用への貢献&lt;/li&gt;
&lt;li&gt;山崎さんであれば、どのように目標設定をするか？&lt;/li&gt;
&lt;li&gt;「正しく」評価するために何を気をつけているか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 とは？&lt;/li&gt;
&lt;li&gt;評価に直接関与しないグループリーダーとの新入社員との1on1&lt;/li&gt;
&lt;li&gt;Cross 1on1 は、社員から申請して実施するのか？&lt;/li&gt;
&lt;li&gt;Cross 1on1 の実施頻度は？&lt;/li&gt;
&lt;li&gt;エムスリーにおける1on1の目的は？&lt;/li&gt;
&lt;li&gt;山崎さんの1on1スタイルは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/m3_engineering" target="_blank"&gt;M3 エンジニア公式 Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/" target="_blank"&gt;M3 Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ" target="_blank"&gt;エムスリー公式テックチャンネル 【M3 Tech Channel】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020" target="_blank">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>
<li>山崎さんがエムスリーで実施した、最大の組織変更は？</li>
<li>小さいチーム・数多くのリーダー</li>
<li>マネジメントチームが見る範囲は？</li>
<li>マネジメントチームに所属するHRBPの役割は？</li>
<li>エンジニアのチャレンジをどのように管理しているか？</li>
<li>チームのチャレンジとは、具体的にどのようなものか？</li>
<li>どのぐらいの頻度で、エンジニアのチャレンジを確認しているか？</li>
<li>オンボーディングで何を選ぶかが重要</li>
<li>オンボーディングで3連発の成功を目指す</li>
<li>エムスリーにおける、エンジニアリングリーダーに求められるものは？</li>
<li>目標設定・評価・採用への貢献</li>
<li>山崎さんであれば、どのように目標設定をするか？</li>
<li>「正しく」評価するために何を気をつけているか？</li>
<li>Cross 1on1 とは？</li>
<li>評価に直接関与しないグループリーダーとの新入社員との1on1</li>
<li>Cross 1on1 は、社員から申請して実施するのか？</li>
<li>Cross 1on1 の実施頻度は？</li>
<li>エムスリーにおける1on1の目的は？</li>
<li>山崎さんの1on1スタイルは？</li>
<li><a href="https://twitter.com/m3_engineering" target="_blank">M3 エンジニア公式 Twitter</a></li>
<li><a href="https://www.m3tech.blog/" target="_blank">M3 Tech Blog</a></li>
<li><a href="https://www.youtube.com/channel/UC_DkAOcwgmtQnJLDctci4rQ" target="_blank">エムスリー公式テックチャンネル 【M3 Tech Channel】</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/062_yvfSc.mp3</guid>
      <pubDate>Sun, 14 Nov 2021 23:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:30:11</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/a5d915b3-b8f1-49fa-8971-8d1bd34e1e6a.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="28988395"/>
    </item>
    <item>
      <title>59. エムスリーにおけるVPoEの役割・エンジニア採用について w/ yamamuteking</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020" target="_blank">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>
<li>山崎さんの考えるVPoEとは？</li>
<li>m3にてVPoEを配置するきっかけは何だったか？</li>
<li>50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？</li>
<li>もともとオープンソースの文化が強い</li>
<li>外部委託での失敗経験から、エンジニアリングの内製化へ</li>
<li>要所要所で技術的に良い判断をしてきた</li>
<li><a href="https://amzn.to/3mUVmFo" target="_blank">Release It！ 本番用ソフトウェア製品の設計とデプロイのために</a></li>
<li><a href="https://amzn.to/3odv14S" target="_blank">不格好経営</a></li>
<li>60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？</li>
<li>採用基準を限界まで引き上げる</li>
<li>CTOレベルという定義、およびなぜCTOレベルに着目したのか？</li>
<li><a href="https://m3.recruitment.jp/business/philosophy/" target="_blank">くしゃみ</a></li>
<li>CTOレベルをどのように判断していくか？</li>
<li>
<a href="https://amzn.to/3GYYWWW" target="_blank">最難関のリーダーシップ ― 変革をやり遂げる意志とスキル</a> をどのように活用してきたか？</li>
<li>ハイフェッツの技術的問題と適応課題</li>
<li>採用をテコ入れするときに、後ろのプロセスから改善していった</li>
<li>内定承諾率100%を目指す</li>
<li>自分たちが変わらない限り解決が難しい問題</li>
<li>内定承諾率をあげるために、何をしていったか？</li>
<li>改善をすすめるときに、何が有効かをどう判断していったか？</li>
<li>オファー面談より手前のプロセスで、何を改善したか？</li>
<li><a href="https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup" target="_blank">エンジニアを採用する技術 VPofEngineering Meetup</a></li>
</ul>
<p>エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。</p>
エピソードスポンサー
<ul>
<li><a href="https://forkwell.com/" target="_blank">Forkwell</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>59. エムスリーにおけるVPoEの役割・エンジニア採用について w/ yamamuteking</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020" target="_blank"&gt;VPoEとしてこの3年間を振り返って  - エムスリーテックブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;山崎さんの考えるVPoEとは？&lt;/li&gt;
&lt;li&gt;m3にてVPoEを配置するきっかけは何だったか？&lt;/li&gt;
&lt;li&gt;50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？&lt;/li&gt;
&lt;li&gt;もともとオープンソースの文化が強い&lt;/li&gt;
&lt;li&gt;外部委託での失敗経験から、エンジニアリングの内製化へ&lt;/li&gt;
&lt;li&gt;要所要所で技術的に良い判断をしてきた&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3mUVmFo" target="_blank"&gt;Release It！ 本番用ソフトウェア製品の設計とデプロイのために&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3odv14S" target="_blank"&gt;不格好経営&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？&lt;/li&gt;
&lt;li&gt;採用基準を限界まで引き上げる&lt;/li&gt;
&lt;li&gt;CTOレベルという定義、およびなぜCTOレベルに着目したのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m3.recruitment.jp/business/philosophy/" target="_blank"&gt;くしゃみ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTOレベルをどのように判断していくか？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/3GYYWWW" target="_blank"&gt;最難関のリーダーシップ ― 変革をやり遂げる意志とスキル&lt;/a&gt; をどのように活用してきたか？&lt;/li&gt;
&lt;li&gt;ハイフェッツの技術的問題と適応課題&lt;/li&gt;
&lt;li&gt;採用をテコ入れするときに、後ろのプロセスから改善していった&lt;/li&gt;
&lt;li&gt;内定承諾率100%を目指す&lt;/li&gt;
&lt;li&gt;自分たちが変わらない限り解決が難しい問題&lt;/li&gt;
&lt;li&gt;内定承諾率をあげるために、何をしていったか？&lt;/li&gt;
&lt;li&gt;改善をすすめるときに、何が有効かをどう判断していったか？&lt;/li&gt;
&lt;li&gt;オファー面談より手前のプロセスで、何を改善したか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup" target="_blank"&gt;エンジニアを採用する技術 VPofEngineering Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。&lt;/p&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forkwell.com/" target="_blank"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.m3tech.blog/entry/vpoe-retrospective-2020" target="_blank">VPoEとしてこの3年間を振り返って  - エムスリーテックブログ</a></li>
<li>山崎さんの考えるVPoEとは？</li>
<li>m3にてVPoEを配置するきっかけは何だったか？</li>
<li>50名のエンジニア組織の段階で、m3のビジネスがなぜ上手くいっていたのか？</li>
<li>もともとオープンソースの文化が強い</li>
<li>外部委託での失敗経験から、エンジニアリングの内製化へ</li>
<li>要所要所で技術的に良い判断をしてきた</li>
<li><a href="https://amzn.to/3mUVmFo" target="_blank">Release It！ 本番用ソフトウェア製品の設計とデプロイのために</a></li>
<li><a href="https://amzn.to/3odv14S" target="_blank">不格好経営</a></li>
<li>60名からエンジニア組織を拡大させていくときに、何を気をつけていたか？</li>
<li>採用基準を限界まで引き上げる</li>
<li>CTOレベルという定義、およびなぜCTOレベルに着目したのか？</li>
<li><a href="https://m3.recruitment.jp/business/philosophy/" target="_blank">くしゃみ</a></li>
<li>CTOレベルをどのように判断していくか？</li>
<li>
<a href="https://amzn.to/3GYYWWW" target="_blank">最難関のリーダーシップ ― 変革をやり遂げる意志とスキル</a> をどのように活用してきたか？</li>
<li>ハイフェッツの技術的問題と適応課題</li>
<li>採用をテコ入れするときに、後ろのプロセスから改善していった</li>
<li>内定承諾率100%を目指す</li>
<li>自分たちが変わらない限り解決が難しい問題</li>
<li>内定承諾率をあげるために、何をしていったか？</li>
<li>改善をすすめるときに、何が有効かをどう判断していったか？</li>
<li>オファー面談より手前のプロセスで、何を改善したか？</li>
<li><a href="https://speakerdeck.com/satorufujiwara/enziniawocai-yong-suruji-shu-vpofengineering-meetup" target="_blank">エンジニアを採用する技術 VPofEngineering Meetup</a></li>
</ul>
<p>エピソード内容で訂正があります。谷村と南場さんは同期ではなく、南場さんが1年先輩とのことでした。</p>
エピソードスポンサー
<ul>
<li><a href="https://forkwell.com/" target="_blank">Forkwell</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://podcast-pitpa-enginner.cdn.pitpa.jp/fukabori/episodes/060_gTMto.mp3</guid>
      <pubDate>Mon, 08 Nov 2021 09:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:31:57</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/eb2a2544-4d42-4ff8-9b28-64d738dfeb89.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="30684473"/>
    </item>
    <item>
      <title>58. プロダクトマネージャーカンファレンス 2021 w/ Nunerm</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://2021.pmconf.jp/" target="_blank">プロダクトマネージャーカンファレンス 2021</a></li>
<li>プロダクトマネジメントとは改めて何か？</li>
<li>顧客に価値を提供しビジネスとして利益を出すこと</li>
<li>プロダクトマネージャーがセールス活動も、ときにはする？</li>
<li>プロダクトマネージャーカンファレンスとは？</li>
<li>どのような講演があるのか？</li>
<li>過去のプロダクトマネージャーカンファレンス講演で面白かったものは？</li>
<li><a href="https://2017.pmconf.jp/sessions/2017/09/14/whypm/" target="_blank">齊藤 満さん(2017)：95% of PM Work is Disgusting</a></li>
<li>やりたいことというより、やらなきゃいけないことをやる</li>
<li>過去のプロダクトマネージャー経験で辛かったことは？</li>
<li>プロダクトマネージャーとして最高に楽しかったことは？</li>
<li>仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？</li>
<li>プロダクトチームで共通理解を得る方法とは？</li>
<li><a href="https://2018.pmconf.jp/sessions/2018/10/07/session0711/" target="_blank">Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃</a></li>
<li>強いニーズさえ解決できれば価値になる</li>
<li><a href="https://www.youtube.com/watch?v=YDezR5VTKhw" target="_blank">顧客のBurning Needsを解決し、PMFを達成する</a></li>
<li><a href="https://2020.pmconf.jp/sessions/83VXZiqj" target="_blank">川崎さん(2020)：お手本のような仮説・価値検証アプローチ</a></li>
<li>今年のpmconfのキーメッセージは？</li>
<li>イベントのテーマを決めるときの対話・プロセスは？</li>
<li>優先順位を決める判断基準はあったか？</li>
<li>抽象的な話を収束させるときに使う方法は？</li>
<li>pmconf 2021 の注目トピックは？</li>
<li>Miro のプロダクトマネージャーの方の登壇、行政の方の登壇</li>
<li>プロダクトマネージャカンファレンスを最大限に活用する方法は？</li>
<li>参加前、参加中、参加後のアプローチ</li>
<li><a href="https://productmanager55.hatenablog.com/entry/2020/01/12/222825" target="_blank">RSGT2020に行ってないけどレポートをする</a></li>
<li>pmconf 2021は今年無料</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://forkwell.com/" target="_blank">Forkwell</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>58. プロダクトマネージャーカンファレンス 2021 w/ Nunerm</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://2021.pmconf.jp/" target="_blank"&gt;プロダクトマネージャーカンファレンス 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクトマネジメントとは改めて何か？&lt;/li&gt;
&lt;li&gt;顧客に価値を提供しビジネスとして利益を出すこと&lt;/li&gt;
&lt;li&gt;プロダクトマネージャーがセールス活動も、ときにはする？&lt;/li&gt;
&lt;li&gt;プロダクトマネージャーカンファレンスとは？&lt;/li&gt;
&lt;li&gt;どのような講演があるのか？&lt;/li&gt;
&lt;li&gt;過去のプロダクトマネージャーカンファレンス講演で面白かったものは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2017.pmconf.jp/sessions/2017/09/14/whypm/" target="_blank"&gt;齊藤 満さん(2017)：95% of PM Work is Disgusting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;やりたいことというより、やらなきゃいけないことをやる&lt;/li&gt;
&lt;li&gt;過去のプロダクトマネージャー経験で辛かったことは？&lt;/li&gt;
&lt;li&gt;プロダクトマネージャーとして最高に楽しかったことは？&lt;/li&gt;
&lt;li&gt;仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？&lt;/li&gt;
&lt;li&gt;プロダクトチームで共通理解を得る方法とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2018.pmconf.jp/sessions/2018/10/07/session0711/" target="_blank"&gt;Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;強いニーズさえ解決できれば価値になる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YDezR5VTKhw" target="_blank"&gt;顧客のBurning Needsを解決し、PMFを達成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2020.pmconf.jp/sessions/83VXZiqj" target="_blank"&gt;川崎さん(2020)：お手本のような仮説・価値検証アプローチ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;今年のpmconfのキーメッセージは？&lt;/li&gt;
&lt;li&gt;イベントのテーマを決めるときの対話・プロセスは？&lt;/li&gt;
&lt;li&gt;優先順位を決める判断基準はあったか？&lt;/li&gt;
&lt;li&gt;抽象的な話を収束させるときに使う方法は？&lt;/li&gt;
&lt;li&gt;pmconf 2021 の注目トピックは？&lt;/li&gt;
&lt;li&gt;Miro のプロダクトマネージャーの方の登壇、行政の方の登壇&lt;/li&gt;
&lt;li&gt;プロダクトマネージャカンファレンスを最大限に活用する方法は？&lt;/li&gt;
&lt;li&gt;参加前、参加中、参加後のアプローチ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://productmanager55.hatenablog.com/entry/2020/01/12/222825" target="_blank"&gt;RSGT2020に行ってないけどレポートをする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pmconf 2021は今年無料&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forkwell.com/" target="_blank"&gt;Forkwell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://2021.pmconf.jp/" target="_blank">プロダクトマネージャーカンファレンス 2021</a></li>
<li>プロダクトマネジメントとは改めて何か？</li>
<li>顧客に価値を提供しビジネスとして利益を出すこと</li>
<li>プロダクトマネージャーがセールス活動も、ときにはする？</li>
<li>プロダクトマネージャーカンファレンスとは？</li>
<li>どのような講演があるのか？</li>
<li>過去のプロダクトマネージャーカンファレンス講演で面白かったものは？</li>
<li><a href="https://2017.pmconf.jp/sessions/2017/09/14/whypm/" target="_blank">齊藤 満さん(2017)：95% of PM Work is Disgusting</a></li>
<li>やりたいことというより、やらなきゃいけないことをやる</li>
<li>過去のプロダクトマネージャー経験で辛かったことは？</li>
<li>プロダクトマネージャーとして最高に楽しかったことは？</li>
<li>仮説を外したときに、プロダクトチーム向けにどうコミュニケーションをしていくのか？</li>
<li>プロダクトチームで共通理解を得る方法とは？</li>
<li><a href="https://2018.pmconf.jp/sessions/2018/10/07/session0711/" target="_blank">Chenさん(2018)：中国のプロダクトマネジメントの違いに衝撃</a></li>
<li>強いニーズさえ解決できれば価値になる</li>
<li><a href="https://www.youtube.com/watch?v=YDezR5VTKhw" target="_blank">顧客のBurning Needsを解決し、PMFを達成する</a></li>
<li><a href="https://2020.pmconf.jp/sessions/83VXZiqj" target="_blank">川崎さん(2020)：お手本のような仮説・価値検証アプローチ</a></li>
<li>今年のpmconfのキーメッセージは？</li>
<li>イベントのテーマを決めるときの対話・プロセスは？</li>
<li>優先順位を決める判断基準はあったか？</li>
<li>抽象的な話を収束させるときに使う方法は？</li>
<li>pmconf 2021 の注目トピックは？</li>
<li>Miro のプロダクトマネージャーの方の登壇、行政の方の登壇</li>
<li>プロダクトマネージャカンファレンスを最大限に活用する方法は？</li>
<li>参加前、参加中、参加後のアプローチ</li>
<li><a href="https://productmanager55.hatenablog.com/entry/2020/01/12/222825" target="_blank">RSGT2020に行ってないけどレポートをする</a></li>
<li>pmconf 2021は今年無料</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://forkwell.com/" target="_blank">Forkwell</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/58</guid>
      <pubDate>Thu, 07 Oct 2021 08:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:49:11</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/d82c7e56-17c8-4dd8-bccb-574b500eecaf.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="47217684"/>
    </item>
    <item>
      <title>57. クリエーションライン社の軌跡 w/ yasudatadahiro</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020" target="_blank">JoyInc Journey ScrumFestSapporo 2020</a></li>
<li><a href="https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492" target="_blank">日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡</a></li>
<li>会社が大変だった時期はどのような様子だったのか？</li>
<li>悪い状態になってしまった要因は何だったのか？</li>
<li>組織の成功循環モデルと失敗モデル</li>
<li>どうやって会社・組織を立ち直らせていったのか？</li>
<li>TGIFを持ち込んだときの失敗</li>
<li><a href="https://www.youtube.com/watch?v=GA8z7f7a2Pk" target="_blank">Sasquatch music festival 2009 - Guy starts dance party</a></li>
<li>フォロワーシップ</li>
<li>自分が一番最初に踊ってオープンにする</li>
<li>何をオープンにしているのか？</li>
<li><a href="https://amzn.to/2XAohUO" target="_blank">社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント</a></li>
<li><a href="https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/" target="_blank">ヴァル研究所の写真例</a></li>
<li>社員をどのようにモチベートしていったのか？</li>
<li>社長の目指す姿を共有できていたのが良かった</li>
<li>ミッション・ビジョンは上手く使えていたか？</li>
<li>魂のないビジョンと、あるビジョン</li>
<li>どのように理念浸透させていったのか？</li>
<li>ビジョンをベースにしたワークショップの実施</li>
<li>ビジョンが意識できていると、どのような行動が起きるのか？</li>
<li><a href="https://amzn.to/3CBhKIz" target="_blank">ジョイ・インク 役職も部署もない全員主役のマネジメント</a></li>
<li>エンゲージメントスコアの可視化</li>
<li>社員全員と社長との1:1の対話</li>
<li>雑談を意識的に取り入れる</li>
<li>雑談を決める相手はどのように決めていた？</li>
<li><a href="https://nttcom.github.io/onboarding-handbook/" target="_blank">オンボーディング ハンドブック</a></li>
<li>オンボーディングハンドブックの作成経緯</li>
<li>チーム全員との1on1(mixin)</li>
<li>オンボーディング用のテンプレート</li>
<li><a href="https://www.creationline.com/recruit" target="_blank">採用情報 - クリエーションライン</a></li>
<li><a href="https://amzn.to/3CyTBCB" target="_blank">Team Geek ―Googleのギークたちはいかにしてチームを作るのか</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>57. クリエーションライン社の軌跡 w/ yasudatadahiro</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020" target="_blank"&gt;JoyInc Journey ScrumFestSapporo 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492" target="_blank"&gt;日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;会社が大変だった時期はどのような様子だったのか？&lt;/li&gt;
&lt;li&gt;悪い状態になってしまった要因は何だったのか？&lt;/li&gt;
&lt;li&gt;組織の成功循環モデルと失敗モデル&lt;/li&gt;
&lt;li&gt;どうやって会社・組織を立ち直らせていったのか？&lt;/li&gt;
&lt;li&gt;TGIFを持ち込んだときの失敗&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GA8z7f7a2Pk" target="_blank"&gt;Sasquatch music festival 2009 - Guy starts dance party&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;フォロワーシップ&lt;/li&gt;
&lt;li&gt;自分が一番最初に踊ってオープンにする&lt;/li&gt;
&lt;li&gt;何をオープンにしているのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/2XAohUO" target="_blank"&gt;社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/" target="_blank"&gt;ヴァル研究所の写真例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;社員をどのようにモチベートしていったのか？&lt;/li&gt;
&lt;li&gt;社長の目指す姿を共有できていたのが良かった&lt;/li&gt;
&lt;li&gt;ミッション・ビジョンは上手く使えていたか？&lt;/li&gt;
&lt;li&gt;魂のないビジョンと、あるビジョン&lt;/li&gt;
&lt;li&gt;どのように理念浸透させていったのか？&lt;/li&gt;
&lt;li&gt;ビジョンをベースにしたワークショップの実施&lt;/li&gt;
&lt;li&gt;ビジョンが意識できていると、どのような行動が起きるのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3CBhKIz" target="_blank"&gt;ジョイ・インク 役職も部署もない全員主役のマネジメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;エンゲージメントスコアの可視化&lt;/li&gt;
&lt;li&gt;社員全員と社長との1:1の対話&lt;/li&gt;
&lt;li&gt;雑談を意識的に取り入れる&lt;/li&gt;
&lt;li&gt;雑談を決める相手はどのように決めていた？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nttcom.github.io/onboarding-handbook/" target="_blank"&gt;オンボーディング ハンドブック&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;オンボーディングハンドブックの作成経緯&lt;/li&gt;
&lt;li&gt;チーム全員との1on1(mixin)&lt;/li&gt;
&lt;li&gt;オンボーディング用のテンプレート&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.creationline.com/recruit" target="_blank"&gt;採用情報 - クリエーションライン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3CyTBCB" target="_blank"&gt;Team Geek ―Googleのギークたちはいかにしてチームを作るのか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/yasudatadahiro/joyinc-journey-scrumfestsapporo-2020" target="_blank">JoyInc Journey ScrumFestSapporo 2020</a></li>
<li><a href="https://www.slideshare.net/TadahiroYasuda/joyinc7-231269492" target="_blank">日本にJoy,Incを創る！どん底からスタートしたぼくらのジョイインクジャーニー7年間の軌跡</a></li>
<li>会社が大変だった時期はどのような様子だったのか？</li>
<li>悪い状態になってしまった要因は何だったのか？</li>
<li>組織の成功循環モデルと失敗モデル</li>
<li>どうやって会社・組織を立ち直らせていったのか？</li>
<li>TGIFを持ち込んだときの失敗</li>
<li><a href="https://www.youtube.com/watch?v=GA8z7f7a2Pk" target="_blank">Sasquatch music festival 2009 - Guy starts dance party</a></li>
<li>フォロワーシップ</li>
<li>自分が一番最初に踊ってオープンにする</li>
<li>何をオープンにしているのか？</li>
<li><a href="https://amzn.to/2XAohUO" target="_blank">社員の力で最高のチームをつくる――〈新版〉1分間エンパワーメント</a></li>
<li><a href="https://engineer.recruit-lifestyle.co.jp/techblog/2018-11-02-report-val-lab/" target="_blank">ヴァル研究所の写真例</a></li>
<li>社員をどのようにモチベートしていったのか？</li>
<li>社長の目指す姿を共有できていたのが良かった</li>
<li>ミッション・ビジョンは上手く使えていたか？</li>
<li>魂のないビジョンと、あるビジョン</li>
<li>どのように理念浸透させていったのか？</li>
<li>ビジョンをベースにしたワークショップの実施</li>
<li>ビジョンが意識できていると、どのような行動が起きるのか？</li>
<li><a href="https://amzn.to/3CBhKIz" target="_blank">ジョイ・インク 役職も部署もない全員主役のマネジメント</a></li>
<li>エンゲージメントスコアの可視化</li>
<li>社員全員と社長との1:1の対話</li>
<li>雑談を意識的に取り入れる</li>
<li>雑談を決める相手はどのように決めていた？</li>
<li><a href="https://nttcom.github.io/onboarding-handbook/" target="_blank">オンボーディング ハンドブック</a></li>
<li>オンボーディングハンドブックの作成経緯</li>
<li>チーム全員との1on1(mixin)</li>
<li>オンボーディング用のテンプレート</li>
<li><a href="https://www.creationline.com/recruit" target="_blank">採用情報 - クリエーションライン</a></li>
<li><a href="https://amzn.to/3CyTBCB" target="_blank">Team Geek ―Googleのギークたちはいかにしてチームを作るのか</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/57</guid>
      <pubDate>Tue, 21 Sep 2021 14:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:53:48</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/a9c3b4f1-debf-403d-bbfe-9cac8806fac7.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="51658501"/>
    </item>
    <item>
      <title>56. 自然言語処理(NLP)の歴史、BERT w/ Takahiro Omi</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/3jTBEIr" target="_blank">BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―</a></li>
<li>自然言語処理とは？</li>
<li>自然言語処理の応用範囲は？</li>
<li>機械翻訳、メールフィルタ、チャットボット</li>
<li>自然言語処理はどのように発展してきたのか？</li>
<li>NN (ニューラルネットワーク) とは何か？</li>
<li>NN における大きなブレイクスルー</li>
<li><a href="https://ja.wikipedia.org/wiki/AlexNet" target="_blank">AlexNet</a></li>
<li>エンドツーエンド処理</li>
<li>Deep NN におけるディープとは？</li>
<li>学習とは具体的にはどのような処理？</li>
<li>RNN (Recurrent Neural Network) とは？</li>
<li>RNN で解きたかった課題は何か？</li>
<li>RNN における処理イメージ</li>
<li>RNN の課題</li>
<li>LSTM (Long Short Term Memory)</li>
<li>LSTM の特徴、文脈考慮</li>
<li>NN への文章はどのように入力するのか？</li>
<li>単語をベクトルで表現する</li>
<li>ELMo と LSTM との関連性は？</li>
<li>なぜ双方向の情報を使うのが効果的なのか？</li>
<li>セサミストリート</li>
<li>Transformers の登場</li>
<li>Self-Attention とは？</li>
<li>Self-Attention の計算効率利点</li>
<li>Attention と Transformer との関連性は？</li>
<li>BERT(Bidirectional Encoder Representations from Transformers) とは？</li>
<li>エンコーダとデコーダとは？</li>
<li>BERT の特徴とは？</li>
<li><a href="https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/" target="_blank">BERTによるニュース記事の構造化：企業名抽出</a></li>
<li>自然言語処理界隈はどのように進化していくのか？</li>
<li>GitHub Copilot</li>
<li><a href="https://stockmark.co.jp/recruit" target="_blank">Recruit、ストックマーク株式会社</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>56. 自然言語処理(NLP)の歴史、BERT w/ Takahiro Omi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3jTBEIr" target="_blank"&gt;BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自然言語処理とは？&lt;/li&gt;
&lt;li&gt;自然言語処理の応用範囲は？&lt;/li&gt;
&lt;li&gt;機械翻訳、メールフィルタ、チャットボット&lt;/li&gt;
&lt;li&gt;自然言語処理はどのように発展してきたのか？&lt;/li&gt;
&lt;li&gt;NN (ニューラルネットワーク) とは何か？&lt;/li&gt;
&lt;li&gt;NN における大きなブレイクスルー&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/AlexNet" target="_blank"&gt;AlexNet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;エンドツーエンド処理&lt;/li&gt;
&lt;li&gt;Deep NN におけるディープとは？&lt;/li&gt;
&lt;li&gt;学習とは具体的にはどのような処理？&lt;/li&gt;
&lt;li&gt;RNN (Recurrent Neural Network) とは？&lt;/li&gt;
&lt;li&gt;RNN で解きたかった課題は何か？&lt;/li&gt;
&lt;li&gt;RNN における処理イメージ&lt;/li&gt;
&lt;li&gt;RNN の課題&lt;/li&gt;
&lt;li&gt;LSTM (Long Short Term Memory)&lt;/li&gt;
&lt;li&gt;LSTM の特徴、文脈考慮&lt;/li&gt;
&lt;li&gt;NN への文章はどのように入力するのか？&lt;/li&gt;
&lt;li&gt;単語をベクトルで表現する&lt;/li&gt;
&lt;li&gt;ELMo と LSTM との関連性は？&lt;/li&gt;
&lt;li&gt;なぜ双方向の情報を使うのが効果的なのか？&lt;/li&gt;
&lt;li&gt;セサミストリート&lt;/li&gt;
&lt;li&gt;Transformers の登場&lt;/li&gt;
&lt;li&gt;Self-Attention とは？&lt;/li&gt;
&lt;li&gt;Self-Attention の計算効率利点&lt;/li&gt;
&lt;li&gt;Attention と Transformer との関連性は？&lt;/li&gt;
&lt;li&gt;BERT(Bidirectional Encoder Representations from Transformers) とは？&lt;/li&gt;
&lt;li&gt;エンコーダとデコーダとは？&lt;/li&gt;
&lt;li&gt;BERT の特徴とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/" target="_blank"&gt;BERTによるニュース記事の構造化：企業名抽出&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自然言語処理界隈はどのように進化していくのか？&lt;/li&gt;
&lt;li&gt;GitHub Copilot&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stockmark.co.jp/recruit" target="_blank"&gt;Recruit、ストックマーク株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/3jTBEIr" target="_blank">BERTによる自然言語処理入門 ―Transformersを使った実践プログラミング―</a></li>
<li>自然言語処理とは？</li>
<li>自然言語処理の応用範囲は？</li>
<li>機械翻訳、メールフィルタ、チャットボット</li>
<li>自然言語処理はどのように発展してきたのか？</li>
<li>NN (ニューラルネットワーク) とは何か？</li>
<li>NN における大きなブレイクスルー</li>
<li><a href="https://ja.wikipedia.org/wiki/AlexNet" target="_blank">AlexNet</a></li>
<li>エンドツーエンド処理</li>
<li>Deep NN におけるディープとは？</li>
<li>学習とは具体的にはどのような処理？</li>
<li>RNN (Recurrent Neural Network) とは？</li>
<li>RNN で解きたかった課題は何か？</li>
<li>RNN における処理イメージ</li>
<li>RNN の課題</li>
<li>LSTM (Long Short Term Memory)</li>
<li>LSTM の特徴、文脈考慮</li>
<li>NN への文章はどのように入力するのか？</li>
<li>単語をベクトルで表現する</li>
<li>ELMo と LSTM との関連性は？</li>
<li>なぜ双方向の情報を使うのが効果的なのか？</li>
<li>セサミストリート</li>
<li>Transformers の登場</li>
<li>Self-Attention とは？</li>
<li>Self-Attention の計算効率利点</li>
<li>Attention と Transformer との関連性は？</li>
<li>BERT(Bidirectional Encoder Representations from Transformers) とは？</li>
<li>エンコーダとデコーダとは？</li>
<li>BERT の特徴とは？</li>
<li><a href="https://tech.stockmark.co.jp/blog/202007_company_entities_recognition/" target="_blank">BERTによるニュース記事の構造化：企業名抽出</a></li>
<li>自然言語処理界隈はどのように進化していくのか？</li>
<li>GitHub Copilot</li>
<li><a href="https://stockmark.co.jp/recruit" target="_blank">Recruit、ストックマーク株式会社</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/56</guid>
      <pubDate>Wed, 08 Sep 2021 14:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:38:45</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/a99343bc-b53e-43fd-90f4-e6fdca436aa8.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37202546"/>
    </item>
    <item>
      <title>55. コンテナランタイム(後編) w/ TokunagaKohei</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>高レベルランタイムとは何か？</li>
<li>デスクトップなどで使われる高レベルランタイム実装には何があるか？</li>
<li><a href="https://containerd.io/" target="_blank">containerd</a></li>
<li>docker が containerd を活用するまでの流れ</li>
<li><a href="https://podman.io/" target="_blank">podman</a></li>
<li>podman の特徴は?</li>
<li>補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の <a href="https://www.slideshare.net/AkihiroSuda/dockerpodman" target="_blank">DockerとPodmanの比較(Container Runtime Meetup #3発表資料)</a>に分かりやすくまとめられています</li>
<li><a href="https://github.com/containers/conmon" target="_blank">conmon</a></li>
<li><a href="https://github.com/containerd/nerdctl" target="_blank">nerdctl</a></li>
<li>nerdctl を利用するメリットは何か？</li>
<li>kubernetes から叩かれるCRIには何があるか？</li>
<li><a href="https://www.cncf.io/" target="_blank">CNCF(Cloud Native Computing Foundation)</a></li>
<li><a href="https://github.com/moby/buildkit" target="_blank">BuildKit</a></li>
<li><a href="https://github.com/cri-o/cri-o" target="_blank">CRI-O</a></li>
<li>CRI-O は containerd と比べた場合の特徴は何か？</li>
<li>OCIランタイムの実装には何があるか？</li>
<li><a href="https://github.com/opencontainers/runc" target="_blank">runc</a></li>
<li><a href="https://github.com/opencontainers/runc/releases/tag/v1.0.0" target="_blank">runc の v1.0.0 リリース</a></li>
<li><a href="https://github.com/opencontainers/runtime-spec" target="_blank">Open Container Initiative Runtime Specification</a></li>
<li>OCIランタイムの実装はできるもの？</li>
<li><a href="https://github.com/containers/youki" target="_blank">youki: A container runtime in Rust</a></li>
<li><a href="https://zenn.dev/utam0k/articles/74d08c9f556534" target="_blank">2021年に今更コンテナ入門した僕の最初の一歩</a></li>
<li>セキュアなコンテナランタイム</li>
<li><a href="https://katacontainers.io/" target="_blank">Kata Containers</a></li>
<li>Kata Containers の特徴とは？</li>
<li><a href="https://github.com/google/gvisor" target="_blank">gVisor</a></li>
<li>gVisor の特徴とは？</li>
<li>C言語による実装 <a href="https://github.com/containers/crun" target="_blank">crun</a>
</li>
<li>言語実装に差異はどの辺りにあるか？</li>
<li>パフォーマンスとコミュニティ</li>
<li><a href="https://opencontainers.org/" target="_blank">Open Container Initiative</a></li>
<li>OCI で規定される仕様には何があるか？</li>
<li><a href="https://github.com/opencontainers/runtime-spec" target="_blank">OCI Runtime Specification</a></li>
<li><a href="https://github.com/opencontainers/image-spec" target="_blank">OCI Image Specification</a></li>
<li><a href="https://github.com/opencontainers/distribution-spec" target="_blank">OCI Distribution Specification</a></li>
<li>この先、コンテナ関連の仕様・実装はどのように発展していくか？</li>
<li><a href="https://amzn.to/3CvNhwF" target="_blank">イラストでわかるDockerとKubernetes Software Design plus</a></li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>55. コンテナランタイム(後編) w/ TokunagaKohei</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;高レベルランタイムとは何か？&lt;/li&gt;
&lt;li&gt;デスクトップなどで使われる高レベルランタイム実装には何があるか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://containerd.io/" target="_blank"&gt;containerd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docker が containerd を活用するまでの流れ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podman.io/" target="_blank"&gt;podman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;podman の特徴は?&lt;/li&gt;
&lt;li&gt;補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の &lt;a href="https://www.slideshare.net/AkihiroSuda/dockerpodman" target="_blank"&gt;DockerとPodmanの比較(Container Runtime Meetup #3発表資料)&lt;/a&gt;に分かりやすくまとめられています&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/containers/conmon" target="_blank"&gt;conmon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/containerd/nerdctl" target="_blank"&gt;nerdctl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nerdctl を利用するメリットは何か？&lt;/li&gt;
&lt;li&gt;kubernetes から叩かれるCRIには何があるか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cncf.io/" target="_blank"&gt;CNCF(Cloud Native Computing Foundation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/moby/buildkit" target="_blank"&gt;BuildKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cri-o/cri-o" target="_blank"&gt;CRI-O&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CRI-O は containerd と比べた場合の特徴は何か？&lt;/li&gt;
&lt;li&gt;OCIランタイムの実装には何があるか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/runc" target="_blank"&gt;runc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/runc/releases/tag/v1.0.0" target="_blank"&gt;runc の v1.0.0 リリース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec" target="_blank"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OCIランタイムの実装はできるもの？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/containers/youki" target="_blank"&gt;youki: A container runtime in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/utam0k/articles/74d08c9f556534" target="_blank"&gt;2021年に今更コンテナ入門した僕の最初の一歩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;セキュアなコンテナランタイム&lt;/li&gt;
&lt;li&gt;&lt;a href="https://katacontainers.io/" target="_blank"&gt;Kata Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kata Containers の特徴とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/gvisor" target="_blank"&gt;gVisor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gVisor の特徴とは？&lt;/li&gt;
&lt;li&gt;C言語による実装 &lt;a href="https://github.com/containers/crun" target="_blank"&gt;crun&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;言語実装に差異はどの辺りにあるか？&lt;/li&gt;
&lt;li&gt;パフォーマンスとコミュニティ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opencontainers.org/" target="_blank"&gt;Open Container Initiative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OCI で規定される仕様には何があるか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec" target="_blank"&gt;OCI Runtime Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/image-spec" target="_blank"&gt;OCI Image Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/distribution-spec" target="_blank"&gt;OCI Distribution Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;この先、コンテナ関連の仕様・実装はどのように発展していくか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF" target="_blank"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.yumemi.co.jp/" target="_blank"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>高レベルランタイムとは何か？</li>
<li>デスクトップなどで使われる高レベルランタイム実装には何があるか？</li>
<li><a href="https://containerd.io/" target="_blank">containerd</a></li>
<li>docker が containerd を活用するまでの流れ</li>
<li><a href="https://podman.io/" target="_blank">podman</a></li>
<li>podman の特徴は?</li>
<li>補足: エピソード中で、PodmanとDockerの機能の主要な違いにひとつにPod作成機能を挙げていますが、これ以外にもいくつかあります。詳しい違いについては、mobyメンテナである須田瑛大氏の <a href="https://www.slideshare.net/AkihiroSuda/dockerpodman" target="_blank">DockerとPodmanの比較(Container Runtime Meetup #3発表資料)</a>に分かりやすくまとめられています</li>
<li><a href="https://github.com/containers/conmon" target="_blank">conmon</a></li>
<li><a href="https://github.com/containerd/nerdctl" target="_blank">nerdctl</a></li>
<li>nerdctl を利用するメリットは何か？</li>
<li>kubernetes から叩かれるCRIには何があるか？</li>
<li><a href="https://www.cncf.io/" target="_blank">CNCF(Cloud Native Computing Foundation)</a></li>
<li><a href="https://github.com/moby/buildkit" target="_blank">BuildKit</a></li>
<li><a href="https://github.com/cri-o/cri-o" target="_blank">CRI-O</a></li>
<li>CRI-O は containerd と比べた場合の特徴は何か？</li>
<li>OCIランタイムの実装には何があるか？</li>
<li><a href="https://github.com/opencontainers/runc" target="_blank">runc</a></li>
<li><a href="https://github.com/opencontainers/runc/releases/tag/v1.0.0" target="_blank">runc の v1.0.0 リリース</a></li>
<li><a href="https://github.com/opencontainers/runtime-spec" target="_blank">Open Container Initiative Runtime Specification</a></li>
<li>OCIランタイムの実装はできるもの？</li>
<li><a href="https://github.com/containers/youki" target="_blank">youki: A container runtime in Rust</a></li>
<li><a href="https://zenn.dev/utam0k/articles/74d08c9f556534" target="_blank">2021年に今更コンテナ入門した僕の最初の一歩</a></li>
<li>セキュアなコンテナランタイム</li>
<li><a href="https://katacontainers.io/" target="_blank">Kata Containers</a></li>
<li>Kata Containers の特徴とは？</li>
<li><a href="https://github.com/google/gvisor" target="_blank">gVisor</a></li>
<li>gVisor の特徴とは？</li>
<li>C言語による実装 <a href="https://github.com/containers/crun" target="_blank">crun</a>
</li>
<li>言語実装に差異はどの辺りにあるか？</li>
<li>パフォーマンスとコミュニティ</li>
<li><a href="https://opencontainers.org/" target="_blank">Open Container Initiative</a></li>
<li>OCI で規定される仕様には何があるか？</li>
<li><a href="https://github.com/opencontainers/runtime-spec" target="_blank">OCI Runtime Specification</a></li>
<li><a href="https://github.com/opencontainers/image-spec" target="_blank">OCI Image Specification</a></li>
<li><a href="https://github.com/opencontainers/distribution-spec" target="_blank">OCI Distribution Specification</a></li>
<li>この先、コンテナ関連の仕様・実装はどのように発展していくか？</li>
<li><a href="https://amzn.to/3CvNhwF" target="_blank">イラストでわかるDockerとKubernetes Software Design plus</a></li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/55</guid>
      <pubDate>Sun, 22 Aug 2021 15:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:37:42</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/9e3601e5-79f8-4af3-8cd1-b6fa4d9ee3ea.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="36196937"/>
    </item>
    <item>
      <title>54. コンテナランタイム(前編) w/ TokunagaKohei</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/3CvNhwF" target="_blank">イラストでわかるDockerとKubernetes Software Design plus</a></li>
<li><a href="https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142" target="_blank">DockerとKubernetesをかけめぐる</a></li>
<li>コンテナとは何か？</li>
<li>docker の大きな貢献って何だった？</li>
<li>コンテナランタイムとは何か？</li>
<li>コンテナの隔離とは、具体的にどのように実現するのか？</li>
<li>cgroups は実際に何をしているのか？</li>
<li>runc での実装例</li>
<li>他の隔離方法の概要</li>
<li>OCI とは何か？ OCI と runc の関係性は？</li>
<li>docker と OCIランタイム の関係</li>
<li>CRI ランタイムとは？</li>
<li>docker run 実行後の流れ</li>
<li>16:09 - 16:30 の「runc run」についての補足:
<ul>
<li>実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。</li>
<li>参考
<ul>
<li><a href="https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations" target="_blank">OCI Runtime Specificationで定められるOCIランタイムへ可能な操作</a></li>
<li><a href="https://medium.com/nttlabs/runc-overview-263b83164c98" target="_blank">runc runの実行とコードリーディング</a></li>
</ul>
</li>
</ul>
</li>
<li>高レベルランタイムとは？</li>
<li>docker以外のCLIランタイム実装</li>
<li><a href="https://github.com/opencontainers/runtime-spec" target="_blank">Open Container Initiative Runtime Specification</a></li>
<li>OCI Runtime Specification には何が規定されているのか？</li>
<li>コンテナの材料には何が含まれているのか？</li>
<li>docker 登場以後の歴史</li>
<li><a href="https://github.com/rkt/rkt" target="_blank">rkt - the pod-native container engine</a></li>
<li>kubernetes 利用時のコンテナ実行までの流れとは？</li>
<li>kubelet の役割</li>
<li>kubelet からの CRIランタイム への指示に使うプロトコル</li>
<li>dockershim が deprecated になったときに発生した誤解</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>54. コンテナランタイム(前編) w/ TokunagaKohei</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3CvNhwF" target="_blank"&gt;イラストでわかるDockerとKubernetes Software Design plus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142" target="_blank"&gt;DockerとKubernetesをかけめぐる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コンテナとは何か？&lt;/li&gt;
&lt;li&gt;docker の大きな貢献って何だった？&lt;/li&gt;
&lt;li&gt;コンテナランタイムとは何か？&lt;/li&gt;
&lt;li&gt;コンテナの隔離とは、具体的にどのように実現するのか？&lt;/li&gt;
&lt;li&gt;cgroups は実際に何をしているのか？&lt;/li&gt;
&lt;li&gt;runc での実装例&lt;/li&gt;
&lt;li&gt;他の隔離方法の概要&lt;/li&gt;
&lt;li&gt;OCI とは何か？ OCI と runc の関係性は？&lt;/li&gt;
&lt;li&gt;docker と OCIランタイム の関係&lt;/li&gt;
&lt;li&gt;CRI ランタイムとは？&lt;/li&gt;
&lt;li&gt;docker run 実行後の流れ&lt;/li&gt;
&lt;li&gt;16:09 - 16:30 の「runc run」についての補足:
&lt;ul&gt;
&lt;li&gt;実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。&lt;/li&gt;
&lt;li&gt;参考
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations" target="_blank"&gt;OCI Runtime Specificationで定められるOCIランタイムへ可能な操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/nttlabs/runc-overview-263b83164c98" target="_blank"&gt;runc runの実行とコードリーディング&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;高レベルランタイムとは？&lt;/li&gt;
&lt;li&gt;docker以外のCLIランタイム実装&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opencontainers/runtime-spec" target="_blank"&gt;Open Container Initiative Runtime Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OCI Runtime Specification には何が規定されているのか？&lt;/li&gt;
&lt;li&gt;コンテナの材料には何が含まれているのか？&lt;/li&gt;
&lt;li&gt;docker 登場以後の歴史&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rkt/rkt" target="_blank"&gt;rkt - the pod-native container engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;kubernetes 利用時のコンテナ実行までの流れとは？&lt;/li&gt;
&lt;li&gt;kubelet の役割&lt;/li&gt;
&lt;li&gt;kubelet からの CRIランタイム への指示に使うプロトコル&lt;/li&gt;
&lt;li&gt;dockershim が deprecated になったときに発生した誤解&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.yumemi.co.jp/" target="_blank"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/3CvNhwF" target="_blank">イラストでわかるDockerとKubernetes Software Design plus</a></li>
<li><a href="https://www.slideshare.net/KoheiTokunaga/dockerkubernetes-244176142" target="_blank">DockerとKubernetesをかけめぐる</a></li>
<li>コンテナとは何か？</li>
<li>docker の大きな貢献って何だった？</li>
<li>コンテナランタイムとは何か？</li>
<li>コンテナの隔離とは、具体的にどのように実現するのか？</li>
<li>cgroups は実際に何をしているのか？</li>
<li>runc での実装例</li>
<li>他の隔離方法の概要</li>
<li>OCI とは何か？ OCI と runc の関係性は？</li>
<li>docker と OCIランタイム の関係</li>
<li>CRI ランタイムとは？</li>
<li>docker run 実行後の流れ</li>
<li>16:09 - 16:30 の「runc run」についての補足:
<ul>
<li>実際にOCIで定義されCRIからの呼び出しで使われるコンテナ実行関連のサブコマンドは「runc create」、「runc start」です。「runc run」はcreate、startを組み合わせたサブコマンド実装で、手元のターミナルでruncの挙動を試したり、runcのコンテナ作成の挙動を追うのに良い題材になります。</li>
<li>参考
<ul>
<li><a href="https://github.com/opencontainers/runtime-spec/blob/v1.0.2/runtime.md#operations" target="_blank">OCI Runtime Specificationで定められるOCIランタイムへ可能な操作</a></li>
<li><a href="https://medium.com/nttlabs/runc-overview-263b83164c98" target="_blank">runc runの実行とコードリーディング</a></li>
</ul>
</li>
</ul>
</li>
<li>高レベルランタイムとは？</li>
<li>docker以外のCLIランタイム実装</li>
<li><a href="https://github.com/opencontainers/runtime-spec" target="_blank">Open Container Initiative Runtime Specification</a></li>
<li>OCI Runtime Specification には何が規定されているのか？</li>
<li>コンテナの材料には何が含まれているのか？</li>
<li>docker 登場以後の歴史</li>
<li><a href="https://github.com/rkt/rkt" target="_blank">rkt - the pod-native container engine</a></li>
<li>kubernetes 利用時のコンテナ実行までの流れとは？</li>
<li>kubelet の役割</li>
<li>kubelet からの CRIランタイム への指示に使うプロトコル</li>
<li>dockershim が deprecated になったときに発生した誤解</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/54</guid>
      <pubDate>Tue, 10 Aug 2021 05:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:38:01</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/abcb9a29-15d3-4078-86f1-163504e30987.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="36500793"/>
    </item>
    <item>
      <title>53. 時系列データベースエンジン w/ nakabonne</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://zenn.dev/nakabonne/articles/d300838a1500c7" target="_blank">ゼロから作る時系列データベースエンジン</a></li>
<li>時系列データとは何か？</li>
<li>RDBで時系列データを扱う場合の課題とは？</li>
<li>時系列データの特徴とは？</li>
<li>イミュータブルなデータとは？</li>
<li><a href="https://www.influxdata.com/" target="_blank">influxDB</a></li>
<li><a href="https://www.timescale.com/" target="_blank">Timescale DB</a></li>
<li><a href="https://github.com/VictoriaMetrics/VictoriaMetrics" target="_blank">VictoriaMetrics</a></li>
<li><a href="https://m3db.io/" target="_blank">M3DB</a></li>
<li>時系列DBにおけるカーディナリティの高さとは？</li>
<li><a href="https://github.com/nakabonne/tstorage" target="_blank">tstorage</a></li>
<li>なぜ時系列DBを自分で実装したのか？</li>
<li><a href="https://github.com/nakabonne/ali" target="_blank">ali</a></li>
<li><a href="https://github.com/nakabonne/gosivy" target="_blank">gosivy</a></li>
<li>tstorageの設計概要は？</li>
<li>パーティショニングのメリットとは？</li>
<li>Write Amplificatonとは？</li>
<li>Bloom Filter</li>
<li>LSM Treeとは？</li>
<li><a href="https://fukabori.fm/episode/34" target="_blank">34. NewSQLとは w/ tzkb</a></li>
<li>メモリパーティションの特徴とは？</li>
<li>時系列データをソート済みにする工夫</li>
<li><a href="https://questdb.io/" target="_blank">QuestDB</a></li>
<li>パーティションをフラッシュするタイミングは？</li>
<li>Write Ahead Log</li>
<li>データ量を削減する工夫は？</li>
<li><a href="http://www.vldb.org/pvldb/vol8/p1816-teller.pdf" target="_blank">Gorilla: A Fast, Scalable, In-Memory Time Series Database</a></li>
<li>タイムスタンプとデータを分けて符号化する</li>
<li>delta encoding と delta-of-delta encoding</li>
<li>データ側はXORで符号化する</li>
<li>tstorageのdisadvantageは？</li>
<li>tstorageの今後の開発方針</li>
<li>YAGNI原則</li>
<li><a href="https://hrmos.co/pages/cyberagent-group/jobs/0000694" target="_blank">【メディア事業部】サーバーサイドエンジニア（基盤）</a></li>
</ul>
宣伝
<p><a href="https://www.patreon.com/fukabori" target="_blank">fukabori.fm の個人スポンサー募集中</a></p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>53. 時系列データベースエンジン w/ nakabonne</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/nakabonne/articles/d300838a1500c7" target="_blank"&gt;ゼロから作る時系列データベースエンジン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;時系列データとは何か？&lt;/li&gt;
&lt;li&gt;RDBで時系列データを扱う場合の課題とは？&lt;/li&gt;
&lt;li&gt;時系列データの特徴とは？&lt;/li&gt;
&lt;li&gt;イミュータブルなデータとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.influxdata.com/" target="_blank"&gt;influxDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.timescale.com/" target="_blank"&gt;Timescale DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics" target="_blank"&gt;VictoriaMetrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m3db.io/" target="_blank"&gt;M3DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;時系列DBにおけるカーディナリティの高さとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nakabonne/tstorage" target="_blank"&gt;tstorage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;なぜ時系列DBを自分で実装したのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nakabonne/ali" target="_blank"&gt;ali&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nakabonne/gosivy" target="_blank"&gt;gosivy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tstorageの設計概要は？&lt;/li&gt;
&lt;li&gt;パーティショニングのメリットとは？&lt;/li&gt;
&lt;li&gt;Write Amplificatonとは？&lt;/li&gt;
&lt;li&gt;Bloom Filter&lt;/li&gt;
&lt;li&gt;LSM Treeとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/34" target="_blank"&gt;34. NewSQLとは w/ tzkb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;メモリパーティションの特徴とは？&lt;/li&gt;
&lt;li&gt;時系列データをソート済みにする工夫&lt;/li&gt;
&lt;li&gt;&lt;a href="https://questdb.io/" target="_blank"&gt;QuestDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パーティションをフラッシュするタイミングは？&lt;/li&gt;
&lt;li&gt;Write Ahead Log&lt;/li&gt;
&lt;li&gt;データ量を削減する工夫は？&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.vldb.org/pvldb/vol8/p1816-teller.pdf" target="_blank"&gt;Gorilla: A Fast, Scalable, In-Memory Time Series Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;タイムスタンプとデータを分けて符号化する&lt;/li&gt;
&lt;li&gt;delta encoding と delta-of-delta encoding&lt;/li&gt;
&lt;li&gt;データ側はXORで符号化する&lt;/li&gt;
&lt;li&gt;tstorageのdisadvantageは？&lt;/li&gt;
&lt;li&gt;tstorageの今後の開発方針&lt;/li&gt;
&lt;li&gt;YAGNI原則&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/cyberagent-group/jobs/0000694" target="_blank"&gt;【メディア事業部】サーバーサイドエンジニア（基盤）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
宣伝
&lt;p&gt;&lt;a href="https://www.patreon.com/fukabori" target="_blank"&gt;fukabori.fm の個人スポンサー募集中&lt;/a&gt;&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://zenn.dev/nakabonne/articles/d300838a1500c7" target="_blank">ゼロから作る時系列データベースエンジン</a></li>
<li>時系列データとは何か？</li>
<li>RDBで時系列データを扱う場合の課題とは？</li>
<li>時系列データの特徴とは？</li>
<li>イミュータブルなデータとは？</li>
<li><a href="https://www.influxdata.com/" target="_blank">influxDB</a></li>
<li><a href="https://www.timescale.com/" target="_blank">Timescale DB</a></li>
<li><a href="https://github.com/VictoriaMetrics/VictoriaMetrics" target="_blank">VictoriaMetrics</a></li>
<li><a href="https://m3db.io/" target="_blank">M3DB</a></li>
<li>時系列DBにおけるカーディナリティの高さとは？</li>
<li><a href="https://github.com/nakabonne/tstorage" target="_blank">tstorage</a></li>
<li>なぜ時系列DBを自分で実装したのか？</li>
<li><a href="https://github.com/nakabonne/ali" target="_blank">ali</a></li>
<li><a href="https://github.com/nakabonne/gosivy" target="_blank">gosivy</a></li>
<li>tstorageの設計概要は？</li>
<li>パーティショニングのメリットとは？</li>
<li>Write Amplificatonとは？</li>
<li>Bloom Filter</li>
<li>LSM Treeとは？</li>
<li><a href="https://fukabori.fm/episode/34" target="_blank">34. NewSQLとは w/ tzkb</a></li>
<li>メモリパーティションの特徴とは？</li>
<li>時系列データをソート済みにする工夫</li>
<li><a href="https://questdb.io/" target="_blank">QuestDB</a></li>
<li>パーティションをフラッシュするタイミングは？</li>
<li>Write Ahead Log</li>
<li>データ量を削減する工夫は？</li>
<li><a href="http://www.vldb.org/pvldb/vol8/p1816-teller.pdf" target="_blank">Gorilla: A Fast, Scalable, In-Memory Time Series Database</a></li>
<li>タイムスタンプとデータを分けて符号化する</li>
<li>delta encoding と delta-of-delta encoding</li>
<li>データ側はXORで符号化する</li>
<li>tstorageのdisadvantageは？</li>
<li>tstorageの今後の開発方針</li>
<li>YAGNI原則</li>
<li><a href="https://hrmos.co/pages/cyberagent-group/jobs/0000694" target="_blank">【メディア事業部】サーバーサイドエンジニア（基盤）</a></li>
</ul>
宣伝
<p><a href="https://www.patreon.com/fukabori" target="_blank">fukabori.fm の個人スポンサー募集中</a></p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/53</guid>
      <pubDate>Thu, 22 Jul 2021 04:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:38:11</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/4e3608e8-26f7-465c-8c55-2339980ad3ba.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="36665887"/>
    </item>
    <item>
      <title>52. ISUCON w/ 941</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://isucon.net/" target="_blank">ISUCON</a></li>
<li>ISUCONとは何か？</li>
<li>「ISUCON こわくないよ」</li>
<li><a href="https://fukabori.fm/episode/23" target="_blank">ep23. 社内ISUCON w/ yosuke_furukawa</a></li>
<li>ISUCONはエンジニアの人生を変えてきたらしい</li>
<li>ISU婚</li>
<li>ISUCONの初回はどんな感じで進んでいった？</li>
<li>ISUCON3で予選導入、参加者はISUCON9まで増加</li>
<li>なぜ、ISUCONはこんなに注目されたのか？</li>
<li>ISUCONらしい問題を作る</li>
<li>リアルISUCON</li>
<li>ISUCON開催の大変なところ</li>
<li><a href="https://github.com/isucon/isucandar" target="_blank">isucon/isucandar</a></li>
<li><a href="https://github.com/matsuu/aws-isucon" target="_blank">ISUCON過去問</a></li>
<li><a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate" target="_blank">エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate</a></li>
<li>ISUCON沼</li>
<li><a href="https://isucon.net/archives/55835733.html" target="_blank">ISUCON 事前講習2021</a></li>
<li>コミュニティは新しい人が入ってこないと終わってしまう</li>
<li>コミュニティ運営の続け方</li>
<li>コミュニティ参加者の想いを拾うために何をしているか？</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://route06.co.jp/" target="_blank">株式会社 ROUTE06</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>52. ISUCON w/ 941</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://isucon.net/" target="_blank"&gt;ISUCON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ISUCONとは何か？&lt;/li&gt;
&lt;li&gt;「ISUCON こわくないよ」&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/23" target="_blank"&gt;ep23. 社内ISUCON w/ yosuke_furukawa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ISUCONはエンジニアの人生を変えてきたらしい&lt;/li&gt;
&lt;li&gt;ISU婚&lt;/li&gt;
&lt;li&gt;ISUCONの初回はどんな感じで進んでいった？&lt;/li&gt;
&lt;li&gt;ISUCON3で予選導入、参加者はISUCON9まで増加&lt;/li&gt;
&lt;li&gt;なぜ、ISUCONはこんなに注目されたのか？&lt;/li&gt;
&lt;li&gt;ISUCONらしい問題を作る&lt;/li&gt;
&lt;li&gt;リアルISUCON&lt;/li&gt;
&lt;li&gt;ISUCON開催の大変なところ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isucon/isucandar" target="_blank"&gt;isucon/isucandar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matsuu/aws-isucon" target="_blank"&gt;ISUCON過去問&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate" target="_blank"&gt;エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ISUCON沼&lt;/li&gt;
&lt;li&gt;&lt;a href="https://isucon.net/archives/55835733.html" target="_blank"&gt;ISUCON 事前講習2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コミュニティは新しい人が入ってこないと終わってしまう&lt;/li&gt;
&lt;li&gt;コミュニティ運営の続け方&lt;/li&gt;
&lt;li&gt;コミュニティ参加者の想いを拾うために何をしているか？&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://route06.co.jp/" target="_blank"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://isucon.net/" target="_blank">ISUCON</a></li>
<li>ISUCONとは何か？</li>
<li>「ISUCON こわくないよ」</li>
<li><a href="https://fukabori.fm/episode/23" target="_blank">ep23. 社内ISUCON w/ yosuke_furukawa</a></li>
<li>ISUCONはエンジニアの人生を変えてきたらしい</li>
<li>ISU婚</li>
<li>ISUCONの初回はどんな感じで進んでいった？</li>
<li>ISUCON3で予選導入、参加者はISUCON9まで増加</li>
<li>なぜ、ISUCONはこんなに注目されたのか？</li>
<li>ISUCONらしい問題を作る</li>
<li>リアルISUCON</li>
<li>ISUCON開催の大変なところ</li>
<li><a href="https://github.com/isucon/isucandar" target="_blank">isucon/isucandar</a></li>
<li><a href="https://github.com/matsuu/aws-isucon" target="_blank">ISUCON過去問</a></li>
<li><a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate" target="_blank">エンジニア5000名が参加するISUCONとは何か / what is ISUCON where 5000 engineers participate</a></li>
<li>ISUCON沼</li>
<li><a href="https://isucon.net/archives/55835733.html" target="_blank">ISUCON 事前講習2021</a></li>
<li>コミュニティは新しい人が入ってこないと終わってしまう</li>
<li>コミュニティ運営の続け方</li>
<li>コミュニティ参加者の想いを拾うために何をしているか？</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://route06.co.jp/" target="_blank">株式会社 ROUTE06</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/52</guid>
      <pubDate>Mon, 21 Jun 2021 11:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:43:02</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/3eb06acd-caff-4542-aa3c-82fe6482971a.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="41319026"/>
    </item>
    <item>
      <title>51. 組織学習、心理的契約、エンゲージメント w/ tomomiminabe</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://cultibase.jp/" target="_blank">CULTIBASE</a></li>
<li>CI(Corporate Identity)</li>
<li>スタートアップがスタートアップのままスケールする</li>
<li>大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも</li>
<li>スタートアップの成長フェーズにおける組織課題とは？</li>
<li>書籍: <a href="https://amzn.to/3pd0eVI" target="_blank">THE MODEL</a>
</li>
<li>ミドルマネージャの役割は何か？</li>
<li>マネージャにどのように成長してもらうのか？</li>
<li>書籍: <a href="https://amzn.to/2SPOdJV" target="_blank">エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング</a>
</li>
<li>技術を理解していないマネージャの言うことをメンバが聞かない問題</li>
<li>大企業向けのコンサル提供では、振る舞いを変える</li>
<li>組織学習とは何か？</li>
<li>シングルループ学習とダブルループ学習</li>
<li>ふりかえりでは、シングルループに目が向きがちでは</li>
<li>制圧寄りのコミュニケーションの何が悪いのか？</li>
<li>対話の上手いファシリテートの方法</li>
<li>意見を言わないボトルネックを探す</li>
<li>定例の前に関係を作るのが大切</li>
<li>上司が一方的に話して、「何かありますか？」で終わる</li>
<li>1on1職人</li>
<li>初対面の人と1on1の警戒を解く方法</li>
<li><a href="https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121" target="_blank">組織デザイン概論 - WDA研究会191121</a></li>
<li>従業員体験とは何か？</li>
<li>どうしたら従業員体験を損ねずに、評価面談を実施するか？</li>
<li>評価面談のアンチパターンとは？</li>
<li>ショッキング評価</li>
<li>心理的契約とは？</li>
<li>評価面談におけるストーリーテリングとは？</li>
<li>書籍: <a href="https://amzn.to/3vPNaZ4" target="_blank">はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」</a>
</li>
<li>期待値調整</li>
<li>心理的契約をどうやって言語化するか？</li>
<li>エンゲージメントと従業員体験の関連は？</li>
<li>エンゲージメントとモチベーションの違い</li>
<li><a href="https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei" target="_blank">担ぎたくなる“神輿上司”の目指し方</a></li>
<li>ミミグリではどのようにエンゲージメントを高めているか？</li>
<li>プレイフル</li>
<li><a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank">株式会社MIMIGURI 採用募集(wantedly)</a></li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://route06.co.jp/" target="_blank">株式会社 ROUTE06</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>51. 組織学習、心理的契約、エンゲージメント w/ tomomiminabe</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cultibase.jp/" target="_blank"&gt;CULTIBASE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CI(Corporate Identity)&lt;/li&gt;
&lt;li&gt;スタートアップがスタートアップのままスケールする&lt;/li&gt;
&lt;li&gt;大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも&lt;/li&gt;
&lt;li&gt;スタートアップの成長フェーズにおける組織課題とは？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3pd0eVI" target="_blank"&gt;THE MODEL&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;ミドルマネージャの役割は何か？&lt;/li&gt;
&lt;li&gt;マネージャにどのように成長してもらうのか？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/2SPOdJV" target="_blank"&gt;エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;技術を理解していないマネージャの言うことをメンバが聞かない問題&lt;/li&gt;
&lt;li&gt;大企業向けのコンサル提供では、振る舞いを変える&lt;/li&gt;
&lt;li&gt;組織学習とは何か？&lt;/li&gt;
&lt;li&gt;シングルループ学習とダブルループ学習&lt;/li&gt;
&lt;li&gt;ふりかえりでは、シングルループに目が向きがちでは&lt;/li&gt;
&lt;li&gt;制圧寄りのコミュニケーションの何が悪いのか？&lt;/li&gt;
&lt;li&gt;対話の上手いファシリテートの方法&lt;/li&gt;
&lt;li&gt;意見を言わないボトルネックを探す&lt;/li&gt;
&lt;li&gt;定例の前に関係を作るのが大切&lt;/li&gt;
&lt;li&gt;上司が一方的に話して、「何かありますか？」で終わる&lt;/li&gt;
&lt;li&gt;1on1職人&lt;/li&gt;
&lt;li&gt;初対面の人と1on1の警戒を解く方法&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121" target="_blank"&gt;組織デザイン概論 - WDA研究会191121&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;従業員体験とは何か？&lt;/li&gt;
&lt;li&gt;どうしたら従業員体験を損ねずに、評価面談を実施するか？&lt;/li&gt;
&lt;li&gt;評価面談のアンチパターンとは？&lt;/li&gt;
&lt;li&gt;ショッキング評価&lt;/li&gt;
&lt;li&gt;心理的契約とは？&lt;/li&gt;
&lt;li&gt;評価面談におけるストーリーテリングとは？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3vPNaZ4" target="_blank"&gt;はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;期待値調整&lt;/li&gt;
&lt;li&gt;心理的契約をどうやって言語化するか？&lt;/li&gt;
&lt;li&gt;エンゲージメントと従業員体験の関連は？&lt;/li&gt;
&lt;li&gt;エンゲージメントとモチベーションの違い&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei" target="_blank"&gt;担ぎたくなる“神輿上司”の目指し方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ミミグリではどのようにエンゲージメントを高めているか？&lt;/li&gt;
&lt;li&gt;プレイフル&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank"&gt;株式会社MIMIGURI 採用募集(wantedly)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://route06.co.jp/" target="_blank"&gt;株式会社 ROUTE06&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://cultibase.jp/" target="_blank">CULTIBASE</a></li>
<li>CI(Corporate Identity)</li>
<li>スタートアップがスタートアップのままスケールする</li>
<li>大企業の組織構造を真似ると、本来の強みであるcapabilityが失われることも</li>
<li>スタートアップの成長フェーズにおける組織課題とは？</li>
<li>書籍: <a href="https://amzn.to/3pd0eVI" target="_blank">THE MODEL</a>
</li>
<li>ミドルマネージャの役割は何か？</li>
<li>マネージャにどのように成長してもらうのか？</li>
<li>書籍: <a href="https://amzn.to/2SPOdJV" target="_blank">エンジニアリング組織論への招待　～不確実性に向き合う思考と組織のリファクタリング</a>
</li>
<li>技術を理解していないマネージャの言うことをメンバが聞かない問題</li>
<li>大企業向けのコンサル提供では、振る舞いを変える</li>
<li>組織学習とは何か？</li>
<li>シングルループ学習とダブルループ学習</li>
<li>ふりかえりでは、シングルループに目が向きがちでは</li>
<li>制圧寄りのコミュニケーションの何が悪いのか？</li>
<li>対話の上手いファシリテートの方法</li>
<li>意見を言わないボトルネックを探す</li>
<li>定例の前に関係を作るのが大切</li>
<li>上司が一方的に話して、「何かありますか？」で終わる</li>
<li>1on1職人</li>
<li>初対面の人と1on1の警戒を解く方法</li>
<li><a href="https://speakerdeck.com/tomomina/zu-zhi-dezaingai-lun-wdayan-jiu-hui-191121" target="_blank">組織デザイン概論 - WDA研究会191121</a></li>
<li>従業員体験とは何か？</li>
<li>どうしたら従業員体験を損ねずに、評価面談を実施するか？</li>
<li>評価面談のアンチパターンとは？</li>
<li>ショッキング評価</li>
<li>心理的契約とは？</li>
<li>評価面談におけるストーリーテリングとは？</li>
<li>書籍: <a href="https://amzn.to/3vPNaZ4" target="_blank">はじめてのリーダーのための 実践! フィードバック 耳の痛いことを伝えて部下と職場を立て直す「全技術」</a>
</li>
<li>期待値調整</li>
<li>心理的契約をどうやって言語化するか？</li>
<li>エンゲージメントと従業員体験の関連は？</li>
<li>エンゲージメントとモチベーションの違い</li>
<li><a href="https://anchor.fm/idearium/episodes/idearium-cast-108-emg7ei" target="_blank">担ぎたくなる“神輿上司”の目指し方</a></li>
<li>ミミグリではどのようにエンゲージメントを高めているか？</li>
<li>プレイフル</li>
<li><a href="https://www.wantedly.com/companies/mimiguri/projects" target="_blank">株式会社MIMIGURI 採用募集(wantedly)</a></li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://route06.co.jp/" target="_blank">株式会社 ROUTE06</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/51</guid>
      <pubDate>Wed, 02 Jun 2021 14:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:54:40</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/53c9b14f-625f-4433-91b7-b5a2cdc77c23.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="52491911"/>
    </item>
    <item>
      <title>50. 社内DevOps基盤、Tekton、Cuelang w/ JunMakishi</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>社内DevOps基盤の狙いとは？</li>
<li>アプリケーションのライフサイクル管理とは？</li>
<li>対応するクラウドなどは？</li>
<li>市中にも同様のSaaSがあるが、なぜ自社開発するのか？</li>
<li>エンタープライズ向け・自社用での作り込みとは、たとえば何を？</li>
<li>どういう技術を利用しているのか？</li>
<li><a href="https://tekton.dev/" target="_blank">Tekton</a></li>
<li>Tektonは何をするのか？</li>
<li>
<a href="https://jenkins-x.io/" target="_blank">Jenkins X</a> でも Tektonを活用</li>
<li>ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？</li>
<li>Tektonの採用事例は増えている？</li>
<li><a href="https://spinnaker.io/" target="_blank">Spinnaker</a></li>
<li><a href="https://github.com/argoproj/argo-workflows" target="_blank">Argo Workflows</a></li>
<li>なぜTektonを採用したのか？</li>
<li><a href="https://github.com/GoogleContainerTools/kaniko" target="_blank">kaniko</a></li>
<li><a href="https://cuelang.org/" target="_blank">CUE</a></li>
<li>なぜCUEを利用するのか？</li>
<li>YAMLやJSONとの違いは？</li>
<li>HashiCorp Configuration Language</li>
<li>CUEの特徴は？</li>
<li>Type Validation</li>
<li>Overlayを認めておらず、Unifyする</li>
<li><a href="https://jsonnet.org/" target="_blank">jsonnet</a></li>
<li><a href="https://github.com/kubernetes-sigs/kustomize" target="_blank">kustomize</a></li>
<li>なぜ、CUEでOverlayを認めていないのか？</li>
<li>GopherがCUEの開発に携わっている</li>
<li>CUEは日本でも採用されている？</li>
<li><a href="https://changelog.com/gotime/163" target="_blank">gotime</a></li>
<li>Grafanaでも取り込まれつつある</li>
<li>社内的になぜCUEを採用するのか？</li>
<li>社内に基盤の良さを伝えるのは大変では？</li>
<li><a href="https://hrmos.co/pages/nttcom0033/jobs/0000019" target="_blank">採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>50. 社内DevOps基盤、Tekton、Cuelang w/ JunMakishi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;社内DevOps基盤の狙いとは？&lt;/li&gt;
&lt;li&gt;アプリケーションのライフサイクル管理とは？&lt;/li&gt;
&lt;li&gt;対応するクラウドなどは？&lt;/li&gt;
&lt;li&gt;市中にも同様のSaaSがあるが、なぜ自社開発するのか？&lt;/li&gt;
&lt;li&gt;エンタープライズ向け・自社用での作り込みとは、たとえば何を？&lt;/li&gt;
&lt;li&gt;どういう技術を利用しているのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tekton.dev/" target="_blank"&gt;Tekton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tektonは何をするのか？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jenkins-x.io/" target="_blank"&gt;Jenkins X&lt;/a&gt; でも Tektonを活用&lt;/li&gt;
&lt;li&gt;ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？&lt;/li&gt;
&lt;li&gt;Tektonの採用事例は増えている？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spinnaker.io/" target="_blank"&gt;Spinnaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/argoproj/argo-workflows" target="_blank"&gt;Argo Workflows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;なぜTektonを採用したのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleContainerTools/kaniko" target="_blank"&gt;kaniko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cuelang.org/" target="_blank"&gt;CUE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;なぜCUEを利用するのか？&lt;/li&gt;
&lt;li&gt;YAMLやJSONとの違いは？&lt;/li&gt;
&lt;li&gt;HashiCorp Configuration Language&lt;/li&gt;
&lt;li&gt;CUEの特徴は？&lt;/li&gt;
&lt;li&gt;Type Validation&lt;/li&gt;
&lt;li&gt;Overlayを認めておらず、Unifyする&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsonnet.org/" target="_blank"&gt;jsonnet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kustomize" target="_blank"&gt;kustomize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;なぜ、CUEでOverlayを認めていないのか？&lt;/li&gt;
&lt;li&gt;GopherがCUEの開発に携わっている&lt;/li&gt;
&lt;li&gt;CUEは日本でも採用されている？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://changelog.com/gotime/163" target="_blank"&gt;gotime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Grafanaでも取り込まれつつある&lt;/li&gt;
&lt;li&gt;社内的になぜCUEを採用するのか？&lt;/li&gt;
&lt;li&gt;社内に基盤の良さを伝えるのは大変では？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/nttcom0033/jobs/0000019" target="_blank"&gt;採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>社内DevOps基盤の狙いとは？</li>
<li>アプリケーションのライフサイクル管理とは？</li>
<li>対応するクラウドなどは？</li>
<li>市中にも同様のSaaSがあるが、なぜ自社開発するのか？</li>
<li>エンタープライズ向け・自社用での作り込みとは、たとえば何を？</li>
<li>どういう技術を利用しているのか？</li>
<li><a href="https://tekton.dev/" target="_blank">Tekton</a></li>
<li>Tektonは何をするのか？</li>
<li>
<a href="https://jenkins-x.io/" target="_blank">Jenkins X</a> でも Tektonを活用</li>
<li>ソフトウェアエンジニアリングにおける Fan-in と Fan-out とは？</li>
<li>Tektonの採用事例は増えている？</li>
<li><a href="https://spinnaker.io/" target="_blank">Spinnaker</a></li>
<li><a href="https://github.com/argoproj/argo-workflows" target="_blank">Argo Workflows</a></li>
<li>なぜTektonを採用したのか？</li>
<li><a href="https://github.com/GoogleContainerTools/kaniko" target="_blank">kaniko</a></li>
<li><a href="https://cuelang.org/" target="_blank">CUE</a></li>
<li>なぜCUEを利用するのか？</li>
<li>YAMLやJSONとの違いは？</li>
<li>HashiCorp Configuration Language</li>
<li>CUEの特徴は？</li>
<li>Type Validation</li>
<li>Overlayを認めておらず、Unifyする</li>
<li><a href="https://jsonnet.org/" target="_blank">jsonnet</a></li>
<li><a href="https://github.com/kubernetes-sigs/kustomize" target="_blank">kustomize</a></li>
<li>なぜ、CUEでOverlayを認めていないのか？</li>
<li>GopherがCUEの開発に携わっている</li>
<li>CUEは日本でも採用されている？</li>
<li><a href="https://changelog.com/gotime/163" target="_blank">gotime</a></li>
<li>Grafanaでも取り込まれつつある</li>
<li>社内的になぜCUEを採用するのか？</li>
<li>社内に基盤の良さを伝えるのは大変では？</li>
<li><a href="https://hrmos.co/pages/nttcom0033/jobs/0000019" target="_blank">採用募集中: ソフトウェア基盤開発・運用エンジニア向けポスト</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/50</guid>
      <pubDate>Tue, 25 May 2021 14:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:36:40</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/f6eb9117-d9df-426e-9c3f-4944e42f6f96.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="35213479"/>
    </item>
    <item>
      <title>49. GoFデザインパターンとDI + リファクタリング (後編) w/ twada</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>DIを勉強したい場合には何を参照する？</li>
<li>書籍: <a href="https://amzn.to/3omXLrc" target="_blank">Dependency Injection Principles, Practices, and Patterns</a>
</li>
<li><a href="https://laravel.com/" target="_blank">Laravel</a></li>
<li><a href="https://github.com/silexphp/Pimple" target="_blank">Pimple</a></li>
<li>書籍: <a href="https://amzn.to/3tQcLix" target="_blank">Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本</a>
</li>
<li>GoFデザインパターンは、なぜここまで普及したのか？</li>
<li>OOPを理解するきっかけになったため</li>
<li>差分プログラミングの誤解</li>
<li>継承には悪い面も多い</li>
<li>書籍: <a href="https://amzn.to/3tU8n1S" target="_blank">増補改訂版Java言語で学ぶデザインパターン入門</a>
</li>
<li>OMT法とUML</li>
<li>Don’t Repeat Yourself 原則 と 差分プログラミング</li>
<li>差分プログラミングは、継承以外の手法でも実現できる</li>
<li>is-a と has-a</li>
<li>構造ではなくて、責務・振る舞いについてプログラミングする</li>
<li>DIコンテナ と Main関数</li>
<li>継承があるデザインパターンの現代における利用価値は？</li>
<li>GolangやRustには継承がそもそもない</li>
<li>Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった</li>
<li>Template method は現代においても使う</li>
<li>Abstract Factory と DIコンテナ は似ている？</li>
<li>リファクタリングとデザインパターンは、どういう関係性があるのか？</li>
<li>「こういうこともあろうかと」</li>
<li>YAGNI(You aren’t gonna need it)</li>
<li>リファクタリングのターゲットとしてのデザインパターン</li>
<li>振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？</li>
<li>テストピラミッド</li>
<li>ユニットテストしかないのは、あまり良い状況ではない</li>
<li><a href="https://www.informit.com/articles/article.aspx?p=1404056" target="_blank">15 年後に再整理された Design Patterns</a></li>
<li>Null Object</li>
<li>Nullish coalescing</li>
<li>書籍: <a href="https://amzn.to/3uXI2Bq" target="_blank">テスト駆動開発</a>
</li>
<li>書籍: <a href="https://amzn.to/2SRzZIh" target="_blank">リファクタリング(第2版): 既存のコードを安全に改善する</a>
</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>49. GoFデザインパターンとDI + リファクタリング (後編) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;DIを勉強したい場合には何を参照する？&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3omXLrc" target="_blank"&gt;Dependency Injection Principles, Practices, and Patterns&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://laravel.com/" target="_blank"&gt;Laravel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/silexphp/Pimple" target="_blank"&gt;Pimple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3tQcLix" target="_blank"&gt;Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GoFデザインパターンは、なぜここまで普及したのか？&lt;/li&gt;
&lt;li&gt;OOPを理解するきっかけになったため&lt;/li&gt;
&lt;li&gt;差分プログラミングの誤解&lt;/li&gt;
&lt;li&gt;継承には悪い面も多い&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3tU8n1S" target="_blank"&gt;増補改訂版Java言語で学ぶデザインパターン入門&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;OMT法とUML&lt;/li&gt;
&lt;li&gt;Don’t Repeat Yourself 原則 と 差分プログラミング&lt;/li&gt;
&lt;li&gt;差分プログラミングは、継承以外の手法でも実現できる&lt;/li&gt;
&lt;li&gt;is-a と has-a&lt;/li&gt;
&lt;li&gt;構造ではなくて、責務・振る舞いについてプログラミングする&lt;/li&gt;
&lt;li&gt;DIコンテナ と Main関数&lt;/li&gt;
&lt;li&gt;継承があるデザインパターンの現代における利用価値は？&lt;/li&gt;
&lt;li&gt;GolangやRustには継承がそもそもない&lt;/li&gt;
&lt;li&gt;Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった&lt;/li&gt;
&lt;li&gt;Template method は現代においても使う&lt;/li&gt;
&lt;li&gt;Abstract Factory と DIコンテナ は似ている？&lt;/li&gt;
&lt;li&gt;リファクタリングとデザインパターンは、どういう関係性があるのか？&lt;/li&gt;
&lt;li&gt;「こういうこともあろうかと」&lt;/li&gt;
&lt;li&gt;YAGNI(You aren’t gonna need it)&lt;/li&gt;
&lt;li&gt;リファクタリングのターゲットとしてのデザインパターン&lt;/li&gt;
&lt;li&gt;振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？&lt;/li&gt;
&lt;li&gt;テストピラミッド&lt;/li&gt;
&lt;li&gt;ユニットテストしかないのは、あまり良い状況ではない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.informit.com/articles/article.aspx?p=1404056" target="_blank"&gt;15 年後に再整理された Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Null Object&lt;/li&gt;
&lt;li&gt;Nullish coalescing&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3uXI2Bq" target="_blank"&gt;テスト駆動開発&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/2SRzZIh" target="_blank"&gt;リファクタリング(第2版): 既存のコードを安全に改善する&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.yumemi.co.jp/" target="_blank"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>DIを勉強したい場合には何を参照する？</li>
<li>書籍: <a href="https://amzn.to/3omXLrc" target="_blank">Dependency Injection Principles, Practices, and Patterns</a>
</li>
<li><a href="https://laravel.com/" target="_blank">Laravel</a></li>
<li><a href="https://github.com/silexphp/Pimple" target="_blank">Pimple</a></li>
<li>書籍: <a href="https://amzn.to/3tQcLix" target="_blank">Clean Architecture 達人に学ぶソフトウェアの構造と設計 単行本</a>
</li>
<li>GoFデザインパターンは、なぜここまで普及したのか？</li>
<li>OOPを理解するきっかけになったため</li>
<li>差分プログラミングの誤解</li>
<li>継承には悪い面も多い</li>
<li>書籍: <a href="https://amzn.to/3tU8n1S" target="_blank">増補改訂版Java言語で学ぶデザインパターン入門</a>
</li>
<li>OMT法とUML</li>
<li>Don’t Repeat Yourself 原則 と 差分プログラミング</li>
<li>差分プログラミングは、継承以外の手法でも実現できる</li>
<li>is-a と has-a</li>
<li>構造ではなくて、責務・振る舞いについてプログラミングする</li>
<li>DIコンテナ と Main関数</li>
<li>継承があるデザインパターンの現代における利用価値は？</li>
<li>GolangやRustには継承がそもそもない</li>
<li>Factory Method や Abstract Factory は DIコンテナ以後はほとんどなくなった</li>
<li>Template method は現代においても使う</li>
<li>Abstract Factory と DIコンテナ は似ている？</li>
<li>リファクタリングとデザインパターンは、どういう関係性があるのか？</li>
<li>「こういうこともあろうかと」</li>
<li>YAGNI(You aren’t gonna need it)</li>
<li>リファクタリングのターゲットとしてのデザインパターン</li>
<li>振る舞い・インタフェースに対してプログラミングしていたが、インタフェース自体が変わるとき？</li>
<li>テストピラミッド</li>
<li>ユニットテストしかないのは、あまり良い状況ではない</li>
<li><a href="https://www.informit.com/articles/article.aspx?p=1404056" target="_blank">15 年後に再整理された Design Patterns</a></li>
<li>Null Object</li>
<li>Nullish coalescing</li>
<li>書籍: <a href="https://amzn.to/3uXI2Bq" target="_blank">テスト駆動開発</a>
</li>
<li>書籍: <a href="https://amzn.to/2SRzZIh" target="_blank">リファクタリング(第2版): 既存のコードを安全に改善する</a>
</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/49</guid>
      <pubDate>Mon, 17 May 2021 02:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:01:49</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/48e5b042-1ee6-455c-a69c-dbaf1b5cac61.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="59347278"/>
    </item>
    <item>
      <title>48. GoFデザインパターンとDI (前編) w/ twada</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>デザインパターンとは？</li>
<li>ソフトウェアパターン</li>
<li>書籍: <a href="https://amzn.to/3y1OuJU" target="_blank">オブジェクト指向における再利用のためのデザインパターン</a>
</li>
<li>Gang of Four</li>
<li>進研ゼミみたいなもの</li>
<li>Composite パターン</li>
<li>デザインパターン以外のソフトウェアパターンとは？</li>
<li>アーキテクチャパターン、アンチパターン、コンカレンシーパターン</li>
<li><a href="http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8" target="_blank">AWSクラウドデザインパターン</a></li>
<li>パターンにはフォーマットがある</li>
<li>GoFのデザインパターンはいつ頃生まれたもの？</li>
<li>GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？</li>
<li><a href="https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html" target="_blank">Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ</a></li>
<li>C、C++、Perl、Smalltalk、Visual Basic の時代</li>
<li>デザインパターンには、どういうカテゴリがある？</li>
<li>生成・構造・振る舞い</li>
<li>Javaのクラスライブラリにおけるデザインパターン利用</li>
<li>GoFデザインパターンは、2021年において活用できるのか？</li>
<li>Iteratorパターン の言語標準実装</li>
<li>Iterator の登場背景とは？本質とは？</li>
<li>
<a href="https://en.wikipedia.org/wiki/Depth-first_search" target="_blank">深さ優先探索</a>と<a href="https://en.wikipedia.org/wiki/Breadth-first_search" target="_blank">幅優先探索</a>
</li>
<li>2021年で不要となったデザインパターンは？</li>
<li>Singletonパターンはいらない</li>
<li>Singletonパターンが解きたかった課題と引き起こす副作用</li>
<li>グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない</li>
<li>Singletonの解決したかった課題を、現代ではどう解くのか？</li>
<li>DI(Dependenc Injection)</li>
<li>IoC(Inversion of Control)</li>
<li>オブジェクト指向における依存性解決</li>
<li>DIは、たとえばどう実装するのか？</li>
<li>DI Containerとは？</li>
<li>生成知識は結合度が高い</li>
<li>書籍: <a href="https://amzn.to/3nZGvbs" target="_blank">LeanとDevOpsの科学</a>
</li>
<li>DI Container はどう実装するのか？</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>48. GoFデザインパターンとDI (前編) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;デザインパターンとは？&lt;/li&gt;
&lt;li&gt;ソフトウェアパターン&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3y1OuJU" target="_blank"&gt;オブジェクト指向における再利用のためのデザインパターン&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Gang of Four&lt;/li&gt;
&lt;li&gt;進研ゼミみたいなもの&lt;/li&gt;
&lt;li&gt;Composite パターン&lt;/li&gt;
&lt;li&gt;デザインパターン以外のソフトウェアパターンとは？&lt;/li&gt;
&lt;li&gt;アーキテクチャパターン、アンチパターン、コンカレンシーパターン&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8" target="_blank"&gt;AWSクラウドデザインパターン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パターンにはフォーマットがある&lt;/li&gt;
&lt;li&gt;GoFのデザインパターンはいつ頃生まれたもの？&lt;/li&gt;
&lt;li&gt;GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html" target="_blank"&gt;Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C、C++、Perl、Smalltalk、Visual Basic の時代&lt;/li&gt;
&lt;li&gt;デザインパターンには、どういうカテゴリがある？&lt;/li&gt;
&lt;li&gt;生成・構造・振る舞い&lt;/li&gt;
&lt;li&gt;Javaのクラスライブラリにおけるデザインパターン利用&lt;/li&gt;
&lt;li&gt;GoFデザインパターンは、2021年において活用できるのか？&lt;/li&gt;
&lt;li&gt;Iteratorパターン の言語標準実装&lt;/li&gt;
&lt;li&gt;Iterator の登場背景とは？本質とは？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Depth-first_search" target="_blank"&gt;深さ優先探索&lt;/a&gt;と&lt;a href="https://en.wikipedia.org/wiki/Breadth-first_search" target="_blank"&gt;幅優先探索&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;2021年で不要となったデザインパターンは？&lt;/li&gt;
&lt;li&gt;Singletonパターンはいらない&lt;/li&gt;
&lt;li&gt;Singletonパターンが解きたかった課題と引き起こす副作用&lt;/li&gt;
&lt;li&gt;グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない&lt;/li&gt;
&lt;li&gt;Singletonの解決したかった課題を、現代ではどう解くのか？&lt;/li&gt;
&lt;li&gt;DI(Dependenc Injection)&lt;/li&gt;
&lt;li&gt;IoC(Inversion of Control)&lt;/li&gt;
&lt;li&gt;オブジェクト指向における依存性解決&lt;/li&gt;
&lt;li&gt;DIは、たとえばどう実装するのか？&lt;/li&gt;
&lt;li&gt;DI Containerとは？&lt;/li&gt;
&lt;li&gt;生成知識は結合度が高い&lt;/li&gt;
&lt;li&gt;書籍: &lt;a href="https://amzn.to/3nZGvbs" target="_blank"&gt;LeanとDevOpsの科学&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;DI Container はどう実装するのか？&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.yumemi.co.jp/" target="_blank"&gt;株式会社ゆめみ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>デザインパターンとは？</li>
<li>ソフトウェアパターン</li>
<li>書籍: <a href="https://amzn.to/3y1OuJU" target="_blank">オブジェクト指向における再利用のためのデザインパターン</a>
</li>
<li>Gang of Four</li>
<li>進研ゼミみたいなもの</li>
<li>Composite パターン</li>
<li>デザインパターン以外のソフトウェアパターンとは？</li>
<li>アーキテクチャパターン、アンチパターン、コンカレンシーパターン</li>
<li><a href="http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8" target="_blank">AWSクラウドデザインパターン</a></li>
<li>パターンにはフォーマットがある</li>
<li>GoFのデザインパターンはいつ頃生まれたもの？</li>
<li>GoFのデザインパターン登場時に、ソフトウェア業界では何が起きていたのか？</li>
<li><a href="https://magazine.rubyist.net/articles/0042/0042-Ruby20thAnniversaryPartyReport.html" target="_blank">Ruby 20 周年記念パーティーレポート ―― プログラミング初心者の運営スタッフが見た Ruby コミュニティ</a></li>
<li>C、C++、Perl、Smalltalk、Visual Basic の時代</li>
<li>デザインパターンには、どういうカテゴリがある？</li>
<li>生成・構造・振る舞い</li>
<li>Javaのクラスライブラリにおけるデザインパターン利用</li>
<li>GoFデザインパターンは、2021年において活用できるのか？</li>
<li>Iteratorパターン の言語標準実装</li>
<li>Iterator の登場背景とは？本質とは？</li>
<li>
<a href="https://en.wikipedia.org/wiki/Depth-first_search" target="_blank">深さ優先探索</a>と<a href="https://en.wikipedia.org/wiki/Breadth-first_search" target="_blank">幅優先探索</a>
</li>
<li>2021年で不要となったデザインパターンは？</li>
<li>Singletonパターンはいらない</li>
<li>Singletonパターンが解きたかった課題と引き起こす副作用</li>
<li>グローバル状態の共有、テストとの相性の悪さ、プロセス内での単一は現代において意味があまりない</li>
<li>Singletonの解決したかった課題を、現代ではどう解くのか？</li>
<li>DI(Dependenc Injection)</li>
<li>IoC(Inversion of Control)</li>
<li>オブジェクト指向における依存性解決</li>
<li>DIは、たとえばどう実装するのか？</li>
<li>DI Containerとは？</li>
<li>生成知識は結合度が高い</li>
<li>書籍: <a href="https://amzn.to/3nZGvbs" target="_blank">LeanとDevOpsの科学</a>
</li>
<li>DI Container はどう実装するのか？</li>
</ul>
エピソードスポンサー
<ul>
<li><a href="https://www.yumemi.co.jp/" target="_blank">株式会社ゆめみ</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/48</guid>
      <pubDate>Sun, 09 May 2021 14:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:57:27</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/e60e4c56-ff00-48f8-861f-d9724d4b1e89.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="55165596"/>
    </item>
    <item>
      <title>47. プロダクトマネジメントのすべて w/ takoratta</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/2R5SxUo" target="_blank">プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで</a></li>
<li>書籍の概要</li>
<li>プロダクトの成功とチームの組成</li>
<li>Core/Why/What/How</li>
<li>プロダクトマネージャ以外の人だと、誰が読むべき？</li>
<li>プロダクトマネジメントの応用範囲の広さ</li>
<li>アウトプットじゃなくアウトカムを考える</li>
<li>大企業のミッションは抽象度が高いが、それを上手く使う</li>
<li>会社を自己実現に活用する</li>
<li>大義に沿っているかどうか</li>
<li>書籍のおすすめの読み方</li>
<li>そもそも執筆者陣は、どうやって勉強して執筆したのか？</li>
<li>大量にあるフレームワークは使わなければいけないのか？</li>
<li>プロダクトマネージャとプロダクトオーナとの関係性は？</li>
<li>プロダクトマネージャの毎日のタイムテーブル</li>
<li>企業内で、プロダクトマネジメントの概念をどのように広めていくか？</li>
<li>プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？</li>
<li>KGI/KPI/NSM</li>
<li>プロダクトマネージャはどのように信頼を積み重ねていくのか？</li>
<li>KPIやNSMを振り返るタイミング、頻度？</li>
<li>さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？</li>
<li>プロダクトマネージャの本当の成長の多くは、OJTである</li>
<li><a href="https://productmanagement-criteria.com/" target="_blank">プロダクトマネジメントクライテリア</a></li>
<li><a href="https://note.com/tably/n/nce04f2446a86" target="_blank">プロダクトをつくる力をアセスメントするDIA for PMのご案内</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>47. プロダクトマネジメントのすべて w/ takoratta</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://amzn.to/2R5SxUo" target="_blank"&gt;プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍の概要&lt;/li&gt;
&lt;li&gt;プロダクトの成功とチームの組成&lt;/li&gt;
&lt;li&gt;Core/Why/What/How&lt;/li&gt;
&lt;li&gt;プロダクトマネージャ以外の人だと、誰が読むべき？&lt;/li&gt;
&lt;li&gt;プロダクトマネジメントの応用範囲の広さ&lt;/li&gt;
&lt;li&gt;アウトプットじゃなくアウトカムを考える&lt;/li&gt;
&lt;li&gt;大企業のミッションは抽象度が高いが、それを上手く使う&lt;/li&gt;
&lt;li&gt;会社を自己実現に活用する&lt;/li&gt;
&lt;li&gt;大義に沿っているかどうか&lt;/li&gt;
&lt;li&gt;書籍のおすすめの読み方&lt;/li&gt;
&lt;li&gt;そもそも執筆者陣は、どうやって勉強して執筆したのか？&lt;/li&gt;
&lt;li&gt;大量にあるフレームワークは使わなければいけないのか？&lt;/li&gt;
&lt;li&gt;プロダクトマネージャとプロダクトオーナとの関係性は？&lt;/li&gt;
&lt;li&gt;プロダクトマネージャの毎日のタイムテーブル&lt;/li&gt;
&lt;li&gt;企業内で、プロダクトマネジメントの概念をどのように広めていくか？&lt;/li&gt;
&lt;li&gt;プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？&lt;/li&gt;
&lt;li&gt;KGI/KPI/NSM&lt;/li&gt;
&lt;li&gt;プロダクトマネージャはどのように信頼を積み重ねていくのか？&lt;/li&gt;
&lt;li&gt;KPIやNSMを振り返るタイミング、頻度？&lt;/li&gt;
&lt;li&gt;さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？&lt;/li&gt;
&lt;li&gt;プロダクトマネージャの本当の成長の多くは、OJTである&lt;/li&gt;
&lt;li&gt;&lt;a href="https://productmanagement-criteria.com/" target="_blank"&gt;プロダクトマネジメントクライテリア&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/tably/n/nce04f2446a86" target="_blank"&gt;プロダクトをつくる力をアセスメントするDIA for PMのご案内&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/2R5SxUo" target="_blank">プロダクトマネジメントのすべて 事業戦略・IT開発・UXデザイン・マーケティングからチーム・組織運営まで</a></li>
<li>書籍の概要</li>
<li>プロダクトの成功とチームの組成</li>
<li>Core/Why/What/How</li>
<li>プロダクトマネージャ以外の人だと、誰が読むべき？</li>
<li>プロダクトマネジメントの応用範囲の広さ</li>
<li>アウトプットじゃなくアウトカムを考える</li>
<li>大企業のミッションは抽象度が高いが、それを上手く使う</li>
<li>会社を自己実現に活用する</li>
<li>大義に沿っているかどうか</li>
<li>書籍のおすすめの読み方</li>
<li>そもそも執筆者陣は、どうやって勉強して執筆したのか？</li>
<li>大量にあるフレームワークは使わなければいけないのか？</li>
<li>プロダクトマネージャとプロダクトオーナとの関係性は？</li>
<li>プロダクトマネージャの毎日のタイムテーブル</li>
<li>企業内で、プロダクトマネジメントの概念をどのように広めていくか？</li>
<li>プロダクトマネージャは「これ、やらない」ってのをどう決めるのか？</li>
<li>KGI/KPI/NSM</li>
<li>プロダクトマネージャはどのように信頼を積み重ねていくのか？</li>
<li>KPIやNSMを振り返るタイミング、頻度？</li>
<li>さらにプロダクトマネジメントについて学習したい場合は、この先どのように勉強していけばよいか？</li>
<li>プロダクトマネージャの本当の成長の多くは、OJTである</li>
<li><a href="https://productmanagement-criteria.com/" target="_blank">プロダクトマネジメントクライテリア</a></li>
<li><a href="https://note.com/tably/n/nce04f2446a86" target="_blank">プロダクトをつくる力をアセスメントするDIA for PMのご案内</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/47</guid>
      <pubDate>Sun, 04 Apr 2021 02:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:56:53</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/f00948e8-1e44-4f53-8bfd-db4eb0a6caef.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="54622249"/>
    </item>
    <item>
      <title>46. アジャイルコーチとは？ w/ yohhatu</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>アジャイルコーチって何？</li>
<li>多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？</li>
<li>アジャイルコーチリファラル</li>
<li>RSGT、アジャイルコーチコミュニティ</li>
<li>ペアコーチによる現場支援体制</li>
<li>どれが正解か分からないので、試してみたらいい</li>
<li>透明性は現場ごとに違う</li>
<li>透明性を高くするためには何をするのか？</li>
<li>解像度をあげるための取り組みとは？</li>
<li>現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？</li>
<li>スクラムガイドと現場の間の溝を埋める</li>
<li>事例を伝える旅人</li>
<li>ファシリテーションで何をするのか？</li>
<li>良いファシリテーションとは何か？</li>
<li>アジェンダからトピックがはずれたときの対応</li>
<li>親指投票とは何か？</li>
<li>ファイブフィンガーとは？</li>
<li><a href="https://amzn.to/3tIG2wa" target="_blank">カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで</a></li>
<li>前の人の意見にひっぱられる問題</li>
<li>同調圧力がかかる状況を減らす</li>
<li>ファシリテーションをどうやって学べばいいのか？</li>
<li><a href="https://www.sonicgarden.jp/members/fujiwara" target="_blank">ソニックガーデンの藤原さん</a></li>
<li>現場でどのような悩みを解決するのか？</li>
<li>ええ感じに解決するの、ええ感じとは何か？</li>
<li>正しいことを言えば物事が進むわけじゃない</li>
<li>技術的問題と適応課題</li>
<li><a href="https://amzn.to/2PaGCDV" target="_blank">学習する組織 ― システム思考で未来を創造する</a></li>
<li><a href="https://amzn.to/2Ph91s0" target="_blank">他者と働く──「わかりあえなさ」から始める組織論</a></li>
<li>大変だからしなくていいわけじゃない</li>
<li>アジャイルコーチに依頼して上手くいったことの指標・判断は？</li>
<li>ベロシティを上げるのを目的にしてはいけない</li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>46. アジャイルコーチとは？ w/ yohhatu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;アジャイルコーチって何？&lt;/li&gt;
&lt;li&gt;多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？&lt;/li&gt;
&lt;li&gt;アジャイルコーチリファラル&lt;/li&gt;
&lt;li&gt;RSGT、アジャイルコーチコミュニティ&lt;/li&gt;
&lt;li&gt;ペアコーチによる現場支援体制&lt;/li&gt;
&lt;li&gt;どれが正解か分からないので、試してみたらいい&lt;/li&gt;
&lt;li&gt;透明性は現場ごとに違う&lt;/li&gt;
&lt;li&gt;透明性を高くするためには何をするのか？&lt;/li&gt;
&lt;li&gt;解像度をあげるための取り組みとは？&lt;/li&gt;
&lt;li&gt;現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？&lt;/li&gt;
&lt;li&gt;スクラムガイドと現場の間の溝を埋める&lt;/li&gt;
&lt;li&gt;事例を伝える旅人&lt;/li&gt;
&lt;li&gt;ファシリテーションで何をするのか？&lt;/li&gt;
&lt;li&gt;良いファシリテーションとは何か？&lt;/li&gt;
&lt;li&gt;アジェンダからトピックがはずれたときの対応&lt;/li&gt;
&lt;li&gt;親指投票とは何か？&lt;/li&gt;
&lt;li&gt;ファイブフィンガーとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3tIG2wa" target="_blank"&gt;カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;前の人の意見にひっぱられる問題&lt;/li&gt;
&lt;li&gt;同調圧力がかかる状況を減らす&lt;/li&gt;
&lt;li&gt;ファシリテーションをどうやって学べばいいのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sonicgarden.jp/members/fujiwara" target="_blank"&gt;ソニックガーデンの藤原さん&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;現場でどのような悩みを解決するのか？&lt;/li&gt;
&lt;li&gt;ええ感じに解決するの、ええ感じとは何か？&lt;/li&gt;
&lt;li&gt;正しいことを言えば物事が進むわけじゃない&lt;/li&gt;
&lt;li&gt;技術的問題と適応課題&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/2PaGCDV" target="_blank"&gt;学習する組織 ― システム思考で未来を創造する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/2Ph91s0" target="_blank"&gt;他者と働く──「わかりあえなさ」から始める組織論&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;大変だからしなくていいわけじゃない&lt;/li&gt;
&lt;li&gt;アジャイルコーチに依頼して上手くいったことの指標・判断は？&lt;/li&gt;
&lt;li&gt;ベロシティを上げるのを目的にしてはいけない&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://offers.jp/" target="_blank"&gt;Offers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/" target="_blank"&gt;株式会社overflow&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>アジャイルコーチって何？</li>
<li>多数いるアジャイルコーチから、どうやって自組織への適任者を見分けるのか？</li>
<li>アジャイルコーチリファラル</li>
<li>RSGT、アジャイルコーチコミュニティ</li>
<li>ペアコーチによる現場支援体制</li>
<li>どれが正解か分からないので、試してみたらいい</li>
<li>透明性は現場ごとに違う</li>
<li>透明性を高くするためには何をするのか？</li>
<li>解像度をあげるための取り組みとは？</li>
<li>現場を支援する場合に、具体的にアジャイルコーチとしてどういう仕事をするのか？</li>
<li>スクラムガイドと現場の間の溝を埋める</li>
<li>事例を伝える旅人</li>
<li>ファシリテーションで何をするのか？</li>
<li>良いファシリテーションとは何か？</li>
<li>アジェンダからトピックがはずれたときの対応</li>
<li>親指投票とは何か？</li>
<li>ファイブフィンガーとは？</li>
<li><a href="https://amzn.to/3tIG2wa" target="_blank">カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで</a></li>
<li>前の人の意見にひっぱられる問題</li>
<li>同調圧力がかかる状況を減らす</li>
<li>ファシリテーションをどうやって学べばいいのか？</li>
<li><a href="https://www.sonicgarden.jp/members/fujiwara" target="_blank">ソニックガーデンの藤原さん</a></li>
<li>現場でどのような悩みを解決するのか？</li>
<li>ええ感じに解決するの、ええ感じとは何か？</li>
<li>正しいことを言えば物事が進むわけじゃない</li>
<li>技術的問題と適応課題</li>
<li><a href="https://amzn.to/2PaGCDV" target="_blank">学習する組織 ― システム思考で未来を創造する</a></li>
<li><a href="https://amzn.to/2Ph91s0" target="_blank">他者と働く──「わかりあえなさ」から始める組織論</a></li>
<li>大変だからしなくていいわけじゃない</li>
<li>アジャイルコーチに依頼して上手くいったことの指標・判断は？</li>
<li>ベロシティを上げるのを目的にしてはいけない</li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/46</guid>
      <pubDate>Sun, 21 Mar 2021 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:44:06</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/024d8e65-8b5a-4057-8222-80dd0b5a7d93.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="42350968"/>
    </item>
    <item>
      <title>45. 組織の心理的安全性をどうやって高めるか？ w/ raykataoka</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://note.com/raykataoka/n/n1e3397bb153e" target="_blank">心理的安全ジャーニーSlackでの５つの実装方法</a></li>
<li>心理的安全性とは？その正体は何なのか？</li>
<li><a href="https://amzn.to/3t28xUU" target="_blank">チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ</a></li>
<li><a href="https://amzn.to/3cigChM" target="_blank">恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす</a></li>
<li>心理的安全性によくある誤解とは何か？</li>
<li>批判・反論ができる組織・チームをどう作っていくのか？</li>
<li>正しい行動を強化して、間違った行動を消失させる</li>
<li>社内の心理的安全性を高めるために、何をしているか？</li>
<li>Bad News First</li>
<li>悪い情報を共有すること自体には感謝をする</li>
<li>失敗を共有できるようにリフレームしていく</li>
<li>実際の失敗共有はどんなものがある？</li>
<li>失敗共有時に怒ったらどうなるか？</li>
<li>失敗からどうやってノウハウを溜めていくのか？</li>
<li>失敗にはどのような種類があるのか？</li>
<li><a href="https://amzn.to/3eshgvJ" target="_blank">失敗学のすすめ</a></li>
<li>Slack Maturity Score、日本1位の企業の独創的な使い方は？</li>
<li>ゆめみにおける分報の使い方、自己開示を推奨していく</li>
<li>分報の数が多いが、どのぐらい見ている？</li>
<li>ネガティブな情報はSlackでも拡散しやすい</li>
<li>Slackのコミュニケーションガイドラインが規定されている</li>
<li>主語が大きい否定後は示唆を受ける</li>
<li>
<p><a href="https://www.yumemi.co.jp/all_member_ceo" target="_blank">プロポーザルレビューリクエスト（Proposal Review Request）</a></p>
エピソードスポンサー
</li>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>45. 組織の心理的安全性をどうやって高めるか？ w/ raykataoka</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://note.com/raykataoka/n/n1e3397bb153e" target="_blank"&gt;心理的安全ジャーニーSlackでの５つの実装方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;心理的安全性とは？その正体は何なのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3t28xUU" target="_blank"&gt;チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3cigChM" target="_blank"&gt;恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;心理的安全性によくある誤解とは何か？&lt;/li&gt;
&lt;li&gt;批判・反論ができる組織・チームをどう作っていくのか？&lt;/li&gt;
&lt;li&gt;正しい行動を強化して、間違った行動を消失させる&lt;/li&gt;
&lt;li&gt;社内の心理的安全性を高めるために、何をしているか？&lt;/li&gt;
&lt;li&gt;Bad News First&lt;/li&gt;
&lt;li&gt;悪い情報を共有すること自体には感謝をする&lt;/li&gt;
&lt;li&gt;失敗を共有できるようにリフレームしていく&lt;/li&gt;
&lt;li&gt;実際の失敗共有はどんなものがある？&lt;/li&gt;
&lt;li&gt;失敗共有時に怒ったらどうなるか？&lt;/li&gt;
&lt;li&gt;失敗からどうやってノウハウを溜めていくのか？&lt;/li&gt;
&lt;li&gt;失敗にはどのような種類があるのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3eshgvJ" target="_blank"&gt;失敗学のすすめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slack Maturity Score、日本1位の企業の独創的な使い方は？&lt;/li&gt;
&lt;li&gt;ゆめみにおける分報の使い方、自己開示を推奨していく&lt;/li&gt;
&lt;li&gt;分報の数が多いが、どのぐらい見ている？&lt;/li&gt;
&lt;li&gt;ネガティブな情報はSlackでも拡散しやすい&lt;/li&gt;
&lt;li&gt;Slackのコミュニケーションガイドラインが規定されている&lt;/li&gt;
&lt;li&gt;主語が大きい否定後は示唆を受ける&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.yumemi.co.jp/all_member_ceo" target="_blank"&gt;プロポーザルレビューリクエスト（Proposal Review Request）&lt;/a&gt;&lt;/p&gt;
エピソードスポンサー
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://offers.jp/" target="_blank"&gt;Offers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/" target="_blank"&gt;株式会社overflow&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://note.com/raykataoka/n/n1e3397bb153e" target="_blank">心理的安全ジャーニーSlackでの５つの実装方法</a></li>
<li>心理的安全性とは？その正体は何なのか？</li>
<li><a href="https://amzn.to/3t28xUU" target="_blank">チームが機能するとはどういうことか ― 「学習力」と「実行力」を高める実践アプローチ</a></li>
<li><a href="https://amzn.to/3cigChM" target="_blank">恐れのない組織――「心理的安全性」が学習・イノベーション・成長をもたらす</a></li>
<li>心理的安全性によくある誤解とは何か？</li>
<li>批判・反論ができる組織・チームをどう作っていくのか？</li>
<li>正しい行動を強化して、間違った行動を消失させる</li>
<li>社内の心理的安全性を高めるために、何をしているか？</li>
<li>Bad News First</li>
<li>悪い情報を共有すること自体には感謝をする</li>
<li>失敗を共有できるようにリフレームしていく</li>
<li>実際の失敗共有はどんなものがある？</li>
<li>失敗共有時に怒ったらどうなるか？</li>
<li>失敗からどうやってノウハウを溜めていくのか？</li>
<li>失敗にはどのような種類があるのか？</li>
<li><a href="https://amzn.to/3eshgvJ" target="_blank">失敗学のすすめ</a></li>
<li>Slack Maturity Score、日本1位の企業の独創的な使い方は？</li>
<li>ゆめみにおける分報の使い方、自己開示を推奨していく</li>
<li>分報の数が多いが、どのぐらい見ている？</li>
<li>ネガティブな情報はSlackでも拡散しやすい</li>
<li>Slackのコミュニケーションガイドラインが規定されている</li>
<li>主語が大きい否定後は示唆を受ける</li>
<li>
<p><a href="https://www.yumemi.co.jp/all_member_ceo" target="_blank">プロポーザルレビューリクエスト（Proposal Review Request）</a></p>
エピソードスポンサー
</li>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/45</guid>
      <pubDate>Wed, 10 Mar 2021 12:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:38:41</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/bffbe0c9-3dbe-4f14-b3bb-ae1216ef56ff.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37141524"/>
    </item>
    <item>
      <title>44. Spotify型およびゆめみにおける組織モデルの変遷 w/ raykataoka</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://anchor.fm/ray-kataoka" target="_blank">Ray Wow FM</a></li>
<li>ゆめみの組織構造はどうなっている？</li>
<li>Spotify 組織モデルとは？</li>
<li>Spotify型組織のメリット・デメリット</li>
<li>技術的な評価は、技術者自身に評価してほしい</li>
<li>マトリクス型組織の難しさとは？</li>
<li>コミュニケーション・調整コストの高さ</li>
<li>ピープルマネジメントマネージャ側が深く関与できない</li>
<li>技術的な勉強会はどのような組織・チームで実施している？</li>
<li>人数が多くなった場合のナレッジシェアの難しさと対応</li>
<li>どのようにナレッジシェアを実現しているか</li>
<li>月間60回の勉強会</li>
<li>社内勉強会を活性化させる秘訣は？</li>
<li>雑な登壇で、雑壇</li>
<li>全てお金で人を動かそうとすると上手くいかない</li>
<li>Spotifyモデルはなぜ上手くいかない、何が大変なのか？</li>
<li>組織モデルを変更したターニングポイント・背景は？</li>
<li>事業部単位の縦割り</li>
<li>受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？</li>
<li>フィーチャーチームに、コンポーネントチームを割り当てる</li>
<li>案件ごとのドメイン知識が偏る問題をどうするか？</li>
<li>なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？</li>
<li>人気のある案件に偏ってしまわないか？</li>
<li>フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？</li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>44. Spotify型およびゆめみにおける組織モデルの変遷 w/ raykataoka</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://anchor.fm/ray-kataoka" target="_blank"&gt;Ray Wow FM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ゆめみの組織構造はどうなっている？&lt;/li&gt;
&lt;li&gt;Spotify 組織モデルとは？&lt;/li&gt;
&lt;li&gt;Spotify型組織のメリット・デメリット&lt;/li&gt;
&lt;li&gt;技術的な評価は、技術者自身に評価してほしい&lt;/li&gt;
&lt;li&gt;マトリクス型組織の難しさとは？&lt;/li&gt;
&lt;li&gt;コミュニケーション・調整コストの高さ&lt;/li&gt;
&lt;li&gt;ピープルマネジメントマネージャ側が深く関与できない&lt;/li&gt;
&lt;li&gt;技術的な勉強会はどのような組織・チームで実施している？&lt;/li&gt;
&lt;li&gt;人数が多くなった場合のナレッジシェアの難しさと対応&lt;/li&gt;
&lt;li&gt;どのようにナレッジシェアを実現しているか&lt;/li&gt;
&lt;li&gt;月間60回の勉強会&lt;/li&gt;
&lt;li&gt;社内勉強会を活性化させる秘訣は？&lt;/li&gt;
&lt;li&gt;雑な登壇で、雑壇&lt;/li&gt;
&lt;li&gt;全てお金で人を動かそうとすると上手くいかない&lt;/li&gt;
&lt;li&gt;Spotifyモデルはなぜ上手くいかない、何が大変なのか？&lt;/li&gt;
&lt;li&gt;組織モデルを変更したターニングポイント・背景は？&lt;/li&gt;
&lt;li&gt;事業部単位の縦割り&lt;/li&gt;
&lt;li&gt;受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？&lt;/li&gt;
&lt;li&gt;フィーチャーチームに、コンポーネントチームを割り当てる&lt;/li&gt;
&lt;li&gt;案件ごとのドメイン知識が偏る問題をどうするか？&lt;/li&gt;
&lt;li&gt;なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？&lt;/li&gt;
&lt;li&gt;人気のある案件に偏ってしまわないか？&lt;/li&gt;
&lt;li&gt;フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://offers.jp/" target="_blank"&gt;Offers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/" target="_blank"&gt;株式会社overflow&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://anchor.fm/ray-kataoka" target="_blank">Ray Wow FM</a></li>
<li>ゆめみの組織構造はどうなっている？</li>
<li>Spotify 組織モデルとは？</li>
<li>Spotify型組織のメリット・デメリット</li>
<li>技術的な評価は、技術者自身に評価してほしい</li>
<li>マトリクス型組織の難しさとは？</li>
<li>コミュニケーション・調整コストの高さ</li>
<li>ピープルマネジメントマネージャ側が深く関与できない</li>
<li>技術的な勉強会はどのような組織・チームで実施している？</li>
<li>人数が多くなった場合のナレッジシェアの難しさと対応</li>
<li>どのようにナレッジシェアを実現しているか</li>
<li>月間60回の勉強会</li>
<li>社内勉強会を活性化させる秘訣は？</li>
<li>雑な登壇で、雑壇</li>
<li>全てお金で人を動かそうとすると上手くいかない</li>
<li>Spotifyモデルはなぜ上手くいかない、何が大変なのか？</li>
<li>組織モデルを変更したターニングポイント・背景は？</li>
<li>事業部単位の縦割り</li>
<li>受託ビジネスモデルでオーナーシップをどう保つか？モチベーションをどう高めるか？</li>
<li>フィーチャーチームに、コンポーネントチームを割り当てる</li>
<li>案件ごとのドメイン知識が偏る問題をどうするか？</li>
<li>なぜ、本人がプロジェクト・プロダクトを選べるようなアサイン方式にしたのか？</li>
<li>人気のある案件に偏ってしまわないか？</li>
<li>フロントエンド、サーバーサイドなどの職能単位のバランスをどう取るか？変動要素のバッファのとり方は？</li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/44</guid>
      <pubDate>Thu, 04 Mar 2021 18:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:42:39</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/7b3ec035-4235-4161-b5e5-06f664e33a72.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="40954566"/>
    </item>
    <item>
      <title>43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf" target="_blank">WebSocketの次の技術！？WebTransportについての解説とチュートリアル</a></li>
<li><a href="https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58" target="_blank">WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる</a></li>
<li>WebTransportとは何か？</li>
<li>HTTPの双方向通信の歴史</li>
<li>XHR、Polling、Cometとは？</li>
<li>WebSocket</li>
<li>Server-Sent Eventsとは？</li>
<li>SSEって今も使われるの？どこに使う？</li>
<li>WebSocketとSSEとのパフォーマンス差異は？</li>
<li>なぜWebTransportは登場してきたのか？WebSocketの課題とは？</li>
<li>TCP Head of Line Blocking</li>
<li>QUICとは？</li>
<li><a href="https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/" target="_blank">QUIC プロトコルスタック</a></li>
<li>WebTransportは実際に使われている？</li>
<li>WebSocketとWebTransportのユースケース？</li>
<li>クラウドゲーミングとWebRTC</li>
<li>WebTransportでクライアントクライアント通信はできる？</li>
<li>TCPとUDP以外の選択肢は無かったのか？</li>
<li>ネットワークプロトコルの硬直化</li>
<li><a href="https://fukabori.fm/episode/1" target="_blank">1. IETFとか、QUICとか</a></li>
<li>UDPが通らない環境ってあるのでは？どう対応する？</li>
<li>HTTP/2とは？</li>
<li>HTTP Head of Line Blocking</li>
<li><a href="https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00" target="_blank">Bootstrapping WebSockets with HTTP/2</a></li>
<li>HTTP/2の課題</li>
<li>HTTP/2と3の違いは？</li>
<li>内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。</li>
<li>Server Push と 103 Early Hints</li>
<li>内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています</li>
<li>WebCodecsとは何か？</li>
<li>なぜWebCodecsが登場してきたのか？</li>
<li>WebTransportやWebCodecsがだれが推進している？</li>
<li>WASM</li>
<li>WebTransportやWebCodecsは、個人の開発者には関係がある？</li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>43. WebTransport、HTTP/3、WebCodecs w/ yuki_wtz</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf" target="_blank"&gt;WebSocketの次の技術！？WebTransportについての解説とチュートリアル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58" target="_blank"&gt;WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebTransportとは何か？&lt;/li&gt;
&lt;li&gt;HTTPの双方向通信の歴史&lt;/li&gt;
&lt;li&gt;XHR、Polling、Cometとは？&lt;/li&gt;
&lt;li&gt;WebSocket&lt;/li&gt;
&lt;li&gt;Server-Sent Eventsとは？&lt;/li&gt;
&lt;li&gt;SSEって今も使われるの？どこに使う？&lt;/li&gt;
&lt;li&gt;WebSocketとSSEとのパフォーマンス差異は？&lt;/li&gt;
&lt;li&gt;なぜWebTransportは登場してきたのか？WebSocketの課題とは？&lt;/li&gt;
&lt;li&gt;TCP Head of Line Blocking&lt;/li&gt;
&lt;li&gt;QUICとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/" target="_blank"&gt;QUIC プロトコルスタック&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebTransportは実際に使われている？&lt;/li&gt;
&lt;li&gt;WebSocketとWebTransportのユースケース？&lt;/li&gt;
&lt;li&gt;クラウドゲーミングとWebRTC&lt;/li&gt;
&lt;li&gt;WebTransportでクライアントクライアント通信はできる？&lt;/li&gt;
&lt;li&gt;TCPとUDP以外の選択肢は無かったのか？&lt;/li&gt;
&lt;li&gt;ネットワークプロトコルの硬直化&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/1" target="_blank"&gt;1. IETFとか、QUICとか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UDPが通らない環境ってあるのでは？どう対応する？&lt;/li&gt;
&lt;li&gt;HTTP/2とは？&lt;/li&gt;
&lt;li&gt;HTTP Head of Line Blocking&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00" target="_blank"&gt;Bootstrapping WebSockets with HTTP/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTTP/2の課題&lt;/li&gt;
&lt;li&gt;HTTP/2と3の違いは？&lt;/li&gt;
&lt;li&gt;内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。&lt;/li&gt;
&lt;li&gt;Server Push と 103 Early Hints&lt;/li&gt;
&lt;li&gt;内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています&lt;/li&gt;
&lt;li&gt;WebCodecsとは何か？&lt;/li&gt;
&lt;li&gt;なぜWebCodecsが登場してきたのか？&lt;/li&gt;
&lt;li&gt;WebTransportやWebCodecsがだれが推進している？&lt;/li&gt;
&lt;li&gt;WASM&lt;/li&gt;
&lt;li&gt;WebTransportやWebCodecsは、個人の開発者には関係がある？&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://offers.jp/" target="_blank"&gt;Offers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/" target="_blank"&gt;株式会社overflow&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://qiita.com/yuki_uchida/items/d9de148bb2ee418563cf" target="_blank">WebSocketの次の技術！？WebTransportについての解説とチュートリアル</a></li>
<li><a href="https://qiita.com/yuki_uchida/items/b177ec07ac0379950e58" target="_blank">WebTransportとWebCodecsを組み合わせてビデオチャットを実装してみる</a></li>
<li>WebTransportとは何か？</li>
<li>HTTPの双方向通信の歴史</li>
<li>XHR、Polling、Cometとは？</li>
<li>WebSocket</li>
<li>Server-Sent Eventsとは？</li>
<li>SSEって今も使われるの？どこに使う？</li>
<li>WebSocketとSSEとのパフォーマンス差異は？</li>
<li>なぜWebTransportは登場してきたのか？WebSocketの課題とは？</li>
<li>TCP Head of Line Blocking</li>
<li>QUICとは？</li>
<li><a href="https://datatracker.ietf.org/meeting/98/materials/slides-98-edu-sessf-quic-tutorial/" target="_blank">QUIC プロトコルスタック</a></li>
<li>WebTransportは実際に使われている？</li>
<li>WebSocketとWebTransportのユースケース？</li>
<li>クラウドゲーミングとWebRTC</li>
<li>WebTransportでクライアントクライアント通信はできる？</li>
<li>TCPとUDP以外の選択肢は無かったのか？</li>
<li>ネットワークプロトコルの硬直化</li>
<li><a href="https://fukabori.fm/episode/1" target="_blank">1. IETFとか、QUICとか</a></li>
<li>UDPが通らない環境ってあるのでは？どう対応する？</li>
<li>HTTP/2とは？</li>
<li>HTTP Head of Line Blocking</li>
<li><a href="https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00" target="_blank">Bootstrapping WebSockets with HTTP/2</a></li>
<li>HTTP/2の課題</li>
<li>HTTP/2と3の違いは？</li>
<li>内容訂正: 当初配信版では「HTTP2のServerPushがHTTP3で削除された」とありましたが、正しくは「仕様としては削除されておらず、Chromeが現状実装する予定にない」です。</li>
<li>Server Push と 103 Early Hints</li>
<li>内容訂正: 「HTTP3TransportではcookieなどのHTTPの仕組みを応用できる」と話している部分とありましたが、cookieの送信は現状の仕様ではサポートしないとされています</li>
<li>WebCodecsとは何か？</li>
<li>なぜWebCodecsが登場してきたのか？</li>
<li>WebTransportやWebCodecsがだれが推進している？</li>
<li>WASM</li>
<li>WebTransportやWebCodecsは、個人の開発者には関係がある？</li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/43</guid>
      <pubDate>Fri, 12 Feb 2021 10:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:39:34</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/943dd7ee-7462-418c-98c4-4aa0193f9332.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37985384"/>
    </item>
    <item>
      <title>42. 良いマネジメントとは？良いミーティングとは？ w/ konifar</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>Konifarさんにとってマネジメントとは？</li>
<li><a href="https://amzn.to/3iiEdkP" target="_blank">HIGH OUTPUT MANAGEMENT</a></li>
<li><a href="https://anchor.fm/em-fm" target="_blank">EM.FM</a></li>
<li>実際にマネージャとしてどういう課題に取り組んでいたのか？</li>
<li>情報設計の方法論</li>
<li>コミュニケーションの最適な形をどう追求するか？</li>
<li>Konifarさんはどうやって問題発見するか？</li>
<li>1on1の場、チームの振り返りで吸い取る</li>
<li>忘れないようにGoogleDocsに書いておく</li>
<li>TextやQuickCallで解決する、1on1で解決するための判断基準は？</li>
<li>Feedbackを与えるにあたって気をつけていることは？</li>
<li><a href="https://amzn.to/39C5daW" target="_blank">フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術</a></li>
<li>言わないでいるより、言って後悔したほうが良い</li>
<li>どうやって褒める箇所を覚えておくか？</li>
<li>1on1 ミーティングの目的</li>
<li>Konifarさんにとって良いミーティングとは？</li>
<li>目的とゴールがハッキリしていること</li>
<li>目的とゴールの違いは？</li>
<li>何かを決めるミーティングは事前準備がすべて</li>
<li>ミーティングが上手くいかないとき = 例外処理</li>
<li>ミーティング関数の引数</li>
<li>参加者の発言偏り問題にどう対処するか？</li>
<li>発言しないのは、そもそもなぜなのかを考える必要がある</li>
<li>ネガティブなことを言えるように心理的安全性を高めるためにやっていること？</li>
<li>ストレートにネガティブな意見が出てくるのは嬉しい</li>
<li>タックマンモデルのStormingが苦手な人が多いのでは</li>
<li>率直に物事をいうのはすごい疲れる</li>
<li>ブログで言語化して楽になる</li>
<li><a href="https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122" target="_blank">リモート環境での雑談の工夫</a></li>
<li>社内でボードゲーム</li>
<li><a href="https://fukabori.fm/Kyash%E3%81%AE%E5%85%A8%E7%A4%BE%E5%BF%98%E5%B9%B4%E4%BC%9A%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9remo" target="_blank">Kyashの全社忘年会で使用したサービス(remo)</a></li>
<li>リモート飲み会でお話を聞く、という形になる</li>
<li>リモートミーティングで音声とチャットでマルチで会話する</li>
<li>Chatに即興でアンケートFormを埋め込む</li>
<li>「これについて意見ありますか？」の後の沈黙に耐える</li>
<li>チェックイン</li>
<li><a href="https://open.talentio.com/1/c/kyash/requisitions/232" target="_blank">Kyash募集職種一覧</a></li>
<li><a href="https://www.patreon.com/fukabori" target="_blank">fukabori.fm 個人サポータープラン</a></li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>42. 良いマネジメントとは？良いミーティングとは？ w/ konifar</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;Konifarさんにとってマネジメントとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3iiEdkP" target="_blank"&gt;HIGH OUTPUT MANAGEMENT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anchor.fm/em-fm" target="_blank"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;実際にマネージャとしてどういう課題に取り組んでいたのか？&lt;/li&gt;
&lt;li&gt;情報設計の方法論&lt;/li&gt;
&lt;li&gt;コミュニケーションの最適な形をどう追求するか？&lt;/li&gt;
&lt;li&gt;Konifarさんはどうやって問題発見するか？&lt;/li&gt;
&lt;li&gt;1on1の場、チームの振り返りで吸い取る&lt;/li&gt;
&lt;li&gt;忘れないようにGoogleDocsに書いておく&lt;/li&gt;
&lt;li&gt;TextやQuickCallで解決する、1on1で解決するための判断基準は？&lt;/li&gt;
&lt;li&gt;Feedbackを与えるにあたって気をつけていることは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/39C5daW" target="_blank"&gt;フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;言わないでいるより、言って後悔したほうが良い&lt;/li&gt;
&lt;li&gt;どうやって褒める箇所を覚えておくか？&lt;/li&gt;
&lt;li&gt;1on1 ミーティングの目的&lt;/li&gt;
&lt;li&gt;Konifarさんにとって良いミーティングとは？&lt;/li&gt;
&lt;li&gt;目的とゴールがハッキリしていること&lt;/li&gt;
&lt;li&gt;目的とゴールの違いは？&lt;/li&gt;
&lt;li&gt;何かを決めるミーティングは事前準備がすべて&lt;/li&gt;
&lt;li&gt;ミーティングが上手くいかないとき = 例外処理&lt;/li&gt;
&lt;li&gt;ミーティング関数の引数&lt;/li&gt;
&lt;li&gt;参加者の発言偏り問題にどう対処するか？&lt;/li&gt;
&lt;li&gt;発言しないのは、そもそもなぜなのかを考える必要がある&lt;/li&gt;
&lt;li&gt;ネガティブなことを言えるように心理的安全性を高めるためにやっていること？&lt;/li&gt;
&lt;li&gt;ストレートにネガティブな意見が出てくるのは嬉しい&lt;/li&gt;
&lt;li&gt;タックマンモデルのStormingが苦手な人が多いのでは&lt;/li&gt;
&lt;li&gt;率直に物事をいうのはすごい疲れる&lt;/li&gt;
&lt;li&gt;ブログで言語化して楽になる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122" target="_blank"&gt;リモート環境での雑談の工夫&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;社内でボードゲーム&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/Kyash%E3%81%AE%E5%85%A8%E7%A4%BE%E5%BF%98%E5%B9%B4%E4%BC%9A%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9remo" target="_blank"&gt;Kyashの全社忘年会で使用したサービス(remo)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;リモート飲み会でお話を聞く、という形になる&lt;/li&gt;
&lt;li&gt;リモートミーティングで音声とチャットでマルチで会話する&lt;/li&gt;
&lt;li&gt;Chatに即興でアンケートFormを埋め込む&lt;/li&gt;
&lt;li&gt;「これについて意見ありますか？」の後の沈黙に耐える&lt;/li&gt;
&lt;li&gt;チェックイン&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.talentio.com/1/c/kyash/requisitions/232" target="_blank"&gt;Kyash募集職種一覧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.patreon.com/fukabori" target="_blank"&gt;fukabori.fm 個人サポータープラン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
エピソードスポンサー
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://offers.jp/" target="_blank"&gt;Offers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;運営会社: &lt;a href="https://overflow.co.jp/" target="_blank"&gt;株式会社overflow&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>Konifarさんにとってマネジメントとは？</li>
<li><a href="https://amzn.to/3iiEdkP" target="_blank">HIGH OUTPUT MANAGEMENT</a></li>
<li><a href="https://anchor.fm/em-fm" target="_blank">EM.FM</a></li>
<li>実際にマネージャとしてどういう課題に取り組んでいたのか？</li>
<li>情報設計の方法論</li>
<li>コミュニケーションの最適な形をどう追求するか？</li>
<li>Konifarさんはどうやって問題発見するか？</li>
<li>1on1の場、チームの振り返りで吸い取る</li>
<li>忘れないようにGoogleDocsに書いておく</li>
<li>TextやQuickCallで解決する、1on1で解決するための判断基準は？</li>
<li>Feedbackを与えるにあたって気をつけていることは？</li>
<li><a href="https://amzn.to/39C5daW" target="_blank">フィードバック入門 耳の痛いことを伝えて部下と職場を立て直す技術</a></li>
<li>言わないでいるより、言って後悔したほうが良い</li>
<li>どうやって褒める箇所を覚えておくか？</li>
<li>1on1 ミーティングの目的</li>
<li>Konifarさんにとって良いミーティングとは？</li>
<li>目的とゴールがハッキリしていること</li>
<li>目的とゴールの違いは？</li>
<li>何かを決めるミーティングは事前準備がすべて</li>
<li>ミーティングが上手くいかないとき = 例外処理</li>
<li>ミーティング関数の引数</li>
<li>参加者の発言偏り問題にどう対処するか？</li>
<li>発言しないのは、そもそもなぜなのかを考える必要がある</li>
<li>ネガティブなことを言えるように心理的安全性を高めるためにやっていること？</li>
<li>ストレートにネガティブな意見が出てくるのは嬉しい</li>
<li>タックマンモデルのStormingが苦手な人が多いのでは</li>
<li>率直に物事をいうのはすごい疲れる</li>
<li>ブログで言語化して楽になる</li>
<li><a href="https://konifar-zatsu.hatenadiary.jp/entry/2020/12/22/223122" target="_blank">リモート環境での雑談の工夫</a></li>
<li>社内でボードゲーム</li>
<li><a href="https://fukabori.fm/Kyash%E3%81%AE%E5%85%A8%E7%A4%BE%E5%BF%98%E5%B9%B4%E4%BC%9A%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9remo" target="_blank">Kyashの全社忘年会で使用したサービス(remo)</a></li>
<li>リモート飲み会でお話を聞く、という形になる</li>
<li>リモートミーティングで音声とチャットでマルチで会話する</li>
<li>Chatに即興でアンケートFormを埋め込む</li>
<li>「これについて意見ありますか？」の後の沈黙に耐える</li>
<li>チェックイン</li>
<li><a href="https://open.talentio.com/1/c/kyash/requisitions/232" target="_blank">Kyash募集職種一覧</a></li>
<li><a href="https://www.patreon.com/fukabori" target="_blank">fukabori.fm 個人サポータープラン</a></li>
</ul>
エピソードスポンサー
<ul>
<li>
<a href="https://offers.jp/" target="_blank">Offers</a>
<ul>
<li>運営会社: <a href="https://overflow.co.jp/" target="_blank">株式会社overflow</a>
</li>
</ul>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/42</guid>
      <pubDate>Thu, 14 Jan 2021 18:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:52:39</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/0c6519a5-4b79-4114-86a5-e6749cfff88e.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="50544640"/>
    </item>
    <item>
      <title>41. Wantedlyの開発組織 w/ kawasy</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？</li>
<li><a href="https://www.atlassian.com/agile/agile-at-scale/spotify" target="_blank">Discover the Spotify model</a></li>
<li>Tribe間の情報流通の課題などから組織再編</li>
<li>Productの情報ラインと、技術情報ラインの会議体設計</li>
<li>議事録などの情報展開</li>
<li>モノリシックアプリケーションからマイクロサービスへ</li>
<li><a href="https://blog.argoproj.io/tagged/cncf" target="_blank">Argo</a></li>
<li><a href="https://looker.com/" target="_blank">Looker</a></li>
<li>どのように技術判断を実施するのか？</li>
<li>組織の課題解決能力を向上させる</li>
<li>1-2年では困らないけど重要な問題をどのように対応するか？</li>
<li>たとえば、1チームの開発プロセスはどうなっている？</li>
<li>新しく価値をつくることと、リニューアルの難しさ</li>
<li>会社方針と個人方針でポジションがあわなくなった場合は？</li>
<li>インフラチームからの他チームへの留学制度</li>
<li>エンジニアの人事評価はどうしている？</li>
<li>「期待」を満たしたのか・満たしていのかをみる</li>
<li><a href="https://www.wantedly.com/companies/wantedly/projects" target="_blank">Wantedly, Inc.の採用/求人一覧</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>41. Wantedlyの開発組織 w/ kawasy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/agile/agile-at-scale/spotify" target="_blank"&gt;Discover the Spotify model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tribe間の情報流通の課題などから組織再編&lt;/li&gt;
&lt;li&gt;Productの情報ラインと、技術情報ラインの会議体設計&lt;/li&gt;
&lt;li&gt;議事録などの情報展開&lt;/li&gt;
&lt;li&gt;モノリシックアプリケーションからマイクロサービスへ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.argoproj.io/tagged/cncf" target="_blank"&gt;Argo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://looker.com/" target="_blank"&gt;Looker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;どのように技術判断を実施するのか？&lt;/li&gt;
&lt;li&gt;組織の課題解決能力を向上させる&lt;/li&gt;
&lt;li&gt;1-2年では困らないけど重要な問題をどのように対応するか？&lt;/li&gt;
&lt;li&gt;たとえば、1チームの開発プロセスはどうなっている？&lt;/li&gt;
&lt;li&gt;新しく価値をつくることと、リニューアルの難しさ&lt;/li&gt;
&lt;li&gt;会社方針と個人方針でポジションがあわなくなった場合は？&lt;/li&gt;
&lt;li&gt;インフラチームからの他チームへの留学制度&lt;/li&gt;
&lt;li&gt;エンジニアの人事評価はどうしている？&lt;/li&gt;
&lt;li&gt;「期待」を満たしたのか・満たしていのかをみる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/wantedly/projects" target="_blank"&gt;Wantedly, Inc.の採用/求人一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>Wantedlyの開発組織はどれぐらいの人数・チーム数・編成？</li>
<li><a href="https://www.atlassian.com/agile/agile-at-scale/spotify" target="_blank">Discover the Spotify model</a></li>
<li>Tribe間の情報流通の課題などから組織再編</li>
<li>Productの情報ラインと、技術情報ラインの会議体設計</li>
<li>議事録などの情報展開</li>
<li>モノリシックアプリケーションからマイクロサービスへ</li>
<li><a href="https://blog.argoproj.io/tagged/cncf" target="_blank">Argo</a></li>
<li><a href="https://looker.com/" target="_blank">Looker</a></li>
<li>どのように技術判断を実施するのか？</li>
<li>組織の課題解決能力を向上させる</li>
<li>1-2年では困らないけど重要な問題をどのように対応するか？</li>
<li>たとえば、1チームの開発プロセスはどうなっている？</li>
<li>新しく価値をつくることと、リニューアルの難しさ</li>
<li>会社方針と個人方針でポジションがあわなくなった場合は？</li>
<li>インフラチームからの他チームへの留学制度</li>
<li>エンジニアの人事評価はどうしている？</li>
<li>「期待」を満たしたのか・満たしていのかをみる</li>
<li><a href="https://www.wantedly.com/companies/wantedly/projects" target="_blank">Wantedly, Inc.の採用/求人一覧</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/41</guid>
      <pubDate>Fri, 18 Dec 2020 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:29:59</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/d71e2d60-5368-4781-b6ad-407601094919.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="28800313"/>
    </item>
    <item>
      <title>40. 外資証券会社における独自言語および独自オブジェクト指向データベース w/ kawasy</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg" target="_blank">エンジニアトーク「ROLE MODEL」</a></li>
<li>外資証券会社のシステムとは？</li>
<li>使われていた独自のプログラミング言語とは？</li>
<li>社内に存在する独自のエコシステム</li>
<li>独自言語は、どの言語に似ている？</li>
<li>専用の統合開発環境</li>
<li>独自のオブジェクト指向データベースとは？</li>
<li>Active Record Pattern</li>
<li>インピーダンスミスマッチ</li>
<li>オブジェクト指向データベースはなぜ流行らなかったのか？</li>
<li>グローバルレベルでのマルチマスタ同期</li>
<li>パフォーマンスレベルでの問題は？</li>
<li>どのようにロックする？</li>
<li>Dependency graphが実装されている</li>
<li>処理軽減・速度向上のためのメモ化</li>
<li>変数名にスペースが使えるプログラミング言語</li>
<li>どうやって品質を担保していたのか？</li>
<li><a href="https://amzn.to/3qdLx53" target="_blank">LeanとDevOpsの科学</a></li>
<li>コードレビューをもらうのが難しい問題とその対策</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>40. 外資証券会社における独自言語および独自オブジェクト指向データベース w/ kawasy</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg" target="_blank"&gt;エンジニアトーク「ROLE MODEL」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;外資証券会社のシステムとは？&lt;/li&gt;
&lt;li&gt;使われていた独自のプログラミング言語とは？&lt;/li&gt;
&lt;li&gt;社内に存在する独自のエコシステム&lt;/li&gt;
&lt;li&gt;独自言語は、どの言語に似ている？&lt;/li&gt;
&lt;li&gt;専用の統合開発環境&lt;/li&gt;
&lt;li&gt;独自のオブジェクト指向データベースとは？&lt;/li&gt;
&lt;li&gt;Active Record Pattern&lt;/li&gt;
&lt;li&gt;インピーダンスミスマッチ&lt;/li&gt;
&lt;li&gt;オブジェクト指向データベースはなぜ流行らなかったのか？&lt;/li&gt;
&lt;li&gt;グローバルレベルでのマルチマスタ同期&lt;/li&gt;
&lt;li&gt;パフォーマンスレベルでの問題は？&lt;/li&gt;
&lt;li&gt;どのようにロックする？&lt;/li&gt;
&lt;li&gt;Dependency graphが実装されている&lt;/li&gt;
&lt;li&gt;処理軽減・速度向上のためのメモ化&lt;/li&gt;
&lt;li&gt;変数名にスペースが使えるプログラミング言語&lt;/li&gt;
&lt;li&gt;どうやって品質を担保していたのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3qdLx53" target="_blank"&gt;LeanとDevOpsの科学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コードレビューをもらうのが難しい問題とその対策&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://open.spotify.com/episode/1UKlyIXa3CqnK9Nt8tB3uj?si=4iHsWLPDR42jPVjKR81csg" target="_blank">エンジニアトーク「ROLE MODEL」</a></li>
<li>外資証券会社のシステムとは？</li>
<li>使われていた独自のプログラミング言語とは？</li>
<li>社内に存在する独自のエコシステム</li>
<li>独自言語は、どの言語に似ている？</li>
<li>専用の統合開発環境</li>
<li>独自のオブジェクト指向データベースとは？</li>
<li>Active Record Pattern</li>
<li>インピーダンスミスマッチ</li>
<li>オブジェクト指向データベースはなぜ流行らなかったのか？</li>
<li>グローバルレベルでのマルチマスタ同期</li>
<li>パフォーマンスレベルでの問題は？</li>
<li>どのようにロックする？</li>
<li>Dependency graphが実装されている</li>
<li>処理軽減・速度向上のためのメモ化</li>
<li>変数名にスペースが使えるプログラミング言語</li>
<li>どうやって品質を担保していたのか？</li>
<li><a href="https://amzn.to/3qdLx53" target="_blank">LeanとDevOpsの科学</a></li>
<li>コードレビューをもらうのが難しい問題とその対策</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/40</guid>
      <pubDate>Tue, 01 Dec 2020 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:32:56</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/9aec2382-20ba-4baa-9ce7-86eae4ee251f.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="31632404"/>
    </item>
    <item>
      <title>39. Work Together Anywhere w/ Lisette Sutherland</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/323rFY1" target="_blank">Work Together Anywhere</a></li>
<li><a href="https://amzn.to/3bv9w8I" target="_blank">リモートワーク - チームが結束する次世代型メソッド</a></li>
<li><a href="https://www.collaborationsuperpowers.com/schedule/" target="_blank">Collaboration superpowers workshops</a></li>
<li>Why remote working is so important?</li>
<li>The reasons from company’s view and individual’s view</li>
<li>The future of work is choice; Let us choose</li>
<li>Shift to result oriented work</li>
<li>What are the difficulties in working at home?</li>
<li>Build boundary; turn off computers at certain time</li>
<li><a href="https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf" target="_blank">Template for creating a REMOTE TEAM AGREEMENT:</a></li>
<li>Should we share the agreements with other teams?</li>
<li>What’s difference in term of manager’s role?</li>
<li>How do managers find roadblocks when working remotely?</li>
<li>Not only 1 on 1 between a boss and a member but also between team members</li>
<li>Just calling without urgent matter</li>
<li>Over communiacation is definitely recommended</li>
<li><a href="https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf" target="_blank">Japanese Super Cards</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>39. Work Together Anywhere w/ Lisette Sutherland</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://amzn.to/323rFY1" target="_blank"&gt;Work Together Anywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amzn.to/3bv9w8I" target="_blank"&gt;リモートワーク - チームが結束する次世代型メソッド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/schedule/" target="_blank"&gt;Collaboration superpowers workshops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Why remote working is so important?&lt;/li&gt;
&lt;li&gt;The reasons from company’s view and individual’s view&lt;/li&gt;
&lt;li&gt;The future of work is choice; Let us choose&lt;/li&gt;
&lt;li&gt;Shift to result oriented work&lt;/li&gt;
&lt;li&gt;What are the difficulties in working at home?&lt;/li&gt;
&lt;li&gt;Build boundary; turn off computers at certain time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf" target="_blank"&gt;Template for creating a REMOTE TEAM AGREEMENT:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Should we share the agreements with other teams?&lt;/li&gt;
&lt;li&gt;What’s difference in term of manager’s role?&lt;/li&gt;
&lt;li&gt;How do managers find roadblocks when working remotely?&lt;/li&gt;
&lt;li&gt;Not only 1 on 1 between a boss and a member but also between team members&lt;/li&gt;
&lt;li&gt;Just calling without urgent matter&lt;/li&gt;
&lt;li&gt;Over communiacation is definitely recommended&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf" target="_blank"&gt;Japanese Super Cards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://amzn.to/323rFY1" target="_blank">Work Together Anywhere</a></li>
<li><a href="https://amzn.to/3bv9w8I" target="_blank">リモートワーク - チームが結束する次世代型メソッド</a></li>
<li><a href="https://www.collaborationsuperpowers.com/schedule/" target="_blank">Collaboration superpowers workshops</a></li>
<li>Why remote working is so important?</li>
<li>The reasons from company’s view and individual’s view</li>
<li>The future of work is choice; Let us choose</li>
<li>Shift to result oriented work</li>
<li>What are the difficulties in working at home?</li>
<li>Build boundary; turn off computers at certain time</li>
<li><a href="https://www.collaborationsuperpowers.com/wp-content/uploads/2018/05/Collaboration-Superpowers-RemoteTeamAgreement-INSTRUCTIONS-PDF.pdf" target="_blank">Template for creating a REMOTE TEAM AGREEMENT:</a></li>
<li>Should we share the agreements with other teams?</li>
<li>What’s difference in term of manager’s role?</li>
<li>How do managers find roadblocks when working remotely?</li>
<li>Not only 1 on 1 between a boss and a member but also between team members</li>
<li>Just calling without urgent matter</li>
<li>Over communiacation is definitely recommended</li>
<li><a href="https://fukabori.fm/materials/JapaneseSupercardsSampler.pdf" target="_blank">Japanese Super Cards</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/39</guid>
      <pubDate>Sat, 05 Sep 2020 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:30:33</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/7fe157d1-ab2f-4952-9777-6afcd7f04f71.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="29330703"/>
    </item>
    <item>
      <title>38. 良い組織を作るために w/ yunon_phys</title>
      <description>
        <![CDATA[話したネタ
<p>(収録環境都合により、途中で音質が変わります)</p>
<ul>
<li><a href="https://anchor.fm/em-fm" target="_blank">EM.FM</a></li>
<li>Chief of Staff, Games とは何をする人？</li>
<li><a href="https://voice.aktsk.jp/5302/" target="_blank">偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）</a></li>
<li><a href="https://voice.aktsk.jp/5345/" target="_blank">偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）</a></li>
<li>Engineering Managerとは？</li>
<li><a href="https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki" target="_blank">アカツキのEngineering Managerは何をする人なのか、EM Triangle</a></li>
<li>Managementというの言葉の訳語</li>
<li>これまでどのような組織づくりをしてきたのか？</li>
<li>問題を見つけるために、どのような行動をするのか？</li>
<li>30人以上との1on1からの模索</li>
<li>1on1で本音を出してもらうために、どのように話す？</li>
<li>学習する組織</li>
<li>1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？</li>
<li>大量の課題に面したとき、どう行動するか？</li>
<li>マインドマップで可視化して、システム思考的に考える</li>
<li>関係ないと思われた課題がつながる例とは？</li>
<li>組織開発(Organization Development)とは何か？</li>
<li>Developmentにある発展という意味</li>
<li>30人以上の意識をあわせにいくときの方法</li>
<li>対立をなくすのではなく、なぜそう考えたかという起点を考える</li>
<li>相手が自分と同じではない、また自分と同じ人間であることを認識する</li>
<li>無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく</li>
<li>何を考えているのか、何に困っているのかを共有するようなファシリテーション</li>
<li>未来を良くするために、自分が置かれている地点をメタ認知する</li>
<li>職能で自律して進めてもらうようなアプローチ</li>
<li>ゆのんさんにとってコミュニティとは？</li>
<li>コミュニティから一番得るのは活力</li>
<li><a href="https://2020.scrumgatheringtokyo.org/" target="_blank">Reginal Scrum Gathering Tokyo</a></li>
<li>fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる</li>
<li>ピープルマネジメントのネタは人に話しにくいこともある</li>
<li>心のNDA</li>
<li>マネージャ自身のバイアスを他者と会話することで見つける</li>
<li>オンライン勉強会は参加が簡単、出席率も変わる</li>
<li>https://game.aktsk.jp/</li>
<li>https://voice.aktsk.jp/</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>38. 良い組織を作るために w/ yunon_phys</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;p&gt;(収録環境都合により、途中で音質が変わります)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://anchor.fm/em-fm" target="_blank"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chief of Staff, Games とは何をする人？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://voice.aktsk.jp/5302/" target="_blank"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://voice.aktsk.jp/5345/" target="_blank"&gt;偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Engineering Managerとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki" target="_blank"&gt;アカツキのEngineering Managerは何をする人なのか、EM Triangle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Managementというの言葉の訳語&lt;/li&gt;
&lt;li&gt;これまでどのような組織づくりをしてきたのか？&lt;/li&gt;
&lt;li&gt;問題を見つけるために、どのような行動をするのか？&lt;/li&gt;
&lt;li&gt;30人以上との1on1からの模索&lt;/li&gt;
&lt;li&gt;1on1で本音を出してもらうために、どのように話す？&lt;/li&gt;
&lt;li&gt;学習する組織&lt;/li&gt;
&lt;li&gt;1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？&lt;/li&gt;
&lt;li&gt;大量の課題に面したとき、どう行動するか？&lt;/li&gt;
&lt;li&gt;マインドマップで可視化して、システム思考的に考える&lt;/li&gt;
&lt;li&gt;関係ないと思われた課題がつながる例とは？&lt;/li&gt;
&lt;li&gt;組織開発(Organization Development)とは何か？&lt;/li&gt;
&lt;li&gt;Developmentにある発展という意味&lt;/li&gt;
&lt;li&gt;30人以上の意識をあわせにいくときの方法&lt;/li&gt;
&lt;li&gt;対立をなくすのではなく、なぜそう考えたかという起点を考える&lt;/li&gt;
&lt;li&gt;相手が自分と同じではない、また自分と同じ人間であることを認識する&lt;/li&gt;
&lt;li&gt;無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく&lt;/li&gt;
&lt;li&gt;何を考えているのか、何に困っているのかを共有するようなファシリテーション&lt;/li&gt;
&lt;li&gt;未来を良くするために、自分が置かれている地点をメタ認知する&lt;/li&gt;
&lt;li&gt;職能で自律して進めてもらうようなアプローチ&lt;/li&gt;
&lt;li&gt;ゆのんさんにとってコミュニティとは？&lt;/li&gt;
&lt;li&gt;コミュニティから一番得るのは活力&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/" target="_blank"&gt;Reginal Scrum Gathering Tokyo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる&lt;/li&gt;
&lt;li&gt;ピープルマネジメントのネタは人に話しにくいこともある&lt;/li&gt;
&lt;li&gt;心のNDA&lt;/li&gt;
&lt;li&gt;マネージャ自身のバイアスを他者と会話することで見つける&lt;/li&gt;
&lt;li&gt;オンライン勉強会は参加が簡単、出席率も変わる&lt;/li&gt;
&lt;li&gt;https://game.aktsk.jp/&lt;/li&gt;
&lt;li&gt;https://voice.aktsk.jp/&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<p>(収録環境都合により、途中で音質が変わります)</p>
<ul>
<li><a href="https://anchor.fm/em-fm" target="_blank">EM.FM</a></li>
<li>Chief of Staff, Games とは何をする人？</li>
<li><a href="https://voice.aktsk.jp/5302/" target="_blank">偉大なゲームを作るために「変化に適応できる組織」を作る（前篇）</a></li>
<li><a href="https://voice.aktsk.jp/5345/" target="_blank">偉大なゲームを作るために「変化に適応できる組織」を作る（後篇）</a></li>
<li>Engineering Managerとは？</li>
<li><a href="https://speakerdeck.com/yunon_phys/what-is-an-em-in-akatsuki" target="_blank">アカツキのEngineering Managerは何をする人なのか、EM Triangle</a></li>
<li>Managementというの言葉の訳語</li>
<li>これまでどのような組織づくりをしてきたのか？</li>
<li>問題を見つけるために、どのような行動をするのか？</li>
<li>30人以上との1on1からの模索</li>
<li>1on1で本音を出してもらうために、どのように話す？</li>
<li>学習する組織</li>
<li>1on1のヒアリングでは、たとえばどのような内容・課題が出てくるのか？</li>
<li>大量の課題に面したとき、どう行動するか？</li>
<li>マインドマップで可視化して、システム思考的に考える</li>
<li>関係ないと思われた課題がつながる例とは？</li>
<li>組織開発(Organization Development)とは何か？</li>
<li>Developmentにある発展という意味</li>
<li>30人以上の意識をあわせにいくときの方法</li>
<li>対立をなくすのではなく、なぜそう考えたかという起点を考える</li>
<li>相手が自分と同じではない、また自分と同じ人間であることを認識する</li>
<li>無理に職能を統一するのではなく、それぞれの文化・歴史を大事にしつつ、更に良くするためにはどうするかそれぞれで考えていく</li>
<li>何を考えているのか、何に困っているのかを共有するようなファシリテーション</li>
<li>未来を良くするために、自分が置かれている地点をメタ認知する</li>
<li>職能で自律して進めてもらうようなアプローチ</li>
<li>ゆのんさんにとってコミュニティとは？</li>
<li>コミュニティから一番得るのは活力</li>
<li><a href="https://2020.scrumgatheringtokyo.org/" target="_blank">Reginal Scrum Gathering Tokyo</a></li>
<li>fourという社内コミュニティで、エンジニアリングマネジメント・プロジェクトマネジメントをするメンバが集まる</li>
<li>ピープルマネジメントのネタは人に話しにくいこともある</li>
<li>心のNDA</li>
<li>マネージャ自身のバイアスを他者と会話することで見つける</li>
<li>オンライン勉強会は参加が簡単、出席率も変わる</li>
<li>https://game.aktsk.jp/</li>
<li>https://voice.aktsk.jp/</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/38</guid>
      <pubDate>Sat, 22 Aug 2020 05:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:53:58</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/13dc768d-6ae0-4db6-91df-c265dbc054a6.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="51817325"/>
    </item>
    <item>
      <title>37. MLOpsとは？どのようにMLOpsを実装しているか？ w/ kenta_sato3</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>MLOpsとは何か？</li>
<li>MLOpsの定義</li>
<li>MLのおけるモデルとは何か？</li>
<li>MLOpsで解決する課題とは？</li>
<li>CACE / Changing Anything Changes Everything</li>
<li>学習に使ったデータ管理の難しさ</li>
<li>メタ情報だけのバージョン管理というプラクティス</li>
<li>MLに必要なパイプラインを回すのは大変</li>
<li>ML Superhero、MLからインフラ構築まですべて担う人</li>
<li>Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？</li>
<li><a href="https://tech.stockmark.co.jp/blog/mlops/" target="_blank">BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み</a></li>
<li>MLOps取り組み前のアーキテクチャの課題とは？</li>
<li>温かみのある手動Opsの自動化</li>
<li>AWS CodeBuildの権限周りの楽さ</li>
<li>ワークフローが見えにくい課題をワークフローエンジンで解決する</li>
<li>AWS Step Functions と AWS Batch の活用</li>
<li>今後のMLOpsの野望</li>
<li>モデルのパフォーマンスを決める上流データバリデーション</li>
<li>学習のパイプラインの整理、その目指すべきところは？</li>
<li>汎用言語モデルをGoogle TPUでの開発</li>
<li>MLOpsにどのような気持ちで望んでいるか？</li>
<li>ペインをどうやって発見しているか？</li>
<li>推測するな、計測せよ</li>
<li><a href="https://aws.amazon.com/jp/builders-flash/202007/bokete-2/" target="_blank">電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者</a></li>
<li><a href="https://tech.stockmark.co.jp/" target="_blank">Stockmark Tech Blog</a></li>
<li><a href="https://www.wantedly.com/companies/stockmark" target="_blank">エンジニア募集中</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>37. MLOpsとは？どのようにMLOpsを実装しているか？ w/ kenta_sato3</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;MLOpsとは何か？&lt;/li&gt;
&lt;li&gt;MLOpsの定義&lt;/li&gt;
&lt;li&gt;MLのおけるモデルとは何か？&lt;/li&gt;
&lt;li&gt;MLOpsで解決する課題とは？&lt;/li&gt;
&lt;li&gt;CACE / Changing Anything Changes Everything&lt;/li&gt;
&lt;li&gt;学習に使ったデータ管理の難しさ&lt;/li&gt;
&lt;li&gt;メタ情報だけのバージョン管理というプラクティス&lt;/li&gt;
&lt;li&gt;MLに必要なパイプラインを回すのは大変&lt;/li&gt;
&lt;li&gt;ML Superhero、MLからインフラ構築まですべて担う人&lt;/li&gt;
&lt;li&gt;Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/blog/mlops/" target="_blank"&gt;BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MLOps取り組み前のアーキテクチャの課題とは？&lt;/li&gt;
&lt;li&gt;温かみのある手動Opsの自動化&lt;/li&gt;
&lt;li&gt;AWS CodeBuildの権限周りの楽さ&lt;/li&gt;
&lt;li&gt;ワークフローが見えにくい課題をワークフローエンジンで解決する&lt;/li&gt;
&lt;li&gt;AWS Step Functions と AWS Batch の活用&lt;/li&gt;
&lt;li&gt;今後のMLOpsの野望&lt;/li&gt;
&lt;li&gt;モデルのパフォーマンスを決める上流データバリデーション&lt;/li&gt;
&lt;li&gt;学習のパイプラインの整理、その目指すべきところは？&lt;/li&gt;
&lt;li&gt;汎用言語モデルをGoogle TPUでの開発&lt;/li&gt;
&lt;li&gt;MLOpsにどのような気持ちで望んでいるか？&lt;/li&gt;
&lt;li&gt;ペインをどうやって発見しているか？&lt;/li&gt;
&lt;li&gt;推測するな、計測せよ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/jp/builders-flash/202007/bokete-2/" target="_blank"&gt;電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.stockmark.co.jp/" target="_blank"&gt;Stockmark Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/stockmark" target="_blank"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>MLOpsとは何か？</li>
<li>MLOpsの定義</li>
<li>MLのおけるモデルとは何か？</li>
<li>MLOpsで解決する課題とは？</li>
<li>CACE / Changing Anything Changes Everything</li>
<li>学習に使ったデータ管理の難しさ</li>
<li>メタ情報だけのバージョン管理というプラクティス</li>
<li>MLに必要なパイプラインを回すのは大変</li>
<li>ML Superhero、MLからインフラ構築まですべて担う人</li>
<li>Stockmark社におけるMLOpsに取り組む前のアーキテクチャとは？</li>
<li><a href="https://tech.stockmark.co.jp/blog/mlops/" target="_blank">BERTを使ったMLバッチ処理実サービスのアーキテクチャとMLOpsの取り組み</a></li>
<li>MLOps取り組み前のアーキテクチャの課題とは？</li>
<li>温かみのある手動Opsの自動化</li>
<li>AWS CodeBuildの権限周りの楽さ</li>
<li>ワークフローが見えにくい課題をワークフローエンジンで解決する</li>
<li>AWS Step Functions と AWS Batch の活用</li>
<li>今後のMLOpsの野望</li>
<li>モデルのパフォーマンスを決める上流データバリデーション</li>
<li>学習のパイプラインの整理、その目指すべきところは？</li>
<li>汎用言語モデルをGoogle TPUでの開発</li>
<li>MLOpsにどのような気持ちで望んでいるか？</li>
<li>ペインをどうやって発見しているか？</li>
<li>推測するな、計測せよ</li>
<li><a href="https://aws.amazon.com/jp/builders-flash/202007/bokete-2/" target="_blank">電笑戦 ~ AIは人を笑わせられるのか 第 2 回　 電笑戦の背景と挑戦者</a></li>
<li><a href="https://tech.stockmark.co.jp/" target="_blank">Stockmark Tech Blog</a></li>
<li><a href="https://www.wantedly.com/companies/stockmark" target="_blank">エンジニア募集中</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/37</guid>
      <pubDate>Fri, 07 Aug 2020 00:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:39:07</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/941f820b-2028-4483-9f6a-0a15baa060eb.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37559066"/>
    </item>
    <item>
      <title>36. [後編] You have commit bit! w/ songmu</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>OSSをどのように読むか？</li>
<li>利用するOSSをどうやって選定していくか？</li>
<li>協調できるかどうか、という選定基準</li>
<li><a href="https://songmu.jp/riji/entry/2020-03-18-ecspresso.html" target="_blank">ecs-deployからecspressoに乗り換えた</a></li>
<li><a href="https://github.com/kayac/go-katsubushi" target="_blank">go-katsubushi</a></li>
<li><a href="https://github.com/kayac/go-katsubushi/pull/40" target="_blank">implement STAT via binary protocol </a></li>
<li>そもそも、なぜ採番する必要があるのか？</li>
<li>Snowflakeの意味が複数ある</li>
<li><a href="https://yapcjapan.org/2020kyoto/timetable.html#/detail/21" target="_blank">OSS貢献を小さく始めて技術力を高め、大きく花開かせる</a></li>
<li>GitHubはSoftware Engineerのpixiv</li>
<li>OSSの引き継ぎ</li>
<li>0-&gt;1よりも1-&gt;10のが得意になった原点</li>
<li>OSSの引き継ぎを自分から提言する</li>
<li>OSSのメンテは具体的には何をしている？</li>
<li>OSSを引き継いだ結果、どう成長したか？</li>
<li>コードの個性</li>
<li>どうやってOSSへコントリビュートしやすくしているか？</li>
<li>
<a href="https://github.com/x-motemen/ghq" target="_blank">ghq</a>ですぐ見つけること</li>
<li>最新のバージョンを使うこと</li>
<li><a href="https://github.com/renovatebot/renovate" target="_blank">renovate</a></li>
<li><a href="https://dependabot.com/" target="_blank">dependabot</a></li>
<li>Pull Requestを送る際の心構えとは？</li>
<li>Pull Requestを放置されても気にしない</li>
<li>OSSを他者へ引き継ぐ場合に何を考えているか？</li>
<li>Songmuさんの考えるCTOの役割とは？</li>
<li>プロダクトセントリックとは？何を意識するか？</li>
<li>広告塔の役割として何をするか？</li>
<li>チームのパフォーマンスを最大化するために何をするか？</li>
<li><a href="https://blog.song.mu/entry/startup-manifest" target="_blank">スタートアップマニフェスト</a></li>
<li>アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏</li>
<li>生み出せることに敬意を払って、コミュニケーションをとる</li>
<li><a href="https://nature.global/jp/nature-remo-3" target="_blank">Nature Remo 3</a></li>
<li><a href="https://nature.global/jp/careers" target="_blank">Nature株式会社 採用情報</a></li>
<li><a href="https://leanpub.com/ghq-handbook" target="_blank">ghq handbook</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>36. [後編] You have commit bit! w/ songmu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;OSSをどのように読むか？&lt;/li&gt;
&lt;li&gt;利用するOSSをどうやって選定していくか？&lt;/li&gt;
&lt;li&gt;協調できるかどうか、という選定基準&lt;/li&gt;
&lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-03-18-ecspresso.html" target="_blank"&gt;ecs-deployからecspressoに乗り換えた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi" target="_blank"&gt;go-katsubushi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kayac/go-katsubushi/pull/40" target="_blank"&gt;implement STAT via binary protocol &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそも、なぜ採番する必要があるのか？&lt;/li&gt;
&lt;li&gt;Snowflakeの意味が複数ある&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yapcjapan.org/2020kyoto/timetable.html#/detail/21" target="_blank"&gt;OSS貢献を小さく始めて技術力を高め、大きく花開かせる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHubはSoftware Engineerのpixiv&lt;/li&gt;
&lt;li&gt;OSSの引き継ぎ&lt;/li&gt;
&lt;li&gt;0-&amp;gt;1よりも1-&amp;gt;10のが得意になった原点&lt;/li&gt;
&lt;li&gt;OSSの引き継ぎを自分から提言する&lt;/li&gt;
&lt;li&gt;OSSのメンテは具体的には何をしている？&lt;/li&gt;
&lt;li&gt;OSSを引き継いだ結果、どう成長したか？&lt;/li&gt;
&lt;li&gt;コードの個性&lt;/li&gt;
&lt;li&gt;どうやってOSSへコントリビュートしやすくしているか？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/x-motemen/ghq" target="_blank"&gt;ghq&lt;/a&gt;ですぐ見つけること&lt;/li&gt;
&lt;li&gt;最新のバージョンを使うこと&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/renovatebot/renovate" target="_blank"&gt;renovate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dependabot.com/" target="_blank"&gt;dependabot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull Requestを送る際の心構えとは？&lt;/li&gt;
&lt;li&gt;Pull Requestを放置されても気にしない&lt;/li&gt;
&lt;li&gt;OSSを他者へ引き継ぐ場合に何を考えているか？&lt;/li&gt;
&lt;li&gt;Songmuさんの考えるCTOの役割とは？&lt;/li&gt;
&lt;li&gt;プロダクトセントリックとは？何を意識するか？&lt;/li&gt;
&lt;li&gt;広告塔の役割として何をするか？&lt;/li&gt;
&lt;li&gt;チームのパフォーマンスを最大化するために何をするか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.song.mu/entry/startup-manifest" target="_blank"&gt;スタートアップマニフェスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏&lt;/li&gt;
&lt;li&gt;生み出せることに敬意を払って、コミュニケーションをとる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nature.global/jp/nature-remo-3" target="_blank"&gt;Nature Remo 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nature.global/jp/careers" target="_blank"&gt;Nature株式会社 採用情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/ghq-handbook" target="_blank"&gt;ghq handbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>OSSをどのように読むか？</li>
<li>利用するOSSをどうやって選定していくか？</li>
<li>協調できるかどうか、という選定基準</li>
<li><a href="https://songmu.jp/riji/entry/2020-03-18-ecspresso.html" target="_blank">ecs-deployからecspressoに乗り換えた</a></li>
<li><a href="https://github.com/kayac/go-katsubushi" target="_blank">go-katsubushi</a></li>
<li><a href="https://github.com/kayac/go-katsubushi/pull/40" target="_blank">implement STAT via binary protocol </a></li>
<li>そもそも、なぜ採番する必要があるのか？</li>
<li>Snowflakeの意味が複数ある</li>
<li><a href="https://yapcjapan.org/2020kyoto/timetable.html#/detail/21" target="_blank">OSS貢献を小さく始めて技術力を高め、大きく花開かせる</a></li>
<li>GitHubはSoftware Engineerのpixiv</li>
<li>OSSの引き継ぎ</li>
<li>0-&gt;1よりも1-&gt;10のが得意になった原点</li>
<li>OSSの引き継ぎを自分から提言する</li>
<li>OSSのメンテは具体的には何をしている？</li>
<li>OSSを引き継いだ結果、どう成長したか？</li>
<li>コードの個性</li>
<li>どうやってOSSへコントリビュートしやすくしているか？</li>
<li>
<a href="https://github.com/x-motemen/ghq" target="_blank">ghq</a>ですぐ見つけること</li>
<li>最新のバージョンを使うこと</li>
<li><a href="https://github.com/renovatebot/renovate" target="_blank">renovate</a></li>
<li><a href="https://dependabot.com/" target="_blank">dependabot</a></li>
<li>Pull Requestを送る際の心構えとは？</li>
<li>Pull Requestを放置されても気にしない</li>
<li>OSSを他者へ引き継ぐ場合に何を考えているか？</li>
<li>Songmuさんの考えるCTOの役割とは？</li>
<li>プロダクトセントリックとは？何を意識するか？</li>
<li>広告塔の役割として何をするか？</li>
<li>チームのパフォーマンスを最大化するために何をするか？</li>
<li><a href="https://blog.song.mu/entry/startup-manifest" target="_blank">スタートアップマニフェスト</a></li>
<li>アイデアというのは複数の問題をいっぺんに解決すること / 宮本茂氏</li>
<li>生み出せることに敬意を払って、コミュニケーションをとる</li>
<li><a href="https://nature.global/jp/nature-remo-3" target="_blank">Nature Remo 3</a></li>
<li><a href="https://nature.global/jp/careers" target="_blank">Nature株式会社 採用情報</a></li>
<li><a href="https://leanpub.com/ghq-handbook" target="_blank">ghq handbook</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/36</guid>
      <pubDate>Fri, 31 Jul 2020 04:20:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:47:23</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/b756a395-a981-4ae3-9a93-c4b53739c426.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="45503216"/>
    </item>
    <item>
      <title>35. [前編] Nature Remoから学ぶシステムアーキテクチャと開発プロセス w/ songmu</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/songmu/inside-nature-remo" target="_blank">Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo</a></li>
<li>Nature Remoとは何か？</li>
<li>Nature Remoのアーキテクチャとは</li>
<li>Redis Pub/Sub</li>
<li>Timer処理をどのように実装するか？</li>
<li>ElastiCache Redisが将来的にボトルネックになる可能性</li>
<li>Redisの分割はどのような方式とするか？</li>
<li>SNSでよくあるID分割による弊害（お化けユーザなど）</li>
<li>DDoSに対する防御は？</li>
<li>WebSocketを受けるWorkerのCPUはサチらないの？</li>
<li>GolangのWebSocket実装が優秀</li>
<li>接続先解決の方式はどうするか？</li>
<li>ConsulからALBへの移行</li>
<li>ALBからWorkerへの接続はTLSを解いている？</li>
<li>Streamはどうやってスケールさせるか？</li>
<li>積み上げマイグレーションは何がイマイチなのか？</li>
<li>手続き型 vs 宣言型</li>
<li>
<a href="https://github.com/schemalex/schemalex" target="_blank">schemalex</a>や<a href="https://github.com/k0kubun/sqldef" target="_blank">sqldef</a>
</li>
<li>Nature Remoは何人ぐらいで開発している？</li>
<li>Songmuさんはどうやって採用している？</li>
<li>採用時にどうやってスキル的に十分である、と判断するのか？</li>
<li>Nature RemoにおけるGitHubのブランチとデプロイ戦略</li>
<li><a href="https://github.com/x-motemen/git-pr-release" target="_blank">git-pr-release</a></li>
<li><a href="https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html" target="_blank">CircleCIでgit-pr-releaseする</a></li>
<li>デプロイ後の障害をどうやって気づくか？</li>
<li>ALBにおけるReal IPの解決の課題</li>
<li><a href="https://songmu.jp/riji/entry/2020-04-24-realip.html" target="_blank">GoのWebアプリでクライアントIPを検出するrealipモジュール</a></li>
<li>Nginxのngx_http_realip_module</li>
<li>全員が自分たちのプロダクトのユーザである</li>
<li>ビジネス要求の管理はどうしているか？</li>
<li><a href="https://www.zenhub.com/" target="_blank">ZenHub</a></li>
<li>オフィス移転とリモートワーク</li>
<li>どうやって見積もりする？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>35. [前編] Nature Remoから学ぶシステムアーキテクチャと開発プロセス w/ songmu</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/songmu/inside-nature-remo" target="_blank"&gt;Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nature Remoとは何か？&lt;/li&gt;
&lt;li&gt;Nature Remoのアーキテクチャとは&lt;/li&gt;
&lt;li&gt;Redis Pub/Sub&lt;/li&gt;
&lt;li&gt;Timer処理をどのように実装するか？&lt;/li&gt;
&lt;li&gt;ElastiCache Redisが将来的にボトルネックになる可能性&lt;/li&gt;
&lt;li&gt;Redisの分割はどのような方式とするか？&lt;/li&gt;
&lt;li&gt;SNSでよくあるID分割による弊害（お化けユーザなど）&lt;/li&gt;
&lt;li&gt;DDoSに対する防御は？&lt;/li&gt;
&lt;li&gt;WebSocketを受けるWorkerのCPUはサチらないの？&lt;/li&gt;
&lt;li&gt;GolangのWebSocket実装が優秀&lt;/li&gt;
&lt;li&gt;接続先解決の方式はどうするか？&lt;/li&gt;
&lt;li&gt;ConsulからALBへの移行&lt;/li&gt;
&lt;li&gt;ALBからWorkerへの接続はTLSを解いている？&lt;/li&gt;
&lt;li&gt;Streamはどうやってスケールさせるか？&lt;/li&gt;
&lt;li&gt;積み上げマイグレーションは何がイマイチなのか？&lt;/li&gt;
&lt;li&gt;手続き型 vs 宣言型&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/schemalex/schemalex" target="_blank"&gt;schemalex&lt;/a&gt;や&lt;a href="https://github.com/k0kubun/sqldef" target="_blank"&gt;sqldef&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Nature Remoは何人ぐらいで開発している？&lt;/li&gt;
&lt;li&gt;Songmuさんはどうやって採用している？&lt;/li&gt;
&lt;li&gt;採用時にどうやってスキル的に十分である、と判断するのか？&lt;/li&gt;
&lt;li&gt;Nature RemoにおけるGitHubのブランチとデプロイ戦略&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/x-motemen/git-pr-release" target="_blank"&gt;git-pr-release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html" target="_blank"&gt;CircleCIでgit-pr-releaseする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;デプロイ後の障害をどうやって気づくか？&lt;/li&gt;
&lt;li&gt;ALBにおけるReal IPの解決の課題&lt;/li&gt;
&lt;li&gt;&lt;a href="https://songmu.jp/riji/entry/2020-04-24-realip.html" target="_blank"&gt;GoのWebアプリでクライアントIPを検出するrealipモジュール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nginxのngx_http_realip_module&lt;/li&gt;
&lt;li&gt;全員が自分たちのプロダクトのユーザである&lt;/li&gt;
&lt;li&gt;ビジネス要求の管理はどうしているか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zenhub.com/" target="_blank"&gt;ZenHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;オフィス移転とリモートワーク&lt;/li&gt;
&lt;li&gt;どうやって見積もりする？&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/songmu/inside-nature-remo" target="_blank">Nature Remoの裏側 ~ AWSとWeb技術をIoTの世界でフル活用する / Inside Nature Remo</a></li>
<li>Nature Remoとは何か？</li>
<li>Nature Remoのアーキテクチャとは</li>
<li>Redis Pub/Sub</li>
<li>Timer処理をどのように実装するか？</li>
<li>ElastiCache Redisが将来的にボトルネックになる可能性</li>
<li>Redisの分割はどのような方式とするか？</li>
<li>SNSでよくあるID分割による弊害（お化けユーザなど）</li>
<li>DDoSに対する防御は？</li>
<li>WebSocketを受けるWorkerのCPUはサチらないの？</li>
<li>GolangのWebSocket実装が優秀</li>
<li>接続先解決の方式はどうするか？</li>
<li>ConsulからALBへの移行</li>
<li>ALBからWorkerへの接続はTLSを解いている？</li>
<li>Streamはどうやってスケールさせるか？</li>
<li>積み上げマイグレーションは何がイマイチなのか？</li>
<li>手続き型 vs 宣言型</li>
<li>
<a href="https://github.com/schemalex/schemalex" target="_blank">schemalex</a>や<a href="https://github.com/k0kubun/sqldef" target="_blank">sqldef</a>
</li>
<li>Nature Remoは何人ぐらいで開発している？</li>
<li>Songmuさんはどうやって採用している？</li>
<li>採用時にどうやってスキル的に十分である、と判断するのか？</li>
<li>Nature RemoにおけるGitHubのブランチとデプロイ戦略</li>
<li><a href="https://github.com/x-motemen/git-pr-release" target="_blank">git-pr-release</a></li>
<li><a href="https://songmu.jp/riji/entry/2019-07-28-circleci-git-pr-release.html" target="_blank">CircleCIでgit-pr-releaseする</a></li>
<li>デプロイ後の障害をどうやって気づくか？</li>
<li>ALBにおけるReal IPの解決の課題</li>
<li><a href="https://songmu.jp/riji/entry/2020-04-24-realip.html" target="_blank">GoのWebアプリでクライアントIPを検出するrealipモジュール</a></li>
<li>Nginxのngx_http_realip_module</li>
<li>全員が自分たちのプロダクトのユーザである</li>
<li>ビジネス要求の管理はどうしているか？</li>
<li><a href="https://www.zenhub.com/" target="_blank">ZenHub</a></li>
<li>オフィス移転とリモートワーク</li>
<li>どうやって見積もりする？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/35</guid>
      <pubDate>Wed, 29 Jul 2020 07:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:45:41</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/9288ba60-6fe0-4896-8b5d-2fda09e1a1bb.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="43864816"/>
    </item>
    <item>
      <title>34. NewSQLとは w/ tzkb</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>2000年初頭のデータストアは何が主流だったのか？</li>
<li>OLTPとDWH</li>
<li>データベースから見るとReadのスケールアウトは難しくない</li>
<li>Web系で難しいのはWriteのスケールアウト</li>
<li>RDBのReadのスケールアウト方法とは？</li>
<li>Web + RDB + Cache のアーキテクチャの辛い点は？</li>
<li>UniverseとMultiverse</li>
<li>Oracle Exadata</li>
<li>RDBにおける全文検索</li>
<li>NewSQLとは何か？</li>
<li>NoSQLとは何を指すか？</li>
<li>トランザクション処理はなぜ難しいのか？</li>
<li>マルチマスタの難しさ</li>
<li>Google Cloud Spannerについて</li>
<li>金の弾丸</li>
<li>YugabyteDB/CockroachDB/TiDB</li>
<li>YugabyteDBの特徴は？</li>
<li>PostgreSQL互換とMySQL互換という売り</li>
<li>NewSQLの技術要素は？</li>
<li>NewSQLのレプリケーションはどうやるか？</li>
<li>Raftとは？</li>
<li>DBにおけるShardingとは何か？</li>
<li>Partioningとは何か？</li>
<li>RDBのデータ構造は何を利用しているか？</li>
<li>B+TreeのRead/Writeはどうやるか？</li>
<li>B+Treeの計算量は？</li>
<li>NewSQLのデータ構造は？</li>
<li>LSM Tree(Log Structured Merge Tree)とは？</li>
<li>B+Treeのメリット・デメリット</li>
<li>LSM Treeのメリット・デメリット</li>
<li>DBに難しいのは古いバージョンのデータを取るとき</li>
<li>MVCC(Multi Version Concurrency Control)とは？</li>
<li>LSM Treeで古いデータをどうやって探すのか？</li>
<li>Bloom Filter</li>
<li>Facebook製のRocksDB</li>
<li>分散トランザクションをどう実現するのか？</li>
<li>DBにおける分離レベルとは？</li>
<li>Read Commited/Repeatable Read/Serializable</li>
<li>SpannerのExternal Consistency</li>
<li>AWS Auroraの裏側の作りは？</li>
<li>OracleのRAC(Real Application Cluster)とは？</li>
<li>令和時代のアプリケーション開発者のデータストア選定について</li>
<li>MySQLとPostgrSQLの使い分けは？</li>
<li>どうやってDBについて学習するか？</li>
<li>CAPの定理をあえて使う必要はない</li>
<li><a href="https://databaseinternals.connpass.com/" target="_blank">Database Internals 輪読会</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>34. NewSQLとは w/ tzkb</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;2000年初頭のデータストアは何が主流だったのか？&lt;/li&gt;
&lt;li&gt;OLTPとDWH&lt;/li&gt;
&lt;li&gt;データベースから見るとReadのスケールアウトは難しくない&lt;/li&gt;
&lt;li&gt;Web系で難しいのはWriteのスケールアウト&lt;/li&gt;
&lt;li&gt;RDBのReadのスケールアウト方法とは？&lt;/li&gt;
&lt;li&gt;Web + RDB + Cache のアーキテクチャの辛い点は？&lt;/li&gt;
&lt;li&gt;UniverseとMultiverse&lt;/li&gt;
&lt;li&gt;Oracle Exadata&lt;/li&gt;
&lt;li&gt;RDBにおける全文検索&lt;/li&gt;
&lt;li&gt;NewSQLとは何か？&lt;/li&gt;
&lt;li&gt;NoSQLとは何を指すか？&lt;/li&gt;
&lt;li&gt;トランザクション処理はなぜ難しいのか？&lt;/li&gt;
&lt;li&gt;マルチマスタの難しさ&lt;/li&gt;
&lt;li&gt;Google Cloud Spannerについて&lt;/li&gt;
&lt;li&gt;金の弾丸&lt;/li&gt;
&lt;li&gt;YugabyteDB/CockroachDB/TiDB&lt;/li&gt;
&lt;li&gt;YugabyteDBの特徴は？&lt;/li&gt;
&lt;li&gt;PostgreSQL互換とMySQL互換という売り&lt;/li&gt;
&lt;li&gt;NewSQLの技術要素は？&lt;/li&gt;
&lt;li&gt;NewSQLのレプリケーションはどうやるか？&lt;/li&gt;
&lt;li&gt;Raftとは？&lt;/li&gt;
&lt;li&gt;DBにおけるShardingとは何か？&lt;/li&gt;
&lt;li&gt;Partioningとは何か？&lt;/li&gt;
&lt;li&gt;RDBのデータ構造は何を利用しているか？&lt;/li&gt;
&lt;li&gt;B+TreeのRead/Writeはどうやるか？&lt;/li&gt;
&lt;li&gt;B+Treeの計算量は？&lt;/li&gt;
&lt;li&gt;NewSQLのデータ構造は？&lt;/li&gt;
&lt;li&gt;LSM Tree(Log Structured Merge Tree)とは？&lt;/li&gt;
&lt;li&gt;B+Treeのメリット・デメリット&lt;/li&gt;
&lt;li&gt;LSM Treeのメリット・デメリット&lt;/li&gt;
&lt;li&gt;DBに難しいのは古いバージョンのデータを取るとき&lt;/li&gt;
&lt;li&gt;MVCC(Multi Version Concurrency Control)とは？&lt;/li&gt;
&lt;li&gt;LSM Treeで古いデータをどうやって探すのか？&lt;/li&gt;
&lt;li&gt;Bloom Filter&lt;/li&gt;
&lt;li&gt;Facebook製のRocksDB&lt;/li&gt;
&lt;li&gt;分散トランザクションをどう実現するのか？&lt;/li&gt;
&lt;li&gt;DBにおける分離レベルとは？&lt;/li&gt;
&lt;li&gt;Read Commited/Repeatable Read/Serializable&lt;/li&gt;
&lt;li&gt;SpannerのExternal Consistency&lt;/li&gt;
&lt;li&gt;AWS Auroraの裏側の作りは？&lt;/li&gt;
&lt;li&gt;OracleのRAC(Real Application Cluster)とは？&lt;/li&gt;
&lt;li&gt;令和時代のアプリケーション開発者のデータストア選定について&lt;/li&gt;
&lt;li&gt;MySQLとPostgrSQLの使い分けは？&lt;/li&gt;
&lt;li&gt;どうやってDBについて学習するか？&lt;/li&gt;
&lt;li&gt;CAPの定理をあえて使う必要はない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://databaseinternals.connpass.com/" target="_blank"&gt;Database Internals 輪読会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>2000年初頭のデータストアは何が主流だったのか？</li>
<li>OLTPとDWH</li>
<li>データベースから見るとReadのスケールアウトは難しくない</li>
<li>Web系で難しいのはWriteのスケールアウト</li>
<li>RDBのReadのスケールアウト方法とは？</li>
<li>Web + RDB + Cache のアーキテクチャの辛い点は？</li>
<li>UniverseとMultiverse</li>
<li>Oracle Exadata</li>
<li>RDBにおける全文検索</li>
<li>NewSQLとは何か？</li>
<li>NoSQLとは何を指すか？</li>
<li>トランザクション処理はなぜ難しいのか？</li>
<li>マルチマスタの難しさ</li>
<li>Google Cloud Spannerについて</li>
<li>金の弾丸</li>
<li>YugabyteDB/CockroachDB/TiDB</li>
<li>YugabyteDBの特徴は？</li>
<li>PostgreSQL互換とMySQL互換という売り</li>
<li>NewSQLの技術要素は？</li>
<li>NewSQLのレプリケーションはどうやるか？</li>
<li>Raftとは？</li>
<li>DBにおけるShardingとは何か？</li>
<li>Partioningとは何か？</li>
<li>RDBのデータ構造は何を利用しているか？</li>
<li>B+TreeのRead/Writeはどうやるか？</li>
<li>B+Treeの計算量は？</li>
<li>NewSQLのデータ構造は？</li>
<li>LSM Tree(Log Structured Merge Tree)とは？</li>
<li>B+Treeのメリット・デメリット</li>
<li>LSM Treeのメリット・デメリット</li>
<li>DBに難しいのは古いバージョンのデータを取るとき</li>
<li>MVCC(Multi Version Concurrency Control)とは？</li>
<li>LSM Treeで古いデータをどうやって探すのか？</li>
<li>Bloom Filter</li>
<li>Facebook製のRocksDB</li>
<li>分散トランザクションをどう実現するのか？</li>
<li>DBにおける分離レベルとは？</li>
<li>Read Commited/Repeatable Read/Serializable</li>
<li>SpannerのExternal Consistency</li>
<li>AWS Auroraの裏側の作りは？</li>
<li>OracleのRAC(Real Application Cluster)とは？</li>
<li>令和時代のアプリケーション開発者のデータストア選定について</li>
<li>MySQLとPostgrSQLの使い分けは？</li>
<li>どうやってDBについて学習するか？</li>
<li>CAPの定理をあえて使う必要はない</li>
<li><a href="https://databaseinternals.connpass.com/" target="_blank">Database Internals 輪読会</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/34</guid>
      <pubDate>Thu, 02 Jul 2020 09:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:59:21</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/70ddda07-0edd-4232-ac23-89d44fb59514.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="56977449"/>
    </item>
    <item>
      <title>33. エンジニアの新卒採用事情 w/ tomoaki_mura</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>最近の新卒採用事情ってどんな感じ？</li>
<li>B3/M1であっても、5月時点でオファーを持っていることも</li>
<li>優秀な人材の低学年化</li>
<li>サマーインターンシップは増えている？</li>
<li>インターンシップで学生に刺さるコンテンツとは？</li>
<li>チーム開発形式のインターンシップが人気な理由とは？</li>
<li>ペアプロ、モブプロというコンテンツ</li>
<li><a href="https://athletix.run/events/bFPaKSbCE" target="_blank">先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験</a></li>
<li>スタートアップ、大企業などで、どこが人気か？</li>
<li>職種別選考とは何か？メリット・デメリットは？</li>
<li>人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？</li>
<li>エンジニアの開発実態・KPTを見に行くプラクティス</li>
<li>最初の「なんだこいつ」の違和感を乗り越える</li>
<li>職種別選考を進める上で、重要なポイントとは？</li>
<li>経営戦略から採用戦略まで一気通貫で筋をとおす</li>
<li>立場関係なくお互いを信じ合う</li>
<li>配属ガチャは依然としてまだ結構ある？なぜ起きるのか？</li>
<li>採用と育成をやる人は同じの方がいい？</li>
<li>効果的な新入社員研修とは？</li>
<li>能力を可視化した上で、グルーピングする</li>
<li>グループ分けしたあとの研修コンテンツは？</li>
<li>入社した後のケアとしての新入社員研修</li>
<li><a href="https://givery.co.jp/services/track/" target="_blank">track</a></li>
<li><a href="https://givery.co.jp/services/athletics/" target="_blank">athletics</a></li>
<li><a href="https://hatenacorp.jp/intern2020" target="_blank">はてなインターン2020</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>33. エンジニアの新卒採用事情 w/ tomoaki_mura</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;最近の新卒採用事情ってどんな感じ？&lt;/li&gt;
&lt;li&gt;B3/M1であっても、5月時点でオファーを持っていることも&lt;/li&gt;
&lt;li&gt;優秀な人材の低学年化&lt;/li&gt;
&lt;li&gt;サマーインターンシップは増えている？&lt;/li&gt;
&lt;li&gt;インターンシップで学生に刺さるコンテンツとは？&lt;/li&gt;
&lt;li&gt;チーム開発形式のインターンシップが人気な理由とは？&lt;/li&gt;
&lt;li&gt;ペアプロ、モブプロというコンテンツ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://athletix.run/events/bFPaKSbCE" target="_blank"&gt;先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スタートアップ、大企業などで、どこが人気か？&lt;/li&gt;
&lt;li&gt;職種別選考とは何か？メリット・デメリットは？&lt;/li&gt;
&lt;li&gt;人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？&lt;/li&gt;
&lt;li&gt;エンジニアの開発実態・KPTを見に行くプラクティス&lt;/li&gt;
&lt;li&gt;最初の「なんだこいつ」の違和感を乗り越える&lt;/li&gt;
&lt;li&gt;職種別選考を進める上で、重要なポイントとは？&lt;/li&gt;
&lt;li&gt;経営戦略から採用戦略まで一気通貫で筋をとおす&lt;/li&gt;
&lt;li&gt;立場関係なくお互いを信じ合う&lt;/li&gt;
&lt;li&gt;配属ガチャは依然としてまだ結構ある？なぜ起きるのか？&lt;/li&gt;
&lt;li&gt;採用と育成をやる人は同じの方がいい？&lt;/li&gt;
&lt;li&gt;効果的な新入社員研修とは？&lt;/li&gt;
&lt;li&gt;能力を可視化した上で、グルーピングする&lt;/li&gt;
&lt;li&gt;グループ分けしたあとの研修コンテンツは？&lt;/li&gt;
&lt;li&gt;入社した後のケアとしての新入社員研修&lt;/li&gt;
&lt;li&gt;&lt;a href="https://givery.co.jp/services/track/" target="_blank"&gt;track&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://givery.co.jp/services/athletics/" target="_blank"&gt;athletics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hatenacorp.jp/intern2020" target="_blank"&gt;はてなインターン2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>最近の新卒採用事情ってどんな感じ？</li>
<li>B3/M1であっても、5月時点でオファーを持っていることも</li>
<li>優秀な人材の低学年化</li>
<li>サマーインターンシップは増えている？</li>
<li>インターンシップで学生に刺さるコンテンツとは？</li>
<li>チーム開発形式のインターンシップが人気な理由とは？</li>
<li>ペアプロ、モブプロというコンテンツ</li>
<li><a href="https://athletix.run/events/bFPaKSbCE" target="_blank">先端の技術開発を担うエンジニアと一緒に解く！ コーディング体験</a></li>
<li>スタートアップ、大企業などで、どこが人気か？</li>
<li>職種別選考とは何か？メリット・デメリットは？</li>
<li>人事にも最低限の業務理解・技術的な知識が必要だが、どこまで知れば良いのか？</li>
<li>エンジニアの開発実態・KPTを見に行くプラクティス</li>
<li>最初の「なんだこいつ」の違和感を乗り越える</li>
<li>職種別選考を進める上で、重要なポイントとは？</li>
<li>経営戦略から採用戦略まで一気通貫で筋をとおす</li>
<li>立場関係なくお互いを信じ合う</li>
<li>配属ガチャは依然としてまだ結構ある？なぜ起きるのか？</li>
<li>採用と育成をやる人は同じの方がいい？</li>
<li>効果的な新入社員研修とは？</li>
<li>能力を可視化した上で、グルーピングする</li>
<li>グループ分けしたあとの研修コンテンツは？</li>
<li>入社した後のケアとしての新入社員研修</li>
<li><a href="https://givery.co.jp/services/track/" target="_blank">track</a></li>
<li><a href="https://givery.co.jp/services/athletics/" target="_blank">athletics</a></li>
<li><a href="https://hatenacorp.jp/intern2020" target="_blank">はてなインターン2020</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/33</guid>
      <pubDate>Sun, 07 Jun 2020 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:48:00</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/7176962b-7b64-49c3-afca-43c15e6de740.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="46083761"/>
    </item>
    <item>
      <title>32. みんなでアジャイル w/ ryuzee</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.oreilly.co.jp/books/9784873119090/" target="_blank">みんなでアジャイル</a></li>
<li>想定読者は？</li>
<li>アジャイルはなぜ重要なのか？</li>
<li>書籍を通して伝えているのは、顧客に価値を届けること</li>
<li>説教臭い</li>
<li>プラクティスよりも、前段にあるなぜアジャイルなのか、から始める</li>
<li>たくさん作るのではなく、成果を出しにいく</li>
<li>サクッと読めるわりにグサグサやる</li>
<li>自分たちの北極星とは何か？</li>
<li>自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない</li>
<li>北極星を見つけるためには、どうすればいいのか？</li>
<li>どのぐらいのレイヤ、スコープで北極星を探せばいいのか？</li>
<li>経営方針とチームミッションが一致していると周りの支援が得やすい</li>
<li>OKRという考え方</li>
<li><a href="https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit" target="_blank">みんなでアジャイル Playbook</a></li>
<li>オンラインでのチームビルディングはどうしたら良いか？</li>
<li><a href="https://simplearchitect.hatenablog.com/entry/2020/04/15/100449" target="_blank">マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント</a></li>
<li>やっているのを見せるのが大事</li>
<li>分報から始まるQuick Call</li>
<li>制約があったほうが工夫、アイデアが生まれる</li>
<li>上手くいってないからフレームワークを探そうはダメ</li>
<li>アジャイルについて話すだけで、アジャイルになった気になる</li>
<li><a href="https://twitter.com/ryuzee/status/1250547829702930434" target="_blank">必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう</a></li>
<li>組織重力の3法則</li>
<li>第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける</li>
<li>なぜ、第1法則が生まれるのか？</li>
<li>第1法則からはどうすれば脱却できるか？</li>
<li>顧客から一番離れている人が意思決定していて良いのか？</li>
<li>社員全員がカスタマサポートのチャットに入る</li>
<li>第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する</li>
<li>チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある</li>
<li>第2法則からはどうすれば脱却できるか？</li>
<li>今やっている仕事を見える化する、仕事をオープンにする</li>
<li>早期から頻繁にコラボレーションするには楽なやり方が必要</li>
<li>そもそもコラボレーションしたいものを扱ってるのか？</li>
<li>なぜ顧客の声を早期に聴きに行くのが難しいのか？</li>
<li>第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない</li>
<li>なぜ第3法則が生まれるのか？</li>
<li>目標設定と評価が関係している</li>
<li>第3法則からはどうすれば脱却できるか？</li>
<li>スタート地点からどんなリスクがあるのか明らかにする</li>
<li>不確実性を計画に組み込む</li>
<li>進捗レポートで「問題ありません」というのはダメ</li>
<li>紙のレポートは残るので、安全に倒してしまう</li>
<li>タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる</li>
<li>組織変革の熱狂は長くても6ヶ月しか持たない</li>
<li>ryuzeeさんが訳していて、書籍の一番好きなところは何か？</li>
<li>アジャイル系開発手法は応用範囲が広い</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>32. みんなでアジャイル w/ ryuzee</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873119090/" target="_blank"&gt;みんなでアジャイル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;想定読者は？&lt;/li&gt;
&lt;li&gt;アジャイルはなぜ重要なのか？&lt;/li&gt;
&lt;li&gt;書籍を通して伝えているのは、顧客に価値を届けること&lt;/li&gt;
&lt;li&gt;説教臭い&lt;/li&gt;
&lt;li&gt;プラクティスよりも、前段にあるなぜアジャイルなのか、から始める&lt;/li&gt;
&lt;li&gt;たくさん作るのではなく、成果を出しにいく&lt;/li&gt;
&lt;li&gt;サクッと読めるわりにグサグサやる&lt;/li&gt;
&lt;li&gt;自分たちの北極星とは何か？&lt;/li&gt;
&lt;li&gt;自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない&lt;/li&gt;
&lt;li&gt;北極星を見つけるためには、どうすればいいのか？&lt;/li&gt;
&lt;li&gt;どのぐらいのレイヤ、スコープで北極星を探せばいいのか？&lt;/li&gt;
&lt;li&gt;経営方針とチームミッションが一致していると周りの支援が得やすい&lt;/li&gt;
&lt;li&gt;OKRという考え方&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit" target="_blank"&gt;みんなでアジャイル Playbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;オンラインでのチームビルディングはどうしたら良いか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://simplearchitect.hatenablog.com/entry/2020/04/15/100449" target="_blank"&gt;マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;やっているのを見せるのが大事&lt;/li&gt;
&lt;li&gt;分報から始まるQuick Call&lt;/li&gt;
&lt;li&gt;制約があったほうが工夫、アイデアが生まれる&lt;/li&gt;
&lt;li&gt;上手くいってないからフレームワークを探そうはダメ&lt;/li&gt;
&lt;li&gt;アジャイルについて話すだけで、アジャイルになった気になる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ryuzee/status/1250547829702930434" target="_blank"&gt;必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;組織重力の3法則&lt;/li&gt;
&lt;li&gt;第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける&lt;/li&gt;
&lt;li&gt;なぜ、第1法則が生まれるのか？&lt;/li&gt;
&lt;li&gt;第1法則からはどうすれば脱却できるか？&lt;/li&gt;
&lt;li&gt;顧客から一番離れている人が意思決定していて良いのか？&lt;/li&gt;
&lt;li&gt;社員全員がカスタマサポートのチャットに入る&lt;/li&gt;
&lt;li&gt;第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する&lt;/li&gt;
&lt;li&gt;チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある&lt;/li&gt;
&lt;li&gt;第2法則からはどうすれば脱却できるか？&lt;/li&gt;
&lt;li&gt;今やっている仕事を見える化する、仕事をオープンにする&lt;/li&gt;
&lt;li&gt;早期から頻繁にコラボレーションするには楽なやり方が必要&lt;/li&gt;
&lt;li&gt;そもそもコラボレーションしたいものを扱ってるのか？&lt;/li&gt;
&lt;li&gt;なぜ顧客の声を早期に聴きに行くのが難しいのか？&lt;/li&gt;
&lt;li&gt;第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない&lt;/li&gt;
&lt;li&gt;なぜ第3法則が生まれるのか？&lt;/li&gt;
&lt;li&gt;目標設定と評価が関係している&lt;/li&gt;
&lt;li&gt;第3法則からはどうすれば脱却できるか？&lt;/li&gt;
&lt;li&gt;スタート地点からどんなリスクがあるのか明らかにする&lt;/li&gt;
&lt;li&gt;不確実性を計画に組み込む&lt;/li&gt;
&lt;li&gt;進捗レポートで「問題ありません」というのはダメ&lt;/li&gt;
&lt;li&gt;紙のレポートは残るので、安全に倒してしまう&lt;/li&gt;
&lt;li&gt;タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる&lt;/li&gt;
&lt;li&gt;組織変革の熱狂は長くても6ヶ月しか持たない&lt;/li&gt;
&lt;li&gt;ryuzeeさんが訳していて、書籍の一番好きなところは何か？&lt;/li&gt;
&lt;li&gt;アジャイル系開発手法は応用範囲が広い&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.oreilly.co.jp/books/9784873119090/" target="_blank">みんなでアジャイル</a></li>
<li>想定読者は？</li>
<li>アジャイルはなぜ重要なのか？</li>
<li>書籍を通して伝えているのは、顧客に価値を届けること</li>
<li>説教臭い</li>
<li>プラクティスよりも、前段にあるなぜアジャイルなのか、から始める</li>
<li>たくさん作るのではなく、成果を出しにいく</li>
<li>サクッと読めるわりにグサグサやる</li>
<li>自分たちの北極星とは何か？</li>
<li>自分たちのなりたい姿が実現できれば、アジャイルなやり方である必要はない</li>
<li>北極星を見つけるためには、どうすればいいのか？</li>
<li>どのぐらいのレイヤ、スコープで北極星を探せばいいのか？</li>
<li>経営方針とチームミッションが一致していると周りの支援が得やすい</li>
<li>OKRという考え方</li>
<li><a href="https://docs.google.com/document/d/1gK4AzykG3YAVlU_pcr81Ao-7SPmej9j4of56-sQz9D4/edit" target="_blank">みんなでアジャイル Playbook</a></li>
<li>オンラインでのチームビルディングはどうしたら良いか？</li>
<li><a href="https://simplearchitect.hatenablog.com/entry/2020/04/15/100449" target="_blank">マイクロソフトのリモートワークが得意な人を観察して気づいた、たった一つのポイント</a></li>
<li>やっているのを見せるのが大事</li>
<li>分報から始まるQuick Call</li>
<li>制約があったほうが工夫、アイデアが生まれる</li>
<li>上手くいってないからフレームワークを探そうはダメ</li>
<li>アジャイルについて話すだけで、アジャイルになった気になる</li>
<li><a href="https://twitter.com/ryuzee/status/1250547829702930434" target="_blank">必然的に中身の理解は深まるのだけど、何度も読んでいるので、本の作業をする以前から自分も同じ考えだった気になってしまう</a></li>
<li>組織重力の3法則</li>
<li>第1法則: 組織に属する個人は、日々の責任やインセンティブと整合性がなければ、顧客と向き合う仕事を避ける</li>
<li>なぜ、第1法則が生まれるのか？</li>
<li>第1法則からはどうすれば脱却できるか？</li>
<li>顧客から一番離れている人が意思決定していて良いのか？</li>
<li>社員全員がカスタマサポートのチャットに入る</li>
<li>第2法則: 組織における個人は、自分のチームやサイロの心地よさのなかでいちばん簡単に完了できる作業を優先する</li>
<li>チームの外と仕事をすると、仕事がぐちゃぐちゃにある恐怖がある</li>
<li>第2法則からはどうすれば脱却できるか？</li>
<li>今やっている仕事を見える化する、仕事をオープンにする</li>
<li>早期から頻繁にコラボレーションするには楽なやり方が必要</li>
<li>そもそもコラボレーションしたいものを扱ってるのか？</li>
<li>なぜ顧客の声を早期に聴きに行くのが難しいのか？</li>
<li>第3法則: 進行中のプロジェクトは、それを承認したいちばん上の人が止めない限り、止まることはない</li>
<li>なぜ第3法則が生まれるのか？</li>
<li>目標設定と評価が関係している</li>
<li>第3法則からはどうすれば脱却できるか？</li>
<li>スタート地点からどんなリスクがあるのか明らかにする</li>
<li>不確実性を計画に組み込む</li>
<li>進捗レポートで「問題ありません」というのはダメ</li>
<li>紙のレポートは残るので、安全に倒してしまう</li>
<li>タイムボックスで区切ることで、実験もできるし、リスクを早く検知できる</li>
<li>組織変革の熱狂は長くても6ヶ月しか持たない</li>
<li>ryuzeeさんが訳していて、書籍の一番好きなところは何か？</li>
<li>アジャイル系開発手法は応用範囲が広い</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/32</guid>
      <pubDate>Tue, 05 May 2020 04:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:49:48</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/c5a068a6-ffb6-466d-b6de-8416aea8fcd6.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="47814112"/>
    </item>
    <item>
      <title>31. fukabori.fmのロゴ作成から学ぶデザイナーの業務プロセス w/ hiromisugie</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://note.com/hiromisugie/n/n4f586af50513" target="_blank">エンジニア向けPodcast 「fukabori.fm」のロゴデザイン</a></li>
<li>どのようなプロセスでロゴを作成するのか？</li>
<li>対象の理解では、何をするのか？</li>
<li>ヒアリングは何のためにするのか？</li>
<li>周辺の理解、リサーチでは何をするのか？</li>
<li>競合リサーチ、市場リサーチとは？</li>
<li>fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？</li>
<li>見えやすさの5性質とは？</li>
<li>誘目性、視認性、明視性、可読性、識別性とは？</li>
<li>行間をどのような目安で決めるのか？</li>
<li>noteの記事は、なぜ行間が広いのか？</li>
<li>ユニバーサルデザイン</li>
<li>デザインコンセプトの検討、ラフスイッチとは？</li>
<li>デザインコンセプトとはそもそも何か？</li>
<li>ロゴ作成のおけるプロトタイプ作成はどう進めるのか？</li>
<li>ロゴの似たもの調査はどうやるのか？</li>
<li>シンプルなロゴは非常にかぶりやすいのでは？</li>
<li>似てる・似てないの判断とは？</li>
<li>東京オリンピックのロゴ類似問題</li>
<li>シンガポールのティラミスヒーロー</li>
<li>最後の作り込み、ブラッシュアップは何をしていくのか？</li>
<li>ロゴにおける大文字と小文字の意味</li>
<li>どのように色を決めるのか？</li>
<li>デザイナーは安直にパターンを作ってはいけない</li>
<li>訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです</li>
<li>オススメ書籍名: ノンデザイナーズ・デザインブック</li>
<li>オススメ書籍名: マンガでわかる色のおもしろ心理学</li>
<li>オススメ書籍名: 7日間でマスターする 配色基礎講座</li>
<li>オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング</li>
<li>オススメ書籍名: 欧文書体 その背景と使い方</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>31. fukabori.fmのロゴ作成から学ぶデザイナーの業務プロセス w/ hiromisugie</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://note.com/hiromisugie/n/n4f586af50513" target="_blank"&gt;エンジニア向けPodcast 「fukabori.fm」のロゴデザイン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;どのようなプロセスでロゴを作成するのか？&lt;/li&gt;
&lt;li&gt;対象の理解では、何をするのか？&lt;/li&gt;
&lt;li&gt;ヒアリングは何のためにするのか？&lt;/li&gt;
&lt;li&gt;周辺の理解、リサーチでは何をするのか？&lt;/li&gt;
&lt;li&gt;競合リサーチ、市場リサーチとは？&lt;/li&gt;
&lt;li&gt;fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？&lt;/li&gt;
&lt;li&gt;見えやすさの5性質とは？&lt;/li&gt;
&lt;li&gt;誘目性、視認性、明視性、可読性、識別性とは？&lt;/li&gt;
&lt;li&gt;行間をどのような目安で決めるのか？&lt;/li&gt;
&lt;li&gt;noteの記事は、なぜ行間が広いのか？&lt;/li&gt;
&lt;li&gt;ユニバーサルデザイン&lt;/li&gt;
&lt;li&gt;デザインコンセプトの検討、ラフスイッチとは？&lt;/li&gt;
&lt;li&gt;デザインコンセプトとはそもそも何か？&lt;/li&gt;
&lt;li&gt;ロゴ作成のおけるプロトタイプ作成はどう進めるのか？&lt;/li&gt;
&lt;li&gt;ロゴの似たもの調査はどうやるのか？&lt;/li&gt;
&lt;li&gt;シンプルなロゴは非常にかぶりやすいのでは？&lt;/li&gt;
&lt;li&gt;似てる・似てないの判断とは？&lt;/li&gt;
&lt;li&gt;東京オリンピックのロゴ類似問題&lt;/li&gt;
&lt;li&gt;シンガポールのティラミスヒーロー&lt;/li&gt;
&lt;li&gt;最後の作り込み、ブラッシュアップは何をしていくのか？&lt;/li&gt;
&lt;li&gt;ロゴにおける大文字と小文字の意味&lt;/li&gt;
&lt;li&gt;どのように色を決めるのか？&lt;/li&gt;
&lt;li&gt;デザイナーは安直にパターンを作ってはいけない&lt;/li&gt;
&lt;li&gt;訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです&lt;/li&gt;
&lt;li&gt;オススメ書籍名: ノンデザイナーズ・デザインブック&lt;/li&gt;
&lt;li&gt;オススメ書籍名: マンガでわかる色のおもしろ心理学&lt;/li&gt;
&lt;li&gt;オススメ書籍名: 7日間でマスターする 配色基礎講座&lt;/li&gt;
&lt;li&gt;オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング&lt;/li&gt;
&lt;li&gt;オススメ書籍名: 欧文書体 その背景と使い方&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://note.com/hiromisugie/n/n4f586af50513" target="_blank">エンジニア向けPodcast 「fukabori.fm」のロゴデザイン</a></li>
<li>どのようなプロセスでロゴを作成するのか？</li>
<li>対象の理解では、何をするのか？</li>
<li>ヒアリングは何のためにするのか？</li>
<li>周辺の理解、リサーチでは何をするのか？</li>
<li>競合リサーチ、市場リサーチとは？</li>
<li>fukabori.fmロゴ作成における、周辺の理解とは具体的に何をやるのか？</li>
<li>見えやすさの5性質とは？</li>
<li>誘目性、視認性、明視性、可読性、識別性とは？</li>
<li>行間をどのような目安で決めるのか？</li>
<li>noteの記事は、なぜ行間が広いのか？</li>
<li>ユニバーサルデザイン</li>
<li>デザインコンセプトの検討、ラフスイッチとは？</li>
<li>デザインコンセプトとはそもそも何か？</li>
<li>ロゴ作成のおけるプロトタイプ作成はどう進めるのか？</li>
<li>ロゴの似たもの調査はどうやるのか？</li>
<li>シンプルなロゴは非常にかぶりやすいのでは？</li>
<li>似てる・似てないの判断とは？</li>
<li>東京オリンピックのロゴ類似問題</li>
<li>シンガポールのティラミスヒーロー</li>
<li>最後の作り込み、ブラッシュアップは何をしていくのか？</li>
<li>ロゴにおける大文字と小文字の意味</li>
<li>どのように色を決めるのか？</li>
<li>デザイナーは安直にパターンを作ってはいけない</li>
<li>訂正 54:10あたり: 高輪ゲートウェイの話題にて「誘目性は低いけど可読性が低い」ではなく「誘目性は低いけど可読性が高い」が正しいです</li>
<li>オススメ書籍名: ノンデザイナーズ・デザインブック</li>
<li>オススメ書籍名: マンガでわかる色のおもしろ心理学</li>
<li>オススメ書籍名: 7日間でマスターする 配色基礎講座</li>
<li>オススメ書籍名: ロゴデザインの現場 事例で学ぶデザイン技法としてのブランディング</li>
<li>オススメ書籍名: 欧文書体 その背景と使い方</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/31</guid>
      <pubDate>Mon, 27 Apr 2020 12:50:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:01:19</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/fa857ed7-bd32-414a-aeaa-489b42abaf6f.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="58868297"/>
    </item>
    <item>
      <title>30. Cloud Native Data Center Networking w/ toby</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？</li>
<li>Aggregation Switchと、Access Switchの分割している理由は？</li>
<li>サーバとAccess Switchは、Ethernetでつないでいる？</li>
<li>Access Switchや、Aggregation Swtichの冗長化はどうするか？</li>
<li>トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？</li>
<li>STP(Spanning Tree Protocol)とBroadcast Storm</li>
<li>なぜ、このアーキテクチャが全盛だったのか？</li>
<li>従来のネットワーキングは、何が問題になるのか？</li>
<li>L2にTTL(Time To Live)は存在する？</li>
<li>検証で上手くいっていても、系の切り替え時はドキドキする</li>
<li>Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？</li>
<li>North South / East West トラフィック</li>
<li><a href="https://fukabori.fm/episode/11" target="_blank">11. dockerネットワーキングとか、kubernetesネットワーキングとか</a></li>
<li>CLOS Topologyとは？</li>
<li><a href="http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html" target="_blank">クロスバースイッチ</a></li>
<li>現代のDCで使うCLOSは、具体的にどういう構成になるのか？</li>
<li>CLOSはどういう特徴があるのか？</li>
<li>Leaf SwitchとSpine Switchとは？</li>
<li>なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？</li>
<li>ユーザがL2を使いたい場合はどうするのか？</li>
<li>CLOS上の構成では、トラフィックはACT/ACTか？</li>
<li>ECMPと、5 tuple flow</li>
<li>CLOSのスケール限界はあるのか？</li>
<li>CLOSにおけるフラクタル</li>
<li>NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？</li>
<li>なぜ、Storage Planeと、Data Planeを分けているのか？</li>
<li>Leafの冗長化はどのように実現しているのか？</li>
<li>運用上で大変なところは何か？これからどうしていきたいか？</li>
<li>リンクの自動化試験、LLDP(Link Layer Discovery Protocol)</li>
<li>ソフトウェアのやり方でネットワークを変えていきたい人を募集中</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>30. Cloud Native Data Center Networking w/ toby</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？&lt;/li&gt;
&lt;li&gt;Aggregation Switchと、Access Switchの分割している理由は？&lt;/li&gt;
&lt;li&gt;サーバとAccess Switchは、Ethernetでつないでいる？&lt;/li&gt;
&lt;li&gt;Access Switchや、Aggregation Swtichの冗長化はどうするか？&lt;/li&gt;
&lt;li&gt;トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？&lt;/li&gt;
&lt;li&gt;STP(Spanning Tree Protocol)とBroadcast Storm&lt;/li&gt;
&lt;li&gt;なぜ、このアーキテクチャが全盛だったのか？&lt;/li&gt;
&lt;li&gt;従来のネットワーキングは、何が問題になるのか？&lt;/li&gt;
&lt;li&gt;L2にTTL(Time To Live)は存在する？&lt;/li&gt;
&lt;li&gt;検証で上手くいっていても、系の切り替え時はドキドキする&lt;/li&gt;
&lt;li&gt;Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？&lt;/li&gt;
&lt;li&gt;North South / East West トラフィック&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/11" target="_blank"&gt;11. dockerネットワーキングとか、kubernetesネットワーキングとか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CLOS Topologyとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html" target="_blank"&gt;クロスバースイッチ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;現代のDCで使うCLOSは、具体的にどういう構成になるのか？&lt;/li&gt;
&lt;li&gt;CLOSはどういう特徴があるのか？&lt;/li&gt;
&lt;li&gt;Leaf SwitchとSpine Switchとは？&lt;/li&gt;
&lt;li&gt;なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？&lt;/li&gt;
&lt;li&gt;ユーザがL2を使いたい場合はどうするのか？&lt;/li&gt;
&lt;li&gt;CLOS上の構成では、トラフィックはACT/ACTか？&lt;/li&gt;
&lt;li&gt;ECMPと、5 tuple flow&lt;/li&gt;
&lt;li&gt;CLOSのスケール限界はあるのか？&lt;/li&gt;
&lt;li&gt;CLOSにおけるフラクタル&lt;/li&gt;
&lt;li&gt;NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？&lt;/li&gt;
&lt;li&gt;なぜ、Storage Planeと、Data Planeを分けているのか？&lt;/li&gt;
&lt;li&gt;Leafの冗長化はどのように実現しているのか？&lt;/li&gt;
&lt;li&gt;運用上で大変なところは何か？これからどうしていきたいか？&lt;/li&gt;
&lt;li&gt;リンクの自動化試験、LLDP(Link Layer Discovery Protocol)&lt;/li&gt;
&lt;li&gt;ソフトウェアのやり方でネットワークを変えていきたい人を募集中&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>そもそも従来のデータセンタのネットワーキングはどのようなものだったのか？</li>
<li>Aggregation Switchと、Access Switchの分割している理由は？</li>
<li>サーバとAccess Switchは、Ethernetでつないでいる？</li>
<li>Access Switchや、Aggregation Swtichの冗長化はどうするか？</li>
<li>トラフィックは、ACT/ACT or ACT/SBY でどう流れているのか？</li>
<li>STP(Spanning Tree Protocol)とBroadcast Storm</li>
<li>なぜ、このアーキテクチャが全盛だったのか？</li>
<li>従来のネットワーキングは、何が問題になるのか？</li>
<li>L2にTTL(Time To Live)は存在する？</li>
<li>検証で上手くいっていても、系の切り替え時はドキドキする</li>
<li>Cloud Native Data Center Networkingとは？なぜ必要となってきたのか？</li>
<li>North South / East West トラフィック</li>
<li><a href="https://fukabori.fm/episode/11" target="_blank">11. dockerネットワーキングとか、kubernetesネットワーキングとか</a></li>
<li>CLOS Topologyとは？</li>
<li><a href="http://www.hct.ecl.ntt.co.jp/digitalarchives/11.html" target="_blank">クロスバースイッチ</a></li>
<li>現代のDCで使うCLOSは、具体的にどういう構成になるのか？</li>
<li>CLOSはどういう特徴があるのか？</li>
<li>Leaf SwitchとSpine Switchとは？</li>
<li>なぜ、L3プロトコルを使うのか？どこにモチベーションがあるのか？</li>
<li>ユーザがL2を使いたい場合はどうするのか？</li>
<li>CLOS上の構成では、トラフィックはACT/ACTか？</li>
<li>ECMPと、5 tuple flow</li>
<li>CLOSのスケール限界はあるのか？</li>
<li>CLOSにおけるフラクタル</li>
<li>NTT Comのクラウド(Enterprise Cloud 2.0)は設計はどうなってるの？</li>
<li>なぜ、Storage Planeと、Data Planeを分けているのか？</li>
<li>Leafの冗長化はどのように実現しているのか？</li>
<li>運用上で大変なところは何か？これからどうしていきたいか？</li>
<li>リンクの自動化試験、LLDP(Link Layer Discovery Protocol)</li>
<li>ソフトウェアのやり方でネットワークを変えていきたい人を募集中</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/30</guid>
      <pubDate>Sat, 04 Apr 2020 23:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:43:30</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/33149597-4ab1-43c9-afe1-8be2014ee20a.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="41775020"/>
    </item>
    <item>
      <title>29. 技術選定の審美眼(2) w/ twada</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition" target="_blank">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>
<li>集中と分散</li>
<li>Good Old Webとは何か？</li>
<li><a href="https://gihyo.jp/book/2006/4-7741-2687-X" target="_blank">改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）</a></li>
<li>Linux, Apache, PostgreSQL, PHP</li>
<li>2層アーキテクチャから3層アーキテクチャへ</li>
<li>
<a href="https://ja.wikipedia.org/wiki/Enterprise_JavaBeans" target="_blank">EJB(Enterprise Java Beans)</a>とは？</li>
<li>SOAP(Simple Object Access Protocol)とは？</li>
<li>なぜEJBやSOAPが生まれてきたのか？</li>
<li>言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3" target="_blank">SOA(Service-Oriented Architecture)とは？</a></li>
<li><a href="http://e-words.jp/w/ESB.html" target="_blank">Enterprise Service Bus</a></li>
<li>XMLによる設定とマッピングが多い時代だった</li>
<li>XMLエンジニアとYAMLエンジニア</li>
<li>Ruby on Railsの登場へ</li>
<li><a href="https://www.youtube.com/watch?v=Gzj723LkRJY" target="_blank">How to build a blog engine in 15 minutes with Ruby on Rails</a></li>
<li>設定より規約(Convention over Configuration)</li>
<li>システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に</li>
<li>Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？</li>
<li>
<a href="https://spring.io/" target="_blank">Spring</a>や<a href="https://www.seasar.org/en/" target="_blank">Seasar</a>
</li>
<li>POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？</li>
<li><a href="https://en.wikipedia.org/wiki/Delicious_(website)" target="_blank">Delicious</a></li>
<li>成功している分散している分散システム(Web)が身近にあった</li>
<li>分散システムの設計がRPCからWebベースへ</li>
<li>RESTとステートレス、Shared Nothing、スケールアウト</li>
<li>XMLじゃなくてJSONで十分だったという気づき</li>
<li>クラウドコンピューティングの時代へ</li>
<li>ムーアの法則と、スケールアップ戦略の限界</li>
<li>Dockerの登場と、コンテナ技術</li>
<li>冪等性の難しさ</li>
<li>巨大化したモノリスによる問題から、マイクロサービスへ</li>
<li>BFF(Backend For Frontend)</li>
<li>SOAとマイクロサービスの螺旋</li>
<li>DevOps、コンウェイの法則・逆コンウェイの法則</li>
<li>組織は戦略に従う、戦略は組織に従う</li>
<li>ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ</li>
<li><a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460" target="_blank">Why Software Is Eating The World / Marc Andreessen</a></li>
<li>Swagger、GraphQL、gRPCの共通点とは何か？</li>
<li>動的型付けから静的型付けへ</li>
<li>サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ</li>
<li>Cloud Nativeとサーバレスコンピューティング</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>29. 技術選定の審美眼(2) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition" target="_blank"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;集中と分散&lt;/li&gt;
&lt;li&gt;Good Old Webとは何か？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gihyo.jp/book/2006/4-7741-2687-X" target="_blank"&gt;改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Linux, Apache, PostgreSQL, PHP&lt;/li&gt;
&lt;li&gt;2層アーキテクチャから3層アーキテクチャへ&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ja.wikipedia.org/wiki/Enterprise_JavaBeans" target="_blank"&gt;EJB(Enterprise Java Beans)&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;SOAP(Simple Object Access Protocol)とは？&lt;/li&gt;
&lt;li&gt;なぜEJBやSOAPが生まれてきたのか？&lt;/li&gt;
&lt;li&gt;言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3" target="_blank"&gt;SOA(Service-Oriented Architecture)とは？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://e-words.jp/w/ESB.html" target="_blank"&gt;Enterprise Service Bus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;XMLによる設定とマッピングが多い時代だった&lt;/li&gt;
&lt;li&gt;XMLエンジニアとYAMLエンジニア&lt;/li&gt;
&lt;li&gt;Ruby on Railsの登場へ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gzj723LkRJY" target="_blank"&gt;How to build a blog engine in 15 minutes with Ruby on Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;設定より規約(Convention over Configuration)&lt;/li&gt;
&lt;li&gt;システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に&lt;/li&gt;
&lt;li&gt;Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://spring.io/" target="_blank"&gt;Spring&lt;/a&gt;や&lt;a href="https://www.seasar.org/en/" target="_blank"&gt;Seasar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Delicious_(website)" target="_blank"&gt;Delicious&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;成功している分散している分散システム(Web)が身近にあった&lt;/li&gt;
&lt;li&gt;分散システムの設計がRPCからWebベースへ&lt;/li&gt;
&lt;li&gt;RESTとステートレス、Shared Nothing、スケールアウト&lt;/li&gt;
&lt;li&gt;XMLじゃなくてJSONで十分だったという気づき&lt;/li&gt;
&lt;li&gt;クラウドコンピューティングの時代へ&lt;/li&gt;
&lt;li&gt;ムーアの法則と、スケールアップ戦略の限界&lt;/li&gt;
&lt;li&gt;Dockerの登場と、コンテナ技術&lt;/li&gt;
&lt;li&gt;冪等性の難しさ&lt;/li&gt;
&lt;li&gt;巨大化したモノリスによる問題から、マイクロサービスへ&lt;/li&gt;
&lt;li&gt;BFF(Backend For Frontend)&lt;/li&gt;
&lt;li&gt;SOAとマイクロサービスの螺旋&lt;/li&gt;
&lt;li&gt;DevOps、コンウェイの法則・逆コンウェイの法則&lt;/li&gt;
&lt;li&gt;組織は戦略に従う、戦略は組織に従う&lt;/li&gt;
&lt;li&gt;ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460" target="_blank"&gt;Why Software Is Eating The World / Marc Andreessen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Swagger、GraphQL、gRPCの共通点とは何か？&lt;/li&gt;
&lt;li&gt;動的型付けから静的型付けへ&lt;/li&gt;
&lt;li&gt;サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ&lt;/li&gt;
&lt;li&gt;Cloud Nativeとサーバレスコンピューティング&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition" target="_blank">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>
<li>集中と分散</li>
<li>Good Old Webとは何か？</li>
<li><a href="https://gihyo.jp/book/2006/4-7741-2687-X" target="_blank">改訂第5版 PC UNIXユーザのためのPostgreSQL完全攻略ガイド（シーラカンス本）</a></li>
<li>Linux, Apache, PostgreSQL, PHP</li>
<li>2層アーキテクチャから3層アーキテクチャへ</li>
<li>
<a href="https://ja.wikipedia.org/wiki/Enterprise_JavaBeans" target="_blank">EJB(Enterprise Java Beans)</a>とは？</li>
<li>SOAP(Simple Object Access Protocol)とは？</li>
<li>なぜEJBやSOAPが生まれてきたのか？</li>
<li>言語依存から言語非依存、ベンダ依存からベンダ非依存へという流れ</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%8C%87%E5%90%91%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3" target="_blank">SOA(Service-Oriented Architecture)とは？</a></li>
<li><a href="http://e-words.jp/w/ESB.html" target="_blank">Enterprise Service Bus</a></li>
<li>XMLによる設定とマッピングが多い時代だった</li>
<li>XMLエンジニアとYAMLエンジニア</li>
<li>Ruby on Railsの登場へ</li>
<li><a href="https://www.youtube.com/watch?v=Gzj723LkRJY" target="_blank">How to build a blog engine in 15 minutes with Ruby on Rails</a></li>
<li>設定より規約(Convention over Configuration)</li>
<li>システムを早く作って、市場に出してフィードバックサイクルを回すのが重要な時代が追い風に</li>
<li>Ruby on Rails全盛時代に、エンタープライズの世界で何が起きていたのか？</li>
<li>
<a href="https://spring.io/" target="_blank">Spring</a>や<a href="https://www.seasar.org/en/" target="_blank">Seasar</a>
</li>
<li>POX(Plain Old XML) over HTTPとは何か？どのような背景で生まれたのか？</li>
<li><a href="https://en.wikipedia.org/wiki/Delicious_(website)" target="_blank">Delicious</a></li>
<li>成功している分散している分散システム(Web)が身近にあった</li>
<li>分散システムの設計がRPCからWebベースへ</li>
<li>RESTとステートレス、Shared Nothing、スケールアウト</li>
<li>XMLじゃなくてJSONで十分だったという気づき</li>
<li>クラウドコンピューティングの時代へ</li>
<li>ムーアの法則と、スケールアップ戦略の限界</li>
<li>Dockerの登場と、コンテナ技術</li>
<li>冪等性の難しさ</li>
<li>巨大化したモノリスによる問題から、マイクロサービスへ</li>
<li>BFF(Backend For Frontend)</li>
<li>SOAとマイクロサービスの螺旋</li>
<li>DevOps、コンウェイの法則・逆コンウェイの法則</li>
<li>組織は戦略に従う、戦略は組織に従う</li>
<li>ソフトウェアがハードウェアのおまけだった時代から、事業そのものへ</li>
<li><a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460" target="_blank">Why Software Is Eating The World / Marc Andreessen</a></li>
<li>Swagger、GraphQL、gRPCの共通点とは何か？</li>
<li>動的型付けから静的型付けへ</li>
<li>サーバ主導でのAPI定義から、クライアント主導でのAPI定義へ</li>
<li>Cloud Nativeとサーバレスコンピューティング</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/29</guid>
      <pubDate>Sun, 22 Mar 2020 05:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:17:37</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/ed3d95a5-af0a-4ce5-b8e3-fd653e86aafc.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="74517106"/>
    </item>
    <item>
      <title>28. 技術選定の審美眼(1) w/ twada</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition" target="_blank">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>
<li>フロントエンド疲れとは？</li>
<li>大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう</li>
<li>Gruntとgulp.js、ReactとVue.js</li>
<li>イメージ的には選球眼</li>
<li>変わるもの、変わらないものを見極めるモチベーションは何か？</li>
<li>技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある</li>
<li>振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事</li>
<li>ベテランエンジニアの唯一のアドバンテージとは？</li>
<li>プログラマとしての可処分時間はどんどん減っていく</li>
<li>ベテランプログラマに求められる役割としての、語り部と老害のボーダライン</li>
<li><a href="https://www.amazon.co.jp/dp/4274064069" target="_blank">Unix哲学</a></li>
<li>小さいのは良いことだ(Small is beautiful)</li>
<li>一つのことを上手くやる(Make each program do one thing well)</li>
<li>すべてはファイルである</li>
<li>強い制約による高い相互接続性</li>
<li>ネットワークプロトコルにおける強い制約</li>
<li>REST / Web</li>
<li>すべてをURLで表現できる</li>
<li><a href="https://postd.cc/how-dhh-organizes-his-rails-controllers/" target="_blank">DHHはどのようにRailsのコントローラを書くのか</a></li>
<li>RDBMS / SQL</li>
<li>すべては関係である、(わかりやすく言えば)集合である</li>
<li>共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと</li>
<li>コミュニケーションコストにを下げるという寄与</li>
<li>系が閉じることによる強さ</li>
<li>閉包性とは？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>28. 技術選定の審美眼(1) w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition" target="_blank"&gt;Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;フロントエンド疲れとは？&lt;/li&gt;
&lt;li&gt;大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう&lt;/li&gt;
&lt;li&gt;Gruntとgulp.js、ReactとVue.js&lt;/li&gt;
&lt;li&gt;イメージ的には選球眼&lt;/li&gt;
&lt;li&gt;変わるもの、変わらないものを見極めるモチベーションは何か？&lt;/li&gt;
&lt;li&gt;技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある&lt;/li&gt;
&lt;li&gt;振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事&lt;/li&gt;
&lt;li&gt;ベテランエンジニアの唯一のアドバンテージとは？&lt;/li&gt;
&lt;li&gt;プログラマとしての可処分時間はどんどん減っていく&lt;/li&gt;
&lt;li&gt;ベテランプログラマに求められる役割としての、語り部と老害のボーダライン&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.co.jp/dp/4274064069" target="_blank"&gt;Unix哲学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;小さいのは良いことだ(Small is beautiful)&lt;/li&gt;
&lt;li&gt;一つのことを上手くやる(Make each program do one thing well)&lt;/li&gt;
&lt;li&gt;すべてはファイルである&lt;/li&gt;
&lt;li&gt;強い制約による高い相互接続性&lt;/li&gt;
&lt;li&gt;ネットワークプロトコルにおける強い制約&lt;/li&gt;
&lt;li&gt;REST / Web&lt;/li&gt;
&lt;li&gt;すべてをURLで表現できる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://postd.cc/how-dhh-organizes-his-rails-controllers/" target="_blank"&gt;DHHはどのようにRailsのコントローラを書くのか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RDBMS / SQL&lt;/li&gt;
&lt;li&gt;すべては関係である、(わかりやすく言えば)集合である&lt;/li&gt;
&lt;li&gt;共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと&lt;/li&gt;
&lt;li&gt;コミュニケーションコストにを下げるという寄与&lt;/li&gt;
&lt;li&gt;系が閉じることによる強さ&lt;/li&gt;
&lt;li&gt;閉包性とは？&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition" target="_blank">Worse Is Better - 過去を知り、未来に備える。技術選定の審美眼 2019 edition</a></li>
<li>フロントエンド疲れとは？</li>
<li>大筋でのトレンドは変わってないが、目が養われていないと疲れてしまう</li>
<li>Gruntとgulp.js、ReactとVue.js</li>
<li>イメージ的には選球眼</li>
<li>変わるもの、変わらないものを見極めるモチベーションは何か？</li>
<li>技術の世界は変化が緩やかで手堅い部分と変化が激しい部分がある</li>
<li>振子のように見えていた変化は、角度を変えて見れば螺旋であり、その差分を見るのが大事</li>
<li>ベテランエンジニアの唯一のアドバンテージとは？</li>
<li>プログラマとしての可処分時間はどんどん減っていく</li>
<li>ベテランプログラマに求められる役割としての、語り部と老害のボーダライン</li>
<li><a href="https://www.amazon.co.jp/dp/4274064069" target="_blank">Unix哲学</a></li>
<li>小さいのは良いことだ(Small is beautiful)</li>
<li>一つのことを上手くやる(Make each program do one thing well)</li>
<li>すべてはファイルである</li>
<li>強い制約による高い相互接続性</li>
<li>ネットワークプロトコルにおける強い制約</li>
<li>REST / Web</li>
<li>すべてをURLで表現できる</li>
<li><a href="https://postd.cc/how-dhh-organizes-his-rails-controllers/" target="_blank">DHHはどのようにRailsのコントローラを書くのか</a></li>
<li>RDBMS / SQL</li>
<li>すべては関係である、(わかりやすく言えば)集合である</li>
<li>共通なのはIFが狭く、振る舞いの種類が少なく、限定であり、実装の詳細に依存しないこと</li>
<li>コミュニケーションコストにを下げるという寄与</li>
<li>系が閉じることによる強さ</li>
<li>閉包性とは？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/28</guid>
      <pubDate>Sun, 15 Mar 2020 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:41:52</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/dbee2fc9-8027-49bf-9ae0-f91b0b293913.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="40206419"/>
    </item>
    <item>
      <title>27. 論理削除とは何か？どのような解法があるのか？ w/ twada</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>論理削除とはそもそも何か？</li>
<li>物理削除とは？</li>
<li>なぜ、論理削除が生まれてくるのか？</li>
<li><a href="https://www.slideshare.net/t_wada/ronsakucasual" target="_blank">SQLアンチパターン 幻の第26章「とりあえず削除フラグ」</a></li>
<li>理由1: 心理的なハードルの高さ、怖さがある</li>
<li>理由2: 削除したデータを検索対象に入れたい場合がある</li>
<li>理由3: ログとしての用途</li>
<li>理由4: 誤操作をすぐに戻したい</li>
<li>アンチパターンとは何か？</li>
<li>なぜ、論理削除はアンチパターンとして捉えられるのか？</li>
<li>全てのSQL文のWHERE句に削除フラグが必ず入る</li>
<li>LIMIT 1などが蔓延していく</li>
<li>論理削除に気づくきっかけは何か？</li>
<li>テーブル設計や、規約から気づく</li>
<li>論理削除というアンチパターンをどのように解いていくか？</li>
<li>論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない</li>
<li>要件をどのように設計すればいいのか？</li>
<li>ORMの論理削除プラグインはあまり良くない</li>
<li>状態遷移として捉える方法</li>
<li>Soft Delete と Hard Delete</li>
<li><a href="https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html" target="_blank">Doctrine 2 “Behaviours” in a Nutshell</a></li>
<li>RDBにおけるStateパターンとは？</li>
<li>UMLにある状態遷移図</li>
<li>Stateパターンが使えないケースはある？</li>
<li>FSM - Finite State Machine</li>
<li>State Machineのプラグインをまず探す</li>
<li><a href="https://github.com/aasm/aasm" target="_blank">AASM - Ruby state machines</a></li>
<li>履歴テーブルを使った設計による解法</li>
<li>履歴テーブルをあえて使う強いモチベーションは何か？</li>
<li>そもそも削除も更新もしない解法もある</li>
<li>発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81" target="_blank">データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか</a></li>
<li>T字形ER手法</li>
<li>データ量が増えた場合にどうするか？</li>
<li>Webシステムが流行る前後のデータ量</li>
<li><a href="https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB" target="_blank">イミュータブルデータモデル(入門編)</a></li>
<li>誤った操作をなかったことにしたい、という課題はまだ解けていない</li>
<li>教科書的なのは間違えにくいUI/画面設計を作る</li>
<li>遅延レプリケーションという解法</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>27. 論理削除とは何か？どのような解法があるのか？ w/ twada</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;論理削除とはそもそも何か？&lt;/li&gt;
&lt;li&gt;物理削除とは？&lt;/li&gt;
&lt;li&gt;なぜ、論理削除が生まれてくるのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/t_wada/ronsakucasual" target="_blank"&gt;SQLアンチパターン 幻の第26章「とりあえず削除フラグ」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;理由1: 心理的なハードルの高さ、怖さがある&lt;/li&gt;
&lt;li&gt;理由2: 削除したデータを検索対象に入れたい場合がある&lt;/li&gt;
&lt;li&gt;理由3: ログとしての用途&lt;/li&gt;
&lt;li&gt;理由4: 誤操作をすぐに戻したい&lt;/li&gt;
&lt;li&gt;アンチパターンとは何か？&lt;/li&gt;
&lt;li&gt;なぜ、論理削除はアンチパターンとして捉えられるのか？&lt;/li&gt;
&lt;li&gt;全てのSQL文のWHERE句に削除フラグが必ず入る&lt;/li&gt;
&lt;li&gt;LIMIT 1などが蔓延していく&lt;/li&gt;
&lt;li&gt;論理削除に気づくきっかけは何か？&lt;/li&gt;
&lt;li&gt;テーブル設計や、規約から気づく&lt;/li&gt;
&lt;li&gt;論理削除というアンチパターンをどのように解いていくか？&lt;/li&gt;
&lt;li&gt;論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない&lt;/li&gt;
&lt;li&gt;要件をどのように設計すればいいのか？&lt;/li&gt;
&lt;li&gt;ORMの論理削除プラグインはあまり良くない&lt;/li&gt;
&lt;li&gt;状態遷移として捉える方法&lt;/li&gt;
&lt;li&gt;Soft Delete と Hard Delete&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html" target="_blank"&gt;Doctrine 2 “Behaviours” in a Nutshell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RDBにおけるStateパターンとは？&lt;/li&gt;
&lt;li&gt;UMLにある状態遷移図&lt;/li&gt;
&lt;li&gt;Stateパターンが使えないケースはある？&lt;/li&gt;
&lt;li&gt;FSM - Finite State Machine&lt;/li&gt;
&lt;li&gt;State Machineのプラグインをまず探す&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aasm/aasm" target="_blank"&gt;AASM - Ruby state machines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;履歴テーブルを使った設計による解法&lt;/li&gt;
&lt;li&gt;履歴テーブルをあえて使う強いモチベーションは何か？&lt;/li&gt;
&lt;li&gt;そもそも削除も更新もしない解法もある&lt;/li&gt;
&lt;li&gt;発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81" target="_blank"&gt;データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;T字形ER手法&lt;/li&gt;
&lt;li&gt;データ量が増えた場合にどうするか？&lt;/li&gt;
&lt;li&gt;Webシステムが流行る前後のデータ量&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB" target="_blank"&gt;イミュータブルデータモデル(入門編)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;誤った操作をなかったことにしたい、という課題はまだ解けていない&lt;/li&gt;
&lt;li&gt;教科書的なのは間違えにくいUI/画面設計を作る&lt;/li&gt;
&lt;li&gt;遅延レプリケーションという解法&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>論理削除とはそもそも何か？</li>
<li>物理削除とは？</li>
<li>なぜ、論理削除が生まれてくるのか？</li>
<li><a href="https://www.slideshare.net/t_wada/ronsakucasual" target="_blank">SQLアンチパターン 幻の第26章「とりあえず削除フラグ」</a></li>
<li>理由1: 心理的なハードルの高さ、怖さがある</li>
<li>理由2: 削除したデータを検索対象に入れたい場合がある</li>
<li>理由3: ログとしての用途</li>
<li>理由4: 誤操作をすぐに戻したい</li>
<li>アンチパターンとは何か？</li>
<li>なぜ、論理削除はアンチパターンとして捉えられるのか？</li>
<li>全てのSQL文のWHERE句に削除フラグが必ず入る</li>
<li>LIMIT 1などが蔓延していく</li>
<li>論理削除に気づくきっかけは何か？</li>
<li>テーブル設計や、規約から気づく</li>
<li>論理削除というアンチパターンをどのように解いていくか？</li>
<li>論理削除という概念は世の中にまずなく、お客様は論理削除という言葉を使っていない</li>
<li>要件をどのように設計すればいいのか？</li>
<li>ORMの論理削除プラグインはあまり良くない</li>
<li>状態遷移として捉える方法</li>
<li>Soft Delete と Hard Delete</li>
<li><a href="https://www.doctrine-project.org/2010/02/17/doctrine2-behaviours-nutshell.html" target="_blank">Doctrine 2 “Behaviours” in a Nutshell</a></li>
<li>RDBにおけるStateパターンとは？</li>
<li>UMLにある状態遷移図</li>
<li>Stateパターンが使えないケースはある？</li>
<li>FSM - Finite State Machine</li>
<li>State Machineのプラグインをまず探す</li>
<li><a href="https://github.com/aasm/aasm" target="_blank">AASM - Ruby state machines</a></li>
<li>履歴テーブルを使った設計による解法</li>
<li>履歴テーブルをあえて使う強いモチベーションは何か？</li>
<li>そもそも削除も更新もしない解法もある</li>
<li>発生した事実に忠実にモデリングすると、情報の削除や更新をしない、改ざんになる</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E4%B8%AD%E5%BF%83%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81" target="_blank">データ中心アプローチ（DOA) 椿さんとか佐藤さんとか渡辺さんとか</a></li>
<li>T字形ER手法</li>
<li>データ量が増えた場合にどうするか？</li>
<li>Webシステムが流行る前後のデータ量</li>
<li><a href="https://scrapbox.io/kawasima/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB" target="_blank">イミュータブルデータモデル(入門編)</a></li>
<li>誤った操作をなかったことにしたい、という課題はまだ解けていない</li>
<li>教科書的なのは間違えにくいUI/画面設計を作る</li>
<li>遅延レプリケーションという解法</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/27</guid>
      <pubDate>Sun, 01 Mar 2020 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:05:48</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/20785d09-6016-4257-8f5e-87d360d861c1.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="63172858"/>
    </item>
    <item>
      <title>26. Spinnakerとは w/ k_mrgk</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/ktmrgk/sre-next-2020" target="_blank">Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020</a></li>
<li>
<a href="https://www.spinnaker.io/" target="_blank">Spinnaker</a>とは何か？</li>
<li>kubernetesのみではなく、他にも対応している？</li>
<li>継続的デリバリとは、継続的デプロイメントの違いとは？</li>
<li>CDについて、Spinnakerはどこまで対応している？</li>
<li>Spinnaker単体でRollbackも簡単になる？</li>
<li>国内だと、どれぐらい使われている？</li>
<li>GitOpsとは何か？</li>
<li>Single Source of Truth</li>
<li>リポジトリはどのように分割するのか？</li>
<li>Spinnakerのデプロイ戦略には何があるか？</li>
<li>
<a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/" target="_blank">ReplicaSet</a>とは？</li>
<li>訂正 fukabori ep.11は 市川さん -&gt; 市原さん です。ごめんなさい。</li>
<li>メトリクス周りでSpinnakerがケアしているくれるところはある？</li>
<li><a href="https://github.com/spinnaker/kayenta" target="_blank">Kayenta</a></li>
<li>手動承認もできる</li>
<li>SpinnakerのPipelineでどんな感じ？</li>
<li>何かCIやテストで選定しているものはあるか？</li>
<li>kubernetesのJobでの制約は？</li>
<li>Spinnaker自体のアーキテクチャはどうなっている？</li>
<li>Spinnaker運用におけるトラブルシュートは大変？</li>
<li>開発チームとSREチームでの分解点、運用フローはどうする？</li>
<li>PipelineをテストするPipelineとは？どのようなテストをしている？</li>
<li>Spinnaker自体のモニタリングはどうするのか？</li>
<li><a href="https://github.com/argoproj/argo-rollouts" target="_blank">Argo Rollouts</a></li>
<li><a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/" target="_blank">Custom Resources</a></li>
<li><a href="https://qiita.com/kanatakita/items/a68c6e7758524422ecb0" target="_blank">アプリケーションのリリースに必要な会議を倒したい話</a></li>
<li>Istioを使っているか？</li>
<li>
<a href="https://github.com/kubernetes-sigs/kustomize" target="_blank">kustomize</a>とは？</li>
<li>
<a href="https://github.com/helm/helm" target="_blank">Helm</a>とは？</li>
<li><a href="https://nttcom.connpass.com/event/163460/" target="_blank">学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>26. Spinnakerとは w/ k_mrgk</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/ktmrgk/sre-next-2020" target="_blank"&gt;Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.spinnaker.io/" target="_blank"&gt;Spinnaker&lt;/a&gt;とは何か？&lt;/li&gt;
&lt;li&gt;kubernetesのみではなく、他にも対応している？&lt;/li&gt;
&lt;li&gt;継続的デリバリとは、継続的デプロイメントの違いとは？&lt;/li&gt;
&lt;li&gt;CDについて、Spinnakerはどこまで対応している？&lt;/li&gt;
&lt;li&gt;Spinnaker単体でRollbackも簡単になる？&lt;/li&gt;
&lt;li&gt;国内だと、どれぐらい使われている？&lt;/li&gt;
&lt;li&gt;GitOpsとは何か？&lt;/li&gt;
&lt;li&gt;Single Source of Truth&lt;/li&gt;
&lt;li&gt;リポジトリはどのように分割するのか？&lt;/li&gt;
&lt;li&gt;Spinnakerのデプロイ戦略には何があるか？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/" target="_blank"&gt;ReplicaSet&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;訂正 fukabori ep.11は 市川さん -&amp;gt; 市原さん です。ごめんなさい。&lt;/li&gt;
&lt;li&gt;メトリクス周りでSpinnakerがケアしているくれるところはある？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spinnaker/kayenta" target="_blank"&gt;Kayenta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;手動承認もできる&lt;/li&gt;
&lt;li&gt;SpinnakerのPipelineでどんな感じ？&lt;/li&gt;
&lt;li&gt;何かCIやテストで選定しているものはあるか？&lt;/li&gt;
&lt;li&gt;kubernetesのJobでの制約は？&lt;/li&gt;
&lt;li&gt;Spinnaker自体のアーキテクチャはどうなっている？&lt;/li&gt;
&lt;li&gt;Spinnaker運用におけるトラブルシュートは大変？&lt;/li&gt;
&lt;li&gt;開発チームとSREチームでの分解点、運用フローはどうする？&lt;/li&gt;
&lt;li&gt;PipelineをテストするPipelineとは？どのようなテストをしている？&lt;/li&gt;
&lt;li&gt;Spinnaker自体のモニタリングはどうするのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/argoproj/argo-rollouts" target="_blank"&gt;Argo Rollouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/" target="_blank"&gt;Custom Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/kanatakita/items/a68c6e7758524422ecb0" target="_blank"&gt;アプリケーションのリリースに必要な会議を倒したい話&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Istioを使っているか？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kubernetes-sigs/kustomize" target="_blank"&gt;kustomize&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/helm/helm" target="_blank"&gt;Helm&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nttcom.connpass.com/event/163460/" target="_blank"&gt;学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/ktmrgk/sre-next-2020" target="_blank">Blue-Green デプロイメントを採用したデプロイの仕組みを実装して共通基盤として導入した話 / SRE NEXT 2020</a></li>
<li>
<a href="https://www.spinnaker.io/" target="_blank">Spinnaker</a>とは何か？</li>
<li>kubernetesのみではなく、他にも対応している？</li>
<li>継続的デリバリとは、継続的デプロイメントの違いとは？</li>
<li>CDについて、Spinnakerはどこまで対応している？</li>
<li>Spinnaker単体でRollbackも簡単になる？</li>
<li>国内だと、どれぐらい使われている？</li>
<li>GitOpsとは何か？</li>
<li>Single Source of Truth</li>
<li>リポジトリはどのように分割するのか？</li>
<li>Spinnakerのデプロイ戦略には何があるか？</li>
<li>
<a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/" target="_blank">ReplicaSet</a>とは？</li>
<li>訂正 fukabori ep.11は 市川さん -&gt; 市原さん です。ごめんなさい。</li>
<li>メトリクス周りでSpinnakerがケアしているくれるところはある？</li>
<li><a href="https://github.com/spinnaker/kayenta" target="_blank">Kayenta</a></li>
<li>手動承認もできる</li>
<li>SpinnakerのPipelineでどんな感じ？</li>
<li>何かCIやテストで選定しているものはあるか？</li>
<li>kubernetesのJobでの制約は？</li>
<li>Spinnaker自体のアーキテクチャはどうなっている？</li>
<li>Spinnaker運用におけるトラブルシュートは大変？</li>
<li>開発チームとSREチームでの分解点、運用フローはどうする？</li>
<li>PipelineをテストするPipelineとは？どのようなテストをしている？</li>
<li>Spinnaker自体のモニタリングはどうするのか？</li>
<li><a href="https://github.com/argoproj/argo-rollouts" target="_blank">Argo Rollouts</a></li>
<li><a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/" target="_blank">Custom Resources</a></li>
<li><a href="https://qiita.com/kanatakita/items/a68c6e7758524422ecb0" target="_blank">アプリケーションのリリースに必要な会議を倒したい話</a></li>
<li>Istioを使っているか？</li>
<li>
<a href="https://github.com/kubernetes-sigs/kustomize" target="_blank">kustomize</a>とは？</li>
<li>
<a href="https://github.com/helm/helm" target="_blank">Helm</a>とは？</li>
<li><a href="https://nttcom.connpass.com/event/163460/" target="_blank">学生向け N-ISUCON - Webアプリケーションのパフォーマンスチューニングコンテスト</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/26</guid>
      <pubDate>Wed, 05 Feb 2020 05:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:38:47</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/f87ceb84-df69-48ac-892b-3b57c624c196.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="37243089"/>
    </item>
    <item>
      <title>25. 日本企業を辞めてカーネギーメロン大学へ入学し、Nianticで働くまで  w/ noralife</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>海外企業でソフトウェアエンジニアで働くための手段</li>
<li>ビザってなぜ必要なんだっけ？</li>
<li>米国のビザってどういう種類があるの？</li>
<li><a href="https://www.ryugaku.com/blog/entry/opt-mio.html" target="_blank">OPT STEM</a></li>
<li>10:05 訂正 <a href="https://honkiku.com/getting-american-visa-is-impossible/" target="_blank">H1は9月に発給される -&gt; 10/1の間違い</a>
</li>
<li>大学の出願候補はどうやって選んだのか？</li>
<li>就業中で働きながらどのように受験の勉強をしたのか？</li>
<li>
<a href="https://www.ets.org/toefl" target="_blank">TOEFL</a>と<a href="https://www.ets.org/gre/" target="_blank">GRE</a>
</li>
<li>GREの単語は無理ゲー</li>
<li>リスニングはどうやって勉強した？</li>
<li>何校程度、受験した？</li>
<li>入学したCMUのコースは何人ぐらいいるの？</li>
<li>コースにいる学生で米国Nativeの数は？</li>
<li>CMUの学生生活はブラック</li>
<li>CMUの授業はどういう形式が多い？</li>
<li><a href="https://mse.isri.cmu.edu/" target="_blank">CMU Software Engineering</a></li>
<li><a href="https://www.cs.cmu.edu/~213/" target="_blank">Introduction to Computer Systems</a></li>
<li>mallocを実装する宿題</li>
<li>修論執筆は必須？</li>
<li><a href="https://users.ece.cmu.edu/~raj/" target="_blank">Raj教授</a></li>
<li>卒業制作はアジャイル開発で進める</li>
<li>アジャイル開発のフレームワークなどは？</li>
<li><a href="https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf" target="_blank">ACDM/Architecture Centric Design Method</a></li>
<li>この授業、とくに面白かったな、って授業は？</li>
<li>Raftの実装する課題</li>
<li>課題のテストケースが秘伝のタレ</li>
<li>GoのTCPライブラリに仕込んである</li>
<li>Databaseの授業では、ほぼDBMSを作るような課題</li>
<li>b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変</li>
<li>在学中から就職先の選定はどのように進めた？</li>
<li>リファーラルが取れる場合はとったほうが良い</li>
<li>日本と違って自分の履歴書があればポジションへ応募できる</li>
<li>リモートでの技術面接はどのような問題が出る？</li>
<li>オンサイトでの技術面接は？</li>
<li>どのように面接準備した？</li>
<li><a href="https://leetcode.com/" target="_blank">Leetcode</a></li>
<li><a href="https://www.amazon.com/dp/0984782850" target="_blank">Cracking coding interview</a></li>
<li>Nianticで働いてみて、実際にどんな印象か？</li>
<li>エリートといえばリスクテイク</li>
<li>同僚をみていて、日本のエンジニアという違う部分はある？</li>
<li>1日のタイムスケジュール、どのぐらいコーディングしているか？</li>
<li>英語力は伸びる？</li>
<li>英語が分からなかったときの対応スキルが伸びる</li>
<li>海外で働いてみてよかった点は、英語の勉強から離れられたこと</li>
<li><a href="https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b" target="_blank">東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>25. 日本企業を辞めてカーネギーメロン大学へ入学し、Nianticで働くまで  w/ noralife</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;海外企業でソフトウェアエンジニアで働くための手段&lt;/li&gt;
&lt;li&gt;ビザってなぜ必要なんだっけ？&lt;/li&gt;
&lt;li&gt;米国のビザってどういう種類があるの？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ryugaku.com/blog/entry/opt-mio.html" target="_blank"&gt;OPT STEM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10:05 訂正 &lt;a href="https://honkiku.com/getting-american-visa-is-impossible/" target="_blank"&gt;H1は9月に発給される -&amp;gt; 10/1の間違い&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;大学の出願候補はどうやって選んだのか？&lt;/li&gt;
&lt;li&gt;就業中で働きながらどのように受験の勉強をしたのか？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.ets.org/toefl" target="_blank"&gt;TOEFL&lt;/a&gt;と&lt;a href="https://www.ets.org/gre/" target="_blank"&gt;GRE&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GREの単語は無理ゲー&lt;/li&gt;
&lt;li&gt;リスニングはどうやって勉強した？&lt;/li&gt;
&lt;li&gt;何校程度、受験した？&lt;/li&gt;
&lt;li&gt;入学したCMUのコースは何人ぐらいいるの？&lt;/li&gt;
&lt;li&gt;コースにいる学生で米国Nativeの数は？&lt;/li&gt;
&lt;li&gt;CMUの学生生活はブラック&lt;/li&gt;
&lt;li&gt;CMUの授業はどういう形式が多い？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mse.isri.cmu.edu/" target="_blank"&gt;CMU Software Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cs.cmu.edu/~213/" target="_blank"&gt;Introduction to Computer Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mallocを実装する宿題&lt;/li&gt;
&lt;li&gt;修論執筆は必須？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://users.ece.cmu.edu/~raj/" target="_blank"&gt;Raj教授&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;卒業制作はアジャイル開発で進める&lt;/li&gt;
&lt;li&gt;アジャイル開発のフレームワークなどは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf" target="_blank"&gt;ACDM/Architecture Centric Design Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;この授業、とくに面白かったな、って授業は？&lt;/li&gt;
&lt;li&gt;Raftの実装する課題&lt;/li&gt;
&lt;li&gt;課題のテストケースが秘伝のタレ&lt;/li&gt;
&lt;li&gt;GoのTCPライブラリに仕込んである&lt;/li&gt;
&lt;li&gt;Databaseの授業では、ほぼDBMSを作るような課題&lt;/li&gt;
&lt;li&gt;b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変&lt;/li&gt;
&lt;li&gt;在学中から就職先の選定はどのように進めた？&lt;/li&gt;
&lt;li&gt;リファーラルが取れる場合はとったほうが良い&lt;/li&gt;
&lt;li&gt;日本と違って自分の履歴書があればポジションへ応募できる&lt;/li&gt;
&lt;li&gt;リモートでの技術面接はどのような問題が出る？&lt;/li&gt;
&lt;li&gt;オンサイトでの技術面接は？&lt;/li&gt;
&lt;li&gt;どのように面接準備した？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/" target="_blank"&gt;Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/dp/0984782850" target="_blank"&gt;Cracking coding interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nianticで働いてみて、実際にどんな印象か？&lt;/li&gt;
&lt;li&gt;エリートといえばリスクテイク&lt;/li&gt;
&lt;li&gt;同僚をみていて、日本のエンジニアという違う部分はある？&lt;/li&gt;
&lt;li&gt;1日のタイムスケジュール、どのぐらいコーディングしているか？&lt;/li&gt;
&lt;li&gt;英語力は伸びる？&lt;/li&gt;
&lt;li&gt;英語が分からなかったときの対応スキルが伸びる&lt;/li&gt;
&lt;li&gt;海外で働いてみてよかった点は、英語の勉強から離れられたこと&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b" target="_blank"&gt;東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>海外企業でソフトウェアエンジニアで働くための手段</li>
<li>ビザってなぜ必要なんだっけ？</li>
<li>米国のビザってどういう種類があるの？</li>
<li><a href="https://www.ryugaku.com/blog/entry/opt-mio.html" target="_blank">OPT STEM</a></li>
<li>10:05 訂正 <a href="https://honkiku.com/getting-american-visa-is-impossible/" target="_blank">H1は9月に発給される -&gt; 10/1の間違い</a>
</li>
<li>大学の出願候補はどうやって選んだのか？</li>
<li>就業中で働きながらどのように受験の勉強をしたのか？</li>
<li>
<a href="https://www.ets.org/toefl" target="_blank">TOEFL</a>と<a href="https://www.ets.org/gre/" target="_blank">GRE</a>
</li>
<li>GREの単語は無理ゲー</li>
<li>リスニングはどうやって勉強した？</li>
<li>何校程度、受験した？</li>
<li>入学したCMUのコースは何人ぐらいいるの？</li>
<li>コースにいる学生で米国Nativeの数は？</li>
<li>CMUの学生生活はブラック</li>
<li>CMUの授業はどういう形式が多い？</li>
<li><a href="https://mse.isri.cmu.edu/" target="_blank">CMU Software Engineering</a></li>
<li><a href="https://www.cs.cmu.edu/~213/" target="_blank">Introduction to Computer Systems</a></li>
<li>mallocを実装する宿題</li>
<li>修論執筆は必須？</li>
<li><a href="https://users.ece.cmu.edu/~raj/" target="_blank">Raj教授</a></li>
<li>卒業制作はアジャイル開発で進める</li>
<li>アジャイル開発のフレームワークなどは？</li>
<li><a href="https://resources.sei.cmu.edu/asset_files/Presentation/2006_017_001_24360.pdf" target="_blank">ACDM/Architecture Centric Design Method</a></li>
<li>この授業、とくに面白かったな、って授業は？</li>
<li>Raftの実装する課題</li>
<li>課題のテストケースが秘伝のタレ</li>
<li>GoのTCPライブラリに仕込んである</li>
<li>Databaseの授業では、ほぼDBMSを作るような課題</li>
<li>b-tree自体は簡単でも、スレッドセーフ・並行処理への対応が大変</li>
<li>在学中から就職先の選定はどのように進めた？</li>
<li>リファーラルが取れる場合はとったほうが良い</li>
<li>日本と違って自分の履歴書があればポジションへ応募できる</li>
<li>リモートでの技術面接はどのような問題が出る？</li>
<li>オンサイトでの技術面接は？</li>
<li>どのように面接準備した？</li>
<li><a href="https://leetcode.com/" target="_blank">Leetcode</a></li>
<li><a href="https://www.amazon.com/dp/0984782850" target="_blank">Cracking coding interview</a></li>
<li>Nianticで働いてみて、実際にどんな印象か？</li>
<li>エリートといえばリスクテイク</li>
<li>同僚をみていて、日本のエンジニアという違う部分はある？</li>
<li>1日のタイムスケジュール、どのぐらいコーディングしているか？</li>
<li>英語力は伸びる？</li>
<li>英語が分からなかったときの対応スキルが伸びる</li>
<li>海外で働いてみてよかった点は、英語の勉強から離れられたこと</li>
<li><a href="https://note.com/tatsuya_nanjo/n/n8edb2d4eb60b" target="_blank">東京のサラリーマンが、仕事をやめてアメリカで働くために悩んだこと、行動したこと</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/25</guid>
      <pubDate>Fri, 17 Jan 2020 14:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:47:23</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/f5affa7a-deec-4b6b-8a50-767d922abd6f.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="45497364"/>
    </item>
    <item>
      <title>24. 開発組織から部長がいなくなるまでの経緯 w/ teppeis</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>サイボウズはどのようなプロダクトを開発しているのか？</li>
<li>kintoneの競合って？</li>
<li>サイボウズって外注しているの？オフショアは？</li>
<li><a href="https://blog.cybozu.io/entry/2019/02/13/080000" target="_blank">組織変更したら部長がいなくなりました</a></li>
<li>部長がいなくなる組織変更する前はどのような組織だったのか？</li>
<li>マトリクス組織、上長って複数名？</li>
<li>マトリクス組織において、どのような問題があったのか？</li>
<li>職能定義に固定的に考えてしまう</li>
<li>どのように組織変更を進めていったのか？</li>
<li>60組以上に今考えている課題について、ヒアリング実施</li>
<li>左右の壁と、上下の壁</li>
<li>プロダクトチームはどういうメンバ構成なのか？</li>
<li>組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？</li>
<li>ヒアリング結果は常にオープンに</li>
<li>「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？</li>
<li>旧部長の多くは、組織運営チームにJoinした</li>
<li>マネージャは孤独な仕事であるが、チームを組んで考えるようになった</li>
<li>組織運営チームで解決する課題はどのように発見しているのか？</li>
<li>発見した課題の優先度付けは？</li>
<li>Scrum at ScaleにおけるEAT(Executive Action Team)に近い</li>
<li>EATはエスカレーションされた問題の即日解決を目指す</li>
<li>予算系のものの承認は、誰がするようになったのか？</li>
<li>予算枠確保よりも、必要なものを、必要なときに使うのが大事</li>
<li>チームの活動をkintone上というオープンな場に公開する</li>
<li>公明正大が会話にまで浸透している</li>
<li>チーム間の異動は自由にできるようになったのか？</li>
<li>チームメンバに(社内)採用の権限を落とした</li>
<li><a href="https://cybozu.co.jp/company/work-style/" target="_blank">体験入部制度</a></li>
<li>公開されているJob boardでの応募はどのようにすればできる？</li>
<li>人気のあるチームに集まっちゃう問題？</li>
<li>レガシーとなったプロダクトのチームで解く課題の人気</li>
<li>組織変更後の給与評価はどのようにするようになった？</li>
<li>メンバの活躍をどのように把握しているのか？</li>
<li>市場価値として、社内＋社外の評価を利用している</li>
<li>アジャイル開発のフレームワークは何を使っている？</li>
<li>スクラムチームはどの程度ある？</li>
<li>スクラムチーム間の情報交換はどうしている？</li>
<li>開発ツールとしてのコード管理は何を使っている？</li>
<li>徐々にGitHub Enterpriseから、GitHub.comの利用へ</li>
<li><a href="https://2020.scrumgatheringtokyo.org/index.html" target="_blank">RSGT2020</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>24. 開発組織から部長がいなくなるまでの経緯 w/ teppeis</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;サイボウズはどのようなプロダクトを開発しているのか？&lt;/li&gt;
&lt;li&gt;kintoneの競合って？&lt;/li&gt;
&lt;li&gt;サイボウズって外注しているの？オフショアは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cybozu.io/entry/2019/02/13/080000" target="_blank"&gt;組織変更したら部長がいなくなりました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;部長がいなくなる組織変更する前はどのような組織だったのか？&lt;/li&gt;
&lt;li&gt;マトリクス組織、上長って複数名？&lt;/li&gt;
&lt;li&gt;マトリクス組織において、どのような問題があったのか？&lt;/li&gt;
&lt;li&gt;職能定義に固定的に考えてしまう&lt;/li&gt;
&lt;li&gt;どのように組織変更を進めていったのか？&lt;/li&gt;
&lt;li&gt;60組以上に今考えている課題について、ヒアリング実施&lt;/li&gt;
&lt;li&gt;左右の壁と、上下の壁&lt;/li&gt;
&lt;li&gt;プロダクトチームはどういうメンバ構成なのか？&lt;/li&gt;
&lt;li&gt;組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？&lt;/li&gt;
&lt;li&gt;ヒアリング結果は常にオープンに&lt;/li&gt;
&lt;li&gt;「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？&lt;/li&gt;
&lt;li&gt;旧部長の多くは、組織運営チームにJoinした&lt;/li&gt;
&lt;li&gt;マネージャは孤独な仕事であるが、チームを組んで考えるようになった&lt;/li&gt;
&lt;li&gt;組織運営チームで解決する課題はどのように発見しているのか？&lt;/li&gt;
&lt;li&gt;発見した課題の優先度付けは？&lt;/li&gt;
&lt;li&gt;Scrum at ScaleにおけるEAT(Executive Action Team)に近い&lt;/li&gt;
&lt;li&gt;EATはエスカレーションされた問題の即日解決を目指す&lt;/li&gt;
&lt;li&gt;予算系のものの承認は、誰がするようになったのか？&lt;/li&gt;
&lt;li&gt;予算枠確保よりも、必要なものを、必要なときに使うのが大事&lt;/li&gt;
&lt;li&gt;チームの活動をkintone上というオープンな場に公開する&lt;/li&gt;
&lt;li&gt;公明正大が会話にまで浸透している&lt;/li&gt;
&lt;li&gt;チーム間の異動は自由にできるようになったのか？&lt;/li&gt;
&lt;li&gt;チームメンバに(社内)採用の権限を落とした&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cybozu.co.jp/company/work-style/" target="_blank"&gt;体験入部制度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公開されているJob boardでの応募はどのようにすればできる？&lt;/li&gt;
&lt;li&gt;人気のあるチームに集まっちゃう問題？&lt;/li&gt;
&lt;li&gt;レガシーとなったプロダクトのチームで解く課題の人気&lt;/li&gt;
&lt;li&gt;組織変更後の給与評価はどのようにするようになった？&lt;/li&gt;
&lt;li&gt;メンバの活躍をどのように把握しているのか？&lt;/li&gt;
&lt;li&gt;市場価値として、社内＋社外の評価を利用している&lt;/li&gt;
&lt;li&gt;アジャイル開発のフレームワークは何を使っている？&lt;/li&gt;
&lt;li&gt;スクラムチームはどの程度ある？&lt;/li&gt;
&lt;li&gt;スクラムチーム間の情報交換はどうしている？&lt;/li&gt;
&lt;li&gt;開発ツールとしてのコード管理は何を使っている？&lt;/li&gt;
&lt;li&gt;徐々にGitHub Enterpriseから、GitHub.comの利用へ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2020.scrumgatheringtokyo.org/index.html" target="_blank"&gt;RSGT2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>サイボウズはどのようなプロダクトを開発しているのか？</li>
<li>kintoneの競合って？</li>
<li>サイボウズって外注しているの？オフショアは？</li>
<li><a href="https://blog.cybozu.io/entry/2019/02/13/080000" target="_blank">組織変更したら部長がいなくなりました</a></li>
<li>部長がいなくなる組織変更する前はどのような組織だったのか？</li>
<li>マトリクス組織、上長って複数名？</li>
<li>マトリクス組織において、どのような問題があったのか？</li>
<li>職能定義に固定的に考えてしまう</li>
<li>どのように組織変更を進めていったのか？</li>
<li>60組以上に今考えている課題について、ヒアリング実施</li>
<li>左右の壁と、上下の壁</li>
<li>プロダクトチームはどういうメンバ構成なのか？</li>
<li>組織変更は、だれが、どのぐらいの人数で、どのぐらいかけて考えていったのか？</li>
<li>ヒアリング結果は常にオープンに</li>
<li>「あれ、俺の役職なくなるんじゃね？」という懸念はあったのか？</li>
<li>旧部長の多くは、組織運営チームにJoinした</li>
<li>マネージャは孤独な仕事であるが、チームを組んで考えるようになった</li>
<li>組織運営チームで解決する課題はどのように発見しているのか？</li>
<li>発見した課題の優先度付けは？</li>
<li>Scrum at ScaleにおけるEAT(Executive Action Team)に近い</li>
<li>EATはエスカレーションされた問題の即日解決を目指す</li>
<li>予算系のものの承認は、誰がするようになったのか？</li>
<li>予算枠確保よりも、必要なものを、必要なときに使うのが大事</li>
<li>チームの活動をkintone上というオープンな場に公開する</li>
<li>公明正大が会話にまで浸透している</li>
<li>チーム間の異動は自由にできるようになったのか？</li>
<li>チームメンバに(社内)採用の権限を落とした</li>
<li><a href="https://cybozu.co.jp/company/work-style/" target="_blank">体験入部制度</a></li>
<li>公開されているJob boardでの応募はどのようにすればできる？</li>
<li>人気のあるチームに集まっちゃう問題？</li>
<li>レガシーとなったプロダクトのチームで解く課題の人気</li>
<li>組織変更後の給与評価はどのようにするようになった？</li>
<li>メンバの活躍をどのように把握しているのか？</li>
<li>市場価値として、社内＋社外の評価を利用している</li>
<li>アジャイル開発のフレームワークは何を使っている？</li>
<li>スクラムチームはどの程度ある？</li>
<li>スクラムチーム間の情報交換はどうしている？</li>
<li>開発ツールとしてのコード管理は何を使っている？</li>
<li>徐々にGitHub Enterpriseから、GitHub.comの利用へ</li>
<li><a href="https://2020.scrumgatheringtokyo.org/index.html" target="_blank">RSGT2020</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/24</guid>
      <pubDate>Sun, 29 Dec 2019 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:06:54</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/e0a347b6-c912-48f6-b3a6-414e7c197bd4.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="64238654"/>
    </item>
    <item>
      <title>23. 社内ISUCON w/ yosuke_furukawa</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>Write Code Every Day</li>
<li>ISUCONとは？</li>
<li><a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate" target="_blank">エンジニア5000名が参加するISUCONとは何か</a></li>
<li>ISUCONに参加するまでの流れ</li>
<li>ISUCON問題作問する側のインフラ担当は大変</li>
<li><a href="https://github.com/isucon/isucon9-qualify" target="_blank">ISUCARI</a></li>
<li><a href="https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011" target="_blank">ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium</a></li>
<li>R-ISUCONは優勝者が作問側へ</li>
<li>ISUCON参加側のyosuke_furukawaの役割は？</li>
<li>テディベアプログラミング</li>
<li>なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？</li>
<li>ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く</li>
<li>社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？</li>
<li>スモールスタートで始めつつ、偉い人を巻き込む</li>
<li><a href="https://github.com/recruit-tech/r-isucon" target="_blank">R-ISUCON</a></li>
<li>PortalにVM再起動ボタン</li>
<li>ベンチ動きっぱなしISUCON</li>
<li><a href="https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0" target="_blank">NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON</a></li>
<li>DevOpsエンジニアリング</li>
<li>エンジニアの横のつながり</li>
<li>運営メンバってだいたいどのぐらい人数？</li>
<li>社内ISUCONの言語選定は？</li>
<li>開催までの工数ってどう考えるか？</li>
<li>社内ISUCONデスマーチ</li>
<li>インフラ基盤には何を使う？</li>
<li>VMのOSは何を？</li>
<li>複数VMを異なるスペック、構成で提供する</li>
<li>参照実装を増やす場合に、CIなどを回す？</li>
<li>フロントエンドエンジニアがISUCONでは能力を出しにくい</li>
<li>フロントエンド限定のスピードハッカソン</li>
<li>ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも</li>
<li>ベンチマーカはどうやってい実装している？</li>
<li>データベースに入れておくデータセットはどうやって作る？</li>
<li>画像のプリセットを作るのが大変</li>
<li><a href="https://github.com/loadimpact/k6" target="_blank">loadimpact/k6</a></li>
<li><a href="https://www.getpostman.com" target="_blank">Postman</a></li>
<li>現代システムアーキテクチャとの乖離について</li>
<li><a href="https://recruit-tech.co.jp/recruitment/" target="_blank">リクルートテクノロジーズ 採用情報</a></li>
<li><a href="https://jsconf.jp/2019/" target="_blank">JSConf JP</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>23. 社内ISUCON w/ yosuke_furukawa</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;Write Code Every Day&lt;/li&gt;
&lt;li&gt;ISUCONとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate" target="_blank"&gt;エンジニア5000名が参加するISUCONとは何か&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ISUCONに参加するまでの流れ&lt;/li&gt;
&lt;li&gt;ISUCON問題作問する側のインフラ担当は大変&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isucon/isucon9-qualify" target="_blank"&gt;ISUCARI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011" target="_blank"&gt;ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;R-ISUCONは優勝者が作問側へ&lt;/li&gt;
&lt;li&gt;ISUCON参加側のyosuke_furukawaの役割は？&lt;/li&gt;
&lt;li&gt;テディベアプログラミング&lt;/li&gt;
&lt;li&gt;なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？&lt;/li&gt;
&lt;li&gt;ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く&lt;/li&gt;
&lt;li&gt;社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？&lt;/li&gt;
&lt;li&gt;スモールスタートで始めつつ、偉い人を巻き込む&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-tech/r-isucon" target="_blank"&gt;R-ISUCON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PortalにVM再起動ボタン&lt;/li&gt;
&lt;li&gt;ベンチ動きっぱなしISUCON&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0" target="_blank"&gt;NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DevOpsエンジニアリング&lt;/li&gt;
&lt;li&gt;エンジニアの横のつながり&lt;/li&gt;
&lt;li&gt;運営メンバってだいたいどのぐらい人数？&lt;/li&gt;
&lt;li&gt;社内ISUCONの言語選定は？&lt;/li&gt;
&lt;li&gt;開催までの工数ってどう考えるか？&lt;/li&gt;
&lt;li&gt;社内ISUCONデスマーチ&lt;/li&gt;
&lt;li&gt;インフラ基盤には何を使う？&lt;/li&gt;
&lt;li&gt;VMのOSは何を？&lt;/li&gt;
&lt;li&gt;複数VMを異なるスペック、構成で提供する&lt;/li&gt;
&lt;li&gt;参照実装を増やす場合に、CIなどを回す？&lt;/li&gt;
&lt;li&gt;フロントエンドエンジニアがISUCONでは能力を出しにくい&lt;/li&gt;
&lt;li&gt;フロントエンド限定のスピードハッカソン&lt;/li&gt;
&lt;li&gt;ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも&lt;/li&gt;
&lt;li&gt;ベンチマーカはどうやってい実装している？&lt;/li&gt;
&lt;li&gt;データベースに入れておくデータセットはどうやって作る？&lt;/li&gt;
&lt;li&gt;画像のプリセットを作るのが大変&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/loadimpact/k6" target="_blank"&gt;loadimpact/k6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.getpostman.com" target="_blank"&gt;Postman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;現代システムアーキテクチャとの乖離について&lt;/li&gt;
&lt;li&gt;&lt;a href="https://recruit-tech.co.jp/recruitment/" target="_blank"&gt;リクルートテクノロジーズ 採用情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsconf.jp/2019/" target="_blank"&gt;JSConf JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>Write Code Every Day</li>
<li>ISUCONとは？</li>
<li><a href="https://speakerdeck.com/line_developers/what-is-isucon-where-5000-engineers-participate" target="_blank">エンジニア5000名が参加するISUCONとは何か</a></li>
<li>ISUCONに参加するまでの流れ</li>
<li>ISUCON問題作問する側のインフラ担当は大変</li>
<li><a href="https://github.com/isucon/isucon9-qualify" target="_blank">ISUCARI</a></li>
<li><a href="https://medium.com/@catatsuy/isucon9-qualify-969c3abdf011" target="_blank">ISUCON9予選の出題と外部サービス・ベンチマーカーについて - catatsuy - Medium</a></li>
<li>R-ISUCONは優勝者が作問側へ</li>
<li>ISUCON参加側のyosuke_furukawaの役割は？</li>
<li>テディベアプログラミング</li>
<li>なぜ社内ISUCONをリクルートテクノロジーズで開催しているのか？</li>
<li>ISUCONの技術力を高める、リクルートのパフォーマンス課題を共通で解く</li>
<li>社内ISUCON開催に向けて、何か社内を説得 or 進めていくコツは？</li>
<li>スモールスタートで始めつつ、偉い人を巻き込む</li>
<li><a href="https://github.com/recruit-tech/r-isucon" target="_blank">R-ISUCON</a></li>
<li>PortalにVM再起動ボタン</li>
<li>ベンチ動きっぱなしISUCON</li>
<li><a href="https://developer.ntt.com/ja/blog/7bd554e6-30df-4c33-9e94-7e4202bdf2c0" target="_blank">NTTコミュニケーションズのソフトウェアエンジニア向け研修内容・資料を公開します - 障害注入型ISUCON</a></li>
<li>DevOpsエンジニアリング</li>
<li>エンジニアの横のつながり</li>
<li>運営メンバってだいたいどのぐらい人数？</li>
<li>社内ISUCONの言語選定は？</li>
<li>開催までの工数ってどう考えるか？</li>
<li>社内ISUCONデスマーチ</li>
<li>インフラ基盤には何を使う？</li>
<li>VMのOSは何を？</li>
<li>複数VMを異なるスペック、構成で提供する</li>
<li>参照実装を増やす場合に、CIなどを回す？</li>
<li>フロントエンドエンジニアがISUCONでは能力を出しにくい</li>
<li>フロントエンド限定のスピードハッカソン</li>
<li>ユーザが体験するパフォーマンスの7-8割はフロントエンドと言われることも</li>
<li>ベンチマーカはどうやってい実装している？</li>
<li>データベースに入れておくデータセットはどうやって作る？</li>
<li>画像のプリセットを作るのが大変</li>
<li><a href="https://github.com/loadimpact/k6" target="_blank">loadimpact/k6</a></li>
<li><a href="https://www.getpostman.com" target="_blank">Postman</a></li>
<li>現代システムアーキテクチャとの乖離について</li>
<li><a href="https://recruit-tech.co.jp/recruitment/" target="_blank">リクルートテクノロジーズ 採用情報</a></li>
<li><a href="https://jsconf.jp/2019/" target="_blank">JSConf JP</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/23</guid>
      <pubDate>Sun, 20 Oct 2019 19:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:03:30</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/81225cd0-57c3-43b9-8e0a-67d82d076c0f.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="60970631"/>
    </item>
    <item>
      <title>22. ソフトウェア・ファースト w/ takoratta</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/" target="_blank">ソフトウェア・ファースト</a></li>
<li><a href="https://note.mu/softwarefirst" target="_blank">製作委員会のnote</a></li>
<li>書籍執筆の動機</li>
<li><a href="https://www.oreilly.co.jp/books/9784873118482/" target="_blank">エンジニアのためのマネジメントキャリアパス</a></li>
<li>DXという言葉は使いたくなかった</li>
<li>ソフトウェア・ファーストという名前がついた経緯</li>
<li>モバイルファースト、AIファーストとの対比</li>
<li>ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける</li>
<li>トランスフォーメーションより変革という言葉</li>
<li>人と組織を変える気がないDX</li>
<li>RPAは変革の途中であり、小手先の技術</li>
<li>
<a href="https://ja.wikipedia.org/wiki/4GL" target="_blank">4GL</a>や<a href="http://e-words.jp/w/EUC-1.html" target="_blank">EUC</a>
</li>
<li>エンプラの技術的負債の解消？</li>
<li>事業会社がSIerへ丸投げするのは、負債の発生</li>
<li>内製化、手の内化</li>
<li>メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える</li>
<li>常に触り続けるのが、負債化を避けるのは王道</li>
<li><a href="https://shuuji3.github.io/eng-practices/" target="_blank">Google エンジニアリング・プラクティス ドキュメント</a></li>
<li>1章 ソフトウェアファースト のサマリ</li>
<li>2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ</li>
<li>日本でIT産業の競争力を失った理由</li>
<li>IT産業は製造業を模倣しているが、実際は模倣できていない</li>
<li>なぜ、製造業ではオーナーシップを保っているのか？</li>
<li>ものづくりにおける技能オリンピック</li>
<li>経営層がITを理解しているかどうか</li>
<li>役員の中にソフトウェアがわかる人が何人いるか？</li>
<li>ソフトウェアがわかるとは、どの程度まで理解していればいいのか？</li>
<li>幹部や経営層にどのような教育をお願いすればいいのか？</li>
<li>日本の経営者がITを理解できないのは、お友達が悪いから</li>
<li><a href="https://twitter.com/kunihirotanaka" target="_blank">さくらインターネットの田中さん</a></li>
<li>3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ</li>
<li>DXの勝者と敗者：ネットフリックスとブロックバスター</li>
<li>経営陣のITリテラシ、風通しの良い組織文化、会社のミッション</li>
<li>セブンペイ</li>
<li>某元国営企業のアプリ</li>
<li>技術を分かってる経営層を増やすには？</li>
<li>前回同様に、やっぱり辞めちゃえばいい、辞める気で変える</li>
<li><a href="https://toyokeizai.net/articles/-/92606" target="_blank">Google TGIF</a></li>
<li>社内システムのリバースエンジニアリングから技術の価値を見せる</li>
<li>4章：これからの「強い開発組織」を考える のサマリ</li>
<li>5章：ソフトウェア・ファーストなキャリアを築くには のサマリ</li>
<li>組織を作るのはプロダクトを作る人、人事はサポート</li>
<li>組織に対するオーナーシップをどうやって持ってもらうか？</li>
<li>組織はコミュニティと一緒である</li>
<li>書籍の制作秘話、何が大変だったのか？</li>
<li>受託開発のように受け身で執筆してしまっていた</li>
<li>ペルソナを後で書いた</li>
<li>書籍が、自分の分身になっていなかった</li>
<li>3万字を捨てる決断</li>
<li><a href="https://2019.pmconf.jp" target="_blank">プロダクトマネージャーカンファレンス 2019</a></li>
<li>プロダクトマネージャーカンファレンスを始めたきっかけ</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>22. ソフトウェア・ファースト w/ takoratta</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/" target="_blank"&gt;ソフトウェア・ファースト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.mu/softwarefirst" target="_blank"&gt;製作委員会のnote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;書籍執筆の動機&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oreilly.co.jp/books/9784873118482/" target="_blank"&gt;エンジニアのためのマネジメントキャリアパス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DXという言葉は使いたくなかった&lt;/li&gt;
&lt;li&gt;ソフトウェア・ファーストという名前がついた経緯&lt;/li&gt;
&lt;li&gt;モバイルファースト、AIファーストとの対比&lt;/li&gt;
&lt;li&gt;ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける&lt;/li&gt;
&lt;li&gt;トランスフォーメーションより変革という言葉&lt;/li&gt;
&lt;li&gt;人と組織を変える気がないDX&lt;/li&gt;
&lt;li&gt;RPAは変革の途中であり、小手先の技術&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ja.wikipedia.org/wiki/4GL" target="_blank"&gt;4GL&lt;/a&gt;や&lt;a href="http://e-words.jp/w/EUC-1.html" target="_blank"&gt;EUC&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;エンプラの技術的負債の解消？&lt;/li&gt;
&lt;li&gt;事業会社がSIerへ丸投げするのは、負債の発生&lt;/li&gt;
&lt;li&gt;内製化、手の内化&lt;/li&gt;
&lt;li&gt;メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える&lt;/li&gt;
&lt;li&gt;常に触り続けるのが、負債化を避けるのは王道&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shuuji3.github.io/eng-practices/" target="_blank"&gt;Google エンジニアリング・プラクティス ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1章 ソフトウェアファースト のサマリ&lt;/li&gt;
&lt;li&gt;2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ&lt;/li&gt;
&lt;li&gt;日本でIT産業の競争力を失った理由&lt;/li&gt;
&lt;li&gt;IT産業は製造業を模倣しているが、実際は模倣できていない&lt;/li&gt;
&lt;li&gt;なぜ、製造業ではオーナーシップを保っているのか？&lt;/li&gt;
&lt;li&gt;ものづくりにおける技能オリンピック&lt;/li&gt;
&lt;li&gt;経営層がITを理解しているかどうか&lt;/li&gt;
&lt;li&gt;役員の中にソフトウェアがわかる人が何人いるか？&lt;/li&gt;
&lt;li&gt;ソフトウェアがわかるとは、どの程度まで理解していればいいのか？&lt;/li&gt;
&lt;li&gt;幹部や経営層にどのような教育をお願いすればいいのか？&lt;/li&gt;
&lt;li&gt;日本の経営者がITを理解できないのは、お友達が悪いから&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kunihirotanaka" target="_blank"&gt;さくらインターネットの田中さん&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ&lt;/li&gt;
&lt;li&gt;DXの勝者と敗者：ネットフリックスとブロックバスター&lt;/li&gt;
&lt;li&gt;経営陣のITリテラシ、風通しの良い組織文化、会社のミッション&lt;/li&gt;
&lt;li&gt;セブンペイ&lt;/li&gt;
&lt;li&gt;某元国営企業のアプリ&lt;/li&gt;
&lt;li&gt;技術を分かってる経営層を増やすには？&lt;/li&gt;
&lt;li&gt;前回同様に、やっぱり辞めちゃえばいい、辞める気で変える&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toyokeizai.net/articles/-/92606" target="_blank"&gt;Google TGIF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;社内システムのリバースエンジニアリングから技術の価値を見せる&lt;/li&gt;
&lt;li&gt;4章：これからの「強い開発組織」を考える のサマリ&lt;/li&gt;
&lt;li&gt;5章：ソフトウェア・ファーストなキャリアを築くには のサマリ&lt;/li&gt;
&lt;li&gt;組織を作るのはプロダクトを作る人、人事はサポート&lt;/li&gt;
&lt;li&gt;組織に対するオーナーシップをどうやって持ってもらうか？&lt;/li&gt;
&lt;li&gt;組織はコミュニティと一緒である&lt;/li&gt;
&lt;li&gt;書籍の制作秘話、何が大変だったのか？&lt;/li&gt;
&lt;li&gt;受託開発のように受け身で執筆してしまっていた&lt;/li&gt;
&lt;li&gt;ペルソナを後で書いた&lt;/li&gt;
&lt;li&gt;書籍が、自分の分身になっていなかった&lt;/li&gt;
&lt;li&gt;3万字を捨てる決断&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2019.pmconf.jp" target="_blank"&gt;プロダクトマネージャーカンファレンス 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;プロダクトマネージャーカンファレンスを始めたきっかけ&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://www.nikkeibp.co.jp/atclpubmkt/book/19/P89910/" target="_blank">ソフトウェア・ファースト</a></li>
<li><a href="https://note.mu/softwarefirst" target="_blank">製作委員会のnote</a></li>
<li>書籍執筆の動機</li>
<li><a href="https://www.oreilly.co.jp/books/9784873118482/" target="_blank">エンジニアのためのマネジメントキャリアパス</a></li>
<li>DXという言葉は使いたくなかった</li>
<li>ソフトウェア・ファーストという名前がついた経緯</li>
<li>モバイルファースト、AIファーストとの対比</li>
<li>ソフトウェアを活用をいかにできるかを、企画から運用まで考え続ける</li>
<li>トランスフォーメーションより変革という言葉</li>
<li>人と組織を変える気がないDX</li>
<li>RPAは変革の途中であり、小手先の技術</li>
<li>
<a href="https://ja.wikipedia.org/wiki/4GL" target="_blank">4GL</a>や<a href="http://e-words.jp/w/EUC-1.html" target="_blank">EUC</a>
</li>
<li>エンプラの技術的負債の解消？</li>
<li>事業会社がSIerへ丸投げするのは、負債の発生</li>
<li>内製化、手の内化</li>
<li>メンテできるかは、技術的にのみならず、やりたいかどうかも含めて考える</li>
<li>常に触り続けるのが、負債化を避けるのは王道</li>
<li><a href="https://shuuji3.github.io/eng-practices/" target="_blank">Google エンジニアリング・プラクティス ドキュメント</a></li>
<li>1章 ソフトウェアファースト のサマリ</li>
<li>2章 IT・ネットの“20年戦争”に負けた日本の課題と光明 のサマリ</li>
<li>日本でIT産業の競争力を失った理由</li>
<li>IT産業は製造業を模倣しているが、実際は模倣できていない</li>
<li>なぜ、製造業ではオーナーシップを保っているのか？</li>
<li>ものづくりにおける技能オリンピック</li>
<li>経営層がITを理解しているかどうか</li>
<li>役員の中にソフトウェアがわかる人が何人いるか？</li>
<li>ソフトウェアがわかるとは、どの程度まで理解していればいいのか？</li>
<li>幹部や経営層にどのような教育をお願いすればいいのか？</li>
<li>日本の経営者がITを理解できないのは、お友達が悪いから</li>
<li><a href="https://twitter.com/kunihirotanaka" target="_blank">さくらインターネットの田中さん</a></li>
<li>3章 ソフトウェア・ファーストの実践に必要な変革 のサマリ</li>
<li>DXの勝者と敗者：ネットフリックスとブロックバスター</li>
<li>経営陣のITリテラシ、風通しの良い組織文化、会社のミッション</li>
<li>セブンペイ</li>
<li>某元国営企業のアプリ</li>
<li>技術を分かってる経営層を増やすには？</li>
<li>前回同様に、やっぱり辞めちゃえばいい、辞める気で変える</li>
<li><a href="https://toyokeizai.net/articles/-/92606" target="_blank">Google TGIF</a></li>
<li>社内システムのリバースエンジニアリングから技術の価値を見せる</li>
<li>4章：これからの「強い開発組織」を考える のサマリ</li>
<li>5章：ソフトウェア・ファーストなキャリアを築くには のサマリ</li>
<li>組織を作るのはプロダクトを作る人、人事はサポート</li>
<li>組織に対するオーナーシップをどうやって持ってもらうか？</li>
<li>組織はコミュニティと一緒である</li>
<li>書籍の制作秘話、何が大変だったのか？</li>
<li>受託開発のように受け身で執筆してしまっていた</li>
<li>ペルソナを後で書いた</li>
<li>書籍が、自分の分身になっていなかった</li>
<li>3万字を捨てる決断</li>
<li><a href="https://2019.pmconf.jp" target="_blank">プロダクトマネージャーカンファレンス 2019</a></li>
<li>プロダクトマネージャーカンファレンスを始めたきっかけ</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/22</guid>
      <pubDate>Mon, 14 Oct 2019 01:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:15:45</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/8a07fc3e-097f-4675-a437-5685b8ed02d1.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="72729495"/>
    </item>
    <item>
      <title>21. Segment Routing v6 とは何か？ w/ slankdev</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>Segment Routingとはそもそも何か？</li>
<li>Segmentはどういう単位か？</li>
<li>Source Routingとの関連は？</li>
<li>Segment Routingで、どういう問題が解けるのか？</li>
<li>現在のバックボーンネットワークにおけるMPLS</li>
<li>MPLSでネットワークを構成したときの課題</li>
<li>Segment RoutingだとNetwork Nodeが、よりステートレス</li>
<li>Segment Routing MPLSの動きは？</li>
<li>Segment Routing v6では、どういう拡張ヘッダを付与する？</li>
<li>Segment Routing Header(SRH)</li>
<li>Segment IDは128bit</li>
<li>SRHはネットワークノードで剥がすのか？</li>
<li>Segment Routingだからこその特徴は？</li>
<li>SRv6は世の中でどういうフェーズか？</li>
<li>IETF側で基本的な部分は決まってきている</li>
<li>SRv6の実装状況はどうか？</li>
<li>Juniperの指摘はSegment IDが広いという点</li>
<li>Kamueeって何でしたっけ？</li>
<li>InteropにおけるShownetとは？</li>
<li>InteropでKamueeをどう組み込んだ？</li>
<li>Service Chain周りで組み込んだ</li>
<li>Service Chainでは、どんな機能がつながった？</li>
<li>SRv6だと、Security Functionと上手くいかない部分がある</li>
<li>SR Proxyという機能</li>
<li>SRv6に対応していない機器が、SDHを見たときにどう動く？</li>
<li>SRv6の実装はどの辺が大変だった？</li>
<li>VRF(Virtual Routing and Forwarding)とは？</li>
<li>パケット作るのは簡単</li>
<li>VRFにおけるルーティングテーブルの選択ロジックは？</li>
<li>Kamueeのネットワークデバッグ機能とは？</li>
<li>SRv6の課題は？</li>
<li>ソフトウェアルータの課題は？</li>
<li>Segment Routingは自由研究のネタになる</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>21. Segment Routing v6 とは何か？ w/ slankdev</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;Segment Routingとはそもそも何か？&lt;/li&gt;
&lt;li&gt;Segmentはどういう単位か？&lt;/li&gt;
&lt;li&gt;Source Routingとの関連は？&lt;/li&gt;
&lt;li&gt;Segment Routingで、どういう問題が解けるのか？&lt;/li&gt;
&lt;li&gt;現在のバックボーンネットワークにおけるMPLS&lt;/li&gt;
&lt;li&gt;MPLSでネットワークを構成したときの課題&lt;/li&gt;
&lt;li&gt;Segment RoutingだとNetwork Nodeが、よりステートレス&lt;/li&gt;
&lt;li&gt;Segment Routing MPLSの動きは？&lt;/li&gt;
&lt;li&gt;Segment Routing v6では、どういう拡張ヘッダを付与する？&lt;/li&gt;
&lt;li&gt;Segment Routing Header(SRH)&lt;/li&gt;
&lt;li&gt;Segment IDは128bit&lt;/li&gt;
&lt;li&gt;SRHはネットワークノードで剥がすのか？&lt;/li&gt;
&lt;li&gt;Segment Routingだからこその特徴は？&lt;/li&gt;
&lt;li&gt;SRv6は世の中でどういうフェーズか？&lt;/li&gt;
&lt;li&gt;IETF側で基本的な部分は決まってきている&lt;/li&gt;
&lt;li&gt;SRv6の実装状況はどうか？&lt;/li&gt;
&lt;li&gt;Juniperの指摘はSegment IDが広いという点&lt;/li&gt;
&lt;li&gt;Kamueeって何でしたっけ？&lt;/li&gt;
&lt;li&gt;InteropにおけるShownetとは？&lt;/li&gt;
&lt;li&gt;InteropでKamueeをどう組み込んだ？&lt;/li&gt;
&lt;li&gt;Service Chain周りで組み込んだ&lt;/li&gt;
&lt;li&gt;Service Chainでは、どんな機能がつながった？&lt;/li&gt;
&lt;li&gt;SRv6だと、Security Functionと上手くいかない部分がある&lt;/li&gt;
&lt;li&gt;SR Proxyという機能&lt;/li&gt;
&lt;li&gt;SRv6に対応していない機器が、SDHを見たときにどう動く？&lt;/li&gt;
&lt;li&gt;SRv6の実装はどの辺が大変だった？&lt;/li&gt;
&lt;li&gt;VRF(Virtual Routing and Forwarding)とは？&lt;/li&gt;
&lt;li&gt;パケット作るのは簡単&lt;/li&gt;
&lt;li&gt;VRFにおけるルーティングテーブルの選択ロジックは？&lt;/li&gt;
&lt;li&gt;Kamueeのネットワークデバッグ機能とは？&lt;/li&gt;
&lt;li&gt;SRv6の課題は？&lt;/li&gt;
&lt;li&gt;ソフトウェアルータの課題は？&lt;/li&gt;
&lt;li&gt;Segment Routingは自由研究のネタになる&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>Segment Routingとはそもそも何か？</li>
<li>Segmentはどういう単位か？</li>
<li>Source Routingとの関連は？</li>
<li>Segment Routingで、どういう問題が解けるのか？</li>
<li>現在のバックボーンネットワークにおけるMPLS</li>
<li>MPLSでネットワークを構成したときの課題</li>
<li>Segment RoutingだとNetwork Nodeが、よりステートレス</li>
<li>Segment Routing MPLSの動きは？</li>
<li>Segment Routing v6では、どういう拡張ヘッダを付与する？</li>
<li>Segment Routing Header(SRH)</li>
<li>Segment IDは128bit</li>
<li>SRHはネットワークノードで剥がすのか？</li>
<li>Segment Routingだからこその特徴は？</li>
<li>SRv6は世の中でどういうフェーズか？</li>
<li>IETF側で基本的な部分は決まってきている</li>
<li>SRv6の実装状況はどうか？</li>
<li>Juniperの指摘はSegment IDが広いという点</li>
<li>Kamueeって何でしたっけ？</li>
<li>InteropにおけるShownetとは？</li>
<li>InteropでKamueeをどう組み込んだ？</li>
<li>Service Chain周りで組み込んだ</li>
<li>Service Chainでは、どんな機能がつながった？</li>
<li>SRv6だと、Security Functionと上手くいかない部分がある</li>
<li>SR Proxyという機能</li>
<li>SRv6に対応していない機器が、SDHを見たときにどう動く？</li>
<li>SRv6の実装はどの辺が大変だった？</li>
<li>VRF(Virtual Routing and Forwarding)とは？</li>
<li>パケット作るのは簡単</li>
<li>VRFにおけるルーティングテーブルの選択ロジックは？</li>
<li>Kamueeのネットワークデバッグ機能とは？</li>
<li>SRv6の課題は？</li>
<li>ソフトウェアルータの課題は？</li>
<li>Segment Routingは自由研究のネタになる</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/21</guid>
      <pubDate>Mon, 16 Sep 2019 05:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:46:12</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/bdc83b0e-b3b4-4377-b62e-07487a808bf6.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="44363023"/>
    </item>
    <item>
      <title>20. 技術力をいかに評価するか？インターンシップにおける採用・戦略とは？ w/ makoga</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>CTOの1日ってどんな感じですか？コードは書きますか？</li>
<li>会社の経営戦略と人事制度（等級制度）との関連</li>
<li>等級（グレード）ダウンってありえる？</li>
<li>報酬はどのように決定しているのか？</li>
<li>技術力評価制度はどのような全体像・プロセスなのか？</li>
<li>評価のすり合わせは、なぜ実施するのか？</li>
<li>評価者2人はどのように選定しているのか？</li>
<li>定量的な評価を最初になぜ導入したのか？</li>
<li>人の給料を決めたくない</li>
<li>評価制度とグレードの昇給ってどういう相関？</li>
<li>技術力評価制度の社内の満足感はどうか？</li>
<li>自分の成長につながるフィードバックをもらえるのが大事</li>
<li>評価する側にも学びが多い</li>
<li>Voyageグループでは開発チームごとに色を出して良い</li>
<li>全社での技術ガイドラインはあるのか？</li>
<li>ない、事業特性と技術特性を考慮して決める</li>
<li>流行りで技術選定しない</li>
<li>好きな技術をねじ込んでくる機会はあっていい</li>
<li>新しい技術を浸透するための勉強会などは自主的に発生する？</li>
<li>今までの延長業務でも、新しい技術を学び選択肢を増やす</li>
<li>グレードを上げる判断基準は何か？</li>
<li>CCFB(360度評価)の評価項目は何か？</li>
<li>AmazonのLeadership Principle</li>
<li>エンジニア職種以外に技術力評価制度を応用可能か？</li>
<li>(技術力評価制度の)全体振り返りはどのようにやっているのか？</li>
<li>次に活かすTry項目はどのように決定するのか？</li>
<li>評価制度も自分たちでエンジニアリングしていく</li>
<li>新卒・中途採用はどのように改善したのか？</li>
<li>中途向けの面接の同席から始めた</li>
<li>評価会を通じて、採用スキルが上がる</li>
<li>どのタイミングで、面接の同席を辞めたのか？</li>
<li>最悪な状況を理解して、そこさえならなければやり方を任せる</li>
<li>採用における最低のラインとは何か？</li>
<li>新卒研修をどのように変えていったのか？</li>
<li>新卒入社研修を結果的になくした</li>
<li>チームとして、新卒を受け入れて育てられるスキル0</li>
<li>アジャイル戦略室では何をしたのか？</li>
<li>アジャイルは思想</li>
<li>振り返りの文化を根付かせる</li>
<li>振り返りでよく話す人、あまり話さない人</li>
<li>インターンシップ面白すぎでは？どのように決めているのか？</li>
<li>いかにインターンで、学生向けに目立つか？</li>
<li>講義をしっかりすることで学生に訴求した</li>
<li><a href="https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360" target="_blank">エンジニア募集中</a></li>
<li>2019/8/31 builderscon のランチセッションで <a href="https://fukabori.fm/ajito.fm" target="_blank">ajito.fm</a> の公開収録！</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>20. 技術力をいかに評価するか？インターンシップにおける採用・戦略とは？ w/ makoga</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;CTOの1日ってどんな感じですか？コードは書きますか？&lt;/li&gt;
&lt;li&gt;会社の経営戦略と人事制度（等級制度）との関連&lt;/li&gt;
&lt;li&gt;等級（グレード）ダウンってありえる？&lt;/li&gt;
&lt;li&gt;報酬はどのように決定しているのか？&lt;/li&gt;
&lt;li&gt;技術力評価制度はどのような全体像・プロセスなのか？&lt;/li&gt;
&lt;li&gt;評価のすり合わせは、なぜ実施するのか？&lt;/li&gt;
&lt;li&gt;評価者2人はどのように選定しているのか？&lt;/li&gt;
&lt;li&gt;定量的な評価を最初になぜ導入したのか？&lt;/li&gt;
&lt;li&gt;人の給料を決めたくない&lt;/li&gt;
&lt;li&gt;評価制度とグレードの昇給ってどういう相関？&lt;/li&gt;
&lt;li&gt;技術力評価制度の社内の満足感はどうか？&lt;/li&gt;
&lt;li&gt;自分の成長につながるフィードバックをもらえるのが大事&lt;/li&gt;
&lt;li&gt;評価する側にも学びが多い&lt;/li&gt;
&lt;li&gt;Voyageグループでは開発チームごとに色を出して良い&lt;/li&gt;
&lt;li&gt;全社での技術ガイドラインはあるのか？&lt;/li&gt;
&lt;li&gt;ない、事業特性と技術特性を考慮して決める&lt;/li&gt;
&lt;li&gt;流行りで技術選定しない&lt;/li&gt;
&lt;li&gt;好きな技術をねじ込んでくる機会はあっていい&lt;/li&gt;
&lt;li&gt;新しい技術を浸透するための勉強会などは自主的に発生する？&lt;/li&gt;
&lt;li&gt;今までの延長業務でも、新しい技術を学び選択肢を増やす&lt;/li&gt;
&lt;li&gt;グレードを上げる判断基準は何か？&lt;/li&gt;
&lt;li&gt;CCFB(360度評価)の評価項目は何か？&lt;/li&gt;
&lt;li&gt;AmazonのLeadership Principle&lt;/li&gt;
&lt;li&gt;エンジニア職種以外に技術力評価制度を応用可能か？&lt;/li&gt;
&lt;li&gt;(技術力評価制度の)全体振り返りはどのようにやっているのか？&lt;/li&gt;
&lt;li&gt;次に活かすTry項目はどのように決定するのか？&lt;/li&gt;
&lt;li&gt;評価制度も自分たちでエンジニアリングしていく&lt;/li&gt;
&lt;li&gt;新卒・中途採用はどのように改善したのか？&lt;/li&gt;
&lt;li&gt;中途向けの面接の同席から始めた&lt;/li&gt;
&lt;li&gt;評価会を通じて、採用スキルが上がる&lt;/li&gt;
&lt;li&gt;どのタイミングで、面接の同席を辞めたのか？&lt;/li&gt;
&lt;li&gt;最悪な状況を理解して、そこさえならなければやり方を任せる&lt;/li&gt;
&lt;li&gt;採用における最低のラインとは何か？&lt;/li&gt;
&lt;li&gt;新卒研修をどのように変えていったのか？&lt;/li&gt;
&lt;li&gt;新卒入社研修を結果的になくした&lt;/li&gt;
&lt;li&gt;チームとして、新卒を受け入れて育てられるスキル0&lt;/li&gt;
&lt;li&gt;アジャイル戦略室では何をしたのか？&lt;/li&gt;
&lt;li&gt;アジャイルは思想&lt;/li&gt;
&lt;li&gt;振り返りの文化を根付かせる&lt;/li&gt;
&lt;li&gt;振り返りでよく話す人、あまり話さない人&lt;/li&gt;
&lt;li&gt;インターンシップ面白すぎでは？どのように決めているのか？&lt;/li&gt;
&lt;li&gt;いかにインターンで、学生向けに目立つか？&lt;/li&gt;
&lt;li&gt;講義をしっかりすることで学生に訴求した&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360" target="_blank"&gt;エンジニア募集中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/8/31 builderscon のランチセッションで &lt;a href="https://fukabori.fm/ajito.fm" target="_blank"&gt;ajito.fm&lt;/a&gt; の公開収録！&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>CTOの1日ってどんな感じですか？コードは書きますか？</li>
<li>会社の経営戦略と人事制度（等級制度）との関連</li>
<li>等級（グレード）ダウンってありえる？</li>
<li>報酬はどのように決定しているのか？</li>
<li>技術力評価制度はどのような全体像・プロセスなのか？</li>
<li>評価のすり合わせは、なぜ実施するのか？</li>
<li>評価者2人はどのように選定しているのか？</li>
<li>定量的な評価を最初になぜ導入したのか？</li>
<li>人の給料を決めたくない</li>
<li>評価制度とグレードの昇給ってどういう相関？</li>
<li>技術力評価制度の社内の満足感はどうか？</li>
<li>自分の成長につながるフィードバックをもらえるのが大事</li>
<li>評価する側にも学びが多い</li>
<li>Voyageグループでは開発チームごとに色を出して良い</li>
<li>全社での技術ガイドラインはあるのか？</li>
<li>ない、事業特性と技術特性を考慮して決める</li>
<li>流行りで技術選定しない</li>
<li>好きな技術をねじ込んでくる機会はあっていい</li>
<li>新しい技術を浸透するための勉強会などは自主的に発生する？</li>
<li>今までの延長業務でも、新しい技術を学び選択肢を増やす</li>
<li>グレードを上げる判断基準は何か？</li>
<li>CCFB(360度評価)の評価項目は何か？</li>
<li>AmazonのLeadership Principle</li>
<li>エンジニア職種以外に技術力評価制度を応用可能か？</li>
<li>(技術力評価制度の)全体振り返りはどのようにやっているのか？</li>
<li>次に活かすTry項目はどのように決定するのか？</li>
<li>評価制度も自分たちでエンジニアリングしていく</li>
<li>新卒・中途採用はどのように改善したのか？</li>
<li>中途向けの面接の同席から始めた</li>
<li>評価会を通じて、採用スキルが上がる</li>
<li>どのタイミングで、面接の同席を辞めたのか？</li>
<li>最悪な状況を理解して、そこさえならなければやり方を任せる</li>
<li>採用における最低のラインとは何か？</li>
<li>新卒研修をどのように変えていったのか？</li>
<li>新卒入社研修を結果的になくした</li>
<li>チームとして、新卒を受け入れて育てられるスキル0</li>
<li>アジャイル戦略室では何をしたのか？</li>
<li>アジャイルは思想</li>
<li>振り返りの文化を根付かせる</li>
<li>振り返りでよく話す人、あまり話さない人</li>
<li>インターンシップ面白すぎでは？どのように決めているのか？</li>
<li>いかにインターンで、学生向けに目立つか？</li>
<li>講義をしっかりすることで学生に訴求した</li>
<li><a href="https://hrmos.co/pages/voyagegroup/jobs?category=1260098130969743360" target="_blank">エンジニア募集中</a></li>
<li>2019/8/31 builderscon のランチセッションで <a href="https://fukabori.fm/ajito.fm" target="_blank">ajito.fm</a> の公開収録！</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/20</guid>
      <pubDate>Sun, 28 Jul 2019 06:50:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:00:35</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/43f8eb98-a3f4-4ada-b222-9c9fd42f961d.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="58175738"/>
    </item>
    <item>
      <title>19. エンジニアリング組織を取り巻く変化とは？ w/ hiroki_daichi</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://anchor.fm/em-fm" target="_blank">EM.FM</a></li>
<li><a href="https://gihyo.jp/book/2018/978-4-7741-9605-3" target="_blank">エンジニアリング組織論への招待</a></li>
<li>エンジニアリングの定義とは？</li>
<li>エンジニアリングとは不確実性を減らすプロセス</li>
<li>間に落ちてる仕事</li>
<li>多くの仕事で出くわす人の多くは良い人</li>
<li>構造によって良い人たちが感情的な対立を起こしている</li>
<li>透明人間、構造の力、空気、アーキテクチャ</li>
<li>コードから書いた人、気持ちがわかるようになってきた</li>
<li>一番負債はコード変更履歴からTrackしていくのは見栄えがいい</li>
<li><a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity" target="_blank">Cyclomatic complexity</a></li>
<li>知らない、わからないという恐怖は根源的なもの</li>
<li>人間はハードウェアの機能として、第一に動物である</li>
<li>本能は漏れのある抽象化をして、理性的な面を描いている</li>
<li>その人のことが嫌いだよね、ってのを一般論として話す</li>
<li>多くの問題は学校の問題ほど難しくない</li>
<li>問題発見をし、明晰化する学問が弱い</li>
<li>バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に</li>
<li>思考のリファクタリングをすると外部入出力は変わるのか？</li>
<li>目的という抽象をもって、手段という階層をリファクタリングする</li>
<li>Developer ExperienceとDigital Transformationという2つのDXとは？</li>
<li>内製化はいままで外部に持っていた異質なものを取り込む過程である</li>
<li>エンジニアがビジネスのラインに自然に入り込んでいく</li>
<li>マーケタもSQLを書く</li>
<li>コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程</li>
<li>組織というベクトルだけで解を出せないが、別の軸から解を出せる</li>
<li>仕様を決めることと、ソフトウェアを書くことが同じになっていく</li>
<li>文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる</li>
<li>ハレーションを恐れすぎると何もしなくなる</li>
<li>エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？</li>
<li>1,2回転職したらいいんじゃないか</li>
<li>ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ</li>
<li>シンプルを作るのは非常に難しい</li>
<li>ソフトウェアに社内事情を組み込みすぎている</li>
<li>マーケットの原理で物事を動かせない</li>
<li>なぜエンジニアが流出するのか？</li>
<li>正当なリスペクト、周りに優秀な人がいる、透明性のある社風</li>
<li>価値観が違うと、甘やかすことすらできない</li>
<li>その人が何を求めているのか紳士に向き合う</li>
<li>なんで辞めた人に理由を聞かないの？</li>
<li>リスペクトっていう概念が理解されていない問題</li>
<li>尊敬しているというのは、その人に興味を持ち、理解する過程である</li>
<li><a href="https://rector.co.jp/" target="_blank">rector</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>19. エンジニアリング組織を取り巻く変化とは？ w/ hiroki_daichi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://anchor.fm/em-fm" target="_blank"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gihyo.jp/book/2018/978-4-7741-9605-3" target="_blank"&gt;エンジニアリング組織論への招待&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;エンジニアリングの定義とは？&lt;/li&gt;
&lt;li&gt;エンジニアリングとは不確実性を減らすプロセス&lt;/li&gt;
&lt;li&gt;間に落ちてる仕事&lt;/li&gt;
&lt;li&gt;多くの仕事で出くわす人の多くは良い人&lt;/li&gt;
&lt;li&gt;構造によって良い人たちが感情的な対立を起こしている&lt;/li&gt;
&lt;li&gt;透明人間、構造の力、空気、アーキテクチャ&lt;/li&gt;
&lt;li&gt;コードから書いた人、気持ちがわかるようになってきた&lt;/li&gt;
&lt;li&gt;一番負債はコード変更履歴からTrackしていくのは見栄えがいい&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity" target="_blank"&gt;Cyclomatic complexity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;知らない、わからないという恐怖は根源的なもの&lt;/li&gt;
&lt;li&gt;人間はハードウェアの機能として、第一に動物である&lt;/li&gt;
&lt;li&gt;本能は漏れのある抽象化をして、理性的な面を描いている&lt;/li&gt;
&lt;li&gt;その人のことが嫌いだよね、ってのを一般論として話す&lt;/li&gt;
&lt;li&gt;多くの問題は学校の問題ほど難しくない&lt;/li&gt;
&lt;li&gt;問題発見をし、明晰化する学問が弱い&lt;/li&gt;
&lt;li&gt;バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に&lt;/li&gt;
&lt;li&gt;思考のリファクタリングをすると外部入出力は変わるのか？&lt;/li&gt;
&lt;li&gt;目的という抽象をもって、手段という階層をリファクタリングする&lt;/li&gt;
&lt;li&gt;Developer ExperienceとDigital Transformationという2つのDXとは？&lt;/li&gt;
&lt;li&gt;内製化はいままで外部に持っていた異質なものを取り込む過程である&lt;/li&gt;
&lt;li&gt;エンジニアがビジネスのラインに自然に入り込んでいく&lt;/li&gt;
&lt;li&gt;マーケタもSQLを書く&lt;/li&gt;
&lt;li&gt;コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程&lt;/li&gt;
&lt;li&gt;組織というベクトルだけで解を出せないが、別の軸から解を出せる&lt;/li&gt;
&lt;li&gt;仕様を決めることと、ソフトウェアを書くことが同じになっていく&lt;/li&gt;
&lt;li&gt;文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる&lt;/li&gt;
&lt;li&gt;ハレーションを恐れすぎると何もしなくなる&lt;/li&gt;
&lt;li&gt;エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？&lt;/li&gt;
&lt;li&gt;1,2回転職したらいいんじゃないか&lt;/li&gt;
&lt;li&gt;ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ&lt;/li&gt;
&lt;li&gt;シンプルを作るのは非常に難しい&lt;/li&gt;
&lt;li&gt;ソフトウェアに社内事情を組み込みすぎている&lt;/li&gt;
&lt;li&gt;マーケットの原理で物事を動かせない&lt;/li&gt;
&lt;li&gt;なぜエンジニアが流出するのか？&lt;/li&gt;
&lt;li&gt;正当なリスペクト、周りに優秀な人がいる、透明性のある社風&lt;/li&gt;
&lt;li&gt;価値観が違うと、甘やかすことすらできない&lt;/li&gt;
&lt;li&gt;その人が何を求めているのか紳士に向き合う&lt;/li&gt;
&lt;li&gt;なんで辞めた人に理由を聞かないの？&lt;/li&gt;
&lt;li&gt;リスペクトっていう概念が理解されていない問題&lt;/li&gt;
&lt;li&gt;尊敬しているというのは、その人に興味を持ち、理解する過程である&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rector.co.jp/" target="_blank"&gt;rector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://anchor.fm/em-fm" target="_blank">EM.FM</a></li>
<li><a href="https://gihyo.jp/book/2018/978-4-7741-9605-3" target="_blank">エンジニアリング組織論への招待</a></li>
<li>エンジニアリングの定義とは？</li>
<li>エンジニアリングとは不確実性を減らすプロセス</li>
<li>間に落ちてる仕事</li>
<li>多くの仕事で出くわす人の多くは良い人</li>
<li>構造によって良い人たちが感情的な対立を起こしている</li>
<li>透明人間、構造の力、空気、アーキテクチャ</li>
<li>コードから書いた人、気持ちがわかるようになってきた</li>
<li>一番負債はコード変更履歴からTrackしていくのは見栄えがいい</li>
<li><a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity" target="_blank">Cyclomatic complexity</a></li>
<li>知らない、わからないという恐怖は根源的なもの</li>
<li>人間はハードウェアの機能として、第一に動物である</li>
<li>本能は漏れのある抽象化をして、理性的な面を描いている</li>
<li>その人のことが嫌いだよね、ってのを一般論として話す</li>
<li>多くの問題は学校の問題ほど難しくない</li>
<li>問題発見をし、明晰化する学問が弱い</li>
<li>バイトを100人動かすマニュアルを書くより、EC2インスタンスを動かすほうが簡単に</li>
<li>思考のリファクタリングをすると外部入出力は変わるのか？</li>
<li>目的という抽象をもって、手段という階層をリファクタリングする</li>
<li>Developer ExperienceとDigital Transformationという2つのDXとは？</li>
<li>内製化はいままで外部に持っていた異質なものを取り込む過程である</li>
<li>エンジニアがビジネスのラインに自然に入り込んでいく</li>
<li>マーケタもSQLを書く</li>
<li>コンピュータが具体的な仕事から、より抽象的な仕事をしていく過程</li>
<li>組織というベクトルだけで解を出せないが、別の軸から解を出せる</li>
<li>仕様を決めることと、ソフトウェアを書くことが同じになっていく</li>
<li>文化的なギャップを順番に溶けていくように進めると良いが、一気にいくとハレーションが起きる</li>
<li>ハレーションを恐れすぎると何もしなくなる</li>
<li>エンプラに属しているエンジニアはどうやってこの先生きのこるべきか？</li>
<li>1,2回転職したらいいんじゃないか</li>
<li>ロイヤリティからエンゲージメントへ、労働者と使役側が対等な関係へ</li>
<li>シンプルを作るのは非常に難しい</li>
<li>ソフトウェアに社内事情を組み込みすぎている</li>
<li>マーケットの原理で物事を動かせない</li>
<li>なぜエンジニアが流出するのか？</li>
<li>正当なリスペクト、周りに優秀な人がいる、透明性のある社風</li>
<li>価値観が違うと、甘やかすことすらできない</li>
<li>その人が何を求めているのか紳士に向き合う</li>
<li>なんで辞めた人に理由を聞かないの？</li>
<li>リスペクトっていう概念が理解されていない問題</li>
<li>尊敬しているというのは、その人に興味を持ち、理解する過程である</li>
<li><a href="https://rector.co.jp/" target="_blank">rector</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/19</guid>
      <pubDate>Tue, 09 Jul 2019 07:10:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:04:02</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/480e2314-4a03-4bae-9ca9-b7dce5679305.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="61482213"/>
    </item>
    <item>
      <title>18. どのようにDX支援・アジャイル開発・スクラムを進めているのか？ w/ sorano_tarou</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>アジャイル開発で採用しているフレームワークは何か？</li>
<li>スクラム、XP、モブプロ</li>
<li>スプリントのタイムボックスは？</li>
<li>補足: <a href="http://e-words.jp/w/POC.html" target="_blank">POCとは</a>
</li>
<li>スプリントプランニングどのぐらいの時間をかける？</li>
<li>なぜ、1日スプリントにしたのか？</li>
<li>スプリントプランニングには、SM/PO/Devの誰が参加する？</li>
<li>自分たちのモノ（社内のシステムなど）を作るのを並行してやる</li>
<li>空いている時間で新しい技術を触り続ける</li>
<li>デザイン思考のワークショップには、開発チームが参加する？</li>
<li>アイデアを本当に形にできるか、というのを重視ししている</li>
<li>開発時にお客様は同席する？</li>
<li>プロキシPOを立てることはあるか？</li>
<li>プロダクトバックログはいつ作っているのか？</li>
<li>プロダクトバックログへのアイデア貼り付けはいつやっても良い</li>
<li>アイデアの粒度はどの程度で書くか？</li>
<li>最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない</li>
<li>学習専用の時間はあえて確保しているのか？</li>
<li>アウトプットと同じぐらい、次のインプット時間が必要と考えている</li>
<li>モブチームはどのように取るタスクを選ぶのか？</li>
<li>Definition of Done、Acceptance Criteriaはどのように規定しているのか？</li>
<li>自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している</li>
<li>振り返りの手法は何を使うか？</li>
<li><a href="https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef" target="_blank">Fun, Done, Learn</a></li>
<li>振り返りのコメントはどのようなものが出るのか？</li>
<li>わかりません、というのを自信を持って言いたい</li>
<li>各モブごとの振り返りと、全チームの振り返り</li>
<li>Tryを蓄積していく、TryのRefinement</li>
<li>インセプションデッキは作るのか？いつ作るのか？</li>
<li>デザイン思考のワークショップはどの程度実施するのか？</li>
<li>POC開発・検証後はどのように進めていくのか？</li>
<li>チームビルディングはどのタイミングで、何を実施するか？</li>
<li>オンボーディング向けに気をつけていることはあるか？</li>
<li>プログラミング経験ゼロの人向けの育成モブ</li>
<li>KDDI DIGITAL GATEでエンジニア募集中</li>
<li>どんなエンジニアに来て欲しいか？</li>
<li><a href="https://codebase.connpass.com/event/134947/" target="_blank">アジャイル開発体験会</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>18. どのようにDX支援・アジャイル開発・スクラムを進めているのか？ w/ sorano_tarou</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;アジャイル開発で採用しているフレームワークは何か？&lt;/li&gt;
&lt;li&gt;スクラム、XP、モブプロ&lt;/li&gt;
&lt;li&gt;スプリントのタイムボックスは？&lt;/li&gt;
&lt;li&gt;補足: &lt;a href="http://e-words.jp/w/POC.html" target="_blank"&gt;POCとは&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;スプリントプランニングどのぐらいの時間をかける？&lt;/li&gt;
&lt;li&gt;なぜ、1日スプリントにしたのか？&lt;/li&gt;
&lt;li&gt;スプリントプランニングには、SM/PO/Devの誰が参加する？&lt;/li&gt;
&lt;li&gt;自分たちのモノ（社内のシステムなど）を作るのを並行してやる&lt;/li&gt;
&lt;li&gt;空いている時間で新しい技術を触り続ける&lt;/li&gt;
&lt;li&gt;デザイン思考のワークショップには、開発チームが参加する？&lt;/li&gt;
&lt;li&gt;アイデアを本当に形にできるか、というのを重視ししている&lt;/li&gt;
&lt;li&gt;開発時にお客様は同席する？&lt;/li&gt;
&lt;li&gt;プロキシPOを立てることはあるか？&lt;/li&gt;
&lt;li&gt;プロダクトバックログはいつ作っているのか？&lt;/li&gt;
&lt;li&gt;プロダクトバックログへのアイデア貼り付けはいつやっても良い&lt;/li&gt;
&lt;li&gt;アイデアの粒度はどの程度で書くか？&lt;/li&gt;
&lt;li&gt;最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない&lt;/li&gt;
&lt;li&gt;学習専用の時間はあえて確保しているのか？&lt;/li&gt;
&lt;li&gt;アウトプットと同じぐらい、次のインプット時間が必要と考えている&lt;/li&gt;
&lt;li&gt;モブチームはどのように取るタスクを選ぶのか？&lt;/li&gt;
&lt;li&gt;Definition of Done、Acceptance Criteriaはどのように規定しているのか？&lt;/li&gt;
&lt;li&gt;自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している&lt;/li&gt;
&lt;li&gt;振り返りの手法は何を使うか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef" target="_blank"&gt;Fun, Done, Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;振り返りのコメントはどのようなものが出るのか？&lt;/li&gt;
&lt;li&gt;わかりません、というのを自信を持って言いたい&lt;/li&gt;
&lt;li&gt;各モブごとの振り返りと、全チームの振り返り&lt;/li&gt;
&lt;li&gt;Tryを蓄積していく、TryのRefinement&lt;/li&gt;
&lt;li&gt;インセプションデッキは作るのか？いつ作るのか？&lt;/li&gt;
&lt;li&gt;デザイン思考のワークショップはどの程度実施するのか？&lt;/li&gt;
&lt;li&gt;POC開発・検証後はどのように進めていくのか？&lt;/li&gt;
&lt;li&gt;チームビルディングはどのタイミングで、何を実施するか？&lt;/li&gt;
&lt;li&gt;オンボーディング向けに気をつけていることはあるか？&lt;/li&gt;
&lt;li&gt;プログラミング経験ゼロの人向けの育成モブ&lt;/li&gt;
&lt;li&gt;KDDI DIGITAL GATEでエンジニア募集中&lt;/li&gt;
&lt;li&gt;どんなエンジニアに来て欲しいか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codebase.connpass.com/event/134947/" target="_blank"&gt;アジャイル開発体験会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>アジャイル開発で採用しているフレームワークは何か？</li>
<li>スクラム、XP、モブプロ</li>
<li>スプリントのタイムボックスは？</li>
<li>補足: <a href="http://e-words.jp/w/POC.html" target="_blank">POCとは</a>
</li>
<li>スプリントプランニングどのぐらいの時間をかける？</li>
<li>なぜ、1日スプリントにしたのか？</li>
<li>スプリントプランニングには、SM/PO/Devの誰が参加する？</li>
<li>自分たちのモノ（社内のシステムなど）を作るのを並行してやる</li>
<li>空いている時間で新しい技術を触り続ける</li>
<li>デザイン思考のワークショップには、開発チームが参加する？</li>
<li>アイデアを本当に形にできるか、というのを重視ししている</li>
<li>開発時にお客様は同席する？</li>
<li>プロキシPOを立てることはあるか？</li>
<li>プロダクトバックログはいつ作っているのか？</li>
<li>プロダクトバックログへのアイデア貼り付けはいつやっても良い</li>
<li>アイデアの粒度はどの程度で書くか？</li>
<li>最近のトレンド・技術を勉強しておかないと、顧客に価値を短期間で届けない</li>
<li>学習専用の時間はあえて確保しているのか？</li>
<li>アウトプットと同じぐらい、次のインプット時間が必要と考えている</li>
<li>モブチームはどのように取るタスクを選ぶのか？</li>
<li>Definition of Done、Acceptance Criteriaはどのように規定しているのか？</li>
<li>自分たちが状況を考えて、いまのお客様の欲しいものを仮説として考え、作り上げることを大事している</li>
<li>振り返りの手法は何を使うか？</li>
<li><a href="https://qiita.com/viva_tweet_x/items/7e279f41f4388d9162ef" target="_blank">Fun, Done, Learn</a></li>
<li>振り返りのコメントはどのようなものが出るのか？</li>
<li>わかりません、というのを自信を持って言いたい</li>
<li>各モブごとの振り返りと、全チームの振り返り</li>
<li>Tryを蓄積していく、TryのRefinement</li>
<li>インセプションデッキは作るのか？いつ作るのか？</li>
<li>デザイン思考のワークショップはどの程度実施するのか？</li>
<li>POC開発・検証後はどのように進めていくのか？</li>
<li>チームビルディングはどのタイミングで、何を実施するか？</li>
<li>オンボーディング向けに気をつけていることはあるか？</li>
<li>プログラミング経験ゼロの人向けの育成モブ</li>
<li>KDDI DIGITAL GATEでエンジニア募集中</li>
<li>どんなエンジニアに来て欲しいか？</li>
<li><a href="https://codebase.connpass.com/event/134947/" target="_blank">アジャイル開発体験会</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/18</guid>
      <pubDate>Sun, 23 Jun 2019 05:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:41:27</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/b3b45a57-47ed-4dce-af13-cfefce44baf9.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="39807686"/>
    </item>
    <item>
      <title>17. 本当にやれることを全部やってますか？ w/ takoratta</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>DECって会社は何をやっていた？</li>
<li>IBMと7人の小人達</li>
<li>メインフレームに対するアンチテーゼ、ミニコンピューター</li>
<li>NEC PC-9801が大流行した時代</li>
<li>この時代の日本のIT企業は何をしていたのか？</li>
<li>通産省とのタッグ</li>
<li>富士通、日立、NEC、日本IBMで市場を分け合っていた時代</li>
<li>ソフトウェアはハードウェアのおまけだった</li>
<li>SIerという名前が生まれてきた背景</li>
<li>当初は何と何をインテグレーションしていたのか？</li>
<li>トークンリングとイーサネット</li>
<li>90年代の日本の技術者は、どのような開発をしていた？</li>
<li>ユニコードがない時代なので、国際化は大変な仕事だった</li>
<li>IT業界の下請け構造はどの時期から発生しはじめたのか？</li>
<li>Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC" target="_blank">デヴィッド・カトラー</a></li>
<li>Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった</li>
<li>AppleTalkは素晴らしかった</li>
<li>90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった</li>
<li>オープンシステム流行の背景</li>
<li><a href="http://e-words.jp/w/EUC-1.html" target="_blank">エンドユーザーコンピューティング</a></li>
<li><a href="https://ja.wikipedia.org/wiki/4GL" target="_blank">4GL</a></li>
<li>なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？</li>
<li>UIのちょっとしたミスが製品全体の品質の疑いにつながる</li>
<li>一番やってはいけないのはリコール</li>
<li>現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える</li>
<li>ITに対する捉え方の違いが、国内・国外との差を広げたのではないか</li>
<li>ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？</li>
<li>科学・製造・ビジネス</li>
<li>経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった</li>
<li>日本と米国の状況は危機的、スピード感が違う</li>
<li>日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない</li>
<li>及川さんのエンタープライズ向けのDXセミナーは娯楽</li>
<li><a href="https://type.jp/et/feature/8350" target="_blank">静かに暮らしたい人たち</a></li>
<li>年功序列、終身雇用、企業内組合という三種の神器</li>
<li>安定を望む人も多いが、もうそんな場所はない</li>
<li>むしろ自分自身に自信を持てることが安定につながる</li>
<li>米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる</li>
<li>社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？</li>
<li>新しいことにチャレンジするコストよりも、転職するコストのが安い</li>
<li>みんな辞めればいい、そうすれば経営者は危機感を持つ</li>
<li><a href="https://en.wikipedia.org/wiki/Exit_interview" target="_blank">Exit Interview</a></li>
<li>人は会社と心中する必要はない</li>
<li>本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切</li>
<li>いつでもやめられる、けどやめない社員がいる会社は強い</li>
<li>辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？</li>
<li>井深さんの「説得工学」</li>
<li>足りないのはやり切る覚悟</li>
<li>一番必要なのはアントレプレナーシップ、起業家精神</li>
<li>本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？</li>
<li>オーナーシップを持って進めるのが少なくなってきているのではないか</li>
<li>日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？</li>
<li>他国のをまねして上手く仕上げて、外に出せばいい</li>
<li>スタートアップと同じことを、大企業でなぜできないのか？</li>
<li><a href="https://diamond.jp/articles/-/203881" target="_blank">アマゾンの成功から日本の部品メーカーが学ぶべき理由</a></li>
<li>最初のiPhoneにはSDKがなかった</li>
<li>まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略</li>
<li>どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？</li>
<li>リテール業界でAWSを使わなくなる傾向</li>
<li>IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム</li>
<li>Mircosoftの遡上である開発ツールのプラットフォーム化</li>
<li>部品メーカーも思想を変えれば、プラットフォーム化できる</li>
<li>nVidiaは部品メーカーからプラットフォーマーへの例</li>
<li>日本で足りない役割としてのBizDev、パートナー開拓</li>
<li>(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？</li>
<li>エンジニアとエンジニアじゃない人が組む社内ハッカソン</li>
<li>採用は一種の営業活動である</li>
<li>組織、環境を魅力的にして外に広報していく働きが必要</li>
<li>採用に本当に困ってるんだったら給料を上げればいい</li>
<li>エンジニアを引きつける3つの魅力</li>
<li>雇用条件・給与、プロダクト・ミッション、技術者としての面白さ</li>
<li>3つ出来なくても、1つは突き抜ければ良い</li>
<li>技術的に魅力的がないところには、優秀なエンジニアは来ない</li>
<li>エンジニアが他の職種と違うところ</li>
<li>高い課題設定を魅力設定として打ち出す</li>
<li>リファラル採用はやったほうがいい、なぜか？</li>
<li>本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク</li>
<li>「いやー僕はいいんだけど、こいつは誘えないな」というときの理由</li>
<li>大企業が変わらないと、日本は変わらない</li>
<li>エンタープライズから日本を変えていけると楽しいのではないか</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>17. 本当にやれることを全部やってますか？ w/ takoratta</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;DECって会社は何をやっていた？&lt;/li&gt;
&lt;li&gt;IBMと7人の小人達&lt;/li&gt;
&lt;li&gt;メインフレームに対するアンチテーゼ、ミニコンピューター&lt;/li&gt;
&lt;li&gt;NEC PC-9801が大流行した時代&lt;/li&gt;
&lt;li&gt;この時代の日本のIT企業は何をしていたのか？&lt;/li&gt;
&lt;li&gt;通産省とのタッグ&lt;/li&gt;
&lt;li&gt;富士通、日立、NEC、日本IBMで市場を分け合っていた時代&lt;/li&gt;
&lt;li&gt;ソフトウェアはハードウェアのおまけだった&lt;/li&gt;
&lt;li&gt;SIerという名前が生まれてきた背景&lt;/li&gt;
&lt;li&gt;当初は何と何をインテグレーションしていたのか？&lt;/li&gt;
&lt;li&gt;トークンリングとイーサネット&lt;/li&gt;
&lt;li&gt;90年代の日本の技術者は、どのような開発をしていた？&lt;/li&gt;
&lt;li&gt;ユニコードがない時代なので、国際化は大変な仕事だった&lt;/li&gt;
&lt;li&gt;IT業界の下請け構造はどの時期から発生しはじめたのか？&lt;/li&gt;
&lt;li&gt;Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC" target="_blank"&gt;デヴィッド・カトラー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった&lt;/li&gt;
&lt;li&gt;AppleTalkは素晴らしかった&lt;/li&gt;
&lt;li&gt;90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった&lt;/li&gt;
&lt;li&gt;オープンシステム流行の背景&lt;/li&gt;
&lt;li&gt;&lt;a href="http://e-words.jp/w/EUC-1.html" target="_blank"&gt;エンドユーザーコンピューティング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/4GL" target="_blank"&gt;4GL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？&lt;/li&gt;
&lt;li&gt;UIのちょっとしたミスが製品全体の品質の疑いにつながる&lt;/li&gt;
&lt;li&gt;一番やってはいけないのはリコール&lt;/li&gt;
&lt;li&gt;現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える&lt;/li&gt;
&lt;li&gt;ITに対する捉え方の違いが、国内・国外との差を広げたのではないか&lt;/li&gt;
&lt;li&gt;ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？&lt;/li&gt;
&lt;li&gt;科学・製造・ビジネス&lt;/li&gt;
&lt;li&gt;経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった&lt;/li&gt;
&lt;li&gt;日本と米国の状況は危機的、スピード感が違う&lt;/li&gt;
&lt;li&gt;日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない&lt;/li&gt;
&lt;li&gt;及川さんのエンタープライズ向けのDXセミナーは娯楽&lt;/li&gt;
&lt;li&gt;&lt;a href="https://type.jp/et/feature/8350" target="_blank"&gt;静かに暮らしたい人たち&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;年功序列、終身雇用、企業内組合という三種の神器&lt;/li&gt;
&lt;li&gt;安定を望む人も多いが、もうそんな場所はない&lt;/li&gt;
&lt;li&gt;むしろ自分自身に自信を持てることが安定につながる&lt;/li&gt;
&lt;li&gt;米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる&lt;/li&gt;
&lt;li&gt;社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？&lt;/li&gt;
&lt;li&gt;新しいことにチャレンジするコストよりも、転職するコストのが安い&lt;/li&gt;
&lt;li&gt;みんな辞めればいい、そうすれば経営者は危機感を持つ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Exit_interview" target="_blank"&gt;Exit Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;人は会社と心中する必要はない&lt;/li&gt;
&lt;li&gt;本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切&lt;/li&gt;
&lt;li&gt;いつでもやめられる、けどやめない社員がいる会社は強い&lt;/li&gt;
&lt;li&gt;辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？&lt;/li&gt;
&lt;li&gt;井深さんの「説得工学」&lt;/li&gt;
&lt;li&gt;足りないのはやり切る覚悟&lt;/li&gt;
&lt;li&gt;一番必要なのはアントレプレナーシップ、起業家精神&lt;/li&gt;
&lt;li&gt;本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？&lt;/li&gt;
&lt;li&gt;オーナーシップを持って進めるのが少なくなってきているのではないか&lt;/li&gt;
&lt;li&gt;日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？&lt;/li&gt;
&lt;li&gt;他国のをまねして上手く仕上げて、外に出せばいい&lt;/li&gt;
&lt;li&gt;スタートアップと同じことを、大企業でなぜできないのか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://diamond.jp/articles/-/203881" target="_blank"&gt;アマゾンの成功から日本の部品メーカーが学ぶべき理由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;最初のiPhoneにはSDKがなかった&lt;/li&gt;
&lt;li&gt;まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略&lt;/li&gt;
&lt;li&gt;どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？&lt;/li&gt;
&lt;li&gt;リテール業界でAWSを使わなくなる傾向&lt;/li&gt;
&lt;li&gt;IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム&lt;/li&gt;
&lt;li&gt;Mircosoftの遡上である開発ツールのプラットフォーム化&lt;/li&gt;
&lt;li&gt;部品メーカーも思想を変えれば、プラットフォーム化できる&lt;/li&gt;
&lt;li&gt;nVidiaは部品メーカーからプラットフォーマーへの例&lt;/li&gt;
&lt;li&gt;日本で足りない役割としてのBizDev、パートナー開拓&lt;/li&gt;
&lt;li&gt;(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？&lt;/li&gt;
&lt;li&gt;エンジニアとエンジニアじゃない人が組む社内ハッカソン&lt;/li&gt;
&lt;li&gt;採用は一種の営業活動である&lt;/li&gt;
&lt;li&gt;組織、環境を魅力的にして外に広報していく働きが必要&lt;/li&gt;
&lt;li&gt;採用に本当に困ってるんだったら給料を上げればいい&lt;/li&gt;
&lt;li&gt;エンジニアを引きつける3つの魅力&lt;/li&gt;
&lt;li&gt;雇用条件・給与、プロダクト・ミッション、技術者としての面白さ&lt;/li&gt;
&lt;li&gt;3つ出来なくても、1つは突き抜ければ良い&lt;/li&gt;
&lt;li&gt;技術的に魅力的がないところには、優秀なエンジニアは来ない&lt;/li&gt;
&lt;li&gt;エンジニアが他の職種と違うところ&lt;/li&gt;
&lt;li&gt;高い課題設定を魅力設定として打ち出す&lt;/li&gt;
&lt;li&gt;リファラル採用はやったほうがいい、なぜか？&lt;/li&gt;
&lt;li&gt;本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク&lt;/li&gt;
&lt;li&gt;「いやー僕はいいんだけど、こいつは誘えないな」というときの理由&lt;/li&gt;
&lt;li&gt;大企業が変わらないと、日本は変わらない&lt;/li&gt;
&lt;li&gt;エンタープライズから日本を変えていけると楽しいのではないか&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>DECって会社は何をやっていた？</li>
<li>IBMと7人の小人達</li>
<li>メインフレームに対するアンチテーゼ、ミニコンピューター</li>
<li>NEC PC-9801が大流行した時代</li>
<li>この時代の日本のIT企業は何をしていたのか？</li>
<li>通産省とのタッグ</li>
<li>富士通、日立、NEC、日本IBMで市場を分け合っていた時代</li>
<li>ソフトウェアはハードウェアのおまけだった</li>
<li>SIerという名前が生まれてきた背景</li>
<li>当初は何と何をインテグレーションしていたのか？</li>
<li>トークンリングとイーサネット</li>
<li>90年代の日本の技術者は、どのような開発をしていた？</li>
<li>ユニコードがない時代なので、国際化は大変な仕事だった</li>
<li>IT業界の下請け構造はどの時期から発生しはじめたのか？</li>
<li>Unixがのるワークステーション vs Windowsがのるパーソナルコンピューター</li>
<li><a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%82%AB%E3%83%88%E3%83%A9%E3%83%BC" target="_blank">デヴィッド・カトラー</a></li>
<li>Windows95のこの時代もUXが優れていたのはAppleだった、ただこの頃のMacは不安定だった</li>
<li>AppleTalkは素晴らしかった</li>
<li>90年代の日本のIT企業は強く、ソフトウェアの出来はとても良かった</li>
<li>オープンシステム流行の背景</li>
<li><a href="http://e-words.jp/w/EUC-1.html" target="_blank">エンドユーザーコンピューティング</a></li>
<li><a href="https://ja.wikipedia.org/wiki/4GL" target="_blank">4GL</a></li>
<li>なぜ、この時代の日本製品のソフトウェア品質が高かったのだろうか？</li>
<li>UIのちょっとしたミスが製品全体の品質の疑いにつながる</li>
<li>一番やってはいけないのはリコール</li>
<li>現代のWeb向けのサービスは、リリースまでに直すもの、リリースしてから直すものを分けて考える</li>
<li>ITに対する捉え方の違いが、国内・国外との差を広げたのではないか</li>
<li>ヨーロッパ、アメリカ、日本のソフトウェアの捉え方の違いは？</li>
<li>科学・製造・ビジネス</li>
<li>経営者自身がソフトウェアを攻めの道具として捉えたのが米国だった</li>
<li>日本と米国の状況は危機的、スピード感が違う</li>
<li>日本では、減ってきたもののIT/ソフトウェアの価値をまだ理解していない</li>
<li>及川さんのエンタープライズ向けのDXセミナーは娯楽</li>
<li><a href="https://type.jp/et/feature/8350" target="_blank">静かに暮らしたい人たち</a></li>
<li>年功序列、終身雇用、企業内組合という三種の神器</li>
<li>安定を望む人も多いが、もうそんな場所はない</li>
<li>むしろ自分自身に自信を持てることが安定につながる</li>
<li>米国的なジョブ型採用があるからこそ、社会・産業全体の最適化につながる</li>
<li>社内のマイノリティの動きを、いかにしてメインストリームにもっていくか？なぜ難しいのか？</li>
<li>新しいことにチャレンジするコストよりも、転職するコストのが安い</li>
<li>みんな辞めればいい、そうすれば経営者は危機感を持つ</li>
<li><a href="https://en.wikipedia.org/wiki/Exit_interview" target="_blank">Exit Interview</a></li>
<li>人は会社と心中する必要はない</li>
<li>本当に古い会社が変わらないといけない危機意識を持つために人材流動は大切</li>
<li>いつでもやめられる、けどやめない社員がいる会社は強い</li>
<li>辞める気になって会社に働きかけてみましょう、本当にやれることを全部やってますか？</li>
<li>井深さんの「説得工学」</li>
<li>足りないのはやり切る覚悟</li>
<li>一番必要なのはアントレプレナーシップ、起業家精神</li>
<li>本当にあなたが成し遂げたいときに、どこまで覚悟をもってやっていますか？</li>
<li>オーナーシップを持って進めるのが少なくなってきているのではないか</li>
<li>日本は、誰かがやったものをより良くやるので上手くいっていた民族なのでは？</li>
<li>他国のをまねして上手く仕上げて、外に出せばいい</li>
<li>スタートアップと同じことを、大企業でなぜできないのか？</li>
<li><a href="https://diamond.jp/articles/-/203881" target="_blank">アマゾンの成功から日本の部品メーカーが学ぶべき理由</a></li>
<li>最初のiPhoneにはSDKがなかった</li>
<li>まず自社の体験でユーザ体験を作り上げて、徐々に広げていく戦略</li>
<li>どのタイミングで、AmazonはAWSを始めようと判断したのだろうか？</li>
<li>リテール業界でAWSを使わなくなる傾向</li>
<li>IT業界でいうエコシステムは、プラットフォームが絶対に勝つエコシステム</li>
<li>Mircosoftの遡上である開発ツールのプラットフォーム化</li>
<li>部品メーカーも思想を変えれば、プラットフォーム化できる</li>
<li>nVidiaは部品メーカーからプラットフォーマーへの例</li>
<li>日本で足りない役割としてのBizDev、パートナー開拓</li>
<li>(エンプラで)内製したい若者が、上の人を説得するときにどう説得・行動すればよいか？</li>
<li>エンジニアとエンジニアじゃない人が組む社内ハッカソン</li>
<li>採用は一種の営業活動である</li>
<li>組織、環境を魅力的にして外に広報していく働きが必要</li>
<li>採用に本当に困ってるんだったら給料を上げればいい</li>
<li>エンジニアを引きつける3つの魅力</li>
<li>雇用条件・給与、プロダクト・ミッション、技術者としての面白さ</li>
<li>3つ出来なくても、1つは突き抜ければ良い</li>
<li>技術的に魅力的がないところには、優秀なエンジニアは来ない</li>
<li>エンジニアが他の職種と違うところ</li>
<li>高い課題設定を魅力設定として打ち出す</li>
<li>リファラル採用はやったほうがいい、なぜか？</li>
<li>本当に紹介できる・できないのリトマス試験紙になる = エンジニアのリテンションリスク</li>
<li>「いやー僕はいいんだけど、こいつは誘えないな」というときの理由</li>
<li>大企業が変わらないと、日本は変わらない</li>
<li>エンタープライズから日本を変えていけると楽しいのではないか</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/17</guid>
      <pubDate>Sat, 15 Jun 2019 04:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:27:01</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/e9330d82-6e06-4458-bf28-3c97104688df.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="83550458"/>
    </item>
    <item>
      <title>16. [番外編] NTTComでメンバーシップ雇用を抜けてスペシャリスト雇用に転向した話とか w/ yuyarin、shinji_abe</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="http://yuyarin.hatenablog.com/entry/2019/04/30/223004" target="_blank">NTTComを退職してNTTComに入社します</a></li>
<li><a href="https://www.security-design.jp/entry/2019/05/07/082119" target="_blank">NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。</a></li>
<li>メンバーシップ雇用とは何か？</li>
<li>スペシャリスト雇用とは何か？</li>
<li>変則ミッショングレードという制度</li>
<li><a href="https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf" target="_blank">Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～</a></li>
<li>メンバーシップ雇用は何が良くて、何が悪いのか？</li>
<li>特定のスキルを持った人の報酬が定義できない</li>
<li>市場価値と比べて低い給料になり、入社が減少し、退職が増加する</li>
<li>やりたいことが曖昧な場合には効果的</li>
<li><a href="https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k" target="_blank">Planned Happenstance Theory</a></li>
<li>スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる</li>
<li>スペシャリストである、となぜ公言しにくいのか？</li>
<li>役職定年、中途採用、転職に対するカウンターオファー（引き止め）</li>
<li>社内のエンジニアのモチベーションを上げたい</li>
<li>メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に</li>
<li>中途採用が上手くいく秘訣は何か？</li>
<li>自分たちの仕事が魅力的であることを発信する</li>
<li>採用制度を独自に作り上げる</li>
<li>技術試験を採用プロセスに含める</li>
<li>パケットキャプチャをあえて改ざんして、応募者に解析してもらう</li>
<li>本質的な理解をしているか、確かめる</li>
<li>バイナリで読めるのはBGPだけ</li>
<li>スペシャリストになって、何が具体的に変わったのか？</li>
<li>福利厚生は変化、お給料もある程度上がった</li>
<li>評価の仕組みが大きく変わった</li>
<li>評価の指標は、エンジニアリングマネージャーとすり合わせて決める</li>
<li>1年前の目標って古すぎないか？</li>
<li>給料爆上げ</li>
<li>隗より始めよ</li>
<li>働いてる環境ってどんな感じ？</li>
<li>Security Operation Centerでの個人環境</li>
<li>メモリは16GB</li>
<li>G Suite、Confluence、Jira、Slack</li>
<li>社内システムはクローズドなので、使いにくい</li>
<li><a href="https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32" target="_blank">アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base</a></li>
<li>会社の悪いところは？</li>
<li>プロフェッショナルな人材が、マネージャー層より上に少ない</li>
<li>Executiveの中途も進むと良い</li>
<li>雇用制度の違いによる利害の不一致</li>
<li><a href="https://fukabori.fm/episode/15" target="_blank">(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない</a></li>
<li>従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まるという課題にどう対処するか？</li>
<li>業務として、チームとして成果を出して経営へアピールすること</li>
<li>個人として転職活動を常日頃しておく</li>
<li>業界を盛り上げること</li>
<li>ラグビー部のおしかけってあった？</li>
<li>大手町の綱引き大会で優勝</li>
<li>ラグビー部社員はスペシャリスト</li>
<li>なんで、まだ会社に残っているの？</li>
<li>ジャパニーズ トラディッショナル ビッグ カンパニー</li>
<li>会社に対する愛はある</li>
<li>（難しい環境であっても）いかに変えていくのか、に面白みを感じる</li>
<li>契約と、それに基づいた評価の規定</li>
<li>対外発表を契約項目に含める</li>
<li>一定額の給与で裁量をもたせて、やらせてほしい</li>
<li>古くからある企業で、変わり始めてる事例を紹介するエピソード</li>
<li>（出演者全員）中途採用してます！</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>16. [番外編] NTTComでメンバーシップ雇用を抜けてスペシャリスト雇用に転向した話とか w/ yuyarin、shinji_abe</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://yuyarin.hatenablog.com/entry/2019/04/30/223004" target="_blank"&gt;NTTComを退職してNTTComに入社します&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.security-design.jp/entry/2019/05/07/082119" target="_blank"&gt;NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;メンバーシップ雇用とは何か？&lt;/li&gt;
&lt;li&gt;スペシャリスト雇用とは何か？&lt;/li&gt;
&lt;li&gt;変則ミッショングレードという制度&lt;/li&gt;
&lt;li&gt;&lt;a href="https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf" target="_blank"&gt;Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;メンバーシップ雇用は何が良くて、何が悪いのか？&lt;/li&gt;
&lt;li&gt;特定のスキルを持った人の報酬が定義できない&lt;/li&gt;
&lt;li&gt;市場価値と比べて低い給料になり、入社が減少し、退職が増加する&lt;/li&gt;
&lt;li&gt;やりたいことが曖昧な場合には効果的&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k" target="_blank"&gt;Planned Happenstance Theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる&lt;/li&gt;
&lt;li&gt;スペシャリストである、となぜ公言しにくいのか？&lt;/li&gt;
&lt;li&gt;役職定年、中途採用、転職に対するカウンターオファー（引き止め）&lt;/li&gt;
&lt;li&gt;社内のエンジニアのモチベーションを上げたい&lt;/li&gt;
&lt;li&gt;メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に&lt;/li&gt;
&lt;li&gt;中途採用が上手くいく秘訣は何か？&lt;/li&gt;
&lt;li&gt;自分たちの仕事が魅力的であることを発信する&lt;/li&gt;
&lt;li&gt;採用制度を独自に作り上げる&lt;/li&gt;
&lt;li&gt;技術試験を採用プロセスに含める&lt;/li&gt;
&lt;li&gt;パケットキャプチャをあえて改ざんして、応募者に解析してもらう&lt;/li&gt;
&lt;li&gt;本質的な理解をしているか、確かめる&lt;/li&gt;
&lt;li&gt;バイナリで読めるのはBGPだけ&lt;/li&gt;
&lt;li&gt;スペシャリストになって、何が具体的に変わったのか？&lt;/li&gt;
&lt;li&gt;福利厚生は変化、お給料もある程度上がった&lt;/li&gt;
&lt;li&gt;評価の仕組みが大きく変わった&lt;/li&gt;
&lt;li&gt;評価の指標は、エンジニアリングマネージャーとすり合わせて決める&lt;/li&gt;
&lt;li&gt;1年前の目標って古すぎないか？&lt;/li&gt;
&lt;li&gt;給料爆上げ&lt;/li&gt;
&lt;li&gt;隗より始めよ&lt;/li&gt;
&lt;li&gt;働いてる環境ってどんな感じ？&lt;/li&gt;
&lt;li&gt;Security Operation Centerでの個人環境&lt;/li&gt;
&lt;li&gt;メモリは16GB&lt;/li&gt;
&lt;li&gt;G Suite、Confluence、Jira、Slack&lt;/li&gt;
&lt;li&gt;社内システムはクローズドなので、使いにくい&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32" target="_blank"&gt;アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;会社の悪いところは？&lt;/li&gt;
&lt;li&gt;プロフェッショナルな人材が、マネージャー層より上に少ない&lt;/li&gt;
&lt;li&gt;Executiveの中途も進むと良い&lt;/li&gt;
&lt;li&gt;雇用制度の違いによる利害の不一致&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fukabori.fm/episode/15" target="_blank"&gt;(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まるという課題にどう対処するか？&lt;/li&gt;
&lt;li&gt;業務として、チームとして成果を出して経営へアピールすること&lt;/li&gt;
&lt;li&gt;個人として転職活動を常日頃しておく&lt;/li&gt;
&lt;li&gt;業界を盛り上げること&lt;/li&gt;
&lt;li&gt;ラグビー部のおしかけってあった？&lt;/li&gt;
&lt;li&gt;大手町の綱引き大会で優勝&lt;/li&gt;
&lt;li&gt;ラグビー部社員はスペシャリスト&lt;/li&gt;
&lt;li&gt;なんで、まだ会社に残っているの？&lt;/li&gt;
&lt;li&gt;ジャパニーズ トラディッショナル ビッグ カンパニー&lt;/li&gt;
&lt;li&gt;会社に対する愛はある&lt;/li&gt;
&lt;li&gt;（難しい環境であっても）いかに変えていくのか、に面白みを感じる&lt;/li&gt;
&lt;li&gt;契約と、それに基づいた評価の規定&lt;/li&gt;
&lt;li&gt;対外発表を契約項目に含める&lt;/li&gt;
&lt;li&gt;一定額の給与で裁量をもたせて、やらせてほしい&lt;/li&gt;
&lt;li&gt;古くからある企業で、変わり始めてる事例を紹介するエピソード&lt;/li&gt;
&lt;li&gt;（出演者全員）中途採用してます！&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="http://yuyarin.hatenablog.com/entry/2019/04/30/223004" target="_blank">NTTComを退職してNTTComに入社します</a></li>
<li><a href="https://www.security-design.jp/entry/2019/05/07/082119" target="_blank">NTTComを退職してスペシャリスト社員になって1年ちょっとたちました。</a></li>
<li>メンバーシップ雇用とは何か？</li>
<li>スペシャリスト雇用とは何か？</li>
<li>変則ミッショングレードという制度</li>
<li><a href="https://custom.cvent.com/1B8FF20CA3284DDD9E69582158291F1D/files/3a02956101504d519f5e5d9ff219bd54.pdf" target="_blank">Inside “Security Operation Center” ～セキュリティ人材を生かす５つの改革～</a></li>
<li>メンバーシップ雇用は何が良くて、何が悪いのか？</li>
<li>特定のスキルを持った人の報酬が定義できない</li>
<li>市場価値と比べて低い給料になり、入社が減少し、退職が増加する</li>
<li>やりたいことが曖昧な場合には効果的</li>
<li><a href="https://ja.wikipedia.org/wiki/%E8%A8%88%E7%94%BB%E7%9A%84%E5%81%B6%E7%99%BA%E6%80%A7%E7%90%86%E8%AB%96k" target="_blank">Planned Happenstance Theory</a></li>
<li>スペシャリストとメンバーシップを選べる、移動できるような柔軟性が求められる</li>
<li>スペシャリストである、となぜ公言しにくいのか？</li>
<li>役職定年、中途採用、転職に対するカウンターオファー（引き止め）</li>
<li>社内のエンジニアのモチベーションを上げたい</li>
<li>メンバーシップからスペシャリストに変わるような生き方、選択肢を当たり前に</li>
<li>中途採用が上手くいく秘訣は何か？</li>
<li>自分たちの仕事が魅力的であることを発信する</li>
<li>採用制度を独自に作り上げる</li>
<li>技術試験を採用プロセスに含める</li>
<li>パケットキャプチャをあえて改ざんして、応募者に解析してもらう</li>
<li>本質的な理解をしているか、確かめる</li>
<li>バイナリで読めるのはBGPだけ</li>
<li>スペシャリストになって、何が具体的に変わったのか？</li>
<li>福利厚生は変化、お給料もある程度上がった</li>
<li>評価の仕組みが大きく変わった</li>
<li>評価の指標は、エンジニアリングマネージャーとすり合わせて決める</li>
<li>1年前の目標って古すぎないか？</li>
<li>給料爆上げ</li>
<li>隗より始めよ</li>
<li>働いてる環境ってどんな感じ？</li>
<li>Security Operation Centerでの個人環境</li>
<li>メモリは16GB</li>
<li>G Suite、Confluence、Jira、Slack</li>
<li>社内システムはクローズドなので、使いにくい</li>
<li><a href="https://developer.ntt.com/ja/blog/ac773af6-5132-4109-82af-ae4e1fa45c32" target="_blank">アジャイルな開発・コミュニケーションを促進する新オフィスを作りました - Lean Agile Base</a></li>
<li>会社の悪いところは？</li>
<li>プロフェッショナルな人材が、マネージャー層より上に少ない</li>
<li>Executiveの中途も進むと良い</li>
<li>雇用制度の違いによる利害の不一致</li>
<li><a href="https://fukabori.fm/episode/15" target="_blank">(ep.15から)高度なスキルほど、サポートがないとパフォーマンスが出ない</a></li>
<li>従業員満足度が上がり、退職率が下がると、会社としての給与引上げ圧力が弱まるという課題にどう対処するか？</li>
<li>業務として、チームとして成果を出して経営へアピールすること</li>
<li>個人として転職活動を常日頃しておく</li>
<li>業界を盛り上げること</li>
<li>ラグビー部のおしかけってあった？</li>
<li>大手町の綱引き大会で優勝</li>
<li>ラグビー部社員はスペシャリスト</li>
<li>なんで、まだ会社に残っているの？</li>
<li>ジャパニーズ トラディッショナル ビッグ カンパニー</li>
<li>会社に対する愛はある</li>
<li>（難しい環境であっても）いかに変えていくのか、に面白みを感じる</li>
<li>契約と、それに基づいた評価の規定</li>
<li>対外発表を契約項目に含める</li>
<li>一定額の給与で裁量をもたせて、やらせてほしい</li>
<li>古くからある企業で、変わり始めてる事例を紹介するエピソード</li>
<li>（出演者全員）中途採用してます！</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/16</guid>
      <pubDate>Wed, 29 May 2019 03:55:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:47:07</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/37b07fb3-c3a1-4c3a-b311-4d9c8c071325.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="45234050"/>
    </item>
    <item>
      <title>15. 良い組織とは何か？どのように良い組織を作っていくのか？</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian" target="_blank">スタートアップ組織開発勉強会_scoutyの組織開発理論と実践</a></li>
<li>良い組織とは何か？</li>
<li>組織と複雑系とは？</li>
<li>複雑な仕組みと複雑系の違い</li>
<li>組織は複雑系である</li>
<li>採用だけ頑張っても、働く仕組みがイケてないと人は去っていく</li>
<li>HRに関わるあらゆる領域に対して総合的に取り組む</li>
<li>数字でしか語れない人は害悪である</li>
<li>VUCAに代表される時代</li>
<li>社会が画一的で、成長している時代ではない</li>
<li>ジョブ理論とは何か？</li>
<li>イノベーションのジレンマ</li>
<li>機能的側面・感情的側面・社会的側面</li>
<li>OKRとは何か？なぜ必要になってきたのか？</li>
<li>OKRは、当人がパフォーマンスを引き出すためのツール</li>
<li>KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない</li>
<li>MBOに対する誤解</li>
<li>
<a href="http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall" target="_blank">ウォータフォール開発の論文</a>に対する誤解</li>
<li>言い訳のための仕事を増やしてはいけない</li>
<li>MVP、デザイン思考、リーン、OODAの共通点は何か？</li>
<li>不確実なことは必ず起きるという前提に立つ</li>
<li>OODAとは何か？</li>
<li>良い問いと学習が重要</li>
<li>そもそも、「良い問い」とは何か？</li>
<li>SEDA理論とは何か？</li>
<li>当たり前だったものを当たり前じゃなくするのがArt</li>
<li>SECIモデル</li>
<li>パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)</li>
<li>個人のモチベーションとは何か？</li>
<li>自己決定理論</li>
<li>外発的動機付けの分類とは何か？</li>
<li>統合的調整、同一化的調整、取り入れ的調整</li>
<li>モチベーションを上げるためには、どうすればいいか？</li>
<li>モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事</li>
<li>メンバーシップ採用とジョブディスクリプション採用</li>
<li>モチベーションを阻害するものは何か？</li>
<li>責任の不備とは、具体的には何か？</li>
<li>本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事</li>
<li>スキルというものは変動性が高い、アウトプットである</li>
<li>スキルの阻害要因とは何か？</li>
<li>高度なスキルほど、サポートがないとパフォーマンスが出ない</li>
<li>簡単な仕事は、関係性の影響が少ない</li>
<li>複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい</li>
<li>組織が掛け算である、というのが幻想である</li>
<li>その人の良さを下げないようにするのが、組織として大事</li>
<li>組織としての完成形</li>
<li>Total Rewardsとは何か？</li>
<li>自分の人生と、会社の方向が重なっているのも大事</li>
<li>No Ratingとは何か？</li>
<li>人は人を正しく評価できないのは前提</li>
<li>お互いの納得感を重視した評価</li>
<li>期末に活躍した人が高く評価される、目の前の状況に引きづられやすい</li>
<li>心理的安全性を根付かせるためにはどうすればいいか？</li>
<li>心理的安全性はやさしさではない</li>
<li>ティール組織とは何か？</li>
<li>ティール組織の3要件とは</li>
<li>ホラクラシーとは何か？</li>
<li>Role自体に権限と責任、目的を明示する</li>
<li>自律的に組織が変えて、世の中の変化に適合する</li>
<li>寄生獣の後藤</li>
<li>ディスコースとは何か？</li>
<li>社会構成主義</li>
<li>組織の壁をどうやって埋めていくか？</li>
<li>ダイアログとは何か？</li>
<li>お互いの一致していないものを探す場</li>
<li>GoogleのTGIF</li>
<li>日本の未来をちょっとだけ明るくしたい</li>
<li><a href="https://scout.lapras.com/" target="_blank">LAPRAS</a></li>
</ul>
<p>(一部のPodcastクライアント用に再掲)
320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>15. 良い組織とは何か？どのように良い組織を作っていくのか？</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian" target="_blank"&gt;スタートアップ組織開発勉強会_scoutyの組織開発理論と実践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;良い組織とは何か？&lt;/li&gt;
&lt;li&gt;組織と複雑系とは？&lt;/li&gt;
&lt;li&gt;複雑な仕組みと複雑系の違い&lt;/li&gt;
&lt;li&gt;組織は複雑系である&lt;/li&gt;
&lt;li&gt;採用だけ頑張っても、働く仕組みがイケてないと人は去っていく&lt;/li&gt;
&lt;li&gt;HRに関わるあらゆる領域に対して総合的に取り組む&lt;/li&gt;
&lt;li&gt;数字でしか語れない人は害悪である&lt;/li&gt;
&lt;li&gt;VUCAに代表される時代&lt;/li&gt;
&lt;li&gt;社会が画一的で、成長している時代ではない&lt;/li&gt;
&lt;li&gt;ジョブ理論とは何か？&lt;/li&gt;
&lt;li&gt;イノベーションのジレンマ&lt;/li&gt;
&lt;li&gt;機能的側面・感情的側面・社会的側面&lt;/li&gt;
&lt;li&gt;OKRとは何か？なぜ必要になってきたのか？&lt;/li&gt;
&lt;li&gt;OKRは、当人がパフォーマンスを引き出すためのツール&lt;/li&gt;
&lt;li&gt;KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない&lt;/li&gt;
&lt;li&gt;MBOに対する誤解&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall" target="_blank"&gt;ウォータフォール開発の論文&lt;/a&gt;に対する誤解&lt;/li&gt;
&lt;li&gt;言い訳のための仕事を増やしてはいけない&lt;/li&gt;
&lt;li&gt;MVP、デザイン思考、リーン、OODAの共通点は何か？&lt;/li&gt;
&lt;li&gt;不確実なことは必ず起きるという前提に立つ&lt;/li&gt;
&lt;li&gt;OODAとは何か？&lt;/li&gt;
&lt;li&gt;良い問いと学習が重要&lt;/li&gt;
&lt;li&gt;そもそも、「良い問い」とは何か？&lt;/li&gt;
&lt;li&gt;SEDA理論とは何か？&lt;/li&gt;
&lt;li&gt;当たり前だったものを当たり前じゃなくするのがArt&lt;/li&gt;
&lt;li&gt;SECIモデル&lt;/li&gt;
&lt;li&gt;パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)&lt;/li&gt;
&lt;li&gt;個人のモチベーションとは何か？&lt;/li&gt;
&lt;li&gt;自己決定理論&lt;/li&gt;
&lt;li&gt;外発的動機付けの分類とは何か？&lt;/li&gt;
&lt;li&gt;統合的調整、同一化的調整、取り入れ的調整&lt;/li&gt;
&lt;li&gt;モチベーションを上げるためには、どうすればいいか？&lt;/li&gt;
&lt;li&gt;モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事&lt;/li&gt;
&lt;li&gt;メンバーシップ採用とジョブディスクリプション採用&lt;/li&gt;
&lt;li&gt;モチベーションを阻害するものは何か？&lt;/li&gt;
&lt;li&gt;責任の不備とは、具体的には何か？&lt;/li&gt;
&lt;li&gt;本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事&lt;/li&gt;
&lt;li&gt;スキルというものは変動性が高い、アウトプットである&lt;/li&gt;
&lt;li&gt;スキルの阻害要因とは何か？&lt;/li&gt;
&lt;li&gt;高度なスキルほど、サポートがないとパフォーマンスが出ない&lt;/li&gt;
&lt;li&gt;簡単な仕事は、関係性の影響が少ない&lt;/li&gt;
&lt;li&gt;複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい&lt;/li&gt;
&lt;li&gt;組織が掛け算である、というのが幻想である&lt;/li&gt;
&lt;li&gt;その人の良さを下げないようにするのが、組織として大事&lt;/li&gt;
&lt;li&gt;組織としての完成形&lt;/li&gt;
&lt;li&gt;Total Rewardsとは何か？&lt;/li&gt;
&lt;li&gt;自分の人生と、会社の方向が重なっているのも大事&lt;/li&gt;
&lt;li&gt;No Ratingとは何か？&lt;/li&gt;
&lt;li&gt;人は人を正しく評価できないのは前提&lt;/li&gt;
&lt;li&gt;お互いの納得感を重視した評価&lt;/li&gt;
&lt;li&gt;期末に活躍した人が高く評価される、目の前の状況に引きづられやすい&lt;/li&gt;
&lt;li&gt;心理的安全性を根付かせるためにはどうすればいいか？&lt;/li&gt;
&lt;li&gt;心理的安全性はやさしさではない&lt;/li&gt;
&lt;li&gt;ティール組織とは何か？&lt;/li&gt;
&lt;li&gt;ティール組織の3要件とは&lt;/li&gt;
&lt;li&gt;ホラクラシーとは何か？&lt;/li&gt;
&lt;li&gt;Role自体に権限と責任、目的を明示する&lt;/li&gt;
&lt;li&gt;自律的に組織が変えて、世の中の変化に適合する&lt;/li&gt;
&lt;li&gt;寄生獣の後藤&lt;/li&gt;
&lt;li&gt;ディスコースとは何か？&lt;/li&gt;
&lt;li&gt;社会構成主義&lt;/li&gt;
&lt;li&gt;組織の壁をどうやって埋めていくか？&lt;/li&gt;
&lt;li&gt;ダイアログとは何か？&lt;/li&gt;
&lt;li&gt;お互いの一致していないものを探す場&lt;/li&gt;
&lt;li&gt;GoogleのTGIF&lt;/li&gt;
&lt;li&gt;日本の未来をちょっとだけ明るくしたい&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scout.lapras.com/" target="_blank"&gt;LAPRAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(一部のPodcastクライアント用に再掲)
320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://speakerdeck.com/320kz/sutatoatupuzu-zhi-kai-fa-mian-qiang-hui-scoutyfalsezu-zhi-kai-fa-li-lun-toshi-jian" target="_blank">スタートアップ組織開発勉強会_scoutyの組織開発理論と実践</a></li>
<li>良い組織とは何か？</li>
<li>組織と複雑系とは？</li>
<li>複雑な仕組みと複雑系の違い</li>
<li>組織は複雑系である</li>
<li>採用だけ頑張っても、働く仕組みがイケてないと人は去っていく</li>
<li>HRに関わるあらゆる領域に対して総合的に取り組む</li>
<li>数字でしか語れない人は害悪である</li>
<li>VUCAに代表される時代</li>
<li>社会が画一的で、成長している時代ではない</li>
<li>ジョブ理論とは何か？</li>
<li>イノベーションのジレンマ</li>
<li>機能的側面・感情的側面・社会的側面</li>
<li>OKRとは何か？なぜ必要になってきたのか？</li>
<li>OKRは、当人がパフォーマンスを引き出すためのツール</li>
<li>KPIを単純に分解して、達成率を目指す形だとパフォーマンスが出ない</li>
<li>MBOに対する誤解</li>
<li>
<a href="http://agileconsortium.pbworks.com/w/page/52184647/Royce%20Defining%20Waterfall" target="_blank">ウォータフォール開発の論文</a>に対する誤解</li>
<li>言い訳のための仕事を増やしてはいけない</li>
<li>MVP、デザイン思考、リーン、OODAの共通点は何か？</li>
<li>不確実なことは必ず起きるという前提に立つ</li>
<li>OODAとは何か？</li>
<li>良い問いと学習が重要</li>
<li>そもそも、「良い問い」とは何か？</li>
<li>SEDA理論とは何か？</li>
<li>当たり前だったものを当たり前じゃなくするのがArt</li>
<li>SECIモデル</li>
<li>パフォーマンス = (モチベーション - 阻害要因) * (スキル - 阻害要因)</li>
<li>個人のモチベーションとは何か？</li>
<li>自己決定理論</li>
<li>外発的動機付けの分類とは何か？</li>
<li>統合的調整、同一化的調整、取り入れ的調整</li>
<li>モチベーションを上げるためには、どうすればいいか？</li>
<li>モチベーションを高めるのはできると思っていない、いかにモチベーションを邪魔しないかが大事</li>
<li>メンバーシップ採用とジョブディスクリプション採用</li>
<li>モチベーションを阻害するものは何か？</li>
<li>責任の不備とは、具体的には何か？</li>
<li>本人が持っているスキルよりも、チャレンジできる課題を与えるのが大事</li>
<li>スキルというものは変動性が高い、アウトプットである</li>
<li>スキルの阻害要因とは何か？</li>
<li>高度なスキルほど、サポートがないとパフォーマンスが出ない</li>
<li>簡単な仕事は、関係性の影響が少ない</li>
<li>複雑性の高い仕事になればなるほど、自身のパフォーマンスを理解しにくい</li>
<li>組織が掛け算である、というのが幻想である</li>
<li>その人の良さを下げないようにするのが、組織として大事</li>
<li>組織としての完成形</li>
<li>Total Rewardsとは何か？</li>
<li>自分の人生と、会社の方向が重なっているのも大事</li>
<li>No Ratingとは何か？</li>
<li>人は人を正しく評価できないのは前提</li>
<li>お互いの納得感を重視した評価</li>
<li>期末に活躍した人が高く評価される、目の前の状況に引きづられやすい</li>
<li>心理的安全性を根付かせるためにはどうすればいいか？</li>
<li>心理的安全性はやさしさではない</li>
<li>ティール組織とは何か？</li>
<li>ティール組織の3要件とは</li>
<li>ホラクラシーとは何か？</li>
<li>Role自体に権限と責任、目的を明示する</li>
<li>自律的に組織が変えて、世の中の変化に適合する</li>
<li>寄生獣の後藤</li>
<li>ディスコースとは何か？</li>
<li>社会構成主義</li>
<li>組織の壁をどうやって埋めていくか？</li>
<li>ダイアログとは何か？</li>
<li>お互いの一致していないものを探す場</li>
<li>GoogleのTGIF</li>
<li>日本の未来をちょっとだけ明るくしたい</li>
<li><a href="https://scout.lapras.com/" target="_blank">LAPRAS</a></li>
</ul>
<p>(一部のPodcastクライアント用に再掲)
320KZCDさんをゲストに、組織にまつわるネタ(ジョブ理論・OKR・SEDA理論・No Rating・ティールなど)について語っていただいたエピソードです。</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/15</guid>
      <pubDate>Thu, 16 May 2019 03:30:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:59:37</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/eb9d8b0e-b6b0-4d7f-986a-5e4f32467f1b.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="57244107"/>
    </item>
    <item>
      <title>14. なぜ、エンタープライズ業界でアジャイル・リーンは普及しないのか？</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>なぜ、<a href="http://jbpress.ismedia.jp/articles/-/51448" target="_blank">企画と開発が責任を押し付け合う会社の前途は暗い</a>のか？</li>
<li>計画が悪い vs 実装が悪い、というどっちが悪い論</li>
<li>問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる</li>
<li>市場、世界は悠長に回っていない</li>
<li>将棋でのメタファーとRTSでのメタファー</li>
<li>上手くいかないのは全体という前提をどこまで作れるか？</li>
<li>仕様が固まってから開発の後半で発生する変更を怖がる</li>
<li>あたかも世界の時間が止まっているように振る舞う</li>
<li>オーシャンズ11</li>
<li>その場の状況にあった計画を立て直していく、情報を得続ける</li>
<li>現代の戦争は火力戦・物量戦から変わってきている</li>
<li>企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない</li>
<li>ピラミッド構造は例外処理が役割の1つ</li>
<li>手順書はQ&amp;Aに答えてくれない</li>
<li>Q&amp;Aに答えられる人が現場にいない</li>
<li>リーンスタートアップやアジャイルなやり方が出てきた背景は？</li>
<li>ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟</li>
<li><a href="https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409" target="_blank">Organizational Patterns of Agile Software Development </a></li>
<li><a href="http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf" target="_blank">Quattro Pro</a></li>
<li>いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者</li>
<li>開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化</li>
<li>オブジェクト指向の成熟</li>
<li>顧客開発と製品開発にあった別のループを統合した</li>
<li>未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか</li>
<li>クラウドやRails</li>
<li>売れてもいないのに、最大アクセスの条件で試算する</li>
<li>
<a href="http://jbpress.ismedia.jp/articles/-/52025" target="_blank">ビジネスに追いつけない日本のシステム開発の構造欠陥</a>とは？</li>
<li>プライムをとれないSIをやると辛いことがある</li>
<li>「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる</li>
<li>ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる</li>
<li>本来であれば仕様書は動くもの</li>
<li>SIの調達モデルとは</li>
<li>イノベーションは調達できるの？って話</li>
<li>ソフトウェアは材料として変わっている</li>
<li>鉄鋼は産業の米</li>
<li>鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった</li>
<li>ソフトウェアも同様に考え、各会社がシステム子会社を作った</li>
<li>その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている</li>
<li>ソフトウェアは材料ではなく、垂直のビジネス構造と設計している</li>
<li>とくに業務システムでは、ビジネスとソフトウェアは切り分けられない</li>
<li>ソフトウェアの事業の中核である</li>
<li>ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも</li>
<li>作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう</li>
<li>対立するのではなく、協調することによって得られる価値に向かう時代</li>
<li>なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？</li>
<li>考え方の普及と、ビジネス構造の変革速度に差がある</li>
<li>ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している</li>
<li>就職で入りたいランキングにおいて、SIerは上位</li>
<li>20代の時期を何に投資するか？</li>
<li><a href="http://jbpress.ismedia.jp/articles/-/52264" target="_blank">企業内イノベーションの実現に向けた7つの提言</a></li>
<li>“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？</li>
<li>経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう</li>
<li>イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要</li>
<li>“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？</li>
<li>大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変</li>
<li>小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない</li>
<li>離れている時間が長い、成果が出ない場合は役員が意味を伝える</li>
<li>“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？</li>
<li>年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない</li>
<li>できないもんはできない</li>
<li>どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える</li>
<li>上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断</li>
<li>仕事をした気になって疲れる</li>
<li>お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか</li>
<li>“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？</li>
<li>本を読んでもアジャイルにできない</li>
<li>本を読んでも自転車に乗れない、暗黙知伝達の最たるところ</li>
<li>アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす</li>
<li>“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？</li>
<li>効率良くやるためには、形式的知識伝達もやる</li>
<li>全体的な体系をわかった上で実践に入る</li>
<li>“技術力のあるエンジニアを招集すること”</li>
<li>結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ</li>
<li>技術力のない人がものづくりをするのはおかしい</li>
<li>パワポという黒魔術にひっかからない</li>
<li>エンジニアの召集という言葉の意味</li>
<li>“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”</li>
<li>熱を受け取る場面</li>
<li>この人と出会った、この人の話を聞いて人生が変わったという転機</li>
<li>会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき</li>
<li>（イベント参加の）報告書は別にいらない、その人の中に溜まる</li>
<li><a href="https://slide.meguro.ryuzee.com/slides/50" target="_blank">ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼</a></li>
<li>会社は度量を持つ</li>
<li>会社からの退職者数の傾きを見る</li>
<li>古くからいるマネージャーの役割はどうなっていくのか？</li>
<li>得意なことで、変化の中心になっている人を支援する</li>
<li>上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか</li>
<li>取締役からのメッセージも重要</li>
<li>バリューを出せる人は、どうやってもバリューを出せる</li>
<li>
<a href="https://www.asf.esm.co.jp/" target="_blank">アジャイルスタジオ福井</a>で見学募集中</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>14. なぜ、エンタープライズ業界でアジャイル・リーンは普及しないのか？</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;なぜ、&lt;a href="http://jbpress.ismedia.jp/articles/-/51448" target="_blank"&gt;企画と開発が責任を押し付け合う会社の前途は暗い&lt;/a&gt;のか？&lt;/li&gt;
&lt;li&gt;計画が悪い vs 実装が悪い、というどっちが悪い論&lt;/li&gt;
&lt;li&gt;問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる&lt;/li&gt;
&lt;li&gt;市場、世界は悠長に回っていない&lt;/li&gt;
&lt;li&gt;将棋でのメタファーとRTSでのメタファー&lt;/li&gt;
&lt;li&gt;上手くいかないのは全体という前提をどこまで作れるか？&lt;/li&gt;
&lt;li&gt;仕様が固まってから開発の後半で発生する変更を怖がる&lt;/li&gt;
&lt;li&gt;あたかも世界の時間が止まっているように振る舞う&lt;/li&gt;
&lt;li&gt;オーシャンズ11&lt;/li&gt;
&lt;li&gt;その場の状況にあった計画を立て直していく、情報を得続ける&lt;/li&gt;
&lt;li&gt;現代の戦争は火力戦・物量戦から変わってきている&lt;/li&gt;
&lt;li&gt;企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない&lt;/li&gt;
&lt;li&gt;ピラミッド構造は例外処理が役割の1つ&lt;/li&gt;
&lt;li&gt;手順書はQ&amp;amp;Aに答えてくれない&lt;/li&gt;
&lt;li&gt;Q&amp;amp;Aに答えられる人が現場にいない&lt;/li&gt;
&lt;li&gt;リーンスタートアップやアジャイルなやり方が出てきた背景は？&lt;/li&gt;
&lt;li&gt;ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409" target="_blank"&gt;Organizational Patterns of Agile Software Development &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf" target="_blank"&gt;Quattro Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者&lt;/li&gt;
&lt;li&gt;開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化&lt;/li&gt;
&lt;li&gt;オブジェクト指向の成熟&lt;/li&gt;
&lt;li&gt;顧客開発と製品開発にあった別のループを統合した&lt;/li&gt;
&lt;li&gt;未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか&lt;/li&gt;
&lt;li&gt;クラウドやRails&lt;/li&gt;
&lt;li&gt;売れてもいないのに、最大アクセスの条件で試算する&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://jbpress.ismedia.jp/articles/-/52025" target="_blank"&gt;ビジネスに追いつけない日本のシステム開発の構造欠陥&lt;/a&gt;とは？&lt;/li&gt;
&lt;li&gt;プライムをとれないSIをやると辛いことがある&lt;/li&gt;
&lt;li&gt;「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる&lt;/li&gt;
&lt;li&gt;ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる&lt;/li&gt;
&lt;li&gt;本来であれば仕様書は動くもの&lt;/li&gt;
&lt;li&gt;SIの調達モデルとは&lt;/li&gt;
&lt;li&gt;イノベーションは調達できるの？って話&lt;/li&gt;
&lt;li&gt;ソフトウェアは材料として変わっている&lt;/li&gt;
&lt;li&gt;鉄鋼は産業の米&lt;/li&gt;
&lt;li&gt;鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった&lt;/li&gt;
&lt;li&gt;ソフトウェアも同様に考え、各会社がシステム子会社を作った&lt;/li&gt;
&lt;li&gt;その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている&lt;/li&gt;
&lt;li&gt;ソフトウェアは材料ではなく、垂直のビジネス構造と設計している&lt;/li&gt;
&lt;li&gt;とくに業務システムでは、ビジネスとソフトウェアは切り分けられない&lt;/li&gt;
&lt;li&gt;ソフトウェアの事業の中核である&lt;/li&gt;
&lt;li&gt;ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも&lt;/li&gt;
&lt;li&gt;作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう&lt;/li&gt;
&lt;li&gt;対立するのではなく、協調することによって得られる価値に向かう時代&lt;/li&gt;
&lt;li&gt;なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？&lt;/li&gt;
&lt;li&gt;考え方の普及と、ビジネス構造の変革速度に差がある&lt;/li&gt;
&lt;li&gt;ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している&lt;/li&gt;
&lt;li&gt;就職で入りたいランキングにおいて、SIerは上位&lt;/li&gt;
&lt;li&gt;20代の時期を何に投資するか？&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jbpress.ismedia.jp/articles/-/52264" target="_blank"&gt;企業内イノベーションの実現に向けた7つの提言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？&lt;/li&gt;
&lt;li&gt;経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう&lt;/li&gt;
&lt;li&gt;イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要&lt;/li&gt;
&lt;li&gt;“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？&lt;/li&gt;
&lt;li&gt;大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変&lt;/li&gt;
&lt;li&gt;小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない&lt;/li&gt;
&lt;li&gt;離れている時間が長い、成果が出ない場合は役員が意味を伝える&lt;/li&gt;
&lt;li&gt;“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？&lt;/li&gt;
&lt;li&gt;年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない&lt;/li&gt;
&lt;li&gt;できないもんはできない&lt;/li&gt;
&lt;li&gt;どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える&lt;/li&gt;
&lt;li&gt;上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断&lt;/li&gt;
&lt;li&gt;仕事をした気になって疲れる&lt;/li&gt;
&lt;li&gt;お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか&lt;/li&gt;
&lt;li&gt;“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？&lt;/li&gt;
&lt;li&gt;本を読んでもアジャイルにできない&lt;/li&gt;
&lt;li&gt;本を読んでも自転車に乗れない、暗黙知伝達の最たるところ&lt;/li&gt;
&lt;li&gt;アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす&lt;/li&gt;
&lt;li&gt;“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？&lt;/li&gt;
&lt;li&gt;効率良くやるためには、形式的知識伝達もやる&lt;/li&gt;
&lt;li&gt;全体的な体系をわかった上で実践に入る&lt;/li&gt;
&lt;li&gt;“技術力のあるエンジニアを招集すること”&lt;/li&gt;
&lt;li&gt;結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ&lt;/li&gt;
&lt;li&gt;技術力のない人がものづくりをするのはおかしい&lt;/li&gt;
&lt;li&gt;パワポという黒魔術にひっかからない&lt;/li&gt;
&lt;li&gt;エンジニアの召集という言葉の意味&lt;/li&gt;
&lt;li&gt;“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”&lt;/li&gt;
&lt;li&gt;熱を受け取る場面&lt;/li&gt;
&lt;li&gt;この人と出会った、この人の話を聞いて人生が変わったという転機&lt;/li&gt;
&lt;li&gt;会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき&lt;/li&gt;
&lt;li&gt;（イベント参加の）報告書は別にいらない、その人の中に溜まる&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slide.meguro.ryuzee.com/slides/50" target="_blank"&gt;ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;会社は度量を持つ&lt;/li&gt;
&lt;li&gt;会社からの退職者数の傾きを見る&lt;/li&gt;
&lt;li&gt;古くからいるマネージャーの役割はどうなっていくのか？&lt;/li&gt;
&lt;li&gt;得意なことで、変化の中心になっている人を支援する&lt;/li&gt;
&lt;li&gt;上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか&lt;/li&gt;
&lt;li&gt;取締役からのメッセージも重要&lt;/li&gt;
&lt;li&gt;バリューを出せる人は、どうやってもバリューを出せる&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.asf.esm.co.jp/" target="_blank"&gt;アジャイルスタジオ福井&lt;/a&gt;で見学募集中&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>なぜ、<a href="http://jbpress.ismedia.jp/articles/-/51448" target="_blank">企画と開発が責任を押し付け合う会社の前途は暗い</a>のか？</li>
<li>計画が悪い vs 実装が悪い、というどっちが悪い論</li>
<li>問題の理解と、その実装（人・システム）が時間軸で離れると学習がない、課題の理解は実装で深まる</li>
<li>市場、世界は悠長に回っていない</li>
<li>将棋でのメタファーとRTSでのメタファー</li>
<li>上手くいかないのは全体という前提をどこまで作れるか？</li>
<li>仕様が固まってから開発の後半で発生する変更を怖がる</li>
<li>あたかも世界の時間が止まっているように振る舞う</li>
<li>オーシャンズ11</li>
<li>その場の状況にあった計画を立て直していく、情報を得続ける</li>
<li>現代の戦争は火力戦・物量戦から変わってきている</li>
<li>企画と開発も同じコンテキストで話さないと、リアルな変化に追従できない</li>
<li>ピラミッド構造は例外処理が役割の1つ</li>
<li>手順書はQ&amp;Aに答えてくれない</li>
<li>Q&amp;Aに答えられる人が現場にいない</li>
<li>リーンスタートアップやアジャイルなやり方が出てきた背景は？</li>
<li>ウォーターフォールに対するアンチテーゼ、開発技術・環境の成熟</li>
<li><a href="https://www.amazon.co.jp/Organizational-Patterns-Agile-Software-Development/dp/0131467409" target="_blank">Organizational Patterns of Agile Software Development </a></li>
<li><a href="http://1pn8a8ult4o2bls5f2jxuel1-wpengine.netdna-ssl.com/wp-content/uploads/2013/07/borland-process.pdf" target="_blank">Quattro Pro</a></li>
<li>いつも不機嫌な管理者、満足しない顧客、いつも怯えている開発者</li>
<li>開発環境、コードの共有、IDE、リファクタリング、テスト容易性などの技術の進化</li>
<li>オブジェクト指向の成熟</li>
<li>顧客開発と製品開発にあった別のループを統合した</li>
<li>未来に予見できないことがたくさんあるときに、どうやったら製品と顧客の両方側で学びを獲得するか</li>
<li>クラウドやRails</li>
<li>売れてもいないのに、最大アクセスの条件で試算する</li>
<li>
<a href="http://jbpress.ismedia.jp/articles/-/52025" target="_blank">ビジネスに追いつけない日本のシステム開発の構造欠陥</a>とは？</li>
<li>プライムをとれないSIをやると辛いことがある</li>
<li>「仕様書に書いてないので、やらなくていい」「書いてないことやっちゃダメ」と言われる</li>
<li>ミッションが「仕様書通りにやり遂げる、納期通りに納める」になる</li>
<li>本来であれば仕様書は動くもの</li>
<li>SIの調達モデルとは</li>
<li>イノベーションは調達できるの？って話</li>
<li>ソフトウェアは材料として変わっている</li>
<li>鉄鋼は産業の米</li>
<li>鉄鋼は垂直ドメインに共有できる、水平ドメインの材料だった</li>
<li>ソフトウェアも同様に考え、各会社がシステム子会社を作った</li>
<li>その割には、ソフトウェアの中身を見ると垂直ドメインの言葉が入っている</li>
<li>ソフトウェアは材料ではなく、垂直のビジネス構造と設計している</li>
<li>とくに業務システムでは、ビジネスとソフトウェアは切り分けられない</li>
<li>ソフトウェアの事業の中核である</li>
<li>ソフトウェア工学領域で「ビジネス」という言葉の登場回数が、90年代後半から増えているかも</li>
<li>作る側とビジネスをする側が、調達という壁を挟んで交渉関係になってしまう</li>
<li>対立するのではなく、協調することによって得られる価値に向かう時代</li>
<li>なぜ、エンタープライズ業界でアジャイル・リーンなやり方が普及しないのか？</li>
<li>考え方の普及と、ビジネス構造の変革速度に差がある</li>
<li>ITが事業の中核と理解している企業は、どんどん中にエンジニアを採用している</li>
<li>就職で入りたいランキングにおいて、SIerは上位</li>
<li>20代の時期を何に投資するか？</li>
<li><a href="http://jbpress.ismedia.jp/articles/-/52264" target="_blank">企業内イノベーションの実現に向けた7つの提言</a></li>
<li>“経営陣がアジャイルを理解し、企業文化を醸成すること”の狙いは？</li>
<li>経営陣に1人でも理解者・擁護者がいないと、熱に急激に冷めてしまう</li>
<li>イノベーションをやるという意味、ソフトウェアの重要性・特性、ソフトウェアを使ったビジネス企画の特性として企画と開発が一緒にいるという点、を理解している経営者が必要</li>
<li>“既存の情報システム部門と別に、イノベーション部隊を建設すること”の背景は？</li>
<li>大企業になればなるほど、組織をどう作るか、組織間コミュニケーションを変えるのは大変</li>
<li>小さくて良いので、ビジネスの目標・作りたいものを持っているチームを作るほうが、エネルギーを消耗しない</li>
<li>離れている時間が長い、成果が出ない場合は役員が意味を伝える</li>
<li>“イノベーション部隊を既存の進捗管理から切り離し、企画と開発を一体化すること”とは？</li>
<li>年次の予算、売上を月次で追うが、イノベーションはそのとおりに行かない</li>
<li>できないもんはできない</li>
<li>どれぐらいコストをかけるのか？どういう目論見であがってくるのか？チェックポイントはどこなのか？ぐらいで抑える</li>
<li>上手くいかない場合は、ここまでという期限を決めて切る、といった投資判断</li>
<li>仕事をした気になって疲れる</li>
<li>お客様と話をできるチームをたくさん作る、上にあげなくていいから、これができるかどうか</li>
<li>“経験のあるアジャイルコーチ、スクラムマスターを招き入れる、もしくは採用すること”の狙いは？</li>
<li>本を読んでもアジャイルにできない</li>
<li>本を読んでも自転車に乗れない、暗黙知伝達の最たるところ</li>
<li>アジャイルコーチや、スクラムマスターを1人、2人と有機的に増やす</li>
<li>“アジャイル開発の教育を行い、徐々に経験者をふやすこと”の理由は？</li>
<li>効率良くやるためには、形式的知識伝達もやる</li>
<li>全体的な体系をわかった上で実践に入る</li>
<li>“技術力のあるエンジニアを招集すること”</li>
<li>結局、スクラムの教育をいくらやっても、作れないものは作れない、ウォーターフォールも同じ</li>
<li>技術力のない人がものづくりをするのはおかしい</li>
<li>パワポという黒魔術にひっかからない</li>
<li>エンジニアの召集という言葉の意味</li>
<li>“コミュニティへのエンジニア参加を推奨し、外部交流を行うこと”</li>
<li>熱を受け取る場面</li>
<li>この人と出会った、この人の話を聞いて人生が変わったという転機</li>
<li>会社で誰かがイベントに参加したい、といったら是非是非出させてあげるべき</li>
<li>（イベント参加の）報告書は別にいらない、その人の中に溜まる</li>
<li><a href="https://slide.meguro.ryuzee.com/slides/50" target="_blank">ワンクリックデプロイ ∼いつまで手でデプロイしてるんですか？∼</a></li>
<li>会社は度量を持つ</li>
<li>会社からの退職者数の傾きを見る</li>
<li>古くからいるマネージャーの役割はどうなっていくのか？</li>
<li>得意なことで、変化の中心になっている人を支援する</li>
<li>上からじゃなくて、新しいバリューシステムの一部になれるか、気持ちを持てるか</li>
<li>取締役からのメッセージも重要</li>
<li>バリューを出せる人は、どうやってもバリューを出せる</li>
<li>
<a href="https://www.asf.esm.co.jp/" target="_blank">アジャイルスタジオ福井</a>で見学募集中</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/14</guid>
      <pubDate>Wed, 06 Mar 2019 03:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:42:56</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/3390ad09-c265-4924-8f6c-8e55d85a006c.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="41228329"/>
    </item>
    <item>
      <title>13. ペアプロやテストの疑問とか、ソフトウェアエンジニアの育成とか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて</li>
<li>ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）</li>
<li>ベテランとベテランは、一番効果を発揮するペアである</li>
<li>意思決定をライブでできる重要性</li>
<li>設計上の妥協点をその場で合意できる</li>
<li>ビギナーとベテランで、ビギナーはナビゲーターをするのか？</li>
<li>コードを書いてるところを見てもらうのは大事なプラクティス</li>
<li>ベテランもプレッシャーを持ってコードを書ける</li>
<li>見られているだけでコードの質は高まる</li>
<li>リアルタイムでないコードレビューがあるだけで、コードの質は高まる</li>
<li>コードレビューのインフラに投資する</li>
<li>流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？</li>
<li>一番の学びは教えることから発生する</li>
<li>相手から、相手自身の学びを引き出す</li>
<li>チームの暗黙知を、暗黙知のまま伝える、強化していく</li>
<li>テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？</li>
<li>ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う</li>
<li>プライベート関数はテストするのか？</li>
<li>技術的には、プライベート関数のテストはパブリック関数からテストできる</li>
<li>プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち</li>
<li>フロントエンドのテストはどこまで書けばいいのか？</li>
<li>書くけど、書きすぎない</li>
<li>画面の構造が変わっても、影響にされにくいものをテストする</li>
<li>ビジュアルリグレッションテスト</li>
<li>魑魅魍魎のUIの世界</li>
<li>テストのカバレッジ、どの程度まで書けばいいのか？</li>
<li>ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい</li>
<li>カバレッジは何らかの管理の道具にすると、うまく回らない</li>
<li>不具合は思い違いから発生する</li>
<li>カバレッジ100%は誤った安心感を与えがち</li>
<li>カバレッジツールは自分達の見落とし・過信を見つけるために使う</li>
<li>カバレッジを絶対値ではなく傾きでみる</li>
<li>CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る</li>
<li>バグ収束曲線は、現代の開発ではFitしないことのが多い</li>
<li>品質指標の形骸化</li>
<li>外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？</li>
<li>内製にシフトするなら、技術者のhiringも必須</li>
<li>小さく始めて、大きく育てて勝つパターンを積み上げる</li>
<li>段階的に内製開発にシフトしていく</li>
<li>社内の特区、信頼貯金を使って展開していく</li>
<li>内製を全然していない会社が、内製にシフトするためには4-5年かかる</li>
<li>新人を育てるためにはどうしたらいいか？</li>
<li>配属ガチャ</li>
<li>技術力の高いエンジニア新人を孤立させない</li>
<li>事業部内に閉じた情報流通</li>
<li>全社Slackがないのはよくあるサイロ化</li>
<li>技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る</li>
<li>内製を始めるモードになったエンプラ企業はイメージ付けが必要</li>
<li>技術者が社名を背負ってアウトプット</li>
<li>大企業Hack</li>
<li>意思決定層にこれからのソフトウェア開発に認識を改めてもらう</li>
<li>組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？</li>
<li>再現可能にするのが大事</li>
<li>前提が違う、変動する中でソフトウェア企業としての強さを保つ</li>
<li>公開し検索可能にすることが大事</li>
<li>URL重要</li>
<li>心理的安全性の重要性</li>
<li>価値観から行動原則、品質基準を考えていく</li>
<li>経験していない場面にチェックリストは効かない</li>
<li>誤っていたこと、失敗は良いチャレンジとして評価されるように</li>
<li>社内でアンチパターンを共有できる組織は強い</li>
<li>社内FailCon</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>13. ペアプロやテストの疑問とか、ソフトウェアエンジニアの育成とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて&lt;/li&gt;
&lt;li&gt;ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）&lt;/li&gt;
&lt;li&gt;ベテランとベテランは、一番効果を発揮するペアである&lt;/li&gt;
&lt;li&gt;意思決定をライブでできる重要性&lt;/li&gt;
&lt;li&gt;設計上の妥協点をその場で合意できる&lt;/li&gt;
&lt;li&gt;ビギナーとベテランで、ビギナーはナビゲーターをするのか？&lt;/li&gt;
&lt;li&gt;コードを書いてるところを見てもらうのは大事なプラクティス&lt;/li&gt;
&lt;li&gt;ベテランもプレッシャーを持ってコードを書ける&lt;/li&gt;
&lt;li&gt;見られているだけでコードの質は高まる&lt;/li&gt;
&lt;li&gt;リアルタイムでないコードレビューがあるだけで、コードの質は高まる&lt;/li&gt;
&lt;li&gt;コードレビューのインフラに投資する&lt;/li&gt;
&lt;li&gt;流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？&lt;/li&gt;
&lt;li&gt;一番の学びは教えることから発生する&lt;/li&gt;
&lt;li&gt;相手から、相手自身の学びを引き出す&lt;/li&gt;
&lt;li&gt;チームの暗黙知を、暗黙知のまま伝える、強化していく&lt;/li&gt;
&lt;li&gt;テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？&lt;/li&gt;
&lt;li&gt;ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う&lt;/li&gt;
&lt;li&gt;プライベート関数はテストするのか？&lt;/li&gt;
&lt;li&gt;技術的には、プライベート関数のテストはパブリック関数からテストできる&lt;/li&gt;
&lt;li&gt;プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち&lt;/li&gt;
&lt;li&gt;フロントエンドのテストはどこまで書けばいいのか？&lt;/li&gt;
&lt;li&gt;書くけど、書きすぎない&lt;/li&gt;
&lt;li&gt;画面の構造が変わっても、影響にされにくいものをテストする&lt;/li&gt;
&lt;li&gt;ビジュアルリグレッションテスト&lt;/li&gt;
&lt;li&gt;魑魅魍魎のUIの世界&lt;/li&gt;
&lt;li&gt;テストのカバレッジ、どの程度まで書けばいいのか？&lt;/li&gt;
&lt;li&gt;ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい&lt;/li&gt;
&lt;li&gt;カバレッジは何らかの管理の道具にすると、うまく回らない&lt;/li&gt;
&lt;li&gt;不具合は思い違いから発生する&lt;/li&gt;
&lt;li&gt;カバレッジ100%は誤った安心感を与えがち&lt;/li&gt;
&lt;li&gt;カバレッジツールは自分達の見落とし・過信を見つけるために使う&lt;/li&gt;
&lt;li&gt;カバレッジを絶対値ではなく傾きでみる&lt;/li&gt;
&lt;li&gt;CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る&lt;/li&gt;
&lt;li&gt;バグ収束曲線は、現代の開発ではFitしないことのが多い&lt;/li&gt;
&lt;li&gt;品質指標の形骸化&lt;/li&gt;
&lt;li&gt;外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？&lt;/li&gt;
&lt;li&gt;内製にシフトするなら、技術者のhiringも必須&lt;/li&gt;
&lt;li&gt;小さく始めて、大きく育てて勝つパターンを積み上げる&lt;/li&gt;
&lt;li&gt;段階的に内製開発にシフトしていく&lt;/li&gt;
&lt;li&gt;社内の特区、信頼貯金を使って展開していく&lt;/li&gt;
&lt;li&gt;内製を全然していない会社が、内製にシフトするためには4-5年かかる&lt;/li&gt;
&lt;li&gt;新人を育てるためにはどうしたらいいか？&lt;/li&gt;
&lt;li&gt;配属ガチャ&lt;/li&gt;
&lt;li&gt;技術力の高いエンジニア新人を孤立させない&lt;/li&gt;
&lt;li&gt;事業部内に閉じた情報流通&lt;/li&gt;
&lt;li&gt;全社Slackがないのはよくあるサイロ化&lt;/li&gt;
&lt;li&gt;技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る&lt;/li&gt;
&lt;li&gt;内製を始めるモードになったエンプラ企業はイメージ付けが必要&lt;/li&gt;
&lt;li&gt;技術者が社名を背負ってアウトプット&lt;/li&gt;
&lt;li&gt;大企業Hack&lt;/li&gt;
&lt;li&gt;意思決定層にこれからのソフトウェア開発に認識を改めてもらう&lt;/li&gt;
&lt;li&gt;組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？&lt;/li&gt;
&lt;li&gt;再現可能にするのが大事&lt;/li&gt;
&lt;li&gt;前提が違う、変動する中でソフトウェア企業としての強さを保つ&lt;/li&gt;
&lt;li&gt;公開し検索可能にすることが大事&lt;/li&gt;
&lt;li&gt;URL重要&lt;/li&gt;
&lt;li&gt;心理的安全性の重要性&lt;/li&gt;
&lt;li&gt;価値観から行動原則、品質基準を考えていく&lt;/li&gt;
&lt;li&gt;経験していない場面にチェックリストは効かない&lt;/li&gt;
&lt;li&gt;誤っていたこと、失敗は良いチャレンジとして評価されるように&lt;/li&gt;
&lt;li&gt;社内でアンチパターンを共有できる組織は強い&lt;/li&gt;
&lt;li&gt;社内FailCon&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>ペアプロにおけるビギナーとベテランの組み合わせ3パターンについて</li>
<li>ビギナーとビギナーの組み合わせで効果はあまり期待できない（チームビルディングでは意味がある）</li>
<li>ベテランとベテランは、一番効果を発揮するペアである</li>
<li>意思決定をライブでできる重要性</li>
<li>設計上の妥協点をその場で合意できる</li>
<li>ビギナーとベテランで、ビギナーはナビゲーターをするのか？</li>
<li>コードを書いてるところを見てもらうのは大事なプラクティス</li>
<li>ベテランもプレッシャーを持ってコードを書ける</li>
<li>見られているだけでコードの質は高まる</li>
<li>リアルタイムでないコードレビューがあるだけで、コードの質は高まる</li>
<li>コードレビューのインフラに投資する</li>
<li>流しのペアプロ業をする中で、ドメイン知識がない状態でペアプロへ参加して価値をだせるか？</li>
<li>一番の学びは教えることから発生する</li>
<li>相手から、相手自身の学びを引き出す</li>
<li>チームの暗黙知を、暗黙知のまま伝える、強化していく</li>
<li>テストを書く場合に、RDBやKVSなどをどこまでモック/スタブするのか？</li>
<li>ノートPCにインストールできるものは本物を使い、入らないものはモック/スタブを使う</li>
<li>プライベート関数はテストするのか？</li>
<li>技術的には、プライベート関数のテストはパブリック関数からテストできる</li>
<li>プライベートの実装に基づいたテストは脆い、現状追認のテストになりがち</li>
<li>フロントエンドのテストはどこまで書けばいいのか？</li>
<li>書くけど、書きすぎない</li>
<li>画面の構造が変わっても、影響にされにくいものをテストする</li>
<li>ビジュアルリグレッションテスト</li>
<li>魑魅魍魎のUIの世界</li>
<li>テストのカバレッジ、どの程度まで書けばいいのか？</li>
<li>ユニットテストを含めて、グレーボックス・ブラックボックスの観点から書くのが望ましい</li>
<li>カバレッジは何らかの管理の道具にすると、うまく回らない</li>
<li>不具合は思い違いから発生する</li>
<li>カバレッジ100%は誤った安心感を与えがち</li>
<li>カバレッジツールは自分達の見落とし・過信を見つけるために使う</li>
<li>カバレッジを絶対値ではなく傾きでみる</li>
<li>CIではテストの成功/失敗だけではなく、カバレッジやコードの複雑度を取る</li>
<li>バグ収束曲線は、現代の開発ではFitしないことのが多い</li>
<li>品質指標の形骸化</li>
<li>外注が多く、内製が少ない組織で、ソフトウェアエンジニアをどうやって育てていけば良いのか？</li>
<li>内製にシフトするなら、技術者のhiringも必須</li>
<li>小さく始めて、大きく育てて勝つパターンを積み上げる</li>
<li>段階的に内製開発にシフトしていく</li>
<li>社内の特区、信頼貯金を使って展開していく</li>
<li>内製を全然していない会社が、内製にシフトするためには4-5年かかる</li>
<li>新人を育てるためにはどうしたらいいか？</li>
<li>配属ガチャ</li>
<li>技術力の高いエンジニア新人を孤立させない</li>
<li>事業部内に閉じた情報流通</li>
<li>全社Slackがないのはよくあるサイロ化</li>
<li>技術者の横のつながりを維持する、リアルタイムコミュニケーションのチャネルを作る</li>
<li>内製を始めるモードになったエンプラ企業はイメージ付けが必要</li>
<li>技術者が社名を背負ってアウトプット</li>
<li>大企業Hack</li>
<li>意思決定層にこれからのソフトウェア開発に認識を改めてもらう</li>
<li>組織やチームにノウハウをどうためて、育てていくのか？力を貯めるいいやり方？</li>
<li>再現可能にするのが大事</li>
<li>前提が違う、変動する中でソフトウェア企業としての強さを保つ</li>
<li>公開し検索可能にすることが大事</li>
<li>URL重要</li>
<li>心理的安全性の重要性</li>
<li>価値観から行動原則、品質基準を考えていく</li>
<li>経験していない場面にチェックリストは効かない</li>
<li>誤っていたこと、失敗は良いチャレンジとして評価されるように</li>
<li>社内でアンチパターンを共有できる組織は強い</li>
<li>社内FailCon</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/13</guid>
      <pubDate>Wed, 27 Feb 2019 05:45:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:56:17</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/af156b64-e4a8-40b1-a9da-1196dd1ff364.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="54041704"/>
    </item>
    <item>
      <title>12. エンプラ向けの組織改革とか、スクラムでのチーム作り・人事評価とか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？</li>
<li>現場だけで変えられる範囲には限界がある</li>
<li>組織改革を若手がやるのは厳しい</li>
<li>ボトムアップでやるには気の遠くなる話が多すぎる</li>
<li>ミドルマネージャーや意思決定の権限を持つ</li>
<li>改革の範囲を全社ではなく、自分の部だけにする</li>
<li>徐々に広げていくのは、ボトムアップでは鉄板</li>
<li>トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい</li>
<li>全社ルール・ガイドラインと、どう付き合っていけば良いのか？</li>
<li>複数のガイドライン/オプションを用意しておく</li>
<li>ガイドラインをかならず守らなきゃいけないのは思い込みなこともある</li>
<li>緩い、自由があるガイドラインだと進めやすい</li>
<li>権限委譲が非常に難しいのではないか？</li>
<li>権限のないプロダクトオーナー問題</li>
<li>プロジェクト開始の時点で、決められる範囲の線引き</li>
<li>大きな会社になればなるほど、スクラムマスターが重要</li>
<li>スクラムマスターの役割は半端じゃなく大変</li>
<li>大きな会社だとチームの外側に課題がある</li>
<li>スクラムマスターは大きな会社のプロパーがやるべき</li>
<li>プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる</li>
<li>プロダクトが目に見える成果を出してないケース</li>
<li>プロダクトを売らずに、組織改革ばっかりしてもしょうがない</li>
<li>綺麗事ばっかり言ってるのはダメ</li>
<li>失敗することは是である</li>
<li>傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である</li>
<li>弾をたくさん投げるのが良いこと</li>
<li>出島とは？</li>
<li>全員同席、外部から雑音をシャットアウトする</li>
<li>エンドポイントを一箇所に絞る</li>
<li>治外法権</li>
<li>人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？</li>
<li>お金を稼いでるけど、不人気な部門の問題</li>
<li>辞めるにしてもいい関係で辞めてもらう</li>
<li>給与テーブルが自由に設定できない問題</li>
<li>やりたいことができるように、また仕事しやすい環境を与える</li>
<li>周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？</li>
<li>バックオフィスは、プロジェクト開始時に巻き込んでおく</li>
<li>たとえば品質管理部門の人に入ってもらって、完成の定義を考える</li>
<li>AWSでShip判断</li>
<li>us-east1から他リージョンへのロールアウト</li>
<li>開発チームはどの程度、顧客の声を知る必要があるのか？</li>
<li>チームが無関心なのは一番辛い</li>
<li>サポートエンジニアを一緒にやるプラクティス</li>
<li>開発と運用のチームは結局どうしていけばいいのか？</li>
<li>基本的には1チームが良く、部門が別れているならバーチャルチームで1つに</li>
<li>少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する</li>
<li>必ずしも新規技術を使う必要はない</li>
<li>チームの力量・状況にあわせて、技術や言語を選んでいく</li>
<li>1week sprintの振り返りだと、長期的な課題がでにくい？</li>
<li>ベロシティを1.5倍、2倍にするためには何したらいいの？</li>
<li>KPTは断面を切る振り返りであり、時間軸があまりない</li>
<li>振り返りは適度に変えていく</li>
<li>
<a href="https://www.ryuzee.com/contents/blog/7138" target="_blank">闇鍋</a>という振り返りプラクティス</li>
<li>ドット投票における問題</li>
<li>給与査定という観点での人事評価はどうやればいいか？</li>
<li>プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？</li>
<li>チーム一律評価 + 360度評価 を組み合わせるのが落とし所</li>
<li>新サービスを出したばっかりのPOはどう評価するか？</li>
<li>人事部とエンジニアの採用プロセスの関わり？</li>
<li><a href="https://www.attractor.co.jp/contact/" target="_blank">アトラクタでお仕事募集中</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>12. エンプラ向けの組織改革とか、スクラムでのチーム作り・人事評価とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？&lt;/li&gt;
&lt;li&gt;現場だけで変えられる範囲には限界がある&lt;/li&gt;
&lt;li&gt;組織改革を若手がやるのは厳しい&lt;/li&gt;
&lt;li&gt;ボトムアップでやるには気の遠くなる話が多すぎる&lt;/li&gt;
&lt;li&gt;ミドルマネージャーや意思決定の権限を持つ&lt;/li&gt;
&lt;li&gt;改革の範囲を全社ではなく、自分の部だけにする&lt;/li&gt;
&lt;li&gt;徐々に広げていくのは、ボトムアップでは鉄板&lt;/li&gt;
&lt;li&gt;トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい&lt;/li&gt;
&lt;li&gt;全社ルール・ガイドラインと、どう付き合っていけば良いのか？&lt;/li&gt;
&lt;li&gt;複数のガイドライン/オプションを用意しておく&lt;/li&gt;
&lt;li&gt;ガイドラインをかならず守らなきゃいけないのは思い込みなこともある&lt;/li&gt;
&lt;li&gt;緩い、自由があるガイドラインだと進めやすい&lt;/li&gt;
&lt;li&gt;権限委譲が非常に難しいのではないか？&lt;/li&gt;
&lt;li&gt;権限のないプロダクトオーナー問題&lt;/li&gt;
&lt;li&gt;プロジェクト開始の時点で、決められる範囲の線引き&lt;/li&gt;
&lt;li&gt;大きな会社になればなるほど、スクラムマスターが重要&lt;/li&gt;
&lt;li&gt;スクラムマスターの役割は半端じゃなく大変&lt;/li&gt;
&lt;li&gt;大きな会社だとチームの外側に課題がある&lt;/li&gt;
&lt;li&gt;スクラムマスターは大きな会社のプロパーがやるべき&lt;/li&gt;
&lt;li&gt;プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる&lt;/li&gt;
&lt;li&gt;プロダクトが目に見える成果を出してないケース&lt;/li&gt;
&lt;li&gt;プロダクトを売らずに、組織改革ばっかりしてもしょうがない&lt;/li&gt;
&lt;li&gt;綺麗事ばっかり言ってるのはダメ&lt;/li&gt;
&lt;li&gt;失敗することは是である&lt;/li&gt;
&lt;li&gt;傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である&lt;/li&gt;
&lt;li&gt;弾をたくさん投げるのが良いこと&lt;/li&gt;
&lt;li&gt;出島とは？&lt;/li&gt;
&lt;li&gt;全員同席、外部から雑音をシャットアウトする&lt;/li&gt;
&lt;li&gt;エンドポイントを一箇所に絞る&lt;/li&gt;
&lt;li&gt;治外法権&lt;/li&gt;
&lt;li&gt;人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？&lt;/li&gt;
&lt;li&gt;お金を稼いでるけど、不人気な部門の問題&lt;/li&gt;
&lt;li&gt;辞めるにしてもいい関係で辞めてもらう&lt;/li&gt;
&lt;li&gt;給与テーブルが自由に設定できない問題&lt;/li&gt;
&lt;li&gt;やりたいことができるように、また仕事しやすい環境を与える&lt;/li&gt;
&lt;li&gt;周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？&lt;/li&gt;
&lt;li&gt;バックオフィスは、プロジェクト開始時に巻き込んでおく&lt;/li&gt;
&lt;li&gt;たとえば品質管理部門の人に入ってもらって、完成の定義を考える&lt;/li&gt;
&lt;li&gt;AWSでShip判断&lt;/li&gt;
&lt;li&gt;us-east1から他リージョンへのロールアウト&lt;/li&gt;
&lt;li&gt;開発チームはどの程度、顧客の声を知る必要があるのか？&lt;/li&gt;
&lt;li&gt;チームが無関心なのは一番辛い&lt;/li&gt;
&lt;li&gt;サポートエンジニアを一緒にやるプラクティス&lt;/li&gt;
&lt;li&gt;開発と運用のチームは結局どうしていけばいいのか？&lt;/li&gt;
&lt;li&gt;基本的には1チームが良く、部門が別れているならバーチャルチームで1つに&lt;/li&gt;
&lt;li&gt;少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する&lt;/li&gt;
&lt;li&gt;必ずしも新規技術を使う必要はない&lt;/li&gt;
&lt;li&gt;チームの力量・状況にあわせて、技術や言語を選んでいく&lt;/li&gt;
&lt;li&gt;1week sprintの振り返りだと、長期的な課題がでにくい？&lt;/li&gt;
&lt;li&gt;ベロシティを1.5倍、2倍にするためには何したらいいの？&lt;/li&gt;
&lt;li&gt;KPTは断面を切る振り返りであり、時間軸があまりない&lt;/li&gt;
&lt;li&gt;振り返りは適度に変えていく&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.ryuzee.com/contents/blog/7138" target="_blank"&gt;闇鍋&lt;/a&gt;という振り返りプラクティス&lt;/li&gt;
&lt;li&gt;ドット投票における問題&lt;/li&gt;
&lt;li&gt;給与査定という観点での人事評価はどうやればいいか？&lt;/li&gt;
&lt;li&gt;プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？&lt;/li&gt;
&lt;li&gt;チーム一律評価 + 360度評価 を組み合わせるのが落とし所&lt;/li&gt;
&lt;li&gt;新サービスを出したばっかりのPOはどう評価するか？&lt;/li&gt;
&lt;li&gt;人事部とエンジニアの採用プロセスの関わり？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.attractor.co.jp/contact/" target="_blank"&gt;アトラクタでお仕事募集中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>古くから大企業・組織で、ryuzeeさんならどう切り込んでいくか？</li>
<li>現場だけで変えられる範囲には限界がある</li>
<li>組織改革を若手がやるのは厳しい</li>
<li>ボトムアップでやるには気の遠くなる話が多すぎる</li>
<li>ミドルマネージャーや意思決定の権限を持つ</li>
<li>改革の範囲を全社ではなく、自分の部だけにする</li>
<li>徐々に広げていくのは、ボトムアップでは鉄板</li>
<li>トップダウンでいく場合は、ミドルマネージャーが障壁になりやすい</li>
<li>全社ルール・ガイドラインと、どう付き合っていけば良いのか？</li>
<li>複数のガイドライン/オプションを用意しておく</li>
<li>ガイドラインをかならず守らなきゃいけないのは思い込みなこともある</li>
<li>緩い、自由があるガイドラインだと進めやすい</li>
<li>権限委譲が非常に難しいのではないか？</li>
<li>権限のないプロダクトオーナー問題</li>
<li>プロジェクト開始の時点で、決められる範囲の線引き</li>
<li>大きな会社になればなるほど、スクラムマスターが重要</li>
<li>スクラムマスターの役割は半端じゃなく大変</li>
<li>大きな会社だとチームの外側に課題がある</li>
<li>スクラムマスターは大きな会社のプロパーがやるべき</li>
<li>プロダクトオーナーとスクラムマスターはチームの内外でバランスをとる</li>
<li>プロダクトが目に見える成果を出してないケース</li>
<li>プロダクトを売らずに、組織改革ばっかりしてもしょうがない</li>
<li>綺麗事ばっかり言ってるのはダメ</li>
<li>失敗することは是である</li>
<li>傷の浅いうちに、ダメなものを見つけてサービスを畳めるのも成功である</li>
<li>弾をたくさん投げるのが良いこと</li>
<li>出島とは？</li>
<li>全員同席、外部から雑音をシャットアウトする</li>
<li>エンドポイントを一箇所に絞る</li>
<li>治外法権</li>
<li>人気ある部門へ人が集まりやすいが、過疎化はどう防ぐ？</li>
<li>お金を稼いでるけど、不人気な部門の問題</li>
<li>辞めるにしてもいい関係で辞めてもらう</li>
<li>給与テーブルが自由に設定できない問題</li>
<li>やりたいことができるように、また仕事しやすい環境を与える</li>
<li>周囲のバックオフィス系の部門にどの程度、アジャイル的な考え方を理解してもらうのか？</li>
<li>バックオフィスは、プロジェクト開始時に巻き込んでおく</li>
<li>たとえば品質管理部門の人に入ってもらって、完成の定義を考える</li>
<li>AWSでShip判断</li>
<li>us-east1から他リージョンへのロールアウト</li>
<li>開発チームはどの程度、顧客の声を知る必要があるのか？</li>
<li>チームが無関心なのは一番辛い</li>
<li>サポートエンジニアを一緒にやるプラクティス</li>
<li>開発と運用のチームは結局どうしていけばいいのか？</li>
<li>基本的には1チームが良く、部門が別れているならバーチャルチームで1つに</li>
<li>少数精鋭のチームでものづくりすると、運用しないように寄せていくことで、本業に集中する</li>
<li>必ずしも新規技術を使う必要はない</li>
<li>チームの力量・状況にあわせて、技術や言語を選んでいく</li>
<li>1week sprintの振り返りだと、長期的な課題がでにくい？</li>
<li>ベロシティを1.5倍、2倍にするためには何したらいいの？</li>
<li>KPTは断面を切る振り返りであり、時間軸があまりない</li>
<li>振り返りは適度に変えていく</li>
<li>
<a href="https://www.ryuzee.com/contents/blog/7138" target="_blank">闇鍋</a>という振り返りプラクティス</li>
<li>ドット投票における問題</li>
<li>給与査定という観点での人事評価はどうやればいいか？</li>
<li>プロダクトの結果が出ていれば、個人の評価はどうでもいいのでは？</li>
<li>チーム一律評価 + 360度評価 を組み合わせるのが落とし所</li>
<li>新サービスを出したばっかりのPOはどう評価するか？</li>
<li>人事部とエンジニアの採用プロセスの関わり？</li>
<li><a href="https://www.attractor.co.jp/contact/" target="_blank">アトラクタでお仕事募集中</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/12</guid>
      <pubDate>Wed, 30 Jan 2019 05:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:50:44</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/b621b302-9db3-4c99-9544-34bf5ff9d322.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="48707709"/>
    </item>
    <item>
      <title>11. dockerネットワーキングとか、kubernetesネットワーキングとか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>dockerを立ち上げたときに、ネットワークに何が起こるのか？</li>
<li>iptablesでは何が起こるのか？</li>
<li>dockerのbridgeとは何なのか？</li>
<li>libnetworkとは何か？</li>
<li>docker network pluginを作るためには、何を書くのか？</li>
<li>dockerを使うと出てくるvethとは何なのか？</li>
<li>dockerコンテナのIPを誰が振っているのか？</li>
<li>IPAMとは？</li>
<li>dockerから出ていくとき、どういう要素を通って外に出ていくのか？</li>
<li>–network host の Host とは？</li>
<li>Overlayとは何か？</li>
<li>VXLANとは？</li>
<li>BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題</li>
<li>ARPプロキシ</li>
<li>ARPの情報をどうやって、あらかじめ知っておくのか？</li>
<li>VXLANはVLANの拡張か？</li>
<li>VXLANではどうやってカプセリングするか？</li>
<li>VXLANのオーバヘッドはどうなのか？</li>
<li>VXLANのオーバヘッドの解決策</li>
<li>CNMとCNIとはそれぞれ何か？</li>
<li>CNMとlibnetworkの関連性は？</li>
<li>kubernetesのネットワーク思想は？</li>
<li>CNIの代表的なものは？</li>
<li>flannelとCalico</li>
<li>flannelの特徴は？</li>
<li>Calicoの特徴は？</li>
<li>L3 Fabricとは？</li>
<li>CLOSネットワークについて</li>
<li>なぜBGPを使うのか？</li>
<li>kubernetes Serviceとはそもそも何か？</li>
<li>Cluster IPとは何か？</li>
<li>
<a href="https://twitter.com/rafiror/status/1069217131495976960" target="_blank">収録後補足</a>: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）</li>
<li>kube-proxyとは何か？何をしているのか？</li>
<li>iptablesを使ったkube-proxyのオーバーヘッド</li>
<li>IPVSとは何か？</li>
<li>IPVSを指定した場合に何が起きているのか？</li>
<li>IPVSはサイドカーで置かれるのか？</li>
<li>NodePortとは何か？</li>
<li>NodePortを実際のサービスで使うときは？</li>
<li>k8sのLoad Balancerとは？</li>
<li>ingressとは何か？</li>
<li>k8sにおける名前解決とは？</li>
<li>IPアドレスを意識して通信しない</li>
<li>iptablesの沼</li>
<li>ネットワーク屋さんがiptableを見なくてよくなる世界線はない</li>
<li>Network Policyとは？</li>
<li>OpenStackのネットワークと、k8sのネットワークの下回りは同じ</li>
<li>Linux namespacesとは？</li>
<li><a href="https://containerdays.jp/" target="_blank">JapanContainerDays v18.12</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>11. dockerネットワーキングとか、kubernetesネットワーキングとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;dockerを立ち上げたときに、ネットワークに何が起こるのか？&lt;/li&gt;
&lt;li&gt;iptablesでは何が起こるのか？&lt;/li&gt;
&lt;li&gt;dockerのbridgeとは何なのか？&lt;/li&gt;
&lt;li&gt;libnetworkとは何か？&lt;/li&gt;
&lt;li&gt;docker network pluginを作るためには、何を書くのか？&lt;/li&gt;
&lt;li&gt;dockerを使うと出てくるvethとは何なのか？&lt;/li&gt;
&lt;li&gt;dockerコンテナのIPを誰が振っているのか？&lt;/li&gt;
&lt;li&gt;IPAMとは？&lt;/li&gt;
&lt;li&gt;dockerから出ていくとき、どういう要素を通って外に出ていくのか？&lt;/li&gt;
&lt;li&gt;–network host の Host とは？&lt;/li&gt;
&lt;li&gt;Overlayとは何か？&lt;/li&gt;
&lt;li&gt;VXLANとは？&lt;/li&gt;
&lt;li&gt;BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題&lt;/li&gt;
&lt;li&gt;ARPプロキシ&lt;/li&gt;
&lt;li&gt;ARPの情報をどうやって、あらかじめ知っておくのか？&lt;/li&gt;
&lt;li&gt;VXLANはVLANの拡張か？&lt;/li&gt;
&lt;li&gt;VXLANではどうやってカプセリングするか？&lt;/li&gt;
&lt;li&gt;VXLANのオーバヘッドはどうなのか？&lt;/li&gt;
&lt;li&gt;VXLANのオーバヘッドの解決策&lt;/li&gt;
&lt;li&gt;CNMとCNIとはそれぞれ何か？&lt;/li&gt;
&lt;li&gt;CNMとlibnetworkの関連性は？&lt;/li&gt;
&lt;li&gt;kubernetesのネットワーク思想は？&lt;/li&gt;
&lt;li&gt;CNIの代表的なものは？&lt;/li&gt;
&lt;li&gt;flannelとCalico&lt;/li&gt;
&lt;li&gt;flannelの特徴は？&lt;/li&gt;
&lt;li&gt;Calicoの特徴は？&lt;/li&gt;
&lt;li&gt;L3 Fabricとは？&lt;/li&gt;
&lt;li&gt;CLOSネットワークについて&lt;/li&gt;
&lt;li&gt;なぜBGPを使うのか？&lt;/li&gt;
&lt;li&gt;kubernetes Serviceとはそもそも何か？&lt;/li&gt;
&lt;li&gt;Cluster IPとは何か？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/rafiror/status/1069217131495976960" target="_blank"&gt;収録後補足&lt;/a&gt;: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）&lt;/li&gt;
&lt;li&gt;kube-proxyとは何か？何をしているのか？&lt;/li&gt;
&lt;li&gt;iptablesを使ったkube-proxyのオーバーヘッド&lt;/li&gt;
&lt;li&gt;IPVSとは何か？&lt;/li&gt;
&lt;li&gt;IPVSを指定した場合に何が起きているのか？&lt;/li&gt;
&lt;li&gt;IPVSはサイドカーで置かれるのか？&lt;/li&gt;
&lt;li&gt;NodePortとは何か？&lt;/li&gt;
&lt;li&gt;NodePortを実際のサービスで使うときは？&lt;/li&gt;
&lt;li&gt;k8sのLoad Balancerとは？&lt;/li&gt;
&lt;li&gt;ingressとは何か？&lt;/li&gt;
&lt;li&gt;k8sにおける名前解決とは？&lt;/li&gt;
&lt;li&gt;IPアドレスを意識して通信しない&lt;/li&gt;
&lt;li&gt;iptablesの沼&lt;/li&gt;
&lt;li&gt;ネットワーク屋さんがiptableを見なくてよくなる世界線はない&lt;/li&gt;
&lt;li&gt;Network Policyとは？&lt;/li&gt;
&lt;li&gt;OpenStackのネットワークと、k8sのネットワークの下回りは同じ&lt;/li&gt;
&lt;li&gt;Linux namespacesとは？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://containerdays.jp/" target="_blank"&gt;JapanContainerDays v18.12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>dockerを立ち上げたときに、ネットワークに何が起こるのか？</li>
<li>iptablesでは何が起こるのか？</li>
<li>dockerのbridgeとは何なのか？</li>
<li>libnetworkとは何か？</li>
<li>docker network pluginを作るためには、何を書くのか？</li>
<li>dockerを使うと出てくるvethとは何なのか？</li>
<li>dockerコンテナのIPを誰が振っているのか？</li>
<li>IPAMとは？</li>
<li>dockerから出ていくとき、どういう要素を通って外に出ていくのか？</li>
<li>–network host の Host とは？</li>
<li>Overlayとは何か？</li>
<li>VXLANとは？</li>
<li>BUM(Broadcast, unknown-unicast and multicast traffic)トラフィック問題</li>
<li>ARPプロキシ</li>
<li>ARPの情報をどうやって、あらかじめ知っておくのか？</li>
<li>VXLANはVLANの拡張か？</li>
<li>VXLANではどうやってカプセリングするか？</li>
<li>VXLANのオーバヘッドはどうなのか？</li>
<li>VXLANのオーバヘッドの解決策</li>
<li>CNMとCNIとはそれぞれ何か？</li>
<li>CNMとlibnetworkの関連性は？</li>
<li>kubernetesのネットワーク思想は？</li>
<li>CNIの代表的なものは？</li>
<li>flannelとCalico</li>
<li>flannelの特徴は？</li>
<li>Calicoの特徴は？</li>
<li>L3 Fabricとは？</li>
<li>CLOSネットワークについて</li>
<li>なぜBGPを使うのか？</li>
<li>kubernetes Serviceとはそもそも何か？</li>
<li>Cluster IPとは何か？</li>
<li>
<a href="https://twitter.com/rafiror/status/1069217131495976960" target="_blank">収録後補足</a>: ClusterIPはコンテナ（Pod）に直に付くIPではなく、サービスクラスタとして定義されたPod郡へ通信するためのLBのVIPのようなもの、Pod間は別途PodにアサインされたIP同士で通信可能（CNIによる）</li>
<li>kube-proxyとは何か？何をしているのか？</li>
<li>iptablesを使ったkube-proxyのオーバーヘッド</li>
<li>IPVSとは何か？</li>
<li>IPVSを指定した場合に何が起きているのか？</li>
<li>IPVSはサイドカーで置かれるのか？</li>
<li>NodePortとは何か？</li>
<li>NodePortを実際のサービスで使うときは？</li>
<li>k8sのLoad Balancerとは？</li>
<li>ingressとは何か？</li>
<li>k8sにおける名前解決とは？</li>
<li>IPアドレスを意識して通信しない</li>
<li>iptablesの沼</li>
<li>ネットワーク屋さんがiptableを見なくてよくなる世界線はない</li>
<li>Network Policyとは？</li>
<li>OpenStackのネットワークと、k8sのネットワークの下回りは同じ</li>
<li>Linux namespacesとは？</li>
<li><a href="https://containerdays.jp/" target="_blank">JapanContainerDays v18.12</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/11</guid>
      <pubDate>Sat, 01 Dec 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:56:41</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/b7235c8d-4907-4c02-985c-b9f436818846.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="54418285"/>
    </item>
    <item>
      <title>10. 大企業HACKS! - 大企業で実現するイマドキのサービス開発</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>WebRTCとは？SkyWayとは？</li>
<li>
<a href="https://www.slideshare.net/rotsuya/hacks-56126883" target="_blank">大企業HACKS! 大企業で実現するイマドキのサービス開発</a>とは何か？その定義は？</li>
<li>大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く</li>
<li>大企業で何がやばいか？</li>
<li>世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い</li>
<li>なぜ、変化を恐れる人が多いのか？</li>
<li>守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから</li>
<li>制約条件がある中で、どう上手くいっていくのか？</li>
<li>守りと攻めを意識して分けていく</li>
<li>変態ミドル</li>
<li>理想的なチームとは何か？</li>
<li>相互作用がプラスに働いている状態</li>
<li>アジャイルマニフェストにある自己組織化するチームを目指すこと</li>
<li>勝手にチームが進化していく状態を目指す</li>
<li>オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと</li>
<li>目的・意義を示すこと</li>
<li>心理的安全性を拡大するための具体的な行動として何をしているか？</li>
<li><a href="https://anchor.fm/em-fm/" target="_blank">EM.FM</a></li>
<li>ミッション・ステートメントは、なぜ必要なのか？</li>
<li>内発的動機づけの3要素にある目的</li>
<li>ミッション・ステートメントは、誰がどう定義するのか？</li>
<li>ビジョンとミッション・ステートメントの違いは？</li>
<li>ビジョンは理想の状態を言語化したものである</li>
<li>言葉にするのは、夢を実行可能に行為である</li>
<li>いきなり若者にビジョンを考えろ、というのはアンチパターン</li>
<li>ビジョンを考えるのはむちゃくちゃ大変</li>
<li>飲み会や懇親会のビジョン</li>
<li>マネージャーがビジョンを考えないのはサボり</li>
<li>なぜ、若手に責任と権限を与えるのか？</li>
<li>Think Globally Act Locally はどういう意味で使っている？</li>
<li>会社を一生懸命変えるのは非常に時間がかかる</li>
<li>大企業をトップダウンで変化させるためのプラクティスは何があるか？</li>
<li>社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る</li>
<li>エンジニアの言語と経営者の言語の両方で話す</li>
<li>大企業で戦ってみたときの強みは？</li>
<li>経営者に情熱をぶつけるという方法</li>
<li>経験の学校、良い経験がしやすい</li>
<li>採用するに当たって、何か気をつけている・頑張っていることはあるか？</li>
<li>1人の人事と、多くの現場の社員が協力する</li>
<li>会議を上手くやるために、気をつけていることはあるか？</li>
<li>パワポはなぜダメなのか？</li>
<li>上から来る兼務の指示に対して、どう部下を守るのか？</li>
<li>共通業務・年貢からはできる限り部下を守る</li>
<li>なぜ内製しないといけないのか？</li>
<li>ソフトウェアの開発力が、企業の競争力の源泉である</li>
<li>R&amp;D、プロダクト部門でキャズムを乗り越えるには？</li>
<li>大企業で製品を出すために、何が大変なのか？</li>
<li>社内には実証実験、外にはベータ版というHack</li>
<li>R&amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる</li>
<li>チームビルディング合宿はなぜやるのか？</li>
<li>チームの中で意見のぶつかり合いが増えてきた</li>
<li>根本的な価値観が違うときに、表面的に話してもダメ</li>
<li>性格診断と価値観アンケートを使って全員でレビューしていく</li>
<li>アンカンファレンスで議論する</li>
<li>チームビルディング合宿の教科書は無く、自分たちで考える</li>
<li>日本の大企業はどうやって、この先生きのこっていくべきか？</li>
<li>R&amp;Dと事業部門のいいとこ取りの組織を作る</li>
<li>失敗するのが苦手、認めない文化</li>
<li>
<a href="https://note.mu/rotsuya" target="_blank">note.mu</a>での記事</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>10. 大企業HACKS! - 大企業で実現するイマドキのサービス開発</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;WebRTCとは？SkyWayとは？&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.slideshare.net/rotsuya/hacks-56126883" target="_blank"&gt;大企業HACKS! 大企業で実現するイマドキのサービス開発&lt;/a&gt;とは何か？その定義は？&lt;/li&gt;
&lt;li&gt;大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く&lt;/li&gt;
&lt;li&gt;大企業で何がやばいか？&lt;/li&gt;
&lt;li&gt;世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い&lt;/li&gt;
&lt;li&gt;なぜ、変化を恐れる人が多いのか？&lt;/li&gt;
&lt;li&gt;守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから&lt;/li&gt;
&lt;li&gt;制約条件がある中で、どう上手くいっていくのか？&lt;/li&gt;
&lt;li&gt;守りと攻めを意識して分けていく&lt;/li&gt;
&lt;li&gt;変態ミドル&lt;/li&gt;
&lt;li&gt;理想的なチームとは何か？&lt;/li&gt;
&lt;li&gt;相互作用がプラスに働いている状態&lt;/li&gt;
&lt;li&gt;アジャイルマニフェストにある自己組織化するチームを目指すこと&lt;/li&gt;
&lt;li&gt;勝手にチームが進化していく状態を目指す&lt;/li&gt;
&lt;li&gt;オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと&lt;/li&gt;
&lt;li&gt;目的・意義を示すこと&lt;/li&gt;
&lt;li&gt;心理的安全性を拡大するための具体的な行動として何をしているか？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anchor.fm/em-fm/" target="_blank"&gt;EM.FM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ミッション・ステートメントは、なぜ必要なのか？&lt;/li&gt;
&lt;li&gt;内発的動機づけの3要素にある目的&lt;/li&gt;
&lt;li&gt;ミッション・ステートメントは、誰がどう定義するのか？&lt;/li&gt;
&lt;li&gt;ビジョンとミッション・ステートメントの違いは？&lt;/li&gt;
&lt;li&gt;ビジョンは理想の状態を言語化したものである&lt;/li&gt;
&lt;li&gt;言葉にするのは、夢を実行可能に行為である&lt;/li&gt;
&lt;li&gt;いきなり若者にビジョンを考えろ、というのはアンチパターン&lt;/li&gt;
&lt;li&gt;ビジョンを考えるのはむちゃくちゃ大変&lt;/li&gt;
&lt;li&gt;飲み会や懇親会のビジョン&lt;/li&gt;
&lt;li&gt;マネージャーがビジョンを考えないのはサボり&lt;/li&gt;
&lt;li&gt;なぜ、若手に責任と権限を与えるのか？&lt;/li&gt;
&lt;li&gt;Think Globally Act Locally はどういう意味で使っている？&lt;/li&gt;
&lt;li&gt;会社を一生懸命変えるのは非常に時間がかかる&lt;/li&gt;
&lt;li&gt;大企業をトップダウンで変化させるためのプラクティスは何があるか？&lt;/li&gt;
&lt;li&gt;社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る&lt;/li&gt;
&lt;li&gt;エンジニアの言語と経営者の言語の両方で話す&lt;/li&gt;
&lt;li&gt;大企業で戦ってみたときの強みは？&lt;/li&gt;
&lt;li&gt;経営者に情熱をぶつけるという方法&lt;/li&gt;
&lt;li&gt;経験の学校、良い経験がしやすい&lt;/li&gt;
&lt;li&gt;採用するに当たって、何か気をつけている・頑張っていることはあるか？&lt;/li&gt;
&lt;li&gt;1人の人事と、多くの現場の社員が協力する&lt;/li&gt;
&lt;li&gt;会議を上手くやるために、気をつけていることはあるか？&lt;/li&gt;
&lt;li&gt;パワポはなぜダメなのか？&lt;/li&gt;
&lt;li&gt;上から来る兼務の指示に対して、どう部下を守るのか？&lt;/li&gt;
&lt;li&gt;共通業務・年貢からはできる限り部下を守る&lt;/li&gt;
&lt;li&gt;なぜ内製しないといけないのか？&lt;/li&gt;
&lt;li&gt;ソフトウェアの開発力が、企業の競争力の源泉である&lt;/li&gt;
&lt;li&gt;R&amp;amp;D、プロダクト部門でキャズムを乗り越えるには？&lt;/li&gt;
&lt;li&gt;大企業で製品を出すために、何が大変なのか？&lt;/li&gt;
&lt;li&gt;社内には実証実験、外にはベータ版というHack&lt;/li&gt;
&lt;li&gt;R&amp;amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる&lt;/li&gt;
&lt;li&gt;チームビルディング合宿はなぜやるのか？&lt;/li&gt;
&lt;li&gt;チームの中で意見のぶつかり合いが増えてきた&lt;/li&gt;
&lt;li&gt;根本的な価値観が違うときに、表面的に話してもダメ&lt;/li&gt;
&lt;li&gt;性格診断と価値観アンケートを使って全員でレビューしていく&lt;/li&gt;
&lt;li&gt;アンカンファレンスで議論する&lt;/li&gt;
&lt;li&gt;チームビルディング合宿の教科書は無く、自分たちで考える&lt;/li&gt;
&lt;li&gt;日本の大企業はどうやって、この先生きのこっていくべきか？&lt;/li&gt;
&lt;li&gt;R&amp;amp;Dと事業部門のいいとこ取りの組織を作る&lt;/li&gt;
&lt;li&gt;失敗するのが苦手、認めない文化&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://note.mu/rotsuya" target="_blank"&gt;note.mu&lt;/a&gt;での記事&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>WebRTCとは？SkyWayとは？</li>
<li>
<a href="https://www.slideshare.net/rotsuya/hacks-56126883" target="_blank">大企業HACKS! 大企業で実現するイマドキのサービス開発</a>とは何か？その定義は？</li>
<li>大企業のメリットを上手く利用して、大企業のデメリットを上手く回避して働く</li>
<li>大企業で何がやばいか？</li>
<li>世の中の変化が早い、人材の流動性が低い、変化を恐れる人が多い</li>
<li>なぜ、変化を恐れる人が多いのか？</li>
<li>守る価値がある、プロダクトライフサイクルが長いビジネスを持っているから</li>
<li>制約条件がある中で、どう上手くいっていくのか？</li>
<li>守りと攻めを意識して分けていく</li>
<li>変態ミドル</li>
<li>理想的なチームとは何か？</li>
<li>相互作用がプラスに働いている状態</li>
<li>アジャイルマニフェストにある自己組織化するチームを目指すこと</li>
<li>勝手にチームが進化していく状態を目指す</li>
<li>オーナーシップを持ってもらうように、自由・権限を与えて自分たちでコントロールできる感覚をめざすこと</li>
<li>目的・意義を示すこと</li>
<li>心理的安全性を拡大するための具体的な行動として何をしているか？</li>
<li><a href="https://anchor.fm/em-fm/" target="_blank">EM.FM</a></li>
<li>ミッション・ステートメントは、なぜ必要なのか？</li>
<li>内発的動機づけの3要素にある目的</li>
<li>ミッション・ステートメントは、誰がどう定義するのか？</li>
<li>ビジョンとミッション・ステートメントの違いは？</li>
<li>ビジョンは理想の状態を言語化したものである</li>
<li>言葉にするのは、夢を実行可能に行為である</li>
<li>いきなり若者にビジョンを考えろ、というのはアンチパターン</li>
<li>ビジョンを考えるのはむちゃくちゃ大変</li>
<li>飲み会や懇親会のビジョン</li>
<li>マネージャーがビジョンを考えないのはサボり</li>
<li>なぜ、若手に責任と権限を与えるのか？</li>
<li>Think Globally Act Locally はどういう意味で使っている？</li>
<li>会社を一生懸命変えるのは非常に時間がかかる</li>
<li>大企業をトップダウンで変化させるためのプラクティスは何があるか？</li>
<li>社外の実績を使う、草の根のネットワークを作る、社内政治を頑張る</li>
<li>エンジニアの言語と経営者の言語の両方で話す</li>
<li>大企業で戦ってみたときの強みは？</li>
<li>経営者に情熱をぶつけるという方法</li>
<li>経験の学校、良い経験がしやすい</li>
<li>採用するに当たって、何か気をつけている・頑張っていることはあるか？</li>
<li>1人の人事と、多くの現場の社員が協力する</li>
<li>会議を上手くやるために、気をつけていることはあるか？</li>
<li>パワポはなぜダメなのか？</li>
<li>上から来る兼務の指示に対して、どう部下を守るのか？</li>
<li>共通業務・年貢からはできる限り部下を守る</li>
<li>なぜ内製しないといけないのか？</li>
<li>ソフトウェアの開発力が、企業の競争力の源泉である</li>
<li>R&amp;D、プロダクト部門でキャズムを乗り越えるには？</li>
<li>大企業で製品を出すために、何が大変なのか？</li>
<li>社内には実証実験、外にはベータ版というHack</li>
<li>R&amp;Dが事業部門にプロダクトを出すときと、事業部門が受け取るタイミングとが異なる</li>
<li>チームビルディング合宿はなぜやるのか？</li>
<li>チームの中で意見のぶつかり合いが増えてきた</li>
<li>根本的な価値観が違うときに、表面的に話してもダメ</li>
<li>性格診断と価値観アンケートを使って全員でレビューしていく</li>
<li>アンカンファレンスで議論する</li>
<li>チームビルディング合宿の教科書は無く、自分たちで考える</li>
<li>日本の大企業はどうやって、この先生きのこっていくべきか？</li>
<li>R&amp;Dと事業部門のいいとこ取りの組織を作る</li>
<li>失敗するのが苦手、認めない文化</li>
<li>
<a href="https://note.mu/rotsuya" target="_blank">note.mu</a>での記事</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/10</guid>
      <pubDate>Tue, 06 Nov 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:51:21</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/66e91f59-5f81-4004-9549-ed864193606e.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="49311660"/>
    </item>
    <item>
      <title>9. エンプラ業界でアジャイルになるためのプラクティスとか、社内/社外勉強会とか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>エンプラでアジャイルをやろうとすると何が大変なのか？</li>
<li>内製開発がデファクトじゃない</li>
<li>なぜ内製はデファクトではなかったのか？</li>
<li>エンプラ業界で内製が増えてきたきっかけは何だろう？</li>
<li>通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？</li>
<li>アジャイル開発センターって何？</li>
<li>その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？</li>
<li>小さく成功を作って広げていく</li>
<li>既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？</li>
<li>意思決定をアジャイル開発センターに集めていく</li>
<li>アジャイル開発センターの隔離</li>
<li>Cynefin Framework</li>
<li>アジャイル開発センターをどう設立していったのか？</li>
<li>アジャイル開発センターって名前はかっこよくないけど、実は意味がある</li>
<li>ニュースリリースの見出しにのる名前を狙う</li>
<li>(新しいもの入れる場合に)社外から社内を攻める</li>
<li>(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす</li>
<li>彼らのわかる言葉で説明する</li>
<li>エンプラはしがらみが多い</li>
<li>特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る</li>
<li>聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？</li>
<li>グレーです、と宣言して進める</li>
<li>謎のチェックリストが生まれる</li>
<li>失敗すると後続が死んでしまう</li>
<li>アジャイル開発センターの場のデザインはどうしている？</li>
<li>うなぎの寝床みたいなチームスペース</li>
<li>Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？</li>
<li>運用の要件・要求によってOpsのスタイルを分ける</li>
<li>エンプラは標準化しようとする</li>
<li>標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる</li>
<li>大量のガイドライン・チェックリストとアジャイルの付き合い方</li>
<li>ガイドラインのHowをWhyに戻して考える</li>
<li>会社のルールを変えず、現代のやり方を適用する</li>
<li>障害が起きるとルールが増える</li>
<li>ルールを増やしても守れない</li>
<li>ルールを増やしてもシャドーが増えるだけで意味がない</li>
<li>半端じゃない数のチェックリスト</li>
<li>誰かが始めないと変わらない</li>
<li>運用へ渡すときに自動化しすぎない</li>
<li>承認フローをあえて挟む</li>
<li>内製をしていなかった企業で、内製エンジニアをどう集めるのか？</li>
<li>デベロッパーを集めたいなら、デベロッパーコミュニティに行く</li>
<li>Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？</li>
<li>前例があると突破できる</li>
<li>前例を知るために社内勉強会ネットワーキング</li>
<li>社内勉強会を実際に始めるとすごいパワーがある</li>
<li>会社に熱を持っている人は見えてない範囲にいる、隠れている</li>
<li>どうやって社内勉強会に巻き込んでいったのか？</li>
<li>会社の命令で参加させるのはダメ</li>
<li>影響力ある人から集める</li>
<li>ちゃんとした人は、ちゃんとした人を呼んでくる</li>
<li>ルール化しましょう、というアンチパターン</li>
<li>せっかく燃えていた火を消化させない</li>
<li>70回以上、続けているTechLunchという社内勉強会</li>
<li>運営側が燃え尽きない</li>
<li>社内勉強会をオープンな場所でやる</li>
<li>自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン</li>
<li>デベロッパーリレーションズを、なぜエンプラでやるのか？</li>
<li>社外勉強会で外のモノサシを知る</li>
<li>社外で話す、コミュニティ活動をどう社内で評価するのか？</li>
<li>エンプラだけど、使ってるツールや言語は普通にエッジなもの</li>
<li>メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？</li>
<li>お客様に価値を届けられる人間が対価を得るべき</li>
<li><a href="https://techplay.jp/event/699906" target="_blank">2018/11/12 Tech-on Meet Up #03</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>9. エンプラ業界でアジャイルになるためのプラクティスとか、社内/社外勉強会とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;エンプラでアジャイルをやろうとすると何が大変なのか？&lt;/li&gt;
&lt;li&gt;内製開発がデファクトじゃない&lt;/li&gt;
&lt;li&gt;なぜ内製はデファクトではなかったのか？&lt;/li&gt;
&lt;li&gt;エンプラ業界で内製が増えてきたきっかけは何だろう？&lt;/li&gt;
&lt;li&gt;通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？&lt;/li&gt;
&lt;li&gt;アジャイル開発センターって何？&lt;/li&gt;
&lt;li&gt;その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？&lt;/li&gt;
&lt;li&gt;小さく成功を作って広げていく&lt;/li&gt;
&lt;li&gt;既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？&lt;/li&gt;
&lt;li&gt;意思決定をアジャイル開発センターに集めていく&lt;/li&gt;
&lt;li&gt;アジャイル開発センターの隔離&lt;/li&gt;
&lt;li&gt;Cynefin Framework&lt;/li&gt;
&lt;li&gt;アジャイル開発センターをどう設立していったのか？&lt;/li&gt;
&lt;li&gt;アジャイル開発センターって名前はかっこよくないけど、実は意味がある&lt;/li&gt;
&lt;li&gt;ニュースリリースの見出しにのる名前を狙う&lt;/li&gt;
&lt;li&gt;(新しいもの入れる場合に)社外から社内を攻める&lt;/li&gt;
&lt;li&gt;(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす&lt;/li&gt;
&lt;li&gt;彼らのわかる言葉で説明する&lt;/li&gt;
&lt;li&gt;エンプラはしがらみが多い&lt;/li&gt;
&lt;li&gt;特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る&lt;/li&gt;
&lt;li&gt;聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？&lt;/li&gt;
&lt;li&gt;グレーです、と宣言して進める&lt;/li&gt;
&lt;li&gt;謎のチェックリストが生まれる&lt;/li&gt;
&lt;li&gt;失敗すると後続が死んでしまう&lt;/li&gt;
&lt;li&gt;アジャイル開発センターの場のデザインはどうしている？&lt;/li&gt;
&lt;li&gt;うなぎの寝床みたいなチームスペース&lt;/li&gt;
&lt;li&gt;Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？&lt;/li&gt;
&lt;li&gt;運用の要件・要求によってOpsのスタイルを分ける&lt;/li&gt;
&lt;li&gt;エンプラは標準化しようとする&lt;/li&gt;
&lt;li&gt;標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる&lt;/li&gt;
&lt;li&gt;大量のガイドライン・チェックリストとアジャイルの付き合い方&lt;/li&gt;
&lt;li&gt;ガイドラインのHowをWhyに戻して考える&lt;/li&gt;
&lt;li&gt;会社のルールを変えず、現代のやり方を適用する&lt;/li&gt;
&lt;li&gt;障害が起きるとルールが増える&lt;/li&gt;
&lt;li&gt;ルールを増やしても守れない&lt;/li&gt;
&lt;li&gt;ルールを増やしてもシャドーが増えるだけで意味がない&lt;/li&gt;
&lt;li&gt;半端じゃない数のチェックリスト&lt;/li&gt;
&lt;li&gt;誰かが始めないと変わらない&lt;/li&gt;
&lt;li&gt;運用へ渡すときに自動化しすぎない&lt;/li&gt;
&lt;li&gt;承認フローをあえて挟む&lt;/li&gt;
&lt;li&gt;内製をしていなかった企業で、内製エンジニアをどう集めるのか？&lt;/li&gt;
&lt;li&gt;デベロッパーを集めたいなら、デベロッパーコミュニティに行く&lt;/li&gt;
&lt;li&gt;Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？&lt;/li&gt;
&lt;li&gt;前例があると突破できる&lt;/li&gt;
&lt;li&gt;前例を知るために社内勉強会ネットワーキング&lt;/li&gt;
&lt;li&gt;社内勉強会を実際に始めるとすごいパワーがある&lt;/li&gt;
&lt;li&gt;会社に熱を持っている人は見えてない範囲にいる、隠れている&lt;/li&gt;
&lt;li&gt;どうやって社内勉強会に巻き込んでいったのか？&lt;/li&gt;
&lt;li&gt;会社の命令で参加させるのはダメ&lt;/li&gt;
&lt;li&gt;影響力ある人から集める&lt;/li&gt;
&lt;li&gt;ちゃんとした人は、ちゃんとした人を呼んでくる&lt;/li&gt;
&lt;li&gt;ルール化しましょう、というアンチパターン&lt;/li&gt;
&lt;li&gt;せっかく燃えていた火を消化させない&lt;/li&gt;
&lt;li&gt;70回以上、続けているTechLunchという社内勉強会&lt;/li&gt;
&lt;li&gt;運営側が燃え尽きない&lt;/li&gt;
&lt;li&gt;社内勉強会をオープンな場所でやる&lt;/li&gt;
&lt;li&gt;自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン&lt;/li&gt;
&lt;li&gt;デベロッパーリレーションズを、なぜエンプラでやるのか？&lt;/li&gt;
&lt;li&gt;社外勉強会で外のモノサシを知る&lt;/li&gt;
&lt;li&gt;社外で話す、コミュニティ活動をどう社内で評価するのか？&lt;/li&gt;
&lt;li&gt;エンプラだけど、使ってるツールや言語は普通にエッジなもの&lt;/li&gt;
&lt;li&gt;メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？&lt;/li&gt;
&lt;li&gt;お客様に価値を届けられる人間が対価を得るべき&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techplay.jp/event/699906" target="_blank"&gt;2018/11/12 Tech-on Meet Up #03&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>エンプラでアジャイルをやろうとすると何が大変なのか？</li>
<li>内製開発がデファクトじゃない</li>
<li>なぜ内製はデファクトではなかったのか？</li>
<li>エンプラ業界で内製が増えてきたきっかけは何だろう？</li>
<li>通信事業者のルータやスイッチの調達はどのぐらい時間がかかる？</li>
<li>アジャイル開発センターって何？</li>
<li>その後のきっかけとなった法人向けのアジャイル案件ってどんな契機で始まった？</li>
<li>小さく成功を作って広げていく</li>
<li>既存の業務プロセスに、アジャイル型開発はどう付き合っていくか？</li>
<li>意思決定をアジャイル開発センターに集めていく</li>
<li>アジャイル開発センターの隔離</li>
<li>Cynefin Framework</li>
<li>アジャイル開発センターをどう設立していったのか？</li>
<li>アジャイル開発センターって名前はかっこよくないけど、実は意味がある</li>
<li>ニュースリリースの見出しにのる名前を狙う</li>
<li>(新しいもの入れる場合に)社外から社内を攻める</li>
<li>(新しいもの入れる場合に)社内の攻め方 - 擁護者を徐々に増やす</li>
<li>彼らのわかる言葉で説明する</li>
<li>エンプラはしがらみが多い</li>
<li>特区によって、社内ルールの一部を特例として認めてもらう、代替手段で守る</li>
<li>聞いちゃうとアウトだけど、聞かなければグレーなルールはどうするのか？</li>
<li>グレーです、と宣言して進める</li>
<li>謎のチェックリストが生まれる</li>
<li>失敗すると後続が死んでしまう</li>
<li>アジャイル開発センターの場のデザインはどうしている？</li>
<li>うなぎの寝床みたいなチームスペース</li>
<li>Ops専用部署があるにもかかわらず、アジャイルな開発で作ったもののOpsはどうするのか？</li>
<li>運用の要件・要求によってOpsのスタイルを分ける</li>
<li>エンプラは標準化しようとする</li>
<li>標準化で決める部分をアジャイル開発センター・チームに権限委譲する、自由度を持たせる</li>
<li>大量のガイドライン・チェックリストとアジャイルの付き合い方</li>
<li>ガイドラインのHowをWhyに戻して考える</li>
<li>会社のルールを変えず、現代のやり方を適用する</li>
<li>障害が起きるとルールが増える</li>
<li>ルールを増やしても守れない</li>
<li>ルールを増やしてもシャドーが増えるだけで意味がない</li>
<li>半端じゃない数のチェックリスト</li>
<li>誰かが始めないと変わらない</li>
<li>運用へ渡すときに自動化しすぎない</li>
<li>承認フローをあえて挟む</li>
<li>内製をしていなかった企業で、内製エンジニアをどう集めるのか？</li>
<li>デベロッパーを集めたいなら、デベロッパーコミュニティに行く</li>
<li>Tech-Onという社外勉強会と、Tech-Inという社内勉強会の目的は？</li>
<li>前例があると突破できる</li>
<li>前例を知るために社内勉強会ネットワーキング</li>
<li>社内勉強会を実際に始めるとすごいパワーがある</li>
<li>会社に熱を持っている人は見えてない範囲にいる、隠れている</li>
<li>どうやって社内勉強会に巻き込んでいったのか？</li>
<li>会社の命令で参加させるのはダメ</li>
<li>影響力ある人から集める</li>
<li>ちゃんとした人は、ちゃんとした人を呼んでくる</li>
<li>ルール化しましょう、というアンチパターン</li>
<li>せっかく燃えていた火を消化させない</li>
<li>70回以上、続けているTechLunchという社内勉強会</li>
<li>運営側が燃え尽きない</li>
<li>社内勉強会をオープンな場所でやる</li>
<li>自分が発信すると、情報が外から入ってくるという体験をさせる勉強会デザイン</li>
<li>デベロッパーリレーションズを、なぜエンプラでやるのか？</li>
<li>社外勉強会で外のモノサシを知る</li>
<li>社外で話す、コミュニティ活動をどう社内で評価するのか？</li>
<li>エンプラだけど、使ってるツールや言語は普通にエッジなもの</li>
<li>メンバーシップ型社員とスペシャリスト型社員の評価制度は同じで良いのか？</li>
<li>お客様に価値を届けられる人間が対価を得るべき</li>
<li><a href="https://techplay.jp/event/699906" target="_blank">2018/11/12 Tech-on Meet Up #03</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/9</guid>
      <pubDate>Thu, 01 Nov 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:59:37</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/c4497716-0e50-4924-80f8-f5f6016d1156.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="57235330"/>
    </item>
    <item>
      <title>8. AWS Aurora、GCP Spannerへ辿り着くまでのDBの進化</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>山喜旅館でたまたま会って急遽収録</li>
<li>これまでデータベースがぶつかってきた問題について</li>
<li>メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく</li>
<li>HDDはシーケンシャルアクセスならランダムアクセスより早い</li>
<li>IBMのInformation Management System(IMS)</li>
<li>CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？</li>
<li>バッファプールをHDDに対するキャッシュとして使う</li>
<li>
<a href="https://qiita.com/kumagi/items/14b6593a2e8ae0c56546" target="_blank">IBM ARIES</a>の公開</li>
<li>WAL / Write Ahead Logging</li>
<li>ログの中にundo/redoの両方が必要</li>
<li>ログシーケンスナンバによるリカバリ</li>
<li>バッファプールを食わせるデータ量を増やすのが最適化の一歩</li>
<li>マルチコア時代への突入、メモリのビット単価の低下</li>
<li>インメモリDBの問題</li>
<li>論文ジェネレータとは？</li>
<li>データベースは研究のトレンドとしては人気がなかった</li>
<li>Writeが増えたときのトランザクション性能が伸びない問題</li>
<li>垂直分散、水平分散でアプリケーションレイヤが辛くなる話</li>
<li>AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える</li>
<li>AuroraはUndoの情報をログに含めず、Redoを含める</li>
<li>Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド</li>
<li>ページの一貫性を担保する責任をクラウドへ押し付けた</li>
<li>メモリをディスクへ書き戻す必要がなくなる</li>
<li>Redoログ一辺倒になったのでチェックポイントがいらなくなった</li>
<li>データベースのチェックポイントについて</li>
<li>Auroraはマルチマスタ化？</li>
<li>Auroraのそもそもの思想はシングルマスタ</li>
<li>悲観的に巨大にロックを取る</li>
<li>SpannerはRDBではなく、分散KVSに近い</li>
<li>Spanサーバの役割</li>
<li>Spannerを支えるPaxosとは？</li>
<li>分散合意の難しさ</li>
<li>Cockroach DBはAuroraよりベンチマークで1000倍速い？</li>
<li>TPCCのレギュレーションについて</li>
<li>SpannerとAuroraの使い分けは？</li>
<li>今後のデータベース界隈の展望は？</li>
<li>クラウドのDBはOracleの牙城を崩しに行く</li>
</ul>
<p>(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>8. AWS Aurora、GCP Spannerへ辿り着くまでのDBの進化</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;山喜旅館でたまたま会って急遽収録&lt;/li&gt;
&lt;li&gt;これまでデータベースがぶつかってきた問題について&lt;/li&gt;
&lt;li&gt;メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく&lt;/li&gt;
&lt;li&gt;HDDはシーケンシャルアクセスならランダムアクセスより早い&lt;/li&gt;
&lt;li&gt;IBMのInformation Management System(IMS)&lt;/li&gt;
&lt;li&gt;CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？&lt;/li&gt;
&lt;li&gt;バッファプールをHDDに対するキャッシュとして使う&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://qiita.com/kumagi/items/14b6593a2e8ae0c56546" target="_blank"&gt;IBM ARIES&lt;/a&gt;の公開&lt;/li&gt;
&lt;li&gt;WAL / Write Ahead Logging&lt;/li&gt;
&lt;li&gt;ログの中にundo/redoの両方が必要&lt;/li&gt;
&lt;li&gt;ログシーケンスナンバによるリカバリ&lt;/li&gt;
&lt;li&gt;バッファプールを食わせるデータ量を増やすのが最適化の一歩&lt;/li&gt;
&lt;li&gt;マルチコア時代への突入、メモリのビット単価の低下&lt;/li&gt;
&lt;li&gt;インメモリDBの問題&lt;/li&gt;
&lt;li&gt;論文ジェネレータとは？&lt;/li&gt;
&lt;li&gt;データベースは研究のトレンドとしては人気がなかった&lt;/li&gt;
&lt;li&gt;Writeが増えたときのトランザクション性能が伸びない問題&lt;/li&gt;
&lt;li&gt;垂直分散、水平分散でアプリケーションレイヤが辛くなる話&lt;/li&gt;
&lt;li&gt;AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える&lt;/li&gt;
&lt;li&gt;AuroraはUndoの情報をログに含めず、Redoを含める&lt;/li&gt;
&lt;li&gt;Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド&lt;/li&gt;
&lt;li&gt;ページの一貫性を担保する責任をクラウドへ押し付けた&lt;/li&gt;
&lt;li&gt;メモリをディスクへ書き戻す必要がなくなる&lt;/li&gt;
&lt;li&gt;Redoログ一辺倒になったのでチェックポイントがいらなくなった&lt;/li&gt;
&lt;li&gt;データベースのチェックポイントについて&lt;/li&gt;
&lt;li&gt;Auroraはマルチマスタ化？&lt;/li&gt;
&lt;li&gt;Auroraのそもそもの思想はシングルマスタ&lt;/li&gt;
&lt;li&gt;悲観的に巨大にロックを取る&lt;/li&gt;
&lt;li&gt;SpannerはRDBではなく、分散KVSに近い&lt;/li&gt;
&lt;li&gt;Spanサーバの役割&lt;/li&gt;
&lt;li&gt;Spannerを支えるPaxosとは？&lt;/li&gt;
&lt;li&gt;分散合意の難しさ&lt;/li&gt;
&lt;li&gt;Cockroach DBはAuroraよりベンチマークで1000倍速い？&lt;/li&gt;
&lt;li&gt;TPCCのレギュレーションについて&lt;/li&gt;
&lt;li&gt;SpannerとAuroraの使い分けは？&lt;/li&gt;
&lt;li&gt;今後のデータベース界隈の展望は？&lt;/li&gt;
&lt;li&gt;クラウドのDBはOracleの牙城を崩しに行く&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>山喜旅館でたまたま会って急遽収録</li>
<li>これまでデータベースがぶつかってきた問題について</li>
<li>メモリが高価、HDDはメモリに比べれば安いのでそれを使っていく</li>
<li>HDDはシーケンシャルアクセスならランダムアクセスより早い</li>
<li>IBMのInformation Management System(IMS)</li>
<li>CPUとメモリの間のキャッシュ、メモリとHDDの間のキャッシュの違いとは？</li>
<li>バッファプールをHDDに対するキャッシュとして使う</li>
<li>
<a href="https://qiita.com/kumagi/items/14b6593a2e8ae0c56546" target="_blank">IBM ARIES</a>の公開</li>
<li>WAL / Write Ahead Logging</li>
<li>ログの中にundo/redoの両方が必要</li>
<li>ログシーケンスナンバによるリカバリ</li>
<li>バッファプールを食わせるデータ量を増やすのが最適化の一歩</li>
<li>マルチコア時代への突入、メモリのビット単価の低下</li>
<li>インメモリDBの問題</li>
<li>論文ジェネレータとは？</li>
<li>データベースは研究のトレンドとしては人気がなかった</li>
<li>Writeが増えたときのトランザクション性能が伸びない問題</li>
<li>垂直分散、水平分散でアプリケーションレイヤが辛くなる話</li>
<li>AuroraはARIESからDBを理解した人がフルスクラッチで変えたように見える</li>
<li>AuroraはUndoの情報をログに含めず、Redoを含める</li>
<li>Auroraの場合は、Redoログを受け取るのがHDDではなくクラウド</li>
<li>ページの一貫性を担保する責任をクラウドへ押し付けた</li>
<li>メモリをディスクへ書き戻す必要がなくなる</li>
<li>Redoログ一辺倒になったのでチェックポイントがいらなくなった</li>
<li>データベースのチェックポイントについて</li>
<li>Auroraはマルチマスタ化？</li>
<li>Auroraのそもそもの思想はシングルマスタ</li>
<li>悲観的に巨大にロックを取る</li>
<li>SpannerはRDBではなく、分散KVSに近い</li>
<li>Spanサーバの役割</li>
<li>Spannerを支えるPaxosとは？</li>
<li>分散合意の難しさ</li>
<li>Cockroach DBはAuroraよりベンチマークで1000倍速い？</li>
<li>TPCCのレギュレーションについて</li>
<li>SpannerとAuroraの使い分けは？</li>
<li>今後のデータベース界隈の展望は？</li>
<li>クラウドのDBはOracleの牙城を崩しに行く</li>
</ul>
<p>(補足：32:45-33:43 は収録都合により、別マイクにて再収録しているため音質が異なります)</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/8</guid>
      <pubDate>Fri, 26 Oct 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:33:56</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/eb3ffdf1-1a22-4902-a932-821baf1d4fea.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="32588695"/>
    </item>
    <item>
      <title>7. CI/CDとか、CircleCI自体の設計・開発プロセスとか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>継続的インテグレーション(CI)とは何か？</li>
<li>継続的デリバリ(CD)とは何か？</li>
<li>おかんにCIを例えで説明する</li>
<li>CIをしていない場合、どこから始めればいいのか？</li>
<li>たくさんのテストがないとCIを使う意味がない、というよくある誤解</li>
<li>最初からクライマックス</li>
<li>継続的デリバリと継続的デプロイの定義と差異</li>
<li>CI/CDの真の力</li>
<li>CircleCI 2.0とは？</li>
<li>LXCベースからDockerへの置き換え</li>
<li>CircleCIアーキテクチャの刷新について</li>
<li>CircleCI 2.0以外の名前の候補</li>
<li>CircleCI 2.0は爆速</li>
<li>gRPCを使いつつ非同期に</li>
<li>CircleCIはJenkinsと違って何が嬉しいのか？</li>
<li>Jenkinsのプラグイン運用辛い</li>
<li>野良Jenkins問題</li>
<li>CircleCIに限らずSaaS版のCI/CDで出来なくなることは？</li>
<li>GPUビルド</li>
<li>セキュリティおじさんに対する回答</li>
<li><a href="https://circleci.com/enterprise/" target="_blank">CircleCI Enterprise</a></li>
<li>コード自体がシークレットになってはいけない</li>
<li><a href="https://www.replicated.com/" target="_blank">Reprecated</a></li>
<li>CircleCI EnterpriseのKubernetesへの移行について</li>
<li>CircleCI の内部設計とは？</li>
<li>自作スケジューラから<a href="https://www.nomadproject.io/" target="_blank">Hashicorp Nomad</a>
</li>
<li>Nomadはバッチ処理に向いている</li>
<li>CircleCIのQueueとして使われるRabbitMQ</li>
<li>RabbitMQの運用で困ったこと・苦労したことは？</li>
<li>CircleCIの内部で使われる言語はClojureについて</li>
<li>CircleCIも最初はRuby on Railsだった</li>
<li>CircleCIの開発運用で使うCI/CDはCircleCI</li>
<li>自分で自分の足を踏む</li>
<li>電動キックボードにハマっている</li>
<li>電動キックボードの原付き化</li>
<li>電動キックボードを日本で買うといくら？</li>
<li>CircleCIの開発はどうやっている？アジャイル？</li>
<li>プロダクトチームが、どういう機能が求められているか吸い上げる</li>
<li>Jiraを使った管理</li>
<li>CircleCIリリース時に承認は必要なのか？</li>
<li>Ship!Ship!Ship!</li>
<li>本番環境でテストする</li>
<li>継続的デプロイができれば、ロールバック(Revert)も簡単</li>
<li>品質管理おじさんが作りたがるチェックリストはある？</li>
<li>動いてるんだから良しとする、何かあればFixする</li>
<li>継続的デプロイは組織自体も変革する力がある</li>
<li>コンウェイの法則</li>
<li>CircleCIにおけるコードレビューはどうやっているのか？</li>
<li>CircleCIにおけるペアプロ</li>
<li>paring is caring</li>
<li>全世界に分散した開発</li>
<li>Remote Firstという文化</li>
<li>お互いに助け合うという文化</li>
<li>CTOが乱入するお客様対応</li>
<li>「今忙しいからできない」とは言わない</li>
<li>SlackよりZoomを使う</li>
<li>100の言葉よりも、1分のZoom</li>
<li>CircleCIにおけるチームビルディング、All Hands</li>
<li><a href="https://twitter.com/circlecijapan" target="_blank">Twitter CircleCIJapan</a></li>
<li><a href="https://www.wantedly.com/companies/circleci" target="_blank">We’re hiring at CircleCI</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>7. CI/CDとか、CircleCI自体の設計・開発プロセスとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;継続的インテグレーション(CI)とは何か？&lt;/li&gt;
&lt;li&gt;継続的デリバリ(CD)とは何か？&lt;/li&gt;
&lt;li&gt;おかんにCIを例えで説明する&lt;/li&gt;
&lt;li&gt;CIをしていない場合、どこから始めればいいのか？&lt;/li&gt;
&lt;li&gt;たくさんのテストがないとCIを使う意味がない、というよくある誤解&lt;/li&gt;
&lt;li&gt;最初からクライマックス&lt;/li&gt;
&lt;li&gt;継続的デリバリと継続的デプロイの定義と差異&lt;/li&gt;
&lt;li&gt;CI/CDの真の力&lt;/li&gt;
&lt;li&gt;CircleCI 2.0とは？&lt;/li&gt;
&lt;li&gt;LXCベースからDockerへの置き換え&lt;/li&gt;
&lt;li&gt;CircleCIアーキテクチャの刷新について&lt;/li&gt;
&lt;li&gt;CircleCI 2.0以外の名前の候補&lt;/li&gt;
&lt;li&gt;CircleCI 2.0は爆速&lt;/li&gt;
&lt;li&gt;gRPCを使いつつ非同期に&lt;/li&gt;
&lt;li&gt;CircleCIはJenkinsと違って何が嬉しいのか？&lt;/li&gt;
&lt;li&gt;Jenkinsのプラグイン運用辛い&lt;/li&gt;
&lt;li&gt;野良Jenkins問題&lt;/li&gt;
&lt;li&gt;CircleCIに限らずSaaS版のCI/CDで出来なくなることは？&lt;/li&gt;
&lt;li&gt;GPUビルド&lt;/li&gt;
&lt;li&gt;セキュリティおじさんに対する回答&lt;/li&gt;
&lt;li&gt;&lt;a href="https://circleci.com/enterprise/" target="_blank"&gt;CircleCI Enterprise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コード自体がシークレットになってはいけない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.replicated.com/" target="_blank"&gt;Reprecated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CircleCI EnterpriseのKubernetesへの移行について&lt;/li&gt;
&lt;li&gt;CircleCI の内部設計とは？&lt;/li&gt;
&lt;li&gt;自作スケジューラから&lt;a href="https://www.nomadproject.io/" target="_blank"&gt;Hashicorp Nomad&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Nomadはバッチ処理に向いている&lt;/li&gt;
&lt;li&gt;CircleCIのQueueとして使われるRabbitMQ&lt;/li&gt;
&lt;li&gt;RabbitMQの運用で困ったこと・苦労したことは？&lt;/li&gt;
&lt;li&gt;CircleCIの内部で使われる言語はClojureについて&lt;/li&gt;
&lt;li&gt;CircleCIも最初はRuby on Railsだった&lt;/li&gt;
&lt;li&gt;CircleCIの開発運用で使うCI/CDはCircleCI&lt;/li&gt;
&lt;li&gt;自分で自分の足を踏む&lt;/li&gt;
&lt;li&gt;電動キックボードにハマっている&lt;/li&gt;
&lt;li&gt;電動キックボードの原付き化&lt;/li&gt;
&lt;li&gt;電動キックボードを日本で買うといくら？&lt;/li&gt;
&lt;li&gt;CircleCIの開発はどうやっている？アジャイル？&lt;/li&gt;
&lt;li&gt;プロダクトチームが、どういう機能が求められているか吸い上げる&lt;/li&gt;
&lt;li&gt;Jiraを使った管理&lt;/li&gt;
&lt;li&gt;CircleCIリリース時に承認は必要なのか？&lt;/li&gt;
&lt;li&gt;Ship!Ship!Ship!&lt;/li&gt;
&lt;li&gt;本番環境でテストする&lt;/li&gt;
&lt;li&gt;継続的デプロイができれば、ロールバック(Revert)も簡単&lt;/li&gt;
&lt;li&gt;品質管理おじさんが作りたがるチェックリストはある？&lt;/li&gt;
&lt;li&gt;動いてるんだから良しとする、何かあればFixする&lt;/li&gt;
&lt;li&gt;継続的デプロイは組織自体も変革する力がある&lt;/li&gt;
&lt;li&gt;コンウェイの法則&lt;/li&gt;
&lt;li&gt;CircleCIにおけるコードレビューはどうやっているのか？&lt;/li&gt;
&lt;li&gt;CircleCIにおけるペアプロ&lt;/li&gt;
&lt;li&gt;paring is caring&lt;/li&gt;
&lt;li&gt;全世界に分散した開発&lt;/li&gt;
&lt;li&gt;Remote Firstという文化&lt;/li&gt;
&lt;li&gt;お互いに助け合うという文化&lt;/li&gt;
&lt;li&gt;CTOが乱入するお客様対応&lt;/li&gt;
&lt;li&gt;「今忙しいからできない」とは言わない&lt;/li&gt;
&lt;li&gt;SlackよりZoomを使う&lt;/li&gt;
&lt;li&gt;100の言葉よりも、1分のZoom&lt;/li&gt;
&lt;li&gt;CircleCIにおけるチームビルディング、All Hands&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/circlecijapan" target="_blank"&gt;Twitter CircleCIJapan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wantedly.com/companies/circleci" target="_blank"&gt;We’re hiring at CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>継続的インテグレーション(CI)とは何か？</li>
<li>継続的デリバリ(CD)とは何か？</li>
<li>おかんにCIを例えで説明する</li>
<li>CIをしていない場合、どこから始めればいいのか？</li>
<li>たくさんのテストがないとCIを使う意味がない、というよくある誤解</li>
<li>最初からクライマックス</li>
<li>継続的デリバリと継続的デプロイの定義と差異</li>
<li>CI/CDの真の力</li>
<li>CircleCI 2.0とは？</li>
<li>LXCベースからDockerへの置き換え</li>
<li>CircleCIアーキテクチャの刷新について</li>
<li>CircleCI 2.0以外の名前の候補</li>
<li>CircleCI 2.0は爆速</li>
<li>gRPCを使いつつ非同期に</li>
<li>CircleCIはJenkinsと違って何が嬉しいのか？</li>
<li>Jenkinsのプラグイン運用辛い</li>
<li>野良Jenkins問題</li>
<li>CircleCIに限らずSaaS版のCI/CDで出来なくなることは？</li>
<li>GPUビルド</li>
<li>セキュリティおじさんに対する回答</li>
<li><a href="https://circleci.com/enterprise/" target="_blank">CircleCI Enterprise</a></li>
<li>コード自体がシークレットになってはいけない</li>
<li><a href="https://www.replicated.com/" target="_blank">Reprecated</a></li>
<li>CircleCI EnterpriseのKubernetesへの移行について</li>
<li>CircleCI の内部設計とは？</li>
<li>自作スケジューラから<a href="https://www.nomadproject.io/" target="_blank">Hashicorp Nomad</a>
</li>
<li>Nomadはバッチ処理に向いている</li>
<li>CircleCIのQueueとして使われるRabbitMQ</li>
<li>RabbitMQの運用で困ったこと・苦労したことは？</li>
<li>CircleCIの内部で使われる言語はClojureについて</li>
<li>CircleCIも最初はRuby on Railsだった</li>
<li>CircleCIの開発運用で使うCI/CDはCircleCI</li>
<li>自分で自分の足を踏む</li>
<li>電動キックボードにハマっている</li>
<li>電動キックボードの原付き化</li>
<li>電動キックボードを日本で買うといくら？</li>
<li>CircleCIの開発はどうやっている？アジャイル？</li>
<li>プロダクトチームが、どういう機能が求められているか吸い上げる</li>
<li>Jiraを使った管理</li>
<li>CircleCIリリース時に承認は必要なのか？</li>
<li>Ship!Ship!Ship!</li>
<li>本番環境でテストする</li>
<li>継続的デプロイができれば、ロールバック(Revert)も簡単</li>
<li>品質管理おじさんが作りたがるチェックリストはある？</li>
<li>動いてるんだから良しとする、何かあればFixする</li>
<li>継続的デプロイは組織自体も変革する力がある</li>
<li>コンウェイの法則</li>
<li>CircleCIにおけるコードレビューはどうやっているのか？</li>
<li>CircleCIにおけるペアプロ</li>
<li>paring is caring</li>
<li>全世界に分散した開発</li>
<li>Remote Firstという文化</li>
<li>お互いに助け合うという文化</li>
<li>CTOが乱入するお客様対応</li>
<li>「今忙しいからできない」とは言わない</li>
<li>SlackよりZoomを使う</li>
<li>100の言葉よりも、1分のZoom</li>
<li>CircleCIにおけるチームビルディング、All Hands</li>
<li><a href="https://twitter.com/circlecijapan" target="_blank">Twitter CircleCIJapan</a></li>
<li><a href="https://www.wantedly.com/companies/circleci" target="_blank">We’re hiring at CircleCI</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/7</guid>
      <pubDate>Tue, 09 Oct 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:52:07</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/ef74d79d-4cac-4c8e-9db9-cc292e744c4c.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="50047268"/>
    </item>
    <item>
      <title>6. モブプログラミング 60分間1本勝負</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="http://www.agileteam.jp/" target="_blank">一般社団法人 アジャイルチームを支える会</a></li>
<li>モブプログラミングとは？</li>
<li>1台のマシンを使うのは重要？</li>
<li>複数マシンのコードの同期はどうする？</li>
<li>各々のマシンの環境が微妙に違う問題をどう対応する？</li>
<li>ペアプログラミングとモブプログラミングの差分は？</li>
<li>Whole Team Approach</li>
<li>情報同期がキーポイント</li>
<li>新規メンバーのJoinやLeaveにどう対処する？</li>
<li>情報の足りないメンバーがドライバーをやる</li>
<li>ドライバーは仕事を止める権利をもっている</li>
<li>「わからない」と平気で言えるのが重要</li>
<li>「わからない」って言っても良いチームは素敵</li>
<li>モブプログラミングにオススメの環境は？</li>
<li>「うるさいな」って言う人は羨ましい</li>
<li>楽しそうに仕事をしているチームは会社全体に影響がある</li>
<li>名前をあげて、人を褒めるということ</li>
<li>チームでよく飛び交うワード</li>
<li>モブプログラミングはリモートで、できるのか？</li>
<li>コミュニケーションの不平等さ</li>
<li>あえて全員リモートで入る</li>
<li>ナビゲーターとドライバー間でスキル差がある場合はどうするのか？</li>
<li>知識の差がある場合にどう対応するか？</li>
<li>コミュニケーションの多寡の問題</li>
<li>チームのコミットメントを高めるきっかけとしてのモブプロによる可視化</li>
<li>モブプログラミングは問題を見えやすくするアプローチ</li>
<li>マネージャーに入って欲しいかどうか</li>
<li>モブプログラミングの生産性？</li>
<li>生産性を妨げる行動って何なのだろうか？</li>
<li>よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング</li>
<li>兼務も生産性を妨げる</li>
<li>モブプログラミングで向き不向きがあるタスク</li>
<li>結果の見通しが良いものはモブプログラミングでやる必要はない</li>
<li>一方で大体の仕事は問題解決であり、モブプログラミングに向いている</li>
<li>チームの状態、作業の質をみてモブプログラミングを使い分ける</li>
<li>分担するよりも一緒にやったほうが良い、という気付き</li>
<li>分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある</li>
<li>ドライバーとナビゲーターは、どういうタイミングで交代するのか？</li>
<li>我が家方式による交代</li>
<li>ドライバーってどれぐらい喋れば良いのか？</li>
<li>モブプロ、めっちゃ疲れる問題</li>
<li>どのように休憩(ブレイク)を入れるのが効果的か？</li>
<li>休憩の入れ方はチームのセンスが問われる</li>
<li>ポモドーロと組み合わせた休憩テクニック</li>
<li>モブコーヒー</li>
<li>どうやってサボるかを、真剣に考える</li>
<li>Deepで集中する、Deepで休憩する、Deepでサボる</li>
<li>モブプログラミングにて、振り返りをどの程度していくか？</li>
<li>手を止めて、仕事を俯瞰する振り返り</li>
<li>スクラムとモブプログラミングの組み合わせはどうやったらいいか？</li>
<li>モブプログラミングとスクラムは相性が良い</li>
<li>1Day Sprintというアプローチ</li>
<li>プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い</li>
<li>お客様から直接Feedbackをもらうことに価値がある</li>
<li>モブプログラミングの中に、お客様に入ってもらう</li>
<li>全員プロダクトオーナー</li>
<li>管理職・マネージャーをどう説得するか？説得する必要があるのか？</li>
<li>モブプログラミング実施について説得する必要はない</li>
<li>より良い仕事をするためにモブプログラミングをしている</li>
<li>マネージャーはチームが上手く働けるようにサポートすること</li>
<li>チームの理想をWhatで提示、Howは権限委譲する</li>
<li>Howに興味があるのは子供扱いしている状態と同じ</li>
<li>1on1で上司をメンタリング</li>
<li>受け入れてくれるマネージャーは多い</li>
<li>双方向メンタリング</li>
<li>よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応</li>
<li><a href="https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro" target="_blank">モブプログラミング スタートアップマニュアル</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>6. モブプログラミング 60分間1本勝負</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.agileteam.jp/" target="_blank"&gt;一般社団法人 アジャイルチームを支える会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;モブプログラミングとは？&lt;/li&gt;
&lt;li&gt;1台のマシンを使うのは重要？&lt;/li&gt;
&lt;li&gt;複数マシンのコードの同期はどうする？&lt;/li&gt;
&lt;li&gt;各々のマシンの環境が微妙に違う問題をどう対応する？&lt;/li&gt;
&lt;li&gt;ペアプログラミングとモブプログラミングの差分は？&lt;/li&gt;
&lt;li&gt;Whole Team Approach&lt;/li&gt;
&lt;li&gt;情報同期がキーポイント&lt;/li&gt;
&lt;li&gt;新規メンバーのJoinやLeaveにどう対処する？&lt;/li&gt;
&lt;li&gt;情報の足りないメンバーがドライバーをやる&lt;/li&gt;
&lt;li&gt;ドライバーは仕事を止める権利をもっている&lt;/li&gt;
&lt;li&gt;「わからない」と平気で言えるのが重要&lt;/li&gt;
&lt;li&gt;「わからない」って言っても良いチームは素敵&lt;/li&gt;
&lt;li&gt;モブプログラミングにオススメの環境は？&lt;/li&gt;
&lt;li&gt;「うるさいな」って言う人は羨ましい&lt;/li&gt;
&lt;li&gt;楽しそうに仕事をしているチームは会社全体に影響がある&lt;/li&gt;
&lt;li&gt;名前をあげて、人を褒めるということ&lt;/li&gt;
&lt;li&gt;チームでよく飛び交うワード&lt;/li&gt;
&lt;li&gt;モブプログラミングはリモートで、できるのか？&lt;/li&gt;
&lt;li&gt;コミュニケーションの不平等さ&lt;/li&gt;
&lt;li&gt;あえて全員リモートで入る&lt;/li&gt;
&lt;li&gt;ナビゲーターとドライバー間でスキル差がある場合はどうするのか？&lt;/li&gt;
&lt;li&gt;知識の差がある場合にどう対応するか？&lt;/li&gt;
&lt;li&gt;コミュニケーションの多寡の問題&lt;/li&gt;
&lt;li&gt;チームのコミットメントを高めるきっかけとしてのモブプロによる可視化&lt;/li&gt;
&lt;li&gt;モブプログラミングは問題を見えやすくするアプローチ&lt;/li&gt;
&lt;li&gt;マネージャーに入って欲しいかどうか&lt;/li&gt;
&lt;li&gt;モブプログラミングの生産性？&lt;/li&gt;
&lt;li&gt;生産性を妨げる行動って何なのだろうか？&lt;/li&gt;
&lt;li&gt;よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング&lt;/li&gt;
&lt;li&gt;兼務も生産性を妨げる&lt;/li&gt;
&lt;li&gt;モブプログラミングで向き不向きがあるタスク&lt;/li&gt;
&lt;li&gt;結果の見通しが良いものはモブプログラミングでやる必要はない&lt;/li&gt;
&lt;li&gt;一方で大体の仕事は問題解決であり、モブプログラミングに向いている&lt;/li&gt;
&lt;li&gt;チームの状態、作業の質をみてモブプログラミングを使い分ける&lt;/li&gt;
&lt;li&gt;分担するよりも一緒にやったほうが良い、という気付き&lt;/li&gt;
&lt;li&gt;分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある&lt;/li&gt;
&lt;li&gt;ドライバーとナビゲーターは、どういうタイミングで交代するのか？&lt;/li&gt;
&lt;li&gt;我が家方式による交代&lt;/li&gt;
&lt;li&gt;ドライバーってどれぐらい喋れば良いのか？&lt;/li&gt;
&lt;li&gt;モブプロ、めっちゃ疲れる問題&lt;/li&gt;
&lt;li&gt;どのように休憩(ブレイク)を入れるのが効果的か？&lt;/li&gt;
&lt;li&gt;休憩の入れ方はチームのセンスが問われる&lt;/li&gt;
&lt;li&gt;ポモドーロと組み合わせた休憩テクニック&lt;/li&gt;
&lt;li&gt;モブコーヒー&lt;/li&gt;
&lt;li&gt;どうやってサボるかを、真剣に考える&lt;/li&gt;
&lt;li&gt;Deepで集中する、Deepで休憩する、Deepでサボる&lt;/li&gt;
&lt;li&gt;モブプログラミングにて、振り返りをどの程度していくか？&lt;/li&gt;
&lt;li&gt;手を止めて、仕事を俯瞰する振り返り&lt;/li&gt;
&lt;li&gt;スクラムとモブプログラミングの組み合わせはどうやったらいいか？&lt;/li&gt;
&lt;li&gt;モブプログラミングとスクラムは相性が良い&lt;/li&gt;
&lt;li&gt;1Day Sprintというアプローチ&lt;/li&gt;
&lt;li&gt;プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い&lt;/li&gt;
&lt;li&gt;お客様から直接Feedbackをもらうことに価値がある&lt;/li&gt;
&lt;li&gt;モブプログラミングの中に、お客様に入ってもらう&lt;/li&gt;
&lt;li&gt;全員プロダクトオーナー&lt;/li&gt;
&lt;li&gt;管理職・マネージャーをどう説得するか？説得する必要があるのか？&lt;/li&gt;
&lt;li&gt;モブプログラミング実施について説得する必要はない&lt;/li&gt;
&lt;li&gt;より良い仕事をするためにモブプログラミングをしている&lt;/li&gt;
&lt;li&gt;マネージャーはチームが上手く働けるようにサポートすること&lt;/li&gt;
&lt;li&gt;チームの理想をWhatで提示、Howは権限委譲する&lt;/li&gt;
&lt;li&gt;Howに興味があるのは子供扱いしている状態と同じ&lt;/li&gt;
&lt;li&gt;1on1で上司をメンタリング&lt;/li&gt;
&lt;li&gt;受け入れてくれるマネージャーは多い&lt;/li&gt;
&lt;li&gt;双方向メンタリング&lt;/li&gt;
&lt;li&gt;よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro" target="_blank"&gt;モブプログラミング スタートアップマニュアル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="http://www.agileteam.jp/" target="_blank">一般社団法人 アジャイルチームを支える会</a></li>
<li>モブプログラミングとは？</li>
<li>1台のマシンを使うのは重要？</li>
<li>複数マシンのコードの同期はどうする？</li>
<li>各々のマシンの環境が微妙に違う問題をどう対応する？</li>
<li>ペアプログラミングとモブプログラミングの差分は？</li>
<li>Whole Team Approach</li>
<li>情報同期がキーポイント</li>
<li>新規メンバーのJoinやLeaveにどう対処する？</li>
<li>情報の足りないメンバーがドライバーをやる</li>
<li>ドライバーは仕事を止める権利をもっている</li>
<li>「わからない」と平気で言えるのが重要</li>
<li>「わからない」って言っても良いチームは素敵</li>
<li>モブプログラミングにオススメの環境は？</li>
<li>「うるさいな」って言う人は羨ましい</li>
<li>楽しそうに仕事をしているチームは会社全体に影響がある</li>
<li>名前をあげて、人を褒めるということ</li>
<li>チームでよく飛び交うワード</li>
<li>モブプログラミングはリモートで、できるのか？</li>
<li>コミュニケーションの不平等さ</li>
<li>あえて全員リモートで入る</li>
<li>ナビゲーターとドライバー間でスキル差がある場合はどうするのか？</li>
<li>知識の差がある場合にどう対応するか？</li>
<li>コミュニケーションの多寡の問題</li>
<li>チームのコミットメントを高めるきっかけとしてのモブプロによる可視化</li>
<li>モブプログラミングは問題を見えやすくするアプローチ</li>
<li>マネージャーに入って欲しいかどうか</li>
<li>モブプログラミングの生産性？</li>
<li>生産性を妨げる行動って何なのだろうか？</li>
<li>よくあるコミュニケーション問題に真正面からぶつかるのモブプログラミング</li>
<li>兼務も生産性を妨げる</li>
<li>モブプログラミングで向き不向きがあるタスク</li>
<li>結果の見通しが良いものはモブプログラミングでやる必要はない</li>
<li>一方で大体の仕事は問題解決であり、モブプログラミングに向いている</li>
<li>チームの状態、作業の質をみてモブプログラミングを使い分ける</li>
<li>分担するよりも一緒にやったほうが良い、という気付き</li>
<li>分担はパラレルで仕事するだけではなく、全体の同期する仕事する時間もある</li>
<li>ドライバーとナビゲーターは、どういうタイミングで交代するのか？</li>
<li>我が家方式による交代</li>
<li>ドライバーってどれぐらい喋れば良いのか？</li>
<li>モブプロ、めっちゃ疲れる問題</li>
<li>どのように休憩(ブレイク)を入れるのが効果的か？</li>
<li>休憩の入れ方はチームのセンスが問われる</li>
<li>ポモドーロと組み合わせた休憩テクニック</li>
<li>モブコーヒー</li>
<li>どうやってサボるかを、真剣に考える</li>
<li>Deepで集中する、Deepで休憩する、Deepでサボる</li>
<li>モブプログラミングにて、振り返りをどの程度していくか？</li>
<li>手を止めて、仕事を俯瞰する振り返り</li>
<li>スクラムとモブプログラミングの組み合わせはどうやったらいいか？</li>
<li>モブプログラミングとスクラムは相性が良い</li>
<li>1Day Sprintというアプローチ</li>
<li>プロダクトオーナーやプロダクトマネージャーのモブへの参加度合い</li>
<li>お客様から直接Feedbackをもらうことに価値がある</li>
<li>モブプログラミングの中に、お客様に入ってもらう</li>
<li>全員プロダクトオーナー</li>
<li>管理職・マネージャーをどう説得するか？説得する必要があるのか？</li>
<li>モブプログラミング実施について説得する必要はない</li>
<li>より良い仕事をするためにモブプログラミングをしている</li>
<li>マネージャーはチームが上手く働けるようにサポートすること</li>
<li>チームの理想をWhatで提示、Howは権限委譲する</li>
<li>Howに興味があるのは子供扱いしている状態と同じ</li>
<li>1on1で上司をメンタリング</li>
<li>受け入れてくれるマネージャーは多い</li>
<li>双方向メンタリング</li>
<li>よっぱらったときに書いたコードやばい問題、深夜に書いたポエムやばい問題への対応</li>
<li><a href="https://speakerdeck.com/takaking22/mob-programming-startup-manual-number-mobprogramming-number-mobupuro" target="_blank">モブプログラミング スタートアップマニュアル</a></li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/6</guid>
      <pubDate>Tue, 25 Sep 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:58:37</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/550c951f-9ff9-4a4b-991b-564fc4628fe9.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="56283637"/>
    </item>
    <item>
      <title>5. アジャイルコーチ、リーン・アジャイルの考え方、心理的安全性とか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li><a href="https://lean-agile.fm/" target="_blank">omoiyari.fm</a></li>
<li>アジャイルコーチという職種って何やってるの？</li>
<li>会社に対するオーナーシップ</li>
<li>プロダクトオーナーシップが全員必須というわけではない</li>
<li>プロダクトオーナーシップはあると何が嬉しいのか？</li>
<li>1on1におけるフレーミング</li>
<li>1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？</li>
<li>リーン、アジャイルとはそもそも何なのか？その関連は？</li>
<li>スクラムと開発速度の考え方</li>
<li>効果と効率</li>
<li>モブプログラミングは意外とベロシティが出る</li>
<li>モブプロで浮き彫りになるコミュニケーションの質</li>
<li>スクラムの何が好き？</li>
<li>omoiyari.fmのFearlessChangeネタは？</li>
<li>ykmc09の好きなFearlessChangeのパターン3つ</li>
<li>Face to Faceで話すことの効果</li>
<li>心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？</li>
<li>“雑”ということの重要性</li>
<li>大企業/組織における心理的安全性を高めるための社内Podcast</li>
<li>いつかSIerに戻ってみたい理由</li>
<li>生涯でやり遂げたいことはある？</li>
<li>アジャイル、モブプロにおける人事評価</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>5. アジャイルコーチ、リーン・アジャイルの考え方、心理的安全性とか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lean-agile.fm/" target="_blank"&gt;omoiyari.fm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アジャイルコーチという職種って何やってるの？&lt;/li&gt;
&lt;li&gt;会社に対するオーナーシップ&lt;/li&gt;
&lt;li&gt;プロダクトオーナーシップが全員必須というわけではない&lt;/li&gt;
&lt;li&gt;プロダクトオーナーシップはあると何が嬉しいのか？&lt;/li&gt;
&lt;li&gt;1on1におけるフレーミング&lt;/li&gt;
&lt;li&gt;1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？&lt;/li&gt;
&lt;li&gt;リーン、アジャイルとはそもそも何なのか？その関連は？&lt;/li&gt;
&lt;li&gt;スクラムと開発速度の考え方&lt;/li&gt;
&lt;li&gt;効果と効率&lt;/li&gt;
&lt;li&gt;モブプログラミングは意外とベロシティが出る&lt;/li&gt;
&lt;li&gt;モブプロで浮き彫りになるコミュニケーションの質&lt;/li&gt;
&lt;li&gt;スクラムの何が好き？&lt;/li&gt;
&lt;li&gt;omoiyari.fmのFearlessChangeネタは？&lt;/li&gt;
&lt;li&gt;ykmc09の好きなFearlessChangeのパターン3つ&lt;/li&gt;
&lt;li&gt;Face to Faceで話すことの効果&lt;/li&gt;
&lt;li&gt;心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？&lt;/li&gt;
&lt;li&gt;“雑”ということの重要性&lt;/li&gt;
&lt;li&gt;大企業/組織における心理的安全性を高めるための社内Podcast&lt;/li&gt;
&lt;li&gt;いつかSIerに戻ってみたい理由&lt;/li&gt;
&lt;li&gt;生涯でやり遂げたいことはある？&lt;/li&gt;
&lt;li&gt;アジャイル、モブプロにおける人事評価&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li><a href="https://lean-agile.fm/" target="_blank">omoiyari.fm</a></li>
<li>アジャイルコーチという職種って何やってるの？</li>
<li>会社に対するオーナーシップ</li>
<li>プロダクトオーナーシップが全員必須というわけではない</li>
<li>プロダクトオーナーシップはあると何が嬉しいのか？</li>
<li>1on1におけるフレーミング</li>
<li>1on1における本人と業務のギャップが大きい場合の対処はどうすればよいのか？</li>
<li>リーン、アジャイルとはそもそも何なのか？その関連は？</li>
<li>スクラムと開発速度の考え方</li>
<li>効果と効率</li>
<li>モブプログラミングは意外とベロシティが出る</li>
<li>モブプロで浮き彫りになるコミュニケーションの質</li>
<li>スクラムの何が好き？</li>
<li>omoiyari.fmのFearlessChangeネタは？</li>
<li>ykmc09の好きなFearlessChangeのパターン3つ</li>
<li>Face to Faceで話すことの効果</li>
<li>心理的安全性をチームで高めるにはどうすれば良いか？どう場を作ればよいか？</li>
<li>“雑”ということの重要性</li>
<li>大企業/組織における心理的安全性を高めるための社内Podcast</li>
<li>いつかSIerに戻ってみたい理由</li>
<li>生涯でやり遂げたいことはある？</li>
<li>アジャイル、モブプロにおける人事評価</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/5</guid>
      <pubDate>Sun, 26 Aug 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:58:38</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/65e5c811-5423-489e-9029-11ddf71a70fc.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="56289071"/>
    </item>
    <item>
      <title>4. Kamueeとか、Cuisharkとか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>
<a href="https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html" target="_blank">Kamuee</a>とは</li>
<li>NFV</li>
<li>ソフトウェアルータのメリット</li>
<li>Kamueeを作るモチベーション</li>
<li>既存のソフトウェアルータの限界、問題点</li>
<li>DPDKとは</li>
<li>Trieとは</li>
<li>ラストレベルキャッシュ</li>
<li>
<a href="https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html" target="_blank">PopTrie</a>とは</li>
<li>Kamueeが他に実装しているもの</li>
<li>InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話</li>
<li><a href="https://ntt-developers.github.io/ntt-tech-conference/03/" target="_blank">NTT Tech Conference #3</a></li>
<li><a href="https://github.com/cuishark/cuishark" target="_blank">Cuishark</a></li>
<li>Cuisharkを作るモチベーション</li>
<li>Cuisharkの実装</li>
<li>Cursesを生で使うのは大変</li>
<li>未踏とは？</li>
<li>DPDKを使うのは大変</li>
<li>未踏2017テーマ<a href="https://github.com/susanow" target="_blank">環境に対して自動最適化する高性能通信基盤の開発</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>4. Kamueeとか、Cuisharkとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html" target="_blank"&gt;Kamuee&lt;/a&gt;とは&lt;/li&gt;
&lt;li&gt;NFV&lt;/li&gt;
&lt;li&gt;ソフトウェアルータのメリット&lt;/li&gt;
&lt;li&gt;Kamueeを作るモチベーション&lt;/li&gt;
&lt;li&gt;既存のソフトウェアルータの限界、問題点&lt;/li&gt;
&lt;li&gt;DPDKとは&lt;/li&gt;
&lt;li&gt;Trieとは&lt;/li&gt;
&lt;li&gt;ラストレベルキャッシュ&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html" target="_blank"&gt;PopTrie&lt;/a&gt;とは&lt;/li&gt;
&lt;li&gt;Kamueeが他に実装しているもの&lt;/li&gt;
&lt;li&gt;InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ntt-developers.github.io/ntt-tech-conference/03/" target="_blank"&gt;NTT Tech Conference #3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cuishark/cuishark" target="_blank"&gt;Cuishark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cuisharkを作るモチベーション&lt;/li&gt;
&lt;li&gt;Cuisharkの実装&lt;/li&gt;
&lt;li&gt;Cursesを生で使うのは大変&lt;/li&gt;
&lt;li&gt;未踏とは？&lt;/li&gt;
&lt;li&gt;DPDKを使うのは大変&lt;/li&gt;
&lt;li&gt;未踏2017テーマ&lt;a href="https://github.com/susanow" target="_blank"&gt;環境に対して自動最適化する高性能通信基盤の開発&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>
<a href="https://www.ntt.com/about-us/press-releases/news/article/2018/0611.html" target="_blank">Kamuee</a>とは</li>
<li>NFV</li>
<li>ソフトウェアルータのメリット</li>
<li>Kamueeを作るモチベーション</li>
<li>既存のソフトウェアルータの限界、問題点</li>
<li>DPDKとは</li>
<li>Trieとは</li>
<li>ラストレベルキャッシュ</li>
<li>
<a href="https://ja.tech.jar.jp/network/algorithms/poptrie/intro.html" target="_blank">PopTrie</a>とは</li>
<li>Kamueeが他に実装しているもの</li>
<li>InteropのShownetにて、バックボーンコアルータでKamueeを動かしていた話</li>
<li><a href="https://ntt-developers.github.io/ntt-tech-conference/03/" target="_blank">NTT Tech Conference #3</a></li>
<li><a href="https://github.com/cuishark/cuishark" target="_blank">Cuishark</a></li>
<li>Cuisharkを作るモチベーション</li>
<li>Cuisharkの実装</li>
<li>Cursesを生で使うのは大変</li>
<li>未踏とは？</li>
<li>DPDKを使うのは大変</li>
<li>未踏2017テーマ<a href="https://github.com/susanow" target="_blank">環境に対して自動最適化する高性能通信基盤の開発</a>
</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/4</guid>
      <pubDate>Tue, 14 Aug 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:52:08</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/3a885af0-6b59-4f98-a7e4-d831f24ce154.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="50064404"/>
    </item>
    <item>
      <title>3. botnetとか、CTFとか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>botnetとは？</li>
<li>Herderとは？</li>
<li>どうやって感染するのか？</li>
<li>どうやってbot化していることを発見するのか？</li>
<li>リスニングポストとは？</li>
<li>botnetって買えるの？</li>
<li>イスラエル軍が凄い</li>
<li>DDoSを使う動機？</li>
<li>DDoSってどうやって対策していくのか？</li>
<li>セキュリティの勉強ってどうやるの？</li>
<li>CTFとは？</li>
<li>CTFtime (エピソード中のCTFTimesは誤りです)</li>
<li>通信事業者ってbotnet対策に何かしているの？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>3. botnetとか、CTFとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;botnetとは？&lt;/li&gt;
&lt;li&gt;Herderとは？&lt;/li&gt;
&lt;li&gt;どうやって感染するのか？&lt;/li&gt;
&lt;li&gt;どうやってbot化していることを発見するのか？&lt;/li&gt;
&lt;li&gt;リスニングポストとは？&lt;/li&gt;
&lt;li&gt;botnetって買えるの？&lt;/li&gt;
&lt;li&gt;イスラエル軍が凄い&lt;/li&gt;
&lt;li&gt;DDoSを使う動機？&lt;/li&gt;
&lt;li&gt;DDoSってどうやって対策していくのか？&lt;/li&gt;
&lt;li&gt;セキュリティの勉強ってどうやるの？&lt;/li&gt;
&lt;li&gt;CTFとは？&lt;/li&gt;
&lt;li&gt;CTFtime (エピソード中のCTFTimesは誤りです)&lt;/li&gt;
&lt;li&gt;通信事業者ってbotnet対策に何かしているの？&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>botnetとは？</li>
<li>Herderとは？</li>
<li>どうやって感染するのか？</li>
<li>どうやってbot化していることを発見するのか？</li>
<li>リスニングポストとは？</li>
<li>botnetって買えるの？</li>
<li>イスラエル軍が凄い</li>
<li>DDoSを使う動機？</li>
<li>DDoSってどうやって対策していくのか？</li>
<li>セキュリティの勉強ってどうやるの？</li>
<li>CTFとは？</li>
<li>CTFtime (エピソード中のCTFTimesは誤りです)</li>
<li>通信事業者ってbotnet対策に何かしているの？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/3</guid>
      <pubDate>Sat, 21 Jul 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:49:12</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/c753ae63-e771-4416-b6a6-e4ea4702f017.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="47238164"/>
    </item>
    <item>
      <title>2. 仕事よりブログが大事、ブログは自分の子供</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>なぜブログを書くのか？</li>
<li>食欲、睡眠欲、ブログ欲</li>
<li>3大ブログ書けない理由とは</li>
<li>ブログメンタリング</li>
<li>相互メンタリング</li>
<li>1日24時間しかな事実は知られていない</li>
<li>プログラミング講師</li>
<li>初心者にRailsを教えるコツ</li>
<li>知の高速道路を突き抜けるスピードを加速する</li>
<li>モブプログラミング</li>
<li>モブプログラミングに向いているお題</li>
<li>雑談をしましょう</li>
<li>オートクラインとは</li>
<li>トランザクティブメモリーとは</li>
<li>スウォーミングとは</li>
<li>チームビルディング</li>
<li>結局リーダは笑顔でいる</li>
<li>kakakakkuさんの再現性</li>
<li>仕事よりブログが大事</li>
<li>ブログも自分の子供</li>
</ul>
<p>訂正: ダックタイピング -&gt; ラバーダッキング</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>2. 仕事よりブログが大事、ブログは自分の子供</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;なぜブログを書くのか？&lt;/li&gt;
&lt;li&gt;食欲、睡眠欲、ブログ欲&lt;/li&gt;
&lt;li&gt;3大ブログ書けない理由とは&lt;/li&gt;
&lt;li&gt;ブログメンタリング&lt;/li&gt;
&lt;li&gt;相互メンタリング&lt;/li&gt;
&lt;li&gt;1日24時間しかな事実は知られていない&lt;/li&gt;
&lt;li&gt;プログラミング講師&lt;/li&gt;
&lt;li&gt;初心者にRailsを教えるコツ&lt;/li&gt;
&lt;li&gt;知の高速道路を突き抜けるスピードを加速する&lt;/li&gt;
&lt;li&gt;モブプログラミング&lt;/li&gt;
&lt;li&gt;モブプログラミングに向いているお題&lt;/li&gt;
&lt;li&gt;雑談をしましょう&lt;/li&gt;
&lt;li&gt;オートクラインとは&lt;/li&gt;
&lt;li&gt;トランザクティブメモリーとは&lt;/li&gt;
&lt;li&gt;スウォーミングとは&lt;/li&gt;
&lt;li&gt;チームビルディング&lt;/li&gt;
&lt;li&gt;結局リーダは笑顔でいる&lt;/li&gt;
&lt;li&gt;kakakakkuさんの再現性&lt;/li&gt;
&lt;li&gt;仕事よりブログが大事&lt;/li&gt;
&lt;li&gt;ブログも自分の子供&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;訂正: ダックタイピング -&amp;gt; ラバーダッキング&lt;/p&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>なぜブログを書くのか？</li>
<li>食欲、睡眠欲、ブログ欲</li>
<li>3大ブログ書けない理由とは</li>
<li>ブログメンタリング</li>
<li>相互メンタリング</li>
<li>1日24時間しかな事実は知られていない</li>
<li>プログラミング講師</li>
<li>初心者にRailsを教えるコツ</li>
<li>知の高速道路を突き抜けるスピードを加速する</li>
<li>モブプログラミング</li>
<li>モブプログラミングに向いているお題</li>
<li>雑談をしましょう</li>
<li>オートクラインとは</li>
<li>トランザクティブメモリーとは</li>
<li>スウォーミングとは</li>
<li>チームビルディング</li>
<li>結局リーダは笑顔でいる</li>
<li>kakakakkuさんの再現性</li>
<li>仕事よりブログが大事</li>
<li>ブログも自分の子供</li>
</ul>
<p>訂正: ダックタイピング -&gt; ラバーダッキング</p>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/2</guid>
      <pubDate>Thu, 12 Jul 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>01:00:38</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/74497ed9-3425-424d-9ba4-a4ab5ad568ed.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="58210847"/>
    </item>
    <item>
      <title>1. IETFとか、QUICとか</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>IETFって何？どんなところ？</li>
<li>RFCとは？</li>
<li>ハミングによるコンセンサス</li>
<li>IETFに参加するのはどんな人たちがいる？</li>
<li>個人で参加するには？</li>
<li>IETFでの雑談、ロビーイングの重要性</li>
<li>QUICって何？なぜ生まれたの？</li>
<li>Google QUICとIETF QUIC</li>
<li>HoL とは？</li>
<li>なぜQUICは、ユーザランドで実装しているのか？</li>
<li>TCP既存プロトコル vs QUIC(UDP)プロトコル</li>
<li>QUICが効果的に効くところ</li>
<li>通信事業者のミドルボックスの負荷、コネクション残存</li>
<li>通信事業者はQUICをどう見る？</li>
<li>ネットワークの硬直化(Ossification)</li>
<li>QUICの折り合いの付け所</li>
<li>QUICの将来の展望</li>
<li>QUICを追っかけるにはどうすればいい？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>1. IETFとか、QUICとか</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;IETFって何？どんなところ？&lt;/li&gt;
&lt;li&gt;RFCとは？&lt;/li&gt;
&lt;li&gt;ハミングによるコンセンサス&lt;/li&gt;
&lt;li&gt;IETFに参加するのはどんな人たちがいる？&lt;/li&gt;
&lt;li&gt;個人で参加するには？&lt;/li&gt;
&lt;li&gt;IETFでの雑談、ロビーイングの重要性&lt;/li&gt;
&lt;li&gt;QUICって何？なぜ生まれたの？&lt;/li&gt;
&lt;li&gt;Google QUICとIETF QUIC&lt;/li&gt;
&lt;li&gt;HoL とは？&lt;/li&gt;
&lt;li&gt;なぜQUICは、ユーザランドで実装しているのか？&lt;/li&gt;
&lt;li&gt;TCP既存プロトコル vs QUIC(UDP)プロトコル&lt;/li&gt;
&lt;li&gt;QUICが効果的に効くところ&lt;/li&gt;
&lt;li&gt;通信事業者のミドルボックスの負荷、コネクション残存&lt;/li&gt;
&lt;li&gt;通信事業者はQUICをどう見る？&lt;/li&gt;
&lt;li&gt;ネットワークの硬直化(Ossification)&lt;/li&gt;
&lt;li&gt;QUICの折り合いの付け所&lt;/li&gt;
&lt;li&gt;QUICの将来の展望&lt;/li&gt;
&lt;li&gt;QUICを追っかけるにはどうすればいい？&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>IETFって何？どんなところ？</li>
<li>RFCとは？</li>
<li>ハミングによるコンセンサス</li>
<li>IETFに参加するのはどんな人たちがいる？</li>
<li>個人で参加するには？</li>
<li>IETFでの雑談、ロビーイングの重要性</li>
<li>QUICって何？なぜ生まれたの？</li>
<li>Google QUICとIETF QUIC</li>
<li>HoL とは？</li>
<li>なぜQUICは、ユーザランドで実装しているのか？</li>
<li>TCP既存プロトコル vs QUIC(UDP)プロトコル</li>
<li>QUICが効果的に効くところ</li>
<li>通信事業者のミドルボックスの負荷、コネクション残存</li>
<li>通信事業者はQUICをどう見る？</li>
<li>ネットワークの硬直化(Ossification)</li>
<li>QUICの折り合いの付け所</li>
<li>QUICの将来の展望</li>
<li>QUICを追っかけるにはどうすればいい？</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/1</guid>
      <pubDate>Wed, 23 May 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:55:48</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/b456e210-bb22-4945-84b8-5553d1bb3a83.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="53569410"/>
    </item>
    <item>
      <title>0. Fukabori.fmについて</title>
      <description>
        <![CDATA[話したネタ
<ul>
<li>自己紹介</li>
<li>Podcastで今後話していくコンテンツについて</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </description>
      <itunes:title>0. Fukabori.fmについて</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:summary>話したネタ
&lt;ul&gt;
&lt;li&gt;自己紹介&lt;/li&gt;
&lt;li&gt;Podcastで今後話していくコンテンツについて&lt;/li&gt;
&lt;/ul&gt;

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <content:encoded>
        <![CDATA[話したネタ
<ul>
<li>自己紹介</li>
<li>Podcastで今後話していくコンテンツについて</li>
</ul>

See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.]]>
      </content:encoded>
      <guid isPermaLink="false">https://fukabori.fm/episode/0</guid>
      <pubDate>Sun, 13 May 2018 06:00:00 -0000</pubDate>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://content.production.cdn.art19.com/images/28/bf/04/31/28bf0431-df7e-40ed-a1d1-e420a6928e7c/662ff17902edaaf9f2cc5d70f0deabba08030d44ead4205b4769b33693ddc1f334f024bacbca24e17e039d56ac672f09ca9f576e264a4e42c69e6df9dd7813a1.jpeg"/>
      <itunes:duration>00:01:30</itunes:duration>
      <enclosure url="https://chrt.fm/track/D33GD1/rss.art19.com/episodes/0da932b6-b55b-4e6c-a575-4ef2fdd49cae.mp3?rss_browser=BAhJIgljdXJsBjoGRVQ%3D--435795d5c850773aaa4739d968bd77a1dfd6f301" type="audio/mpeg" length="1449482"/>
    </item>
  </channel>
</rss>
